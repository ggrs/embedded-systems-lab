{\rtf1\ansi\ansicpg1252\uc1 \deff0\deflang1033\deflangfe1033
{\fonttbl {\f0\froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman;}
{\f1\fswiss\fcharset0\fprq2{\*\panose 020b0604020202020204}Arial;}
{\f2\fmodern\fcharset0\fprq1{\*\panose 02070309020205020404}Courier New;}
{\f3\froman\fcharset2\fprq2{\*\panose 05050102010706020507}Symbol;}
}
{\colortbl;\red0\green0\blue0;\red0\green0\blue255;\red0\green255\blue255;\red0\green255\blue0;\red255\green0\blue255;\red255\green0\blue0;\red255\green255\blue0;\red255\green255\blue255;\red0\green0\blue128;\red0\green128\blue128;\red0\green128\blue0;\red128\green0\blue128;\red128\green0\blue0;\red128\green128\blue0;\red128\green128\blue128;\red192\green192\blue192;}
{\stylesheet
{\widctlpar\adjustright \fs20\cgrid \snext0 Normal;}
{\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid \sbasedon0 \snext0 heading 1;}
{\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid \sbasedon0 \snext0 heading 2;}
{\s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid \sbasedon0 \snext0 heading 3;}
{\s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid \sbasedon0 \snext0 heading 4;}{\*\cs10 \additive Default Paragraph Font;}
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid \sbasedon0 \snext0 heading 5;}{\*\cs10 \additive Default Paragraph Font;}
{\s15\qc\sb240\sa60\widctlpar\outlinelevel0\adjustright \b\f1\fs32\kerning28\cgrid \sbasedon0 \snext15 Title;}
{\s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid \sbasedon0 \snext16 Subtitle;}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid \sbasedon0 \snext17 BodyText;}
{\s18\widctlpar\fs22\cgrid \sbasedon0 \snext18 DenseText;}
{\s28\widctlpar\tqc\tx4320\tqr\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext28 header;}
{\s29\widctlpar\tqc\tx4320\tqr\tx8640\qr\adjustright \fs20\cgrid \sbasedon0 \snext29 footer;}
{\s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid \sbasedon0 \snext30 GroupHeader;}
{\s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext41 Code Example 0;}
{\s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext42 Code Example 1;}
{\s42\li720\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext43 Code Example 2;}
{\s43\li1080\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext44 Code Example 3;}
{\s44\li1440\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext45 Code Example 4;}
{\s45\li1800\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext46 Code Example 5;}
{\s46\li2160\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext47 Code Example 6;}
{\s47\li2520\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext48 Code Example 7;}
{\s48\li2880\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext49 Code Example 8;}
{\s49\li3240\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext49 Code Example 9;}
{\s50\li0\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext51 List Continue 0;}
{\s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext52 List Continue 1;}
{\s52\li720\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext53 List Continue 2;}
{\s53\li1080\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext54 List Continue 3;}
{\s54\li1440\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext55 List Continue 4;}
{\s55\li1800\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext56 List Continue 5;}
{\s56\li2160\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext57 List Continue 6;}
{\s57\li2520\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext58 List Continue 7;}
{\s58\li2880\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext59 List Continue 8;}
{\s59\li3240\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext59 List Continue 9;}
{\s60\li0\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext61 DescContinue 0;}
{\s61\li360\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext62 DescContinue 1;}
{\s62\li720\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext63 DescContinue 2;}
{\s63\li1080\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext64 DescContinue 3;}
{\s64\li1440\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext65 DescContinue 4;}
{\s65\li1800\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext66 DescContinue 5;}
{\s66\li2160\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext67 DescContinue 6;}
{\s67\li2520\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext68 DescContinue 7;}
{\s68\li2880\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext69 DescContinue 8;}
{\s69\li3240\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext69 DescContinue 9;}
{\s70\li0\sa30\sb30\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext81 LatexTOC 0;}
{\s71\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext82 LatexTOC 1;}
{\s72\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext83 LatexTOC 2;}
{\s73\li1080\sa21\sb21\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext84 LatexTOC 3;}
{\s74\li1440\sa18\sb18\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext85 LatexTOC 4;}
{\s75\li1800\sa15\sb15\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext86 LatexTOC 5;}
{\s76\li2160\sa12\sb12\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext87 LatexTOC 6;}
{\s77\li2520\sa9\sb9\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext88 LatexTOC 7;}
{\s78\li2880\sa6\sb6\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext89 LatexTOC 8;}
{\s79\li3240\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext89 LatexTOC 9;}
{\s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext81 \sautoupd List Bullet 0;}
{\s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid \sbasedon0 \snext82 \sautoupd List Bullet 1;}
{\s82\fi-360\li1080\widctlpar\jclisttab\tx1080{\*\pn \pnlvlbody\ilvl0\ls3\pnrnot0\pndec }\ls3\adjustright \fs20\cgrid \sbasedon0 \snext83 \sautoupd List Bullet 2;}
{\s83\fi-360\li1440\widctlpar\jclisttab\tx1440{\*\pn \pnlvlbody\ilvl0\ls4\pnrnot0\pndec }\ls4\adjustright \fs20\cgrid \sbasedon0 \snext84 \sautoupd List Bullet 3;}
{\s84\fi-360\li1800\widctlpar\jclisttab\tx1800{\*\pn \pnlvlbody\ilvl0\ls5\pnrnot0\pndec }\ls5\adjustright \fs20\cgrid \sbasedon0 \snext85 \sautoupd List Bullet 4;}
{\s85\fi-360\li2160\widctlpar\jclisttab\tx2160{\*\pn \pnlvlbody\ilvl0\ls6\pnrnot0\pndec }\ls6\adjustright \fs20\cgrid \sbasedon0 \snext86 \sautoupd List Bullet 5;}
{\s86\fi-360\li2520\widctlpar\jclisttab\tx2520{\*\pn \pnlvlbody\ilvl0\ls7\pnrnot0\pndec }\ls7\adjustright \fs20\cgrid \sbasedon0 \snext87 \sautoupd List Bullet 6;}
{\s87\fi-360\li2880\widctlpar\jclisttab\tx2880{\*\pn \pnlvlbody\ilvl0\ls8\pnrnot0\pndec }\ls8\adjustright \fs20\cgrid \sbasedon0 \snext88 \sautoupd List Bullet 7;}
{\s88\fi-360\li3240\widctlpar\jclisttab\tx3240{\*\pn \pnlvlbody\ilvl0\ls9\pnrnot0\pndec }\ls9\adjustright \fs20\cgrid \sbasedon0 \snext89 \sautoupd List Bullet 8;}
{\s89\fi-360\li3600\widctlpar\jclisttab\tx3600{\*\pn \pnlvlbody\ilvl0\ls10\pnrnot0\pndec }\ls10\adjustright \fs20\cgrid \sbasedon0 \snext89 \sautoupd List Bullet 9;}
{\s90\fi-360\li360\widctlpar\fs20\cgrid \sbasedon0 \snext91 \sautoupd List Enum 0;}
{\s91\fi-360\li720\widctlpar\fs20\cgrid \sbasedon0 \snext92 \sautoupd List Enum 1;}
{\s92\fi-360\li1080\widctlpar\fs20\cgrid \sbasedon0 \snext93 \sautoupd List Enum 2;}
{\s93\fi-360\li1440\widctlpar\fs20\cgrid \sbasedon0 \snext94 \sautoupd List Enum 3;}
{\s94\fi-360\li1800\widctlpar\fs20\cgrid \sbasedon0 \snext95 \sautoupd List Enum 4;}
{\s95\fi-360\li2160\widctlpar\fs20\cgrid \sbasedon0 \snext96 \sautoupd List Enum 5;}
{\s96\fi-360\li2520\widctlpar\fs20\cgrid \sbasedon0 \snext96 \sautoupd List Enum 5;}
{\s97\fi-360\li2880\widctlpar\fs20\cgrid \sbasedon0 \snext98 \sautoupd List Enum 7;}
{\s98\fi-360\li3240\widctlpar\fs20\cgrid \sbasedon0 \snext99 \sautoupd List Enum 8;}
{\s99\fi-360\li3600\widctlpar\fs20\cgrid \sbasedon0 \snext99 \sautoupd List Enum 9;}
}
{\comment begin body}
{\info 
{\title {\comment ProjetoFinal }ProjetoFinal}
{\comment Generated byDoxgyen. }
{\creatim \yr2019\mo11\dy27\hr8\min23\sec53}
}\pard\plain 
\sectd\pgnlcrm
{\footer \s29\widctlpar\tqc\tx4320\tqr\tx8640\qr\adjustright \fs20\cgrid {\chpgn}}
\pard\plain \s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid 
\vertalc\qc\par\par\par\par\par\par\par
\pard\plain \s15\qc\sb240\sa60\widctlpar\outlinelevel0\adjustright \b\f1\fs32\kerning28\cgrid 
{\field\fldedit {\*\fldinst TITLE \\*MERGEFORMAT}{\fldrslt TITLE}}\par
\pard\plain \s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid 
\par
\par\par\par\par\par\par\par\par\par\par\par\par
\pard\plain \s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid 
{\field\fldedit {\*\fldinst AUTHOR \\*MERGEFORMAT}{\fldrslt AUTHOR}}\par
Version \par{\field\fldedit {\*\fldinst CREATEDATE \\*MERGEFORMAT}{\fldrslt CREATEDATE}}\par
\page\page\vertalt
\pard\plain 
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid Table of Contents\par
\pard\plain \par
{\field\fldedit {\*\fldinst TOC \\f \\*MERGEFORMAT}{\fldrslt Table of contents}}\par
\pard\plain 
\sect \sbkpage \pgndec \pgnrestart
\sect \sectd \sbknone
{\footer \s29\widctlpar\tqc\tx4320\tqr\tx8640\qr\adjustright \fs20\cgrid {\chpgn}}

\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
Module Index\par \pard\plain 
{\tc \v Module Index}
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Modules\par \pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Here is a list of all modules:}
{
\par
\pard\plain \s71\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
Events module documentation\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAATC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
main module documentation\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAATI \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
ASerialLdd1 module documentation\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAATS \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
ASerialLdd2 module documentation\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAUM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
BitIoLdd7 module documentation\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAVG \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
BitIoLdd8 module documentation\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAVY \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
BitIoLdd9 module documentation\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAWQ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Buzzer module documentation\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAXA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
CI2C1 module documentation\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAXB \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Cpu module documentation\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAXP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
CS1 module documentation\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAXR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
EE241 module documentation\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAXU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
ExtIntLdd4 module documentation\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAXV \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
GI2C1 module documentation\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAYH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
LT module documentation\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAYI \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
MCUC1 module documentation\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAYJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
PC module documentation\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAYK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
PE_Const module documentation\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAYL \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
PE_Error module documentation\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAZB \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
PE_LDD module documentation\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABBE \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
PE_Types module documentation\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABBK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
PIR module documentation\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACSV \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
PIR2 module documentation\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACSW \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
RealTimeLdd1 module documentation\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACSX \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
RealTimeLdd2 module documentation\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACTK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
RTC1 module documentation\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACTX \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
SM1 module documentation\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACUJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
TI1 module documentation\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACUW \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Timer module documentation\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACUX \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Timer_Buzzer module documentation\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACUZ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
TimerIntLdd1 module documentation\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACVB \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
TU1 module documentation\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACVH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
TU3 module documentation\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACVM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
TU4 module documentation\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACVT \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
TU6 module documentation\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACWA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
UTIL1 module documentation\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACWG \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Vectors module documentation\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACWJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
WAIT1 module documentation\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACWK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
WAIT2 module documentation\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACWO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Wifi module documentation\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACWS \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}
\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
Data Structure Index\par \pard\plain 
{\tc \v Data Structure Index}
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Data Structures\par \pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Here are the data structures with brief descriptions:}
{
\par
\pard\plain \s71\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
{\b {\b ASerialLdd1_TDeviceData} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACWT \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b ASerialLdd2_TDeviceData} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACXD \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b BitIoLdd7_TDeviceData} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACXN \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b BitIoLdd8_TDeviceData} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACXP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b BitIoLdd9_TDeviceData} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACXR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b CI2C1_TDeviceData} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACXT \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b ExtIntLdd4_TDeviceData} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACYD \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b GI2C1_TDataState} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACYF \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b LDD_ADC_TPinMask} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACYJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b LDD_ADC_TSample} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACYO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b LDD_CAN_TFrame} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACYQ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b LDD_CAN_TStats} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACYX \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b LDD_CRC_TUserCRCStandard} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACZL \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b LDD_DMA_TError} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACZU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b LDD_DMA_TTransferDescriptor} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACZX \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b LDD_ETH_TBufferDesc} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADBA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b LDD_ETH_TStats} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADBD \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b LDD_FLASH_TErrorStatus} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADDG \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b LDD_I2C_TStats} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADDN \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b LDD_LCDC_TBitmap} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADEB \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b LDD_LCDC_TWindow} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADEG \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b LDD_RTC_TTime} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADEL \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b LDD_SDHC_TBufferDesc} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADET \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b LDD_SDHC_TCardAccess} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADEW \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b LDD_SDHC_TCardCaps} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADFA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b LDD_SDHC_TCardErase} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADFK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b LDD_SDHC_TCardInfo} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADFN \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b LDD_SDHC_TCardWriteProtect} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADFS \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b LDD_SERIAL_TStats} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADFV \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b LDD_SPIMASTER_TStats} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADGD \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b LDD_SPISLAVE_TStats} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADGI \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b LDD_SSI_TAC97Command} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADGO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b LDD_SSI_TDataBlocks} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADGS \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b LDD_SSI_TStats} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADGV \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b LDD_TimeDate_TDateRec} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADHE \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b LDD_TimeDate_TTimeRec} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADHJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b LDD_USB_Device_TTD_Head_Struct} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADHO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b LDD_USB_Device_TTD_Struct} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADHT \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b LDD_USB_Host_TPipeDescr_Struct} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADHZ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b LDD_USB_Host_TTD_Struct} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADIK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b LDD_USB_TDevDescriptor_Struct} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADIR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b LDD_USB_TDeviceFeatureRequest_Struct} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADJG \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b LDD_USB_TEndpointFeatureRequest_Struct} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADJM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b LDD_USB_TEndpointStatusRequest_Struct} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADJT \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b LDD_USB_TEpDescriptor_Struct} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADKA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b LDD_USB_TGetDecriptorRequest_Struct} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADKH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b LDD_USB_TGetInterfaceRequest_Struct} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADKO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b LDD_USB_TInterfaceFeatureRequest_Struct} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADKU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b LDD_USB_TSDP_Struct} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADLA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b LDD_USB_TSetAddressRequest_Struct} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADLG \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b LDD_USB_TSetConfigRequest_Struct} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADLN \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b LDD_USB_TSetInterfaceRequest_Struct} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADLU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b PC_TError} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADMA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b RealTimeLdd1_TDeviceData} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADMD \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b RealTimeLdd2_TDeviceData} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADMJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b RTC1_TDeviceData} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADMP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b SM1_TDeviceData} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADMR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b TCpuClockConfiguration} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADNA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b TimerIntLdd1_TDeviceData} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADNL \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b TU1_TDeviceData} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADNP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b TU3_TDeviceData} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADNS \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b TU4_TDeviceData} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADNW \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b TU6_TDeviceData} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADOA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b tVectorTable} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADOC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Wifi_TError} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADOF \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
\par}
\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
File Index\par \pard\plain 
{\tc \v File Index}
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
File List\par \pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Here is a list of all documented files with brief descriptions:}
{
\par
\pard\plain \s71\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
{\b C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/{\b ASerialLdd1.c} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This component "Serial_LDD" implements an asynchronous serial communication. The component supports different settings of parity, word width, stop-bit and communication speed, user can select interrupt or polling handler. Communication speed can be changed also in runtime. The component requires one on-chip asynchronous serial communication channel })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/{\b ASerialLdd1.h} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This component "Serial_LDD" implements an asynchronous serial communication. The component supports different settings of parity, word width, stop-bit and communication speed, user can select interrupt or polling handler. Communication speed can be changed also in runtime. The component requires one on-chip asynchronous serial communication channel })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/{\b ASerialLdd2.c} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This component "Serial_LDD" implements an asynchronous serial communication. The component supports different settings of parity, word width, stop-bit and communication speed, user can select interrupt or polling handler. Communication speed can be changed also in runtime. The component requires one on-chip asynchronous serial communication channel })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAD \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/{\b ASerialLdd2.h} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This component "Serial_LDD" implements an asynchronous serial communication. The component supports different settings of parity, word width, stop-bit and communication speed, user can select interrupt or polling handler. Communication speed can be changed also in runtime. The component requires one on-chip asynchronous serial communication channel })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAF \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/{\b BitIoLdd7.c} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The HAL BitIO component provides a low level API for unified access to general purpose digital input/output pins across various device designs })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAG \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/{\b BitIoLdd7.h} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The HAL BitIO component provides a low level API for unified access to general purpose digital input/output pins across various device designs })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAI \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/{\b BitIoLdd8.c} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The HAL BitIO component provides a low level API for unified access to general purpose digital input/output pins across various device designs })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/{\b BitIoLdd8.h} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The HAL BitIO component provides a low level API for unified access to general purpose digital input/output pins across various device designs })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAL \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/{\b BitIoLdd9.c} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The HAL BitIO component provides a low level API for unified access to general purpose digital input/output pins across various device designs })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/{\b BitIoLdd9.h} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The HAL BitIO component provides a low level API for unified access to general purpose digital input/output pins across various device designs })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/{\b Buzzer.c} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This component "BitIO" implements an one-bit input/output. It uses one bit/pin of a port. Note: This component is set to work in Output direction only. Methods of this component are mostly implemented as a macros (if supported by target language and compiler) })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/{\b Buzzer.h} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This component "BitIO" implements an one-bit input/output. It uses one bit/pin of a port. Note: This component is set to work in Output direction only. Methods of this component are mostly implemented as a macros (if supported by target language and compiler) })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAQ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/{\b CI2C1.c} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This component encapsulates the internal I2C communication interface. The implementation of the interface is based on the Philips I2C-bus specification version 2.0. Interface features: MASTER mode })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAW \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/{\b CI2C1.h} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This component encapsulates the internal I2C communication interface. The implementation of the interface is based on the Philips I2C-bus specification version 2.0. Interface features: MASTER mode })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABG \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/{\b Cpu.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/{\b Cpu.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/{\b CS1.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAACR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/{\b CS1.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAACS \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/{\b CS1config.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADOK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/{\b EE241.c} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Driver for Microchip 24_AA/LC EEPROMs })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAACX \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/{\b EE241.h} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Driver for Microchip 24_AA/LC EEPROMs })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAADK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/{\b ExtIntLdd4.c} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This component, "ExtInt_LDD", provide a low level API for unified access of external interrupts handling across various device designs. The component uses one pin which generates interrupt on selected edge })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAED \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/{\b ExtIntLdd4.h} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This component, "ExtInt_LDD", provide a low level API for unified access of external interrupts handling across various device designs. The component uses one pin which generates interrupt on selected edge })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAEG \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/{\b GI2C1.c} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This component implements a generic I2C driver wrapper to work both with LDD and non-LDD I2C components })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAEH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/{\b GI2C1.h} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This component implements a generic I2C driver wrapper to work both with LDD and non-LDD I2C components })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAEZ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/{\b GI2C1config.h} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Configuration header file for GenericI2C })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAFE \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/{\b LT.c} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This component "BitIO" implements an one-bit input/output. It uses one bit/pin of a port. Note: This component is set to work in Output direction only. Methods of this component are mostly implemented as a macros (if supported by target language and compiler) })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAFF \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/{\b LT.h} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This component "BitIO" implements an one-bit input/output. It uses one bit/pin of a port. Note: This component is set to work in Output direction only. Methods of this component are mostly implemented as a macros (if supported by target language and compiler) })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAFG \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/{\b MCUC1.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAFM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/{\b MCUC1.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAFN \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/{\b MCUC1config.h} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Configuration header file for McuLibConfig })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAFO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/{\b PC.c} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This component "AsynchroSerial" implements an asynchronous serial communication. The component supports different settings of parity, word width, stop-bit and communication speed, user can select interrupt or polling handler. Communication speed can be changed also in runtime. The component requires one on-chip asynchronous serial channel })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAGD \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/{\b PC.h} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This component "AsynchroSerial" implements an asynchronous serial communication. The component supports different settings of parity, word width, stop-bit and communication speed, user can select interrupt or polling handler. Communication speed can be changed also in runtime. The component requires one on-chip asynchronous serial channel })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAHI \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/{\b PE_Const.h} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This component "PE_Const" contains internal definitions of the constants })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAHO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/{\b PE_Error.h} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This component "PE_Error" contains internal definitions of the error constants })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAHP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/{\b PE_LDD.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAHQ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/{\b PE_LDD.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAHR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/{\b PE_Types.h} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b PE_Types.h} - contains definitions of basic types, register access macros and hardware specific macros which can be used in user application })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAHS \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/{\b PIR.c} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This component "ExtInt" implements an external interrupt, its control methods and interrupt/event handling procedure. The component uses one pin which generates interrupt on selected edge })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAALJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/{\b PIR.h} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This component "ExtInt" implements an external interrupt, its control methods and interrupt/event handling procedure. The component uses one pin which generates interrupt on selected edge })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAALL \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/{\b PIR2.c} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This component "BitIO" implements an one-bit input/output. It uses one bit/pin of a port. Note: This component is set to work in Input direction only. Methods of this component are mostly implemented as a macros (if supported by target language and compiler) })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAALO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/{\b PIR2.h} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This component "BitIO" implements an one-bit input/output. It uses one bit/pin of a port. Note: This component is set to work in Input direction only. Methods of this component are mostly implemented as a macros (if supported by target language and compiler) })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAALP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/{\b RealTimeLdd1.c} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This component "RealTime_LDD" implements a free running counter for time measurement. This RealTime component provides a high level API for unified hardware access to various timer devices using the TimerUnit component })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAALR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/{\b RealTimeLdd1.h} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This component "RealTime_LDD" implements a free running counter for time measurement. This RealTime component provides a high level API for unified hardware access to various timer devices using the TimerUnit component })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAALU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/{\b RealTimeLdd2.c} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This component "RealTime_LDD" implements a free running counter for time measurement. This RealTime component provides a high level API for unified hardware access to various timer devices using the TimerUnit component })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAALV \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/{\b RealTimeLdd2.h} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This component "RealTime_LDD" implements a free running counter for time measurement. This RealTime component provides a high level API for unified hardware access to various timer devices using the TimerUnit component })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAALY \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/{\b RTC1.c} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This component implements a real time clock (RTC). Actual date may also be obtained and an alarm function is included })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAALZ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/{\b RTC1.h} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This component implements a real time clock (RTC). Actual date may also be obtained and an alarm function is included })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAMD \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/{\b SM1.c} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This component "SPIMaster_LDD" implements MASTER part of synchronous serial master-slave communication })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAMF \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/{\b SM1.h} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This component "SPIMaster_LDD" implements MASTER part of synchronous serial master-slave communication })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAMK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/{\b TI1.c} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This component "TimerInt" implements a periodic interrupt. When the component and its events are enabled, the "OnInterrupt" event is called periodically with the period that you specify. TimerInt supports also changing the period in runtime. The source of periodic interrupt can be timer compare or reload register or timer-overflow interrupt (of free running counter) })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAML \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/{\b TI1.h} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This component "TimerInt" implements a periodic interrupt. When the component and its events are enabled, the "OnInterrupt" event is called periodically with the period that you specify. TimerInt supports also changing the period in runtime. The source of periodic interrupt can be timer compare or reload register or timer-overflow interrupt (of free running counter) })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAMN \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/{\b Timer.c} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This device "FreeCntr16" implements 16-bit Free Running Counter })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAMO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/{\b Timer.h} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This device "FreeCntr16" implements 16-bit Free Running Counter })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAMP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/{\b Timer_Buzzer.c} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This device "FreeCntr16" implements 16-bit Free Running Counter })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAMT \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/{\b Timer_Buzzer.h} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This device "FreeCntr16" implements 16-bit Free Running Counter })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAMU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/{\b TimerIntLdd1.c} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This TimerInt component implements a periodic interrupt. When the component and its events are enabled, the "OnInterrupt" event is called periodically with the period that you specify. TimerInt supports also changing the period in runtime. This TimerInt component provides a high level API for unified hardware access to various timer devices using the TimerUnit component })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAMY \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/{\b TimerIntLdd1.h} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This TimerInt component implements a periodic interrupt. When the component and its events are enabled, the "OnInterrupt" event is called periodically with the period that you specify. TimerInt supports also changing the period in runtime. This TimerInt component provides a high level API for unified hardware access to various timer devices using the TimerUnit component })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAANC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/{\b TU1.c} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This TimerUnit component provides a low level API for unified hardware access across various timer devices using the Prescaler-Counter-Compare-Capture timer structure })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAND \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/{\b TU1.h} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This TimerUnit component provides a low level API for unified hardware access across various timer devices using the Prescaler-Counter-Compare-Capture timer structure })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAANH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/{\b TU3.c} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This TimerUnit component provides a low level API for unified hardware access across various timer devices using the Prescaler-Counter-Compare-Capture timer structure })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAANR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/{\b TU3.h} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This TimerUnit component provides a low level API for unified hardware access across various timer devices using the Prescaler-Counter-Compare-Capture timer structure })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAANV \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/{\b TU4.c} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This TimerUnit component provides a low level API for unified hardware access across various timer devices using the Prescaler-Counter-Compare-Capture timer structure })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAOF \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/{\b TU4.h} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This TimerUnit component provides a low level API for unified hardware access across various timer devices using the Prescaler-Counter-Compare-Capture timer structure })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAOJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/{\b TU6.c} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This TimerUnit component provides a low level API for unified hardware access across various timer devices using the Prescaler-Counter-Compare-Capture timer structure })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAOT \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/{\b TU6.h} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This TimerUnit component provides a low level API for unified hardware access across various timer devices using the Prescaler-Counter-Compare-Capture timer structure })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAOV \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/{\b UTIL1.c} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Contains various utility functions })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAPF \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/{\b UTIL1.h} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Contains various utility functions })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAPH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/{\b UTIL1config.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADOL \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/{\b Vectors.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAPL \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/{\b WAIT1.c} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Implements busy waiting routines })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAPP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/{\b WAIT1.h} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Implements busy waiting routines })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAPW \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/{\b WAIT1config.h} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Configuration header file for Wait })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAQE \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/{\b WAIT2.c} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Implements busy waiting routines })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAQG \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/{\b WAIT2.h} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Implements busy waiting routines })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAQN \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/{\b WAIT2config.h} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Configuration header file for Wait })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAQV \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/{\b Wifi.c} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This component "AsynchroSerial" implements an asynchronous serial communication. The component supports different settings of parity, word width, stop-bit and communication speed, user can select interrupt or polling handler. Communication speed can be changed also in runtime. The component requires one on-chip asynchronous serial channel })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAQX \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/{\b Wifi.h} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This component "AsynchroSerial" implements an asynchronous serial communication. The component supports different settings of parity, word width, stop-bit and communication speed, user can select interrupt or polling handler. Communication speed can be changed also in runtime. The component requires one on-chip asynchronous serial channel })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAASC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/sources/{\b Events.c} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is user's event module. Put your event handler code here })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAASI \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/sources/{\b Events.h} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is user's event module. Put your event handler code here })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAASQ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/sources/{\b main.c} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Main module. This module contains user's application code })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAASU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
\par}
\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
Module Documentation{\tc \v Module Documentation}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Events module documentation\par \pard\plain 
{\tc\tcl2 \v Events module documentation}
{\xe \v Events module documentation}
{\bkmkstart AAAAAAAATC}
{\bkmkend AAAAAAAATC}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b Cpu_OnNMIINT} (void){\bkmkstart AAAAAAAASJ}
{\bkmkend AAAAAAAASJ}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This event is called when the Non maskable interrupt had occurred. This event is automatically enabled when the [NMI interrupt] property is set to 'Enabled'. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b Wifi_OnRcvChar} (void){\bkmkstart AAAAAAAASK}
{\bkmkend AAAAAAAASK}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b Wifi_OnSendChar} (void){\bkmkstart AAAAAAAASL}
{\bkmkend AAAAAAAASL}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b RTC1_OnSecond} ({\b LDD_TUserData} *UserDataPtr)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Called each second if OnSecond event is enabled (see [SetEventMask] and [GetEventMask] methods) and RTC device is enabled. This event is available only if [Interrupt service/event] is enabled. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b TI1_OnInterrupt} (void)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b SM1_OnBlockSent} ({\b LDD_TUserData} *UserDataPtr)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This event is called after the last character from the output buffer is moved to the transmitter. This event is available only if the SendBlock method is enabled. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b PC_OnRcvChar} (void){\bkmkstart AAAAAAAASM}
{\bkmkend AAAAAAAASM}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b PIR_OnInterrupt} (void)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b SM1_OnBlockReceived} ({\b LDD_TUserData} *UserDataPtr)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This event is called when the requested number of data is moved to the input buffer. This method is available only if the ReceiveBlock method is enabled. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b C3_OnInterrupt} (void){\bkmkstart AAAAAAAASR}
{\bkmkend AAAAAAAASR}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b C2_OnInterrupt} (void){\bkmkstart AAAAAAAASS}
{\bkmkend AAAAAAAASS}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b C1_OnInterrupt} (void){\bkmkstart AAAAAAAAST}
{\bkmkend AAAAAAAAST}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

volatile uint8_t {\b time_counter}{\bkmkstart AAAAAAAASN}
{\bkmkend AAAAAAAASN}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Interrupcao de timer. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

volatile uint8_t {\b rtc_ready}{\bkmkstart AAAAAAAASO}
{\bkmkend AAAAAAAASO}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Interrupcao de RTC. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

volatile uint8_t {\b move}{\bkmkstart AAAAAAAASP}
{\bkmkend AAAAAAAASP}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Interrupcao de movimento. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v PIR_OnInterrupt\:Events module documentation}
{\xe \v Events module documentation\:PIR_OnInterrupt}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void PIR_OnInterrupt (void )}}
\par
{\bkmkstart AAAAAAAATD}
{\bkmkend AAAAAAAATD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
=================================================================== Event : PIR_OnInterrupt (module Events)\par
Component : PIR [ExtInt] Description : This event is called when an active signal edge/level has occurred. Parameters : None {\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid {\tc\tcl \v 3}Returns : Nothing \par}
}}
{\xe \v RTC1_OnSecond\:Events module documentation}
{\xe \v Events module documentation\:RTC1_OnSecond}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void RTC1_OnSecond ({\b LDD_TUserData} * {\i UserDataPtr})}}
\par
{\bkmkstart AAAAAAAATE}
{\bkmkend AAAAAAAATE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Called each second if OnSecond event is enabled (see [SetEventMask] and [GetEventMask] methods) and RTC device is enabled. This event is available only if [Interrupt service/event] is enabled. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i UserDataPtr} \cell }{- Pointer to the user or RTOS specific data. This pointer is passed as the parameter of Init method. \cell }
{\row }
}
}}
{\xe \v SM1_OnBlockReceived\:Events module documentation}
{\xe \v Events module documentation\:SM1_OnBlockReceived}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void SM1_OnBlockReceived ({\b LDD_TUserData} * {\i UserDataPtr})}}
\par
{\bkmkstart AAAAAAAATF}
{\bkmkend AAAAAAAATF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This event is called when the requested number of data is moved to the input buffer. This method is available only if the ReceiveBlock method is enabled. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i UserDataPtr} \cell }{- Pointer to the user or RTOS specific data. The pointer is passed as the parameter of Init method. \cell }
{\row }
}
}}
{\xe \v SM1_OnBlockSent\:Events module documentation}
{\xe \v Events module documentation\:SM1_OnBlockSent}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void SM1_OnBlockSent ({\b LDD_TUserData} * {\i UserDataPtr})}}
\par
{\bkmkstart AAAAAAAATG}
{\bkmkend AAAAAAAATG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This event is called after the last character from the output buffer is moved to the transmitter. This event is available only if the SendBlock method is enabled. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
=================================================================== Event : SM1_OnBlockSent (module Events)\par
Component : SM1 [SPIMaster_LDD]\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i UserDataPtr} \cell }{- Pointer to the user or RTOS specific data. The pointer is passed as the parameter of Init method.\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i UserDataPtr} \cell }{- Pointer to the user or RTOS specific data. The pointer is passed as the parameter of Init method. \cell }
{\row }
}
}}
{\xe \v TI1_OnInterrupt\:Events module documentation}
{\xe \v Events module documentation\:TI1_OnInterrupt}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void TI1_OnInterrupt (void )}}
\par
{\bkmkstart AAAAAAAATH}
{\bkmkend AAAAAAAATH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
=================================================================== Event : TI1_OnInterrupt (module Events)\par
Component : TI1 [TimerInt] Description : When a timer interrupt occurs this event is called (only when the component is enabled - <Enable> and the events are enabled - <EnableEvent>). This event is enabled only if a <interrupt service/event> is enabled. Parameters : None {\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid {\tc\tcl \v 3}Returns : Nothing \par}
}}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
main module documentation\par \pard\plain 
{\tc\tcl2 \v main module documentation}
{\xe \v main module documentation}
{\bkmkstart AAAAAAAATI}
{\bkmkend AAAAAAAATI}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Time_2str} (uint8_t *s)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Date_2str} (uint8_t *s)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Hour_2str} (uint8_t *s)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b PC_SendStr} (uint8_t *s)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Wifi_SendStr} (uint8_t *s)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Sub_topic} (uint8_t *s)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

int {\b main} (void){\bkmkstart AAAAAAAASV}
{\bkmkend AAAAAAAASV}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

volatile uint8_t {\b br} [256]{\bkmkstart AAAAAAAASW}
{\bkmkend AAAAAAAASW}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Buffer que armazena caracteres recebidos pelo ESP. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

volatile uint8_t {\b ibr} = 0{\bkmkstart AAAAAAAASX}
{\bkmkend AAAAAAAASX}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Indice do buffer br. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

volatile uint8_t {\b mr} = 0{\bkmkstart AAAAAAAASY}
{\bkmkend AAAAAAAASY}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Variavel booleana que diz se uma mensagem foi recebida. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
volatile uint8_t {\b time_counter} = 2\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Define o intervalo de 2 segundos. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
volatile uint8_t {\b rtc_ready} = 0\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Define que se passaram 2 segundos. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint8_t {\b conectado}{\bkmkstart AAAAAAAASZ}
{\bkmkend AAAAAAAASZ}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Espera confirma\'E7\'E3o que houve conex\'E3o correta com o wi-fi. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint8_t {\b membuf} [16]{\bkmkstart AAAAAAAATA}
{\bkmkend AAAAAAAATA}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Buffer para transferencia para a memoria. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b LDD_RTC_TTime} {\b time}{\bkmkstart AAAAAAAATB}
{\bkmkend AAAAAAAATB}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Struct de armazenamento de data e hora. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
volatile uint8_t {\b move} = 0\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Variavel que indica movimento por interrupcao. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v Date_2str\:main module documentation}
{\xe \v main module documentation\:Date_2str}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Date_2str (uint8_t * {\i s})}}
\par
{\bkmkstart AAAAAAAATJ}
{\bkmkend AAAAAAAATJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Funcao que pega a data e a transforma em uma string. Entrada: string de destino. \par
}}
{\xe \v Hour_2str\:main module documentation}
{\xe \v main module documentation\:Hour_2str}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Hour_2str (uint8_t * {\i s})}}
\par
{\bkmkstart AAAAAAAATK}
{\bkmkend AAAAAAAATK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Funcao que pega a hora e a transforma em uma string. Entrada: string de destino. \par
}}
{\xe \v PC_SendStr\:main module documentation}
{\xe \v main module documentation\:PC_SendStr}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void PC_SendStr (uint8_t * {\i s})}}
\par
{\bkmkstart AAAAAAAATL}
{\bkmkend AAAAAAAATL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Funcao que envia string para o terminal. Entrada: string a ser enviada. \par
}}
{\xe \v Sub_topic\:main module documentation}
{\xe \v main module documentation\:Sub_topic}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Sub_topic (uint8_t * {\i s})}}
\par
{\bkmkstart AAAAAAAATM}
{\bkmkend AAAAAAAATM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Funcao para se inscrever em um topico. Entrada: string que contem topico. \par
}}
{\xe \v Time_2str\:main module documentation}
{\xe \v main module documentation\:Time_2str}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Time_2str (uint8_t * {\i s})}}
\par
{\bkmkstart AAAAAAAATN}
{\bkmkend AAAAAAAATN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Converte data e hora da struct time em string. Entrada: string de destino. \par
}}
{\xe \v Wifi_SendStr\:main module documentation}
{\xe \v main module documentation\:Wifi_SendStr}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Wifi_SendStr (uint8_t * {\i s})}}
\par
{\bkmkstart AAAAAAAATO}
{\bkmkend AAAAAAAATO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Funcao que envia string para o modulo ESP. Entrada: string a ser enviada. \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variable Documentation\par
\pard\plain 
{\xe \v move\:main module documentation}
{\xe \v main module documentation\:move}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
volatile uint8_t move = 0}}
\par
{\bkmkstart AAAAAAAATP}
{\bkmkend AAAAAAAATP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Variavel que indica movimento por interrupcao. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Interrupcao de movimento. \par
}}
{\xe \v rtc_ready\:main module documentation}
{\xe \v main module documentation\:rtc_ready}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
volatile uint8_t rtc_ready = 0}}
\par
{\bkmkstart AAAAAAAATQ}
{\bkmkend AAAAAAAATQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Define que se passaram 2 segundos. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Interrupcao de RTC. \par
}}
{\xe \v time_counter\:main module documentation}
{\xe \v main module documentation\:time_counter}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
volatile uint8_t time_counter = 2}}
\par
{\bkmkstart AAAAAAAATR}
{\bkmkend AAAAAAAATR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Define o intervalo de 2 segundos. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Interrupcao de timer. \par
}}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
ASerialLdd1 module documentation\par \pard\plain 
{\tc\tcl2 \v ASerialLdd1 module documentation}
{\xe \v ASerialLdd1 module documentation}
{\bkmkstart AAAAAAAATS}
{\bkmkend AAAAAAAATS}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Structures\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b ASerialLdd1_TDeviceData}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macros\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b AVAILABLE_EVENTS_MASK}\~ ({\b LDD_SERIAL_ON_BLOCK_RECEIVED} | {\b LDD_SERIAL_ON_BLOCK_SENT} | {\b LDD_SERIAL_ON_BREAK} | {\b LDD_SERIAL_ON_ERROR})\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ASerialLdd1_PRPH_BASE_ADDRESS}\~ 0x4006A000U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ASerialLdd1_Init_METHOD_ENABLED}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ASerialLdd1_SendBlock_METHOD_ENABLED}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ASerialLdd1_ReceiveBlock_METHOD_ENABLED}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ASerialLdd1_GetError_METHOD_ENABLED}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ASerialLdd1_OnBlockReceived_EVENT_ENABLED}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ASerialLdd1_OnBlockSent_EVENT_ENABLED}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ASerialLdd1_OnBreak_EVENT_ENABLED}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ASerialLdd1_OnError_EVENT_ENABLED}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ENABLED_TX_INT}\~ 0x01U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b BREAK_DETECTED}\~ 0x02U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b TX_COMPLETED}\~ 0x04U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ENABLE_TX_COMPLETE}\~ 0x10U\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Typedefs\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef {\b ASerialLdd1_TDeviceData} * {\b ASerialLdd1_TDeviceDataPtr}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LDD_TDeviceData} * {\b ASerialLdd1_Init} ({\b LDD_TUserData} *UserDataPtr)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Initializes the device. Allocates memory for the device data structure, allocates interrupt vectors and sets interrupt priority, sets pin routing, sets timing, etc. If the "Enable
    in init. code" is set to "yes" value then the device is also enabled(see the description of the Enable() method). In this case the Enable() method is not necessary and needn't to be generated. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LDD_TError} {\b ASerialLdd1_ReceiveBlock} ({\b LDD_TDeviceData} *DeviceDataPtr, {\b LDD_TData} *BufferPtr, uint16_t Size)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Specifies the number of data to receive. The method returns ERR_BUSY until the specified number of characters is received. Method [CancelBlockReception] can be used to cancel a running receive operation. If a receive operation is not in progress (the method was not called or a previous operation has already finished) all received characters will be lost without any notification. To prevent the loss of data call the method immediately after the last receive operation has finished (e.g. from the [OnBlockReceived] event). This method finishes immediately after calling it - it doesn't wait the end of data reception. Use event [OnBlockReceived] to check the end of data reception. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LDD_TError} {\b ASerialLdd1_SendBlock} ({\b LDD_TDeviceData} *DeviceDataPtr, {\b LDD_TData} *BufferPtr, uint16_t Size)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sends a block of characters. The method returns ERR_BUSY when the previous block transmission is not completed. Method [CancelBlockTransmission] can be used to cancel a transmit operation. This method is available only if the transmitter property is enabled. This method finishes immediately after calling it - it doesn't wait the end of data transmission. Use event [OnBlockSent] to check the end of data transmission. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b PE_ISR} (ASerialLdd1_Interrupt){\bkmkstart AAAAAAAAAB}
{\bkmkend AAAAAAAAAB}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LDD_TError} {\b ASerialLdd1_GetError} ({\b LDD_TDeviceData} *DeviceDataPtr, {\b LDD_SERIAL_TError} *ErrorPtr)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This method returns a set of asserted flags. The flags are accumulated in the set. After calling this method the set is returned and cleared. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macro Definition Documentation\par
\pard\plain 
{\xe \v ASerialLdd1_GetError_METHOD_ENABLED\:ASerialLdd1 module documentation}
{\xe \v ASerialLdd1 module documentation\:ASerialLdd1_GetError_METHOD_ENABLED}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ASerialLdd1_GetError_METHOD_ENABLED}}
\par
{\bkmkstart AAAAAAAATT}
{\bkmkend AAAAAAAATT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
GetError method of the component ASerialLdd1 is enabled (generated) \par
}}
{\xe \v ASerialLdd1_Init_METHOD_ENABLED\:ASerialLdd1 module documentation}
{\xe \v ASerialLdd1 module documentation\:ASerialLdd1_Init_METHOD_ENABLED}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ASerialLdd1_Init_METHOD_ENABLED}}
\par
{\bkmkstart AAAAAAAATU}
{\bkmkend AAAAAAAATU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Init method of the component ASerialLdd1 is enabled (generated) \par
}}
{\xe \v ASerialLdd1_OnBlockReceived_EVENT_ENABLED\:ASerialLdd1 module documentation}
{\xe \v ASerialLdd1 module documentation\:ASerialLdd1_OnBlockReceived_EVENT_ENABLED}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ASerialLdd1_OnBlockReceived_EVENT_ENABLED}}
\par
{\bkmkstart AAAAAAAATV}
{\bkmkend AAAAAAAATV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
OnBlockReceived event of the component ASerialLdd1 is enabled (generated) \par
}}
{\xe \v ASerialLdd1_OnBlockSent_EVENT_ENABLED\:ASerialLdd1 module documentation}
{\xe \v ASerialLdd1 module documentation\:ASerialLdd1_OnBlockSent_EVENT_ENABLED}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ASerialLdd1_OnBlockSent_EVENT_ENABLED}}
\par
{\bkmkstart AAAAAAAATW}
{\bkmkend AAAAAAAATW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
OnBlockSent event of the component ASerialLdd1 is enabled (generated) \par
}}
{\xe \v ASerialLdd1_OnBreak_EVENT_ENABLED\:ASerialLdd1 module documentation}
{\xe \v ASerialLdd1 module documentation\:ASerialLdd1_OnBreak_EVENT_ENABLED}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ASerialLdd1_OnBreak_EVENT_ENABLED}}
\par
{\bkmkstart AAAAAAAATX}
{\bkmkend AAAAAAAATX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
OnBreak event of the component ASerialLdd1 is enabled (generated) \par
}}
{\xe \v ASerialLdd1_OnError_EVENT_ENABLED\:ASerialLdd1 module documentation}
{\xe \v ASerialLdd1 module documentation\:ASerialLdd1_OnError_EVENT_ENABLED}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ASerialLdd1_OnError_EVENT_ENABLED}}
\par
{\bkmkstart AAAAAAAATY}
{\bkmkend AAAAAAAATY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
OnError event of the component ASerialLdd1 is enabled (generated) \par
}}
{\xe \v ASerialLdd1_PRPH_BASE_ADDRESS\:ASerialLdd1 module documentation}
{\xe \v ASerialLdd1 module documentation\:ASerialLdd1_PRPH_BASE_ADDRESS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ASerialLdd1_PRPH_BASE_ADDRESS\~ 0x4006A000U}}
\par
{\bkmkstart AAAAAAAATZ}
{\bkmkend AAAAAAAATZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Peripheral base address of a device allocated by the component. This constant can be used directly in PDD macros. \par
}}
{\xe \v ASerialLdd1_ReceiveBlock_METHOD_ENABLED\:ASerialLdd1 module documentation}
{\xe \v ASerialLdd1 module documentation\:ASerialLdd1_ReceiveBlock_METHOD_ENABLED}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ASerialLdd1_ReceiveBlock_METHOD_ENABLED}}
\par
{\bkmkstart AAAAAAAAUA}
{\bkmkend AAAAAAAAUA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
ReceiveBlock method of the component ASerialLdd1 is enabled (generated) \par
}}
{\xe \v ASerialLdd1_SendBlock_METHOD_ENABLED\:ASerialLdd1 module documentation}
{\xe \v ASerialLdd1 module documentation\:ASerialLdd1_SendBlock_METHOD_ENABLED}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ASerialLdd1_SendBlock_METHOD_ENABLED}}
\par
{\bkmkstart AAAAAAAAUB}
{\bkmkend AAAAAAAAUB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
SendBlock method of the component ASerialLdd1 is enabled (generated) \par
}}
{\xe \v AVAILABLE_EVENTS_MASK\:ASerialLdd1 module documentation}
{\xe \v ASerialLdd1 module documentation\:AVAILABLE_EVENTS_MASK}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define AVAILABLE_EVENTS_MASK\~ ({\b LDD_SERIAL_ON_BLOCK_RECEIVED} | {\b LDD_SERIAL_ON_BLOCK_SENT} | {\b LDD_SERIAL_ON_BREAK} | {\b LDD_SERIAL_ON_ERROR})}}
\par
{\bkmkstart AAAAAAAAUC}
{\bkmkend AAAAAAAAUC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The mask of available events used to enable/disable events during runtime. \par
}}
{\xe \v BREAK_DETECTED\:ASerialLdd1 module documentation}
{\xe \v ASerialLdd1 module documentation\:BREAK_DETECTED}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define BREAK_DETECTED\~ 0x02U}}
\par
{\bkmkstart AAAAAAAAUD}
{\bkmkend AAAAAAAAUD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Break detected \par
}}
{\xe \v ENABLE_TX_COMPLETE\:ASerialLdd1 module documentation}
{\xe \v ASerialLdd1 module documentation\:ENABLE_TX_COMPLETE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ENABLE_TX_COMPLETE\~ 0x10U}}
\par
{\bkmkstart AAAAAAAAUE}
{\bkmkend AAAAAAAAUE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Enable/Disable of TX complete detection. Used in the polling mode only \par
}}
{\xe \v ENABLED_TX_INT\:ASerialLdd1 module documentation}
{\xe \v ASerialLdd1 module documentation\:ENABLED_TX_INT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ENABLED_TX_INT\~ 0x01U}}
\par
{\bkmkstart AAAAAAAAUF}
{\bkmkend AAAAAAAAUF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
TX interrupt enabled \par
}}
{\xe \v TX_COMPLETED\:ASerialLdd1 module documentation}
{\xe \v ASerialLdd1 module documentation\:TX_COMPLETED}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define TX_COMPLETED\~ 0x04U}}
\par
{\bkmkstart AAAAAAAAUG}
{\bkmkend AAAAAAAAUG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Transmission completed \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Typedef Documentation\par
\pard\plain 
{\xe \v ASerialLdd1_TDeviceDataPtr\:ASerialLdd1 module documentation}
{\xe \v ASerialLdd1 module documentation\:ASerialLdd1_TDeviceDataPtr}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef {\b ASerialLdd1_TDeviceData}* {\b ASerialLdd1_TDeviceDataPtr}}}
\par
{\bkmkstart AAAAAAAAUH}
{\bkmkend AAAAAAAAUH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Pointer to the device data structure. \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v ASerialLdd1_GetError\:ASerialLdd1 module documentation}
{\xe \v ASerialLdd1 module documentation\:ASerialLdd1_GetError}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LDD_TError} ASerialLdd1_GetError ({\b LDD_TDeviceData} * {\i DeviceDataPtr}, {\b LDD_SERIAL_TError} * {\i ErrorPtr})}}
\par
{\bkmkstart AAAAAAAAUI}
{\bkmkend AAAAAAAAUI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This method returns a set of asserted flags. The flags are accumulated in the set. After calling this method the set is returned and cleared. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i DeviceDataPtr} \cell }{- Device data structure pointer returned by [Init] method. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i ErrorPtr} \cell }{- A pointer to the returned set of error flags: LDD_SERIAL_RX_OVERRUN - Receiver overrun. LDD_SERIAL_PARITY_ERROR - Parity error (only if HW supports parity feature). LDD_SERIAL_FRAMING_ERROR - Framing error. LDD_SERIAL_NOISE_ERROR - Noise error. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {
\par
\pard\plain \s82\fi-360\li1080\widctlpar\jclisttab\tx1080{\*\pn \pnlvlbody\ilvl0\ls3\pnrnot0\pndec }\ls3\adjustright \fs20\cgrid 
Error code (if GetError did not succeed), possible codes: ERR_OK - OK ERR_SPEED - This device does not work in the active clock configuration ERR_DISABLED - Component is disabled \par}
}}}
{\xe \v ASerialLdd1_Init\:ASerialLdd1 module documentation}
{\xe \v ASerialLdd1 module documentation\:ASerialLdd1_Init}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LDD_TDeviceData} * ASerialLdd1_Init ({\b LDD_TUserData} * {\i UserDataPtr})}}
\par
{\bkmkstart AAAAAAAAUJ}
{\bkmkend AAAAAAAAUJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Initializes the device. Allocates memory for the device data structure, allocates interrupt vectors and sets interrupt priority, sets pin routing, sets timing, etc. If the "Enable
    in init. code" is set to "yes" value then the device is also enabled(see the description of the Enable() method). In this case the Enable() method is not necessary and needn't to be generated. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i UserDataPtr} \cell }{- Pointer to the user or RTOS specific data. This pointer will be passed as an event or callback parameter. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {
\par
\pard\plain \s82\fi-360\li1080\widctlpar\jclisttab\tx1080{\*\pn \pnlvlbody\ilvl0\ls3\pnrnot0\pndec }\ls3\adjustright \fs20\cgrid 
Device data structure pointer. \par}
}}}
{\xe \v ASerialLdd1_ReceiveBlock\:ASerialLdd1 module documentation}
{\xe \v ASerialLdd1 module documentation\:ASerialLdd1_ReceiveBlock}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LDD_TError} ASerialLdd1_ReceiveBlock ({\b LDD_TDeviceData} * {\i DeviceDataPtr}, {\b LDD_TData} * {\i BufferPtr}, uint16_t {\i Size})}}
\par
{\bkmkstart AAAAAAAAUK}
{\bkmkend AAAAAAAAUK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Specifies the number of data to receive. The method returns ERR_BUSY until the specified number of characters is received. Method [CancelBlockReception] can be used to cancel a running receive operation. If a receive operation is not in progress (the method was not called or a previous operation has already finished) all received characters will be lost without any notification. To prevent the loss of data call the method immediately after the last receive operation has finished (e.g. from the [OnBlockReceived] event). This method finishes immediately after calling it - it doesn't wait the end of data reception. Use event [OnBlockReceived] to check the end of data reception. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i DeviceDataPtr} \cell }{- Device data structure pointer returned by [Init] method. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i BufferPtr} \cell }{- Pointer to a buffer where received characters will be stored. In case of 8bit character width each character in buffer occupies 1 byte. In case of 9 and more bit long character width each character in buffer occupies 2 bytes. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i Size} \cell }{- Number of characters to receive \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {
\par
\pard\plain \s82\fi-360\li1080\widctlpar\jclisttab\tx1080{\*\pn \pnlvlbody\ilvl0\ls3\pnrnot0\pndec }\ls3\adjustright \fs20\cgrid 
Error code, possible codes: ERR_OK - OK ERR_SPEED - The component does not work in the active clock configuration. ERR_PARAM_SIZE - Parameter Size is out of expected range. ERR_DISABLED - The component or device is disabled. ERR_BUSY - The previous receive request is pending. \par}
}}}
{\xe \v ASerialLdd1_SendBlock\:ASerialLdd1 module documentation}
{\xe \v ASerialLdd1 module documentation\:ASerialLdd1_SendBlock}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LDD_TError} ASerialLdd1_SendBlock ({\b LDD_TDeviceData} * {\i DeviceDataPtr}, {\b LDD_TData} * {\i BufferPtr}, uint16_t {\i Size})}}
\par
{\bkmkstart AAAAAAAAUL}
{\bkmkend AAAAAAAAUL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sends a block of characters. The method returns ERR_BUSY when the previous block transmission is not completed. Method [CancelBlockTransmission] can be used to cancel a transmit operation. This method is available only if the transmitter property is enabled. This method finishes immediately after calling it - it doesn't wait the end of data transmission. Use event [OnBlockSent] to check the end of data transmission. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i DeviceDataPtr} \cell }{- Device data structure pointer returned by [Init] method. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i BufferPtr} \cell }{- Pointer to a buffer from where data will be sent. In case of 8bit character width each character in buffer occupies 1 byte. In case of 9 and more bit long character width each character in buffer occupies 2 bytes. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i Size} \cell }{- Number of characters in the buffer. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {
\par
\pard\plain \s82\fi-360\li1080\widctlpar\jclisttab\tx1080{\*\pn \pnlvlbody\ilvl0\ls3\pnrnot0\pndec }\ls3\adjustright \fs20\cgrid 
Error code, possible codes: ERR_OK - OK ERR_SPEED - The component does not work in the active clock configuration. ERR_PARAM_SIZE - Parameter Size is out of expected range. ERR_DISABLED - The component or device is disabled. ERR_BUSY - The previous transmit request is pending. \par}
}}}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
ASerialLdd2 module documentation\par \pard\plain 
{\tc\tcl2 \v ASerialLdd2 module documentation}
{\xe \v ASerialLdd2 module documentation}
{\bkmkstart AAAAAAAAUM}
{\bkmkend AAAAAAAAUM}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Structures\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b ASerialLdd2_TDeviceData}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macros\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b AVAILABLE_EVENTS_MASK}\~ ({\b LDD_SERIAL_ON_BLOCK_RECEIVED} | {\b LDD_SERIAL_ON_BLOCK_SENT} | {\b LDD_SERIAL_ON_BREAK} | {\b LDD_SERIAL_ON_ERROR})\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ASerialLdd2_PRPH_BASE_ADDRESS}\~ 0x4006C000U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ASerialLdd2_Init_METHOD_ENABLED}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ASerialLdd2_SendBlock_METHOD_ENABLED}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ASerialLdd2_ReceiveBlock_METHOD_ENABLED}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ASerialLdd2_GetError_METHOD_ENABLED}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ASerialLdd2_OnBlockReceived_EVENT_ENABLED}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ASerialLdd2_OnBlockSent_EVENT_ENABLED}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ASerialLdd2_OnBreak_EVENT_ENABLED}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ASerialLdd2_OnError_EVENT_ENABLED}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ENABLED_TX_INT}\~ 0x01U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b BREAK_DETECTED}\~ 0x02U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b TX_COMPLETED}\~ 0x04U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ENABLE_TX_COMPLETE}\~ 0x10U\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Typedefs\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef {\b ASerialLdd2_TDeviceData} * {\b ASerialLdd2_TDeviceDataPtr}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LDD_TDeviceData} * {\b ASerialLdd2_Init} ({\b LDD_TUserData} *UserDataPtr)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Initializes the device. Allocates memory for the device data structure, allocates interrupt vectors and sets interrupt priority, sets pin routing, sets timing, etc. If the "Enable
    in init. code" is set to "yes" value then the device is also enabled(see the description of the Enable() method). In this case the Enable() method is not necessary and needn't to be generated. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LDD_TError} {\b ASerialLdd2_ReceiveBlock} ({\b LDD_TDeviceData} *DeviceDataPtr, {\b LDD_TData} *BufferPtr, uint16_t Size)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Specifies the number of data to receive. The method returns ERR_BUSY until the specified number of characters is received. Method [CancelBlockReception] can be used to cancel a running receive operation. If a receive operation is not in progress (the method was not called or a previous operation has already finished) all received characters will be lost without any notification. To prevent the loss of data call the method immediately after the last receive operation has finished (e.g. from the [OnBlockReceived] event). This method finishes immediately after calling it - it doesn't wait the end of data reception. Use event [OnBlockReceived] to check the end of data reception. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LDD_TError} {\b ASerialLdd2_SendBlock} ({\b LDD_TDeviceData} *DeviceDataPtr, {\b LDD_TData} *BufferPtr, uint16_t Size)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sends a block of characters. The method returns ERR_BUSY when the previous block transmission is not completed. Method [CancelBlockTransmission] can be used to cancel a transmit operation. This method is available only if the transmitter property is enabled. This method finishes immediately after calling it - it doesn't wait the end of data transmission. Use event [OnBlockSent] to check the end of data transmission. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b PE_ISR} (ASerialLdd2_Interrupt){\bkmkstart AAAAAAAAAE}
{\bkmkend AAAAAAAAAE}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LDD_TError} {\b ASerialLdd2_GetError} ({\b LDD_TDeviceData} *DeviceDataPtr, {\b LDD_SERIAL_TError} *ErrorPtr)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This method returns a set of asserted flags. The flags are accumulated in the set. After calling this method the set is returned and cleared. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macro Definition Documentation\par
\pard\plain 
{\xe \v ASerialLdd2_GetError_METHOD_ENABLED\:ASerialLdd2 module documentation}
{\xe \v ASerialLdd2 module documentation\:ASerialLdd2_GetError_METHOD_ENABLED}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ASerialLdd2_GetError_METHOD_ENABLED}}
\par
{\bkmkstart AAAAAAAAUN}
{\bkmkend AAAAAAAAUN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
GetError method of the component ASerialLdd2 is enabled (generated) \par
}}
{\xe \v ASerialLdd2_Init_METHOD_ENABLED\:ASerialLdd2 module documentation}
{\xe \v ASerialLdd2 module documentation\:ASerialLdd2_Init_METHOD_ENABLED}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ASerialLdd2_Init_METHOD_ENABLED}}
\par
{\bkmkstart AAAAAAAAUO}
{\bkmkend AAAAAAAAUO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Init method of the component ASerialLdd2 is enabled (generated) \par
}}
{\xe \v ASerialLdd2_OnBlockReceived_EVENT_ENABLED\:ASerialLdd2 module documentation}
{\xe \v ASerialLdd2 module documentation\:ASerialLdd2_OnBlockReceived_EVENT_ENABLED}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ASerialLdd2_OnBlockReceived_EVENT_ENABLED}}
\par
{\bkmkstart AAAAAAAAUP}
{\bkmkend AAAAAAAAUP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
OnBlockReceived event of the component ASerialLdd2 is enabled (generated) \par
}}
{\xe \v ASerialLdd2_OnBlockSent_EVENT_ENABLED\:ASerialLdd2 module documentation}
{\xe \v ASerialLdd2 module documentation\:ASerialLdd2_OnBlockSent_EVENT_ENABLED}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ASerialLdd2_OnBlockSent_EVENT_ENABLED}}
\par
{\bkmkstart AAAAAAAAUQ}
{\bkmkend AAAAAAAAUQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
OnBlockSent event of the component ASerialLdd2 is enabled (generated) \par
}}
{\xe \v ASerialLdd2_OnBreak_EVENT_ENABLED\:ASerialLdd2 module documentation}
{\xe \v ASerialLdd2 module documentation\:ASerialLdd2_OnBreak_EVENT_ENABLED}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ASerialLdd2_OnBreak_EVENT_ENABLED}}
\par
{\bkmkstart AAAAAAAAUR}
{\bkmkend AAAAAAAAUR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
OnBreak event of the component ASerialLdd2 is enabled (generated) \par
}}
{\xe \v ASerialLdd2_OnError_EVENT_ENABLED\:ASerialLdd2 module documentation}
{\xe \v ASerialLdd2 module documentation\:ASerialLdd2_OnError_EVENT_ENABLED}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ASerialLdd2_OnError_EVENT_ENABLED}}
\par
{\bkmkstart AAAAAAAAUS}
{\bkmkend AAAAAAAAUS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
OnError event of the component ASerialLdd2 is enabled (generated) \par
}}
{\xe \v ASerialLdd2_PRPH_BASE_ADDRESS\:ASerialLdd2 module documentation}
{\xe \v ASerialLdd2 module documentation\:ASerialLdd2_PRPH_BASE_ADDRESS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ASerialLdd2_PRPH_BASE_ADDRESS\~ 0x4006C000U}}
\par
{\bkmkstart AAAAAAAAUT}
{\bkmkend AAAAAAAAUT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Peripheral base address of a device allocated by the component. This constant can be used directly in PDD macros. \par
}}
{\xe \v ASerialLdd2_ReceiveBlock_METHOD_ENABLED\:ASerialLdd2 module documentation}
{\xe \v ASerialLdd2 module documentation\:ASerialLdd2_ReceiveBlock_METHOD_ENABLED}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ASerialLdd2_ReceiveBlock_METHOD_ENABLED}}
\par
{\bkmkstart AAAAAAAAUU}
{\bkmkend AAAAAAAAUU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
ReceiveBlock method of the component ASerialLdd2 is enabled (generated) \par
}}
{\xe \v ASerialLdd2_SendBlock_METHOD_ENABLED\:ASerialLdd2 module documentation}
{\xe \v ASerialLdd2 module documentation\:ASerialLdd2_SendBlock_METHOD_ENABLED}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ASerialLdd2_SendBlock_METHOD_ENABLED}}
\par
{\bkmkstart AAAAAAAAUV}
{\bkmkend AAAAAAAAUV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
SendBlock method of the component ASerialLdd2 is enabled (generated) \par
}}
{\xe \v AVAILABLE_EVENTS_MASK\:ASerialLdd2 module documentation}
{\xe \v ASerialLdd2 module documentation\:AVAILABLE_EVENTS_MASK}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define AVAILABLE_EVENTS_MASK\~ ({\b LDD_SERIAL_ON_BLOCK_RECEIVED} | {\b LDD_SERIAL_ON_BLOCK_SENT} | {\b LDD_SERIAL_ON_BREAK} | {\b LDD_SERIAL_ON_ERROR})}}
\par
{\bkmkstart AAAAAAAAUW}
{\bkmkend AAAAAAAAUW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The mask of available events used to enable/disable events during runtime. \par
}}
{\xe \v BREAK_DETECTED\:ASerialLdd2 module documentation}
{\xe \v ASerialLdd2 module documentation\:BREAK_DETECTED}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define BREAK_DETECTED\~ 0x02U}}
\par
{\bkmkstart AAAAAAAAUX}
{\bkmkend AAAAAAAAUX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Break detected \par
}}
{\xe \v ENABLE_TX_COMPLETE\:ASerialLdd2 module documentation}
{\xe \v ASerialLdd2 module documentation\:ENABLE_TX_COMPLETE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ENABLE_TX_COMPLETE\~ 0x10U}}
\par
{\bkmkstart AAAAAAAAUY}
{\bkmkend AAAAAAAAUY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Enable/Disable of TX complete detection. Used in the polling mode only \par
}}
{\xe \v ENABLED_TX_INT\:ASerialLdd2 module documentation}
{\xe \v ASerialLdd2 module documentation\:ENABLED_TX_INT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ENABLED_TX_INT\~ 0x01U}}
\par
{\bkmkstart AAAAAAAAUZ}
{\bkmkend AAAAAAAAUZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
TX interrupt enabled \par
}}
{\xe \v TX_COMPLETED\:ASerialLdd2 module documentation}
{\xe \v ASerialLdd2 module documentation\:TX_COMPLETED}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define TX_COMPLETED\~ 0x04U}}
\par
{\bkmkstart AAAAAAAAVA}
{\bkmkend AAAAAAAAVA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Transmission completed \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Typedef Documentation\par
\pard\plain 
{\xe \v ASerialLdd2_TDeviceDataPtr\:ASerialLdd2 module documentation}
{\xe \v ASerialLdd2 module documentation\:ASerialLdd2_TDeviceDataPtr}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef {\b ASerialLdd2_TDeviceData}* {\b ASerialLdd2_TDeviceDataPtr}}}
\par
{\bkmkstart AAAAAAAAVB}
{\bkmkend AAAAAAAAVB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Pointer to the device data structure. \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v ASerialLdd2_GetError\:ASerialLdd2 module documentation}
{\xe \v ASerialLdd2 module documentation\:ASerialLdd2_GetError}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LDD_TError} ASerialLdd2_GetError ({\b LDD_TDeviceData} * {\i DeviceDataPtr}, {\b LDD_SERIAL_TError} * {\i ErrorPtr})}}
\par
{\bkmkstart AAAAAAAAVC}
{\bkmkend AAAAAAAAVC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This method returns a set of asserted flags. The flags are accumulated in the set. After calling this method the set is returned and cleared. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i DeviceDataPtr} \cell }{- Device data structure pointer returned by [Init] method. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i ErrorPtr} \cell }{- A pointer to the returned set of error flags: LDD_SERIAL_RX_OVERRUN - Receiver overrun. LDD_SERIAL_PARITY_ERROR - Parity error (only if HW supports parity feature). LDD_SERIAL_FRAMING_ERROR - Framing error. LDD_SERIAL_NOISE_ERROR - Noise error. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {
\par
\pard\plain \s82\fi-360\li1080\widctlpar\jclisttab\tx1080{\*\pn \pnlvlbody\ilvl0\ls3\pnrnot0\pndec }\ls3\adjustright \fs20\cgrid 
Error code (if GetError did not succeed), possible codes: ERR_OK - OK ERR_SPEED - This device does not work in the active clock configuration ERR_DISABLED - Component is disabled \par}
}}}
{\xe \v ASerialLdd2_Init\:ASerialLdd2 module documentation}
{\xe \v ASerialLdd2 module documentation\:ASerialLdd2_Init}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LDD_TDeviceData} * ASerialLdd2_Init ({\b LDD_TUserData} * {\i UserDataPtr})}}
\par
{\bkmkstart AAAAAAAAVD}
{\bkmkend AAAAAAAAVD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Initializes the device. Allocates memory for the device data structure, allocates interrupt vectors and sets interrupt priority, sets pin routing, sets timing, etc. If the "Enable
    in init. code" is set to "yes" value then the device is also enabled(see the description of the Enable() method). In this case the Enable() method is not necessary and needn't to be generated. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i UserDataPtr} \cell }{- Pointer to the user or RTOS specific data. This pointer will be passed as an event or callback parameter. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {
\par
\pard\plain \s82\fi-360\li1080\widctlpar\jclisttab\tx1080{\*\pn \pnlvlbody\ilvl0\ls3\pnrnot0\pndec }\ls3\adjustright \fs20\cgrid 
Device data structure pointer. \par}
}}}
{\xe \v ASerialLdd2_ReceiveBlock\:ASerialLdd2 module documentation}
{\xe \v ASerialLdd2 module documentation\:ASerialLdd2_ReceiveBlock}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LDD_TError} ASerialLdd2_ReceiveBlock ({\b LDD_TDeviceData} * {\i DeviceDataPtr}, {\b LDD_TData} * {\i BufferPtr}, uint16_t {\i Size})}}
\par
{\bkmkstart AAAAAAAAVE}
{\bkmkend AAAAAAAAVE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Specifies the number of data to receive. The method returns ERR_BUSY until the specified number of characters is received. Method [CancelBlockReception] can be used to cancel a running receive operation. If a receive operation is not in progress (the method was not called or a previous operation has already finished) all received characters will be lost without any notification. To prevent the loss of data call the method immediately after the last receive operation has finished (e.g. from the [OnBlockReceived] event). This method finishes immediately after calling it - it doesn't wait the end of data reception. Use event [OnBlockReceived] to check the end of data reception. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i DeviceDataPtr} \cell }{- Device data structure pointer returned by [Init] method. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i BufferPtr} \cell }{- Pointer to a buffer where received characters will be stored. In case of 8bit character width each character in buffer occupies 1 byte. In case of 9 and more bit long character width each character in buffer occupies 2 bytes. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i Size} \cell }{- Number of characters to receive \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {
\par
\pard\plain \s82\fi-360\li1080\widctlpar\jclisttab\tx1080{\*\pn \pnlvlbody\ilvl0\ls3\pnrnot0\pndec }\ls3\adjustright \fs20\cgrid 
Error code, possible codes: ERR_OK - OK ERR_SPEED - The component does not work in the active clock configuration. ERR_PARAM_SIZE - Parameter Size is out of expected range. ERR_DISABLED - The component or device is disabled. ERR_BUSY - The previous receive request is pending. \par}
}}}
{\xe \v ASerialLdd2_SendBlock\:ASerialLdd2 module documentation}
{\xe \v ASerialLdd2 module documentation\:ASerialLdd2_SendBlock}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LDD_TError} ASerialLdd2_SendBlock ({\b LDD_TDeviceData} * {\i DeviceDataPtr}, {\b LDD_TData} * {\i BufferPtr}, uint16_t {\i Size})}}
\par
{\bkmkstart AAAAAAAAVF}
{\bkmkend AAAAAAAAVF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sends a block of characters. The method returns ERR_BUSY when the previous block transmission is not completed. Method [CancelBlockTransmission] can be used to cancel a transmit operation. This method is available only if the transmitter property is enabled. This method finishes immediately after calling it - it doesn't wait the end of data transmission. Use event [OnBlockSent] to check the end of data transmission. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i DeviceDataPtr} \cell }{- Device data structure pointer returned by [Init] method. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i BufferPtr} \cell }{- Pointer to a buffer from where data will be sent. In case of 8bit character width each character in buffer occupies 1 byte. In case of 9 and more bit long character width each character in buffer occupies 2 bytes. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i Size} \cell }{- Number of characters in the buffer. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {
\par
\pard\plain \s82\fi-360\li1080\widctlpar\jclisttab\tx1080{\*\pn \pnlvlbody\ilvl0\ls3\pnrnot0\pndec }\ls3\adjustright \fs20\cgrid 
Error code, possible codes: ERR_OK - OK ERR_SPEED - The component does not work in the active clock configuration. ERR_PARAM_SIZE - Parameter Size is out of expected range. ERR_DISABLED - The component or device is disabled. ERR_BUSY - The previous transmit request is pending. \par}
}}}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
BitIoLdd7 module documentation\par \pard\plain 
{\tc\tcl2 \v BitIoLdd7 module documentation}
{\xe \v BitIoLdd7 module documentation}
{\bkmkstart AAAAAAAAVG}
{\bkmkend AAAAAAAAVG}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Structures\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b BitIoLdd7_TDeviceData}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macros\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b BitIoLdd7_PRPH_BASE_ADDRESS}\~ 0x400FF100U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b BitIoLdd7_DeviceData}\~ (({\b LDD_TDeviceData} *){\b PE_LDD_GetDeviceStructure}(PE_LDD_COMPONENT_BitIoLdd7_ID))\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b BitIoLdd7_Init_METHOD_ENABLED}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b BitIoLdd7_GetVal_METHOD_ENABLED}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b BitIoLdd7_PutVal_METHOD_ENABLED}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b BitIoLdd7_ClrVal_METHOD_ENABLED}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b BitIoLdd7_SetVal_METHOD_ENABLED}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b BitIoLdd7_NegVal_METHOD_ENABLED}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b BitIoLdd7_MODULE_BASE_ADDRESS}\~ FPTE_BASE_PTR\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b BitIoLdd7_PORTCONTROL_BASE_ADDRESS}\~ PORTE_BASE_PTR\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b BitIoLdd7_PORT_MASK}\~ 0x04U\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Typedefs\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

typedef {\b BitIoLdd7_TDeviceData} * {\b BitIoLdd7_TDeviceDataPtr}{\bkmkstart AAAAAAAAAH}
{\bkmkend AAAAAAAAAH}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LDD_TDeviceData} * {\b BitIoLdd7_Init} ({\b LDD_TUserData} *UserDataPtr)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Initializes the device. Allocates memory for the device data structure, allocates interrupt vectors and sets interrupt priority, sets pin routing, sets timing, etc. If the "Enable
    in init. code" is set to "yes" value then the device is also enabled(see the description of the Enable() method). In this case the Enable() method is not necessary and needn't to be generated. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b BitIoLdd7_GetVal} ({\b LDD_TDeviceData} *DeviceDataPtr)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Returns the input/output value. If the direction is [input] then the input value of the pin is read and returned. If the direction is [output] then the last written value is read and returned (see <Safe mode>=""> property for limitations). This method cannot be disabled if direction is [input]. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b BitIoLdd7_PutVal} ({\b LDD_TDeviceData} *DeviceDataPtr, bool Val)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The specified output value is set. If the direction is {\b  input} , the component saves the value to a memory or a register and this value will be written to the pin after switching to the output mode (using {\f2 SetDir(TRUE)} ; see {\f2 Safe mode} property for limitations). If the direction is {\b output} , it writes the value to the pin. (Method is available only if the direction = <u>{\f2 output} </u> or <u>{\f2  input/output} </u>). }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b BitIoLdd7_ClrVal} ({\b LDD_TDeviceData} *DeviceDataPtr)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Clears (set to zero) the output value. It is equivalent to the [PutVal(FALSE)]. This method is available only if the direction = _[output]_ or _[input/output]_. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b BitIoLdd7_SetVal} ({\b LDD_TDeviceData} *DeviceDataPtr)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets (to one) the output value. It is equivalent to the [PutVal(TRUE)]. This method is available only if the direction = _[output]_ or _[input/output]_. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b BitIoLdd7_NegVal} ({\b LDD_TDeviceData} *DeviceDataPtr)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Negates (inverts) the output value. It is equivalent to the [PutVal(!GetVal())]. This method is available only if the direction = _[output]_ or _[input/output]_. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macro Definition Documentation\par
\pard\plain 
{\xe \v BitIoLdd7_ClrVal_METHOD_ENABLED\:BitIoLdd7 module documentation}
{\xe \v BitIoLdd7 module documentation\:BitIoLdd7_ClrVal_METHOD_ENABLED}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define BitIoLdd7_ClrVal_METHOD_ENABLED}}
\par
{\bkmkstart AAAAAAAAVH}
{\bkmkend AAAAAAAAVH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
ClrVal method of the component BitIoLdd7 is enabled (generated) \par
}}
{\xe \v BitIoLdd7_DeviceData\:BitIoLdd7 module documentation}
{\xe \v BitIoLdd7 module documentation\:BitIoLdd7_DeviceData}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define BitIoLdd7_DeviceData\~ (({\b LDD_TDeviceData} *){\b PE_LDD_GetDeviceStructure}(PE_LDD_COMPONENT_BitIoLdd7_ID))}}
\par
{\bkmkstart AAAAAAAAVI}
{\bkmkend AAAAAAAAVI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Device data structure pointer used when auto initialization property is enabled. This constant can be passed as a first parameter to all component's methods. \par
}}
{\xe \v BitIoLdd7_GetVal_METHOD_ENABLED\:BitIoLdd7 module documentation}
{\xe \v BitIoLdd7 module documentation\:BitIoLdd7_GetVal_METHOD_ENABLED}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define BitIoLdd7_GetVal_METHOD_ENABLED}}
\par
{\bkmkstart AAAAAAAAVJ}
{\bkmkend AAAAAAAAVJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
GetVal method of the component BitIoLdd7 is enabled (generated) \par
}}
{\xe \v BitIoLdd7_Init_METHOD_ENABLED\:BitIoLdd7 module documentation}
{\xe \v BitIoLdd7 module documentation\:BitIoLdd7_Init_METHOD_ENABLED}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define BitIoLdd7_Init_METHOD_ENABLED}}
\par
{\bkmkstart AAAAAAAAVK}
{\bkmkend AAAAAAAAVK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Init method of the component BitIoLdd7 is enabled (generated) \par
}}
{\xe \v BitIoLdd7_MODULE_BASE_ADDRESS\:BitIoLdd7 module documentation}
{\xe \v BitIoLdd7 module documentation\:BitIoLdd7_MODULE_BASE_ADDRESS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define BitIoLdd7_MODULE_BASE_ADDRESS\~ FPTE_BASE_PTR}}
\par
{\bkmkstart AAAAAAAAVL}
{\bkmkend AAAAAAAAVL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Name of macro used as the base address \par
}}
{\xe \v BitIoLdd7_NegVal_METHOD_ENABLED\:BitIoLdd7 module documentation}
{\xe \v BitIoLdd7 module documentation\:BitIoLdd7_NegVal_METHOD_ENABLED}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define BitIoLdd7_NegVal_METHOD_ENABLED}}
\par
{\bkmkstart AAAAAAAAVM}
{\bkmkend AAAAAAAAVM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
NegVal method of the component BitIoLdd7 is enabled (generated) \par
}}
{\xe \v BitIoLdd7_PORT_MASK\:BitIoLdd7 module documentation}
{\xe \v BitIoLdd7 module documentation\:BitIoLdd7_PORT_MASK}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define BitIoLdd7_PORT_MASK\~ 0x04U}}
\par
{\bkmkstart AAAAAAAAVN}
{\bkmkend AAAAAAAAVN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Mask of the allocated pin from the port \par
}}
{\xe \v BitIoLdd7_PORTCONTROL_BASE_ADDRESS\:BitIoLdd7 module documentation}
{\xe \v BitIoLdd7 module documentation\:BitIoLdd7_PORTCONTROL_BASE_ADDRESS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define BitIoLdd7_PORTCONTROL_BASE_ADDRESS\~ PORTE_BASE_PTR}}
\par
{\bkmkstart AAAAAAAAVO}
{\bkmkend AAAAAAAAVO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Name of macro used as the base address \par
}}
{\xe \v BitIoLdd7_PRPH_BASE_ADDRESS\:BitIoLdd7 module documentation}
{\xe \v BitIoLdd7 module documentation\:BitIoLdd7_PRPH_BASE_ADDRESS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define BitIoLdd7_PRPH_BASE_ADDRESS\~ 0x400FF100U}}
\par
{\bkmkstart AAAAAAAAVP}
{\bkmkend AAAAAAAAVP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Peripheral base address of a device allocated by the component. This constant can be used directly in PDD macros. \par
}}
{\xe \v BitIoLdd7_PutVal_METHOD_ENABLED\:BitIoLdd7 module documentation}
{\xe \v BitIoLdd7 module documentation\:BitIoLdd7_PutVal_METHOD_ENABLED}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define BitIoLdd7_PutVal_METHOD_ENABLED}}
\par
{\bkmkstart AAAAAAAAVQ}
{\bkmkend AAAAAAAAVQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
PutVal method of the component BitIoLdd7 is enabled (generated) \par
}}
{\xe \v BitIoLdd7_SetVal_METHOD_ENABLED\:BitIoLdd7 module documentation}
{\xe \v BitIoLdd7 module documentation\:BitIoLdd7_SetVal_METHOD_ENABLED}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define BitIoLdd7_SetVal_METHOD_ENABLED}}
\par
{\bkmkstart AAAAAAAAVR}
{\bkmkend AAAAAAAAVR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
SetVal method of the component BitIoLdd7 is enabled (generated) \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v BitIoLdd7_ClrVal\:BitIoLdd7 module documentation}
{\xe \v BitIoLdd7 module documentation\:BitIoLdd7_ClrVal}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void BitIoLdd7_ClrVal ({\b LDD_TDeviceData} * {\i DeviceDataPtr})}}
\par
{\bkmkstart AAAAAAAAVS}
{\bkmkend AAAAAAAAVS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Clears (set to zero) the output value. It is equivalent to the [PutVal(FALSE)]. This method is available only if the direction = _[output]_ or _[input/output]_. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i DeviceDataPtr} \cell }{- Pointer to device data structure returned by <Init> method. \cell }
{\row }
}
}}
{\xe \v BitIoLdd7_GetVal\:BitIoLdd7 module documentation}
{\xe \v BitIoLdd7 module documentation\:BitIoLdd7_GetVal}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool BitIoLdd7_GetVal ({\b LDD_TDeviceData} * {\i DeviceDataPtr})}}
\par
{\bkmkstart AAAAAAAAVT}
{\bkmkend AAAAAAAAVT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Returns the input/output value. If the direction is [input] then the input value of the pin is read and returned. If the direction is [output] then the last written value is read and returned (see <Safe mode>=""> property for limitations). This method cannot be disabled if direction is [input]. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i DeviceDataPtr} \cell }{- Device data structure pointer returned by <Init> method. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {
\par
\pard\plain \s82\fi-360\li1080\widctlpar\jclisttab\tx1080{\*\pn \pnlvlbody\ilvl0\ls3\pnrnot0\pndec }\ls3\adjustright \fs20\cgrid 
Input or output value. Possible values: <false> - logical "0" (Low level) <true> - logical "1" (High level) \par}
}}}
{\xe \v BitIoLdd7_Init\:BitIoLdd7 module documentation}
{\xe \v BitIoLdd7 module documentation\:BitIoLdd7_Init}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LDD_TDeviceData} * BitIoLdd7_Init ({\b LDD_TUserData} * {\i UserDataPtr})}}
\par
{\bkmkstart AAAAAAAAVU}
{\bkmkend AAAAAAAAVU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Initializes the device. Allocates memory for the device data structure, allocates interrupt vectors and sets interrupt priority, sets pin routing, sets timing, etc. If the "Enable
    in init. code" is set to "yes" value then the device is also enabled(see the description of the Enable() method). In this case the Enable() method is not necessary and needn't to be generated. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i UserDataPtr} \cell }{- Pointer to the user or RTOS specific data. This pointer will be passed as an event or callback parameter. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {
\par
\pard\plain \s82\fi-360\li1080\widctlpar\jclisttab\tx1080{\*\pn \pnlvlbody\ilvl0\ls3\pnrnot0\pndec }\ls3\adjustright \fs20\cgrid 
Pointer to the dynamically allocated private structure or NULL if there was an error. \par}
}}}
{\xe \v BitIoLdd7_NegVal\:BitIoLdd7 module documentation}
{\xe \v BitIoLdd7 module documentation\:BitIoLdd7_NegVal}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void BitIoLdd7_NegVal ({\b LDD_TDeviceData} * {\i DeviceDataPtr})}}
\par
{\bkmkstart AAAAAAAAVV}
{\bkmkend AAAAAAAAVV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Negates (inverts) the output value. It is equivalent to the [PutVal(!GetVal())]. This method is available only if the direction = _[output]_ or _[input/output]_. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i DeviceDataPtr} \cell }{- Pointer to device data structure returned by <Init> method. \cell }
{\row }
}
}}
{\xe \v BitIoLdd7_PutVal\:BitIoLdd7 module documentation}
{\xe \v BitIoLdd7 module documentation\:BitIoLdd7_PutVal}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void BitIoLdd7_PutVal ({\b LDD_TDeviceData} * {\i DeviceDataPtr}, bool {\i Val})}}
\par
{\bkmkstart AAAAAAAAVW}
{\bkmkend AAAAAAAAVW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The specified output value is set. If the direction is {\b  input} , the component saves the value to a memory or a register and this value will be written to the pin after switching to the output mode (using {\f2 SetDir(TRUE)} ; see {\f2 Safe mode} property for limitations). If the direction is {\b output} , it writes the value to the pin. (Method is available only if the direction = <u>{\f2 output} </u> or <u>{\f2  input/output} </u>). }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i DeviceDataPtr} \cell }{- Device data structure pointer returned by <Init> method. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i Val} \cell }{- Output value. Possible values: <false> - logical "0" (Low level) <true> - logical "1" (High level) \cell }
{\row }
}
}}
{\xe \v BitIoLdd7_SetVal\:BitIoLdd7 module documentation}
{\xe \v BitIoLdd7 module documentation\:BitIoLdd7_SetVal}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void BitIoLdd7_SetVal ({\b LDD_TDeviceData} * {\i DeviceDataPtr})}}
\par
{\bkmkstart AAAAAAAAVX}
{\bkmkend AAAAAAAAVX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets (to one) the output value. It is equivalent to the [PutVal(TRUE)]. This method is available only if the direction = _[output]_ or _[input/output]_. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i DeviceDataPtr} \cell }{- Pointer to device data structure returned by <Init> method. \cell }
{\row }
}
}}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
BitIoLdd8 module documentation\par \pard\plain 
{\tc\tcl2 \v BitIoLdd8 module documentation}
{\xe \v BitIoLdd8 module documentation}
{\bkmkstart AAAAAAAAVY}
{\bkmkend AAAAAAAAVY}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Structures\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b BitIoLdd8_TDeviceData}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macros\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b BitIoLdd8_PRPH_BASE_ADDRESS}\~ 0x400FF040U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b BitIoLdd8_DeviceData}\~ (({\b LDD_TDeviceData} *){\b PE_LDD_GetDeviceStructure}(PE_LDD_COMPONENT_BitIoLdd8_ID))\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b BitIoLdd8_Init_METHOD_ENABLED}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b BitIoLdd8_GetVal_METHOD_ENABLED}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b BitIoLdd8_PutVal_METHOD_ENABLED}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b BitIoLdd8_ClrVal_METHOD_ENABLED}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b BitIoLdd8_SetVal_METHOD_ENABLED}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b BitIoLdd8_NegVal_METHOD_ENABLED}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b BitIoLdd8_MODULE_BASE_ADDRESS}\~ FPTB_BASE_PTR\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b BitIoLdd8_PORTCONTROL_BASE_ADDRESS}\~ PORTB_BASE_PTR\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b BitIoLdd8_PORT_MASK}\~ 0x0200U\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Typedefs\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

typedef {\b BitIoLdd8_TDeviceData} * {\b BitIoLdd8_TDeviceDataPtr}{\bkmkstart AAAAAAAAAK}
{\bkmkend AAAAAAAAAK}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LDD_TDeviceData} * {\b BitIoLdd8_Init} ({\b LDD_TUserData} *UserDataPtr)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Initializes the device. Allocates memory for the device data structure, allocates interrupt vectors and sets interrupt priority, sets pin routing, sets timing, etc. If the "Enable
    in init. code" is set to "yes" value then the device is also enabled(see the description of the Enable() method). In this case the Enable() method is not necessary and needn't to be generated. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b BitIoLdd8_GetVal} ({\b LDD_TDeviceData} *DeviceDataPtr)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Returns the input/output value. If the direction is [input] then the input value of the pin is read and returned. If the direction is [output] then the last written value is read and returned (see <Safe mode>=""> property for limitations). This method cannot be disabled if direction is [input]. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b BitIoLdd8_PutVal} ({\b LDD_TDeviceData} *DeviceDataPtr, bool Val)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The specified output value is set. If the direction is {\b  input} , the component saves the value to a memory or a register and this value will be written to the pin after switching to the output mode (using {\f2 SetDir(TRUE)} ; see {\f2 Safe mode} property for limitations). If the direction is {\b output} , it writes the value to the pin. (Method is available only if the direction = <u>{\f2 output} </u> or <u>{\f2  input/output} </u>). }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b BitIoLdd8_ClrVal} ({\b LDD_TDeviceData} *DeviceDataPtr)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Clears (set to zero) the output value. It is equivalent to the [PutVal(FALSE)]. This method is available only if the direction = _[output]_ or _[input/output]_. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b BitIoLdd8_SetVal} ({\b LDD_TDeviceData} *DeviceDataPtr)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets (to one) the output value. It is equivalent to the [PutVal(TRUE)]. This method is available only if the direction = _[output]_ or _[input/output]_. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b BitIoLdd8_NegVal} ({\b LDD_TDeviceData} *DeviceDataPtr)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Negates (inverts) the output value. It is equivalent to the [PutVal(!GetVal())]. This method is available only if the direction = _[output]_ or _[input/output]_. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macro Definition Documentation\par
\pard\plain 
{\xe \v BitIoLdd8_ClrVal_METHOD_ENABLED\:BitIoLdd8 module documentation}
{\xe \v BitIoLdd8 module documentation\:BitIoLdd8_ClrVal_METHOD_ENABLED}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define BitIoLdd8_ClrVal_METHOD_ENABLED}}
\par
{\bkmkstart AAAAAAAAVZ}
{\bkmkend AAAAAAAAVZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
ClrVal method of the component BitIoLdd8 is enabled (generated) \par
}}
{\xe \v BitIoLdd8_DeviceData\:BitIoLdd8 module documentation}
{\xe \v BitIoLdd8 module documentation\:BitIoLdd8_DeviceData}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define BitIoLdd8_DeviceData\~ (({\b LDD_TDeviceData} *){\b PE_LDD_GetDeviceStructure}(PE_LDD_COMPONENT_BitIoLdd8_ID))}}
\par
{\bkmkstart AAAAAAAAWA}
{\bkmkend AAAAAAAAWA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Device data structure pointer used when auto initialization property is enabled. This constant can be passed as a first parameter to all component's methods. \par
}}
{\xe \v BitIoLdd8_GetVal_METHOD_ENABLED\:BitIoLdd8 module documentation}
{\xe \v BitIoLdd8 module documentation\:BitIoLdd8_GetVal_METHOD_ENABLED}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define BitIoLdd8_GetVal_METHOD_ENABLED}}
\par
{\bkmkstart AAAAAAAAWB}
{\bkmkend AAAAAAAAWB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
GetVal method of the component BitIoLdd8 is enabled (generated) \par
}}
{\xe \v BitIoLdd8_Init_METHOD_ENABLED\:BitIoLdd8 module documentation}
{\xe \v BitIoLdd8 module documentation\:BitIoLdd8_Init_METHOD_ENABLED}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define BitIoLdd8_Init_METHOD_ENABLED}}
\par
{\bkmkstart AAAAAAAAWC}
{\bkmkend AAAAAAAAWC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Init method of the component BitIoLdd8 is enabled (generated) \par
}}
{\xe \v BitIoLdd8_MODULE_BASE_ADDRESS\:BitIoLdd8 module documentation}
{\xe \v BitIoLdd8 module documentation\:BitIoLdd8_MODULE_BASE_ADDRESS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define BitIoLdd8_MODULE_BASE_ADDRESS\~ FPTB_BASE_PTR}}
\par
{\bkmkstart AAAAAAAAWD}
{\bkmkend AAAAAAAAWD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Name of macro used as the base address \par
}}
{\xe \v BitIoLdd8_NegVal_METHOD_ENABLED\:BitIoLdd8 module documentation}
{\xe \v BitIoLdd8 module documentation\:BitIoLdd8_NegVal_METHOD_ENABLED}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define BitIoLdd8_NegVal_METHOD_ENABLED}}
\par
{\bkmkstart AAAAAAAAWE}
{\bkmkend AAAAAAAAWE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
NegVal method of the component BitIoLdd8 is enabled (generated) \par
}}
{\xe \v BitIoLdd8_PORT_MASK\:BitIoLdd8 module documentation}
{\xe \v BitIoLdd8 module documentation\:BitIoLdd8_PORT_MASK}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define BitIoLdd8_PORT_MASK\~ 0x0200U}}
\par
{\bkmkstart AAAAAAAAWF}
{\bkmkend AAAAAAAAWF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Mask of the allocated pin from the port \par
}}
{\xe \v BitIoLdd8_PORTCONTROL_BASE_ADDRESS\:BitIoLdd8 module documentation}
{\xe \v BitIoLdd8 module documentation\:BitIoLdd8_PORTCONTROL_BASE_ADDRESS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define BitIoLdd8_PORTCONTROL_BASE_ADDRESS\~ PORTB_BASE_PTR}}
\par
{\bkmkstart AAAAAAAAWG}
{\bkmkend AAAAAAAAWG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Name of macro used as the base address \par
}}
{\xe \v BitIoLdd8_PRPH_BASE_ADDRESS\:BitIoLdd8 module documentation}
{\xe \v BitIoLdd8 module documentation\:BitIoLdd8_PRPH_BASE_ADDRESS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define BitIoLdd8_PRPH_BASE_ADDRESS\~ 0x400FF040U}}
\par
{\bkmkstart AAAAAAAAWH}
{\bkmkend AAAAAAAAWH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Peripheral base address of a device allocated by the component. This constant can be used directly in PDD macros. \par
}}
{\xe \v BitIoLdd8_PutVal_METHOD_ENABLED\:BitIoLdd8 module documentation}
{\xe \v BitIoLdd8 module documentation\:BitIoLdd8_PutVal_METHOD_ENABLED}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define BitIoLdd8_PutVal_METHOD_ENABLED}}
\par
{\bkmkstart AAAAAAAAWI}
{\bkmkend AAAAAAAAWI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
PutVal method of the component BitIoLdd8 is enabled (generated) \par
}}
{\xe \v BitIoLdd8_SetVal_METHOD_ENABLED\:BitIoLdd8 module documentation}
{\xe \v BitIoLdd8 module documentation\:BitIoLdd8_SetVal_METHOD_ENABLED}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define BitIoLdd8_SetVal_METHOD_ENABLED}}
\par
{\bkmkstart AAAAAAAAWJ}
{\bkmkend AAAAAAAAWJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
SetVal method of the component BitIoLdd8 is enabled (generated) \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v BitIoLdd8_ClrVal\:BitIoLdd8 module documentation}
{\xe \v BitIoLdd8 module documentation\:BitIoLdd8_ClrVal}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void BitIoLdd8_ClrVal ({\b LDD_TDeviceData} * {\i DeviceDataPtr})}}
\par
{\bkmkstart AAAAAAAAWK}
{\bkmkend AAAAAAAAWK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Clears (set to zero) the output value. It is equivalent to the [PutVal(FALSE)]. This method is available only if the direction = _[output]_ or _[input/output]_. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i DeviceDataPtr} \cell }{- Pointer to device data structure returned by <Init> method. \cell }
{\row }
}
}}
{\xe \v BitIoLdd8_GetVal\:BitIoLdd8 module documentation}
{\xe \v BitIoLdd8 module documentation\:BitIoLdd8_GetVal}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool BitIoLdd8_GetVal ({\b LDD_TDeviceData} * {\i DeviceDataPtr})}}
\par
{\bkmkstart AAAAAAAAWL}
{\bkmkend AAAAAAAAWL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Returns the input/output value. If the direction is [input] then the input value of the pin is read and returned. If the direction is [output] then the last written value is read and returned (see <Safe mode>=""> property for limitations). This method cannot be disabled if direction is [input]. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i DeviceDataPtr} \cell }{- Device data structure pointer returned by <Init> method. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {
\par
\pard\plain \s82\fi-360\li1080\widctlpar\jclisttab\tx1080{\*\pn \pnlvlbody\ilvl0\ls3\pnrnot0\pndec }\ls3\adjustright \fs20\cgrid 
Input or output value. Possible values: <false> - logical "0" (Low level) <true> - logical "1" (High level) \par}
}}}
{\xe \v BitIoLdd8_Init\:BitIoLdd8 module documentation}
{\xe \v BitIoLdd8 module documentation\:BitIoLdd8_Init}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LDD_TDeviceData} * BitIoLdd8_Init ({\b LDD_TUserData} * {\i UserDataPtr})}}
\par
{\bkmkstart AAAAAAAAWM}
{\bkmkend AAAAAAAAWM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Initializes the device. Allocates memory for the device data structure, allocates interrupt vectors and sets interrupt priority, sets pin routing, sets timing, etc. If the "Enable
    in init. code" is set to "yes" value then the device is also enabled(see the description of the Enable() method). In this case the Enable() method is not necessary and needn't to be generated. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i UserDataPtr} \cell }{- Pointer to the user or RTOS specific data. This pointer will be passed as an event or callback parameter. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {
\par
\pard\plain \s82\fi-360\li1080\widctlpar\jclisttab\tx1080{\*\pn \pnlvlbody\ilvl0\ls3\pnrnot0\pndec }\ls3\adjustright \fs20\cgrid 
Pointer to the dynamically allocated private structure or NULL if there was an error. \par}
}}}
{\xe \v BitIoLdd8_NegVal\:BitIoLdd8 module documentation}
{\xe \v BitIoLdd8 module documentation\:BitIoLdd8_NegVal}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void BitIoLdd8_NegVal ({\b LDD_TDeviceData} * {\i DeviceDataPtr})}}
\par
{\bkmkstart AAAAAAAAWN}
{\bkmkend AAAAAAAAWN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Negates (inverts) the output value. It is equivalent to the [PutVal(!GetVal())]. This method is available only if the direction = _[output]_ or _[input/output]_. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i DeviceDataPtr} \cell }{- Pointer to device data structure returned by <Init> method. \cell }
{\row }
}
}}
{\xe \v BitIoLdd8_PutVal\:BitIoLdd8 module documentation}
{\xe \v BitIoLdd8 module documentation\:BitIoLdd8_PutVal}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void BitIoLdd8_PutVal ({\b LDD_TDeviceData} * {\i DeviceDataPtr}, bool {\i Val})}}
\par
{\bkmkstart AAAAAAAAWO}
{\bkmkend AAAAAAAAWO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The specified output value is set. If the direction is {\b  input} , the component saves the value to a memory or a register and this value will be written to the pin after switching to the output mode (using {\f2 SetDir(TRUE)} ; see {\f2 Safe mode} property for limitations). If the direction is {\b output} , it writes the value to the pin. (Method is available only if the direction = <u>{\f2 output} </u> or <u>{\f2  input/output} </u>). }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i DeviceDataPtr} \cell }{- Device data structure pointer returned by <Init> method. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i Val} \cell }{- Output value. Possible values: <false> - logical "0" (Low level) <true> - logical "1" (High level) \cell }
{\row }
}
}}
{\xe \v BitIoLdd8_SetVal\:BitIoLdd8 module documentation}
{\xe \v BitIoLdd8 module documentation\:BitIoLdd8_SetVal}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void BitIoLdd8_SetVal ({\b LDD_TDeviceData} * {\i DeviceDataPtr})}}
\par
{\bkmkstart AAAAAAAAWP}
{\bkmkend AAAAAAAAWP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets (to one) the output value. It is equivalent to the [PutVal(TRUE)]. This method is available only if the direction = _[output]_ or _[input/output]_. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i DeviceDataPtr} \cell }{- Pointer to device data structure returned by <Init> method. \cell }
{\row }
}
}}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
BitIoLdd9 module documentation\par \pard\plain 
{\tc\tcl2 \v BitIoLdd9 module documentation}
{\xe \v BitIoLdd9 module documentation}
{\bkmkstart AAAAAAAAWQ}
{\bkmkend AAAAAAAAWQ}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Structures\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b BitIoLdd9_TDeviceData}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macros\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b BitIoLdd9_PRPH_BASE_ADDRESS}\~ 0x400FF080U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b BitIoLdd9_DeviceData}\~ (({\b LDD_TDeviceData} *){\b PE_LDD_GetDeviceStructure}(PE_LDD_COMPONENT_BitIoLdd9_ID))\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b BitIoLdd9_Init_METHOD_ENABLED}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b BitIoLdd9_GetVal_METHOD_ENABLED}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b BitIoLdd9_MODULE_BASE_ADDRESS}\~ FPTC_BASE_PTR\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b BitIoLdd9_PORTCONTROL_BASE_ADDRESS}\~ PORTC_BASE_PTR\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b BitIoLdd9_PORT_MASK}\~ 0x00010000U\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Typedefs\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

typedef {\b BitIoLdd9_TDeviceData} * {\b BitIoLdd9_TDeviceDataPtr}{\bkmkstart AAAAAAAAAN}
{\bkmkend AAAAAAAAAN}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LDD_TDeviceData} * {\b BitIoLdd9_Init} ({\b LDD_TUserData} *UserDataPtr)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Initializes the device. Allocates memory for the device data structure, allocates interrupt vectors and sets interrupt priority, sets pin routing, sets timing, etc. If the "Enable
    in init. code" is set to "yes" value then the device is also enabled(see the description of the Enable() method). In this case the Enable() method is not necessary and needn't to be generated. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b BitIoLdd9_GetVal} ({\b LDD_TDeviceData} *DeviceDataPtr)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Returns the input/output value. If the direction is [input] then the input value of the pin is read and returned. If the direction is [output] then the last written value is read and returned (see <Safe mode>=""> property for limitations). This method cannot be disabled if direction is [input]. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macro Definition Documentation\par
\pard\plain 
{\xe \v BitIoLdd9_DeviceData\:BitIoLdd9 module documentation}
{\xe \v BitIoLdd9 module documentation\:BitIoLdd9_DeviceData}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define BitIoLdd9_DeviceData\~ (({\b LDD_TDeviceData} *){\b PE_LDD_GetDeviceStructure}(PE_LDD_COMPONENT_BitIoLdd9_ID))}}
\par
{\bkmkstart AAAAAAAAWR}
{\bkmkend AAAAAAAAWR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Device data structure pointer used when auto initialization property is enabled. This constant can be passed as a first parameter to all component's methods. \par
}}
{\xe \v BitIoLdd9_GetVal_METHOD_ENABLED\:BitIoLdd9 module documentation}
{\xe \v BitIoLdd9 module documentation\:BitIoLdd9_GetVal_METHOD_ENABLED}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define BitIoLdd9_GetVal_METHOD_ENABLED}}
\par
{\bkmkstart AAAAAAAAWS}
{\bkmkend AAAAAAAAWS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
GetVal method of the component BitIoLdd9 is enabled (generated) \par
}}
{\xe \v BitIoLdd9_Init_METHOD_ENABLED\:BitIoLdd9 module documentation}
{\xe \v BitIoLdd9 module documentation\:BitIoLdd9_Init_METHOD_ENABLED}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define BitIoLdd9_Init_METHOD_ENABLED}}
\par
{\bkmkstart AAAAAAAAWT}
{\bkmkend AAAAAAAAWT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Init method of the component BitIoLdd9 is enabled (generated) \par
}}
{\xe \v BitIoLdd9_MODULE_BASE_ADDRESS\:BitIoLdd9 module documentation}
{\xe \v BitIoLdd9 module documentation\:BitIoLdd9_MODULE_BASE_ADDRESS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define BitIoLdd9_MODULE_BASE_ADDRESS\~ FPTC_BASE_PTR}}
\par
{\bkmkstart AAAAAAAAWU}
{\bkmkend AAAAAAAAWU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Name of macro used as the base address \par
}}
{\xe \v BitIoLdd9_PORT_MASK\:BitIoLdd9 module documentation}
{\xe \v BitIoLdd9 module documentation\:BitIoLdd9_PORT_MASK}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define BitIoLdd9_PORT_MASK\~ 0x00010000U}}
\par
{\bkmkstart AAAAAAAAWV}
{\bkmkend AAAAAAAAWV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Mask of the allocated pin from the port \par
}}
{\xe \v BitIoLdd9_PORTCONTROL_BASE_ADDRESS\:BitIoLdd9 module documentation}
{\xe \v BitIoLdd9 module documentation\:BitIoLdd9_PORTCONTROL_BASE_ADDRESS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define BitIoLdd9_PORTCONTROL_BASE_ADDRESS\~ PORTC_BASE_PTR}}
\par
{\bkmkstart AAAAAAAAWW}
{\bkmkend AAAAAAAAWW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Name of macro used as the base address \par
}}
{\xe \v BitIoLdd9_PRPH_BASE_ADDRESS\:BitIoLdd9 module documentation}
{\xe \v BitIoLdd9 module documentation\:BitIoLdd9_PRPH_BASE_ADDRESS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define BitIoLdd9_PRPH_BASE_ADDRESS\~ 0x400FF080U}}
\par
{\bkmkstart AAAAAAAAWX}
{\bkmkend AAAAAAAAWX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Peripheral base address of a device allocated by the component. This constant can be used directly in PDD macros. \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v BitIoLdd9_GetVal\:BitIoLdd9 module documentation}
{\xe \v BitIoLdd9 module documentation\:BitIoLdd9_GetVal}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool BitIoLdd9_GetVal ({\b LDD_TDeviceData} * {\i DeviceDataPtr})}}
\par
{\bkmkstart AAAAAAAAWY}
{\bkmkend AAAAAAAAWY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Returns the input/output value. If the direction is [input] then the input value of the pin is read and returned. If the direction is [output] then the last written value is read and returned (see <Safe mode>=""> property for limitations). This method cannot be disabled if direction is [input]. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i DeviceDataPtr} \cell }{- Device data structure pointer returned by <Init> method. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {
\par
\pard\plain \s82\fi-360\li1080\widctlpar\jclisttab\tx1080{\*\pn \pnlvlbody\ilvl0\ls3\pnrnot0\pndec }\ls3\adjustright \fs20\cgrid 
Input or output value. Possible values: <false> - logical "0" (Low level) <true> - logical "1" (High level) \par}
}}}
{\xe \v BitIoLdd9_Init\:BitIoLdd9 module documentation}
{\xe \v BitIoLdd9 module documentation\:BitIoLdd9_Init}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LDD_TDeviceData} * BitIoLdd9_Init ({\b LDD_TUserData} * {\i UserDataPtr})}}
\par
{\bkmkstart AAAAAAAAWZ}
{\bkmkend AAAAAAAAWZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Initializes the device. Allocates memory for the device data structure, allocates interrupt vectors and sets interrupt priority, sets pin routing, sets timing, etc. If the "Enable
    in init. code" is set to "yes" value then the device is also enabled(see the description of the Enable() method). In this case the Enable() method is not necessary and needn't to be generated. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i UserDataPtr} \cell }{- Pointer to the user or RTOS specific data. This pointer will be passed as an event or callback parameter. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {
\par
\pard\plain \s82\fi-360\li1080\widctlpar\jclisttab\tx1080{\*\pn \pnlvlbody\ilvl0\ls3\pnrnot0\pndec }\ls3\adjustright \fs20\cgrid 
Pointer to the dynamically allocated private structure or NULL if there was an error. \par}
}}}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Buzzer module documentation\par \pard\plain 
{\tc\tcl2 \v Buzzer module documentation}
{\xe \v Buzzer module documentation}
{\bkmkstart AAAAAAAAXA}
{\bkmkend AAAAAAAAXA}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macros\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b Buzzer_GetVal}()\~ ({\b BitIoLdd8_GetVal}({\b BitIoLdd8_DeviceData})){\bkmkstart AAAAAAAAAR}
{\bkmkend AAAAAAAAAR}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b Buzzer_PutVal}(Val)\~ ({\b BitIoLdd8_PutVal}({\b BitIoLdd8_DeviceData}, (Val))){\bkmkstart AAAAAAAAAS}
{\bkmkend AAAAAAAAAS}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b Buzzer_ClrVal}()\~ ({\b BitIoLdd8_ClrVal}({\b BitIoLdd8_DeviceData})){\bkmkstart AAAAAAAAAT}
{\bkmkend AAAAAAAAAT}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b Buzzer_SetVal}()\~ ({\b BitIoLdd8_SetVal}({\b BitIoLdd8_DeviceData})){\bkmkstart AAAAAAAAAU}
{\bkmkend AAAAAAAAAU}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b Buzzer_NegVal}()\~ ({\b BitIoLdd8_NegVal}({\b BitIoLdd8_DeviceData})){\bkmkstart AAAAAAAAAV}
{\bkmkend AAAAAAAAAV}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CI2C1 module documentation\par \pard\plain 
{\tc\tcl2 \v CI2C1 module documentation}
{\xe \v CI2C1 module documentation}
{\bkmkstart AAAAAAAAXB}
{\bkmkend AAAAAAAAXB}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Structures\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b CI2C1_TDeviceData}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macros\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b MASTER_IN_PROGRES}\~ 0x01U  /* Communication is in progress (Master) */{\bkmkstart AAAAAAAAAX}
{\bkmkend AAAAAAAAAX}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b ADDR_COMPLETE}\~ 0x02U  /* 10-bit address transmission complete   */{\bkmkstart AAAAAAAAAY}
{\bkmkend AAAAAAAAAY}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b REP_ADDR_COMPLETE}\~ 0x04U  /* repeated address transmission complete */{\bkmkstart AAAAAAAAAZ}
{\bkmkend AAAAAAAAAZ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b GENERAL_CALL}\~ 0x08U  /* General call flag */{\bkmkstart AAAAAAAABA}
{\bkmkend AAAAAAAABA}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b ADDR_10}\~ 0x10U  /* 10-bit addr flag */{\bkmkstart AAAAAAAABB}
{\bkmkend AAAAAAAABB}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b ADDR_7}\~ 0x20U  /* 7-bit addr flag */{\bkmkstart AAAAAAAABC}
{\bkmkend AAAAAAAABC}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b AVAILABLE_EVENTS_MASK}\~ ({\b LDD_I2C_ON_MASTER_BLOCK_SENT} | {\b LDD_I2C_ON_MASTER_BLOCK_RECEIVED}){\bkmkstart AAAAAAAABD}
{\bkmkend AAAAAAAABD}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b CI2C1_PRPH_BASE_ADDRESS}\~ 0x40067000U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b CI2C1_Init_METHOD_ENABLED}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b CI2C1_Deinit_METHOD_ENABLED}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b CI2C1_MasterSendBlock_METHOD_ENABLED}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b CI2C1_MasterReceiveBlock_METHOD_ENABLED}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b CI2C1_SelectSlaveDevice_METHOD_ENABLED}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b CI2C1_OnMasterBlockSent_EVENT_ENABLED}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b CI2C1_OnMasterBlockReceived_EVENT_ENABLED}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Typedefs\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

typedef {\b CI2C1_TDeviceData} * {\b CI2C1_TDeviceDataPtr}{\bkmkstart AAAAAAAABE}
{\bkmkend AAAAAAAABE}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b PE_ISR} (CI2C1_Interrupt){\bkmkstart AAAAAAAABF}
{\bkmkend AAAAAAAABF}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LDD_TDeviceData} * {\b CI2C1_Init} ({\b LDD_TUserData} *UserDataPtr)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Initializes the device. Allocates memory for the device data structure, allocates interrupt vectors and sets interrupt priority, sets pin routing, sets timing, etc. If the "Enable in init. code" is set to "yes" value then the device is also enabled(see the description of the Enable() method). In this case the Enable() method is not necessary and needn't to be generated. This method can be called only once. Before the second call of Init() the Deinit() must be called first. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b CI2C1_Deinit} ({\b LDD_TDeviceData} *DeviceDataPtr)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Deinitializes the device. Switches off the device, frees the device data structure memory, interrupts vectors, etc. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LDD_TError} {\b CI2C1_MasterSendBlock} ({\b LDD_TDeviceData} *DeviceDataPtr, {\b LDD_TData} *BufferPtr, {\b LDD_I2C_TSize} Size, {\b LDD_I2C_TSendStop} SendStop)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This method writes one (7-bit addressing) or two (10-bit addressing) slave address bytes inclusive of R/W bit = 0 to the I2C bus and then writes the block of characters to the bus. The slave address must be specified before, by the "SelectSlaveDevice" method or in component initialization section, "Target slave address init" property. If the method returns ERR_OK, it doesn't mean that transmission was successful. The state of transmission is detectable by means of events (OnMasterSendComplete or OnError). Data to be sent are not copied to an internal buffer and remains in the original location. Therefore the content of the buffer should not be changed until the transmission is complete. Event "OnMasterBlockSent"can be used to detect the end of the transmission. This method is available only for the MASTER or MASTER - SLAVE mode. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LDD_TError} {\b CI2C1_MasterReceiveBlock} ({\b LDD_TDeviceData} *DeviceDataPtr, {\b LDD_TData} *BufferPtr, {\b LDD_I2C_TSize} Size, {\b LDD_I2C_TSendStop} SendStop)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This method writes one (7-bit addressing) or two (10-bit addressing) slave address bytes inclusive of R/W bit = 1 to the I2C bus and then receives the block of characters from the bus. The slave address must be specified before, by the "SelectSlaveDevice" method or in component initialization section, "Target slave address init" property. If the method returns ERR_OK, it doesn't mean that reception was successful. The state of reception is detectable by means of events (OnMasterSendComplete or OnError). Data to be received are not copied to an internal buffer and remains in the original location. Therefore the content of the buffer should not be changed until the transmission is complete. Event "OnMasterBlockReceived"can be used to detect the end of the reception. This method is available only for the MASTER or MASTER - SLAVE mode. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LDD_TError} {\b CI2C1_SelectSlaveDevice} ({\b LDD_TDeviceData} *DeviceDataPtr, {\b LDD_I2C_TAddrType} AddrType, {\b LDD_I2C_TAddr} Addr)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This method selects a new slave for communication by its 7-bit slave, 10-bit address or general call value. Any send or receive method directs to or from selected device, until a new slave device is selected by this method. This method is available for the MASTER mode. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macro Definition Documentation\par
\pard\plain 
{\xe \v CI2C1_Deinit_METHOD_ENABLED\:CI2C1 module documentation}
{\xe \v CI2C1 module documentation\:CI2C1_Deinit_METHOD_ENABLED}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define CI2C1_Deinit_METHOD_ENABLED}}
\par
{\bkmkstart AAAAAAAAXC}
{\bkmkend AAAAAAAAXC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Deinit method of the component CI2C1 is enabled (generated) \par
}}
{\xe \v CI2C1_Init_METHOD_ENABLED\:CI2C1 module documentation}
{\xe \v CI2C1 module documentation\:CI2C1_Init_METHOD_ENABLED}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define CI2C1_Init_METHOD_ENABLED}}
\par
{\bkmkstart AAAAAAAAXD}
{\bkmkend AAAAAAAAXD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Init method of the component CI2C1 is enabled (generated) \par
}}
{\xe \v CI2C1_MasterReceiveBlock_METHOD_ENABLED\:CI2C1 module documentation}
{\xe \v CI2C1 module documentation\:CI2C1_MasterReceiveBlock_METHOD_ENABLED}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define CI2C1_MasterReceiveBlock_METHOD_ENABLED}}
\par
{\bkmkstart AAAAAAAAXE}
{\bkmkend AAAAAAAAXE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
MasterReceiveBlock method of the component CI2C1 is enabled (generated) \par
}}
{\xe \v CI2C1_MasterSendBlock_METHOD_ENABLED\:CI2C1 module documentation}
{\xe \v CI2C1 module documentation\:CI2C1_MasterSendBlock_METHOD_ENABLED}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define CI2C1_MasterSendBlock_METHOD_ENABLED}}
\par
{\bkmkstart AAAAAAAAXF}
{\bkmkend AAAAAAAAXF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
MasterSendBlock method of the component CI2C1 is enabled (generated) \par
}}
{\xe \v CI2C1_OnMasterBlockReceived_EVENT_ENABLED\:CI2C1 module documentation}
{\xe \v CI2C1 module documentation\:CI2C1_OnMasterBlockReceived_EVENT_ENABLED}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define CI2C1_OnMasterBlockReceived_EVENT_ENABLED}}
\par
{\bkmkstart AAAAAAAAXG}
{\bkmkend AAAAAAAAXG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
OnMasterBlockReceived event of the component CI2C1 is enabled (generated) \par
}}
{\xe \v CI2C1_OnMasterBlockSent_EVENT_ENABLED\:CI2C1 module documentation}
{\xe \v CI2C1 module documentation\:CI2C1_OnMasterBlockSent_EVENT_ENABLED}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define CI2C1_OnMasterBlockSent_EVENT_ENABLED}}
\par
{\bkmkstart AAAAAAAAXH}
{\bkmkend AAAAAAAAXH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
OnMasterBlockSent event of the component CI2C1 is enabled (generated) \par
}}
{\xe \v CI2C1_PRPH_BASE_ADDRESS\:CI2C1 module documentation}
{\xe \v CI2C1 module documentation\:CI2C1_PRPH_BASE_ADDRESS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define CI2C1_PRPH_BASE_ADDRESS\~ 0x40067000U}}
\par
{\bkmkstart AAAAAAAAXI}
{\bkmkend AAAAAAAAXI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Peripheral base address of a device allocated by the component. This constant can be used directly in PDD macros. \par
}}
{\xe \v CI2C1_SelectSlaveDevice_METHOD_ENABLED\:CI2C1 module documentation}
{\xe \v CI2C1 module documentation\:CI2C1_SelectSlaveDevice_METHOD_ENABLED}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define CI2C1_SelectSlaveDevice_METHOD_ENABLED}}
\par
{\bkmkstart AAAAAAAAXJ}
{\bkmkend AAAAAAAAXJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
SelectSlaveDevice method of the component CI2C1 is enabled (generated) \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v CI2C1_Deinit\:CI2C1 module documentation}
{\xe \v CI2C1 module documentation\:CI2C1_Deinit}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void CI2C1_Deinit ({\b LDD_TDeviceData} * {\i DeviceDataPtr})}}
\par
{\bkmkstart AAAAAAAAXK}
{\bkmkend AAAAAAAAXK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Deinitializes the device. Switches off the device, frees the device data structure memory, interrupts vectors, etc. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i DeviceDataPtr} \cell }{- Device data structure pointer returned by <Init> method. \cell }
{\row }
}
}}
{\xe \v CI2C1_Init\:CI2C1 module documentation}
{\xe \v CI2C1 module documentation\:CI2C1_Init}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LDD_TDeviceData} * CI2C1_Init ({\b LDD_TUserData} * {\i UserDataPtr})}}
\par
{\bkmkstart AAAAAAAAXL}
{\bkmkend AAAAAAAAXL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Initializes the device. Allocates memory for the device data structure, allocates interrupt vectors and sets interrupt priority, sets pin routing, sets timing, etc. If the "Enable in init. code" is set to "yes" value then the device is also enabled(see the description of the Enable() method). In this case the Enable() method is not necessary and needn't to be generated. This method can be called only once. Before the second call of Init() the Deinit() must be called first. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i UserDataPtr} \cell }{- Pointer to the user or RTOS specific data. This pointer will be passed as an event or callback parameter. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {
\par
\pard\plain \s82\fi-360\li1080\widctlpar\jclisttab\tx1080{\*\pn \pnlvlbody\ilvl0\ls3\pnrnot0\pndec }\ls3\adjustright \fs20\cgrid 
Pointer to the device data structure. \par}
}}}
{\xe \v CI2C1_MasterReceiveBlock\:CI2C1 module documentation}
{\xe \v CI2C1 module documentation\:CI2C1_MasterReceiveBlock}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LDD_TError} CI2C1_MasterReceiveBlock ({\b LDD_TDeviceData} * {\i DeviceDataPtr}, {\b LDD_TData} * {\i BufferPtr}, {\b LDD_I2C_TSize} {\i Size}, {\b LDD_I2C_TSendStop} {\i SendStop})}}
\par
{\bkmkstart AAAAAAAAXM}
{\bkmkend AAAAAAAAXM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This method writes one (7-bit addressing) or two (10-bit addressing) slave address bytes inclusive of R/W bit = 1 to the I2C bus and then receives the block of characters from the bus. The slave address must be specified before, by the "SelectSlaveDevice" method or in component initialization section, "Target slave address init" property. If the method returns ERR_OK, it doesn't mean that reception was successful. The state of reception is detectable by means of events (OnMasterSendComplete or OnError). Data to be received are not copied to an internal buffer and remains in the original location. Therefore the content of the buffer should not be changed until the transmission is complete. Event "OnMasterBlockReceived"can be used to detect the end of the reception. This method is available only for the MASTER or MASTER - SLAVE mode. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i DeviceDataPtr} \cell }{- Device data structure pointer returned by <Init> method. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i BufferPtr} \cell }{- Pointer to a buffer where received characters will be stored. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i Size} \cell }{- The size of the block. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i SendStop} \cell }{- Parameter for generating I2C Stop condition LDD_I2C_SEND_STOP - Stop condition is generated on end transmission. LDD_I2C_NO_SEND_STOP - Stop condition isn't generated on end transmission. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {
\par
\pard\plain \s82\fi-360\li1080\widctlpar\jclisttab\tx1080{\*\pn \pnlvlbody\ilvl0\ls3\pnrnot0\pndec }\ls3\adjustright \fs20\cgrid 
Error code, possible codes: ERR_OK - OK ERR_DISABLED - Device is disabled ERR_SPEED - This device does not work in the active clock configuration ERR_BUSY - The master device is busy ERR_NOTAVAIL - It is not possible to receive data if general call address is set. ERR_PARAM_MODE - Stop condition isn't possible generated on end transmission. \par}
}}}
{\xe \v CI2C1_MasterSendBlock\:CI2C1 module documentation}
{\xe \v CI2C1 module documentation\:CI2C1_MasterSendBlock}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LDD_TError} CI2C1_MasterSendBlock ({\b LDD_TDeviceData} * {\i DeviceDataPtr}, {\b LDD_TData} * {\i BufferPtr}, {\b LDD_I2C_TSize} {\i Size}, {\b LDD_I2C_TSendStop} {\i SendStop})}}
\par
{\bkmkstart AAAAAAAAXN}
{\bkmkend AAAAAAAAXN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This method writes one (7-bit addressing) or two (10-bit addressing) slave address bytes inclusive of R/W bit = 0 to the I2C bus and then writes the block of characters to the bus. The slave address must be specified before, by the "SelectSlaveDevice" method or in component initialization section, "Target slave address init" property. If the method returns ERR_OK, it doesn't mean that transmission was successful. The state of transmission is detectable by means of events (OnMasterSendComplete or OnError). Data to be sent are not copied to an internal buffer and remains in the original location. Therefore the content of the buffer should not be changed until the transmission is complete. Event "OnMasterBlockSent"can be used to detect the end of the transmission. This method is available only for the MASTER or MASTER - SLAVE mode. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i DeviceDataPtr} \cell }{- Device data structure pointer returned by <Init> method. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i BufferPtr} \cell }{- Pointer to the block of data to send. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i Size} \cell }{- Size of the data block. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i SendStop} \cell }{- Parameter for generating I2C Stop condition LDD_I2C_SEND_STOP - Stop condition is generated on end transmission. LDD_I2C_NO_SEND_STOP - Stop condition isn't generated on end transmission. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {
\par
\pard\plain \s82\fi-360\li1080\widctlpar\jclisttab\tx1080{\*\pn \pnlvlbody\ilvl0\ls3\pnrnot0\pndec }\ls3\adjustright \fs20\cgrid 
Error code, possible codes: ERR_OK - OK ERR_DISABLED - Device is disabled ERR_SPEED - This device does not work in the active clock configuration ERR_BUSY - The I2C device is now running \par}
}}}
{\xe \v CI2C1_SelectSlaveDevice\:CI2C1 module documentation}
{\xe \v CI2C1 module documentation\:CI2C1_SelectSlaveDevice}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LDD_TError} CI2C1_SelectSlaveDevice ({\b LDD_TDeviceData} * {\i DeviceDataPtr}, {\b LDD_I2C_TAddrType} {\i AddrType}, {\b LDD_I2C_TAddr} {\i Addr})}}
\par
{\bkmkstart AAAAAAAAXO}
{\bkmkend AAAAAAAAXO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This method selects a new slave for communication by its 7-bit slave, 10-bit address or general call value. Any send or receive method directs to or from selected device, until a new slave device is selected by this method. This method is available for the MASTER mode. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i DeviceDataPtr} \cell }{- Device data structure pointer returned by <Init> method. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i AddrType} \cell }{- Specify type of slave address (7bit, 10bit or general call address), e.g. LDD_I2C_ADDRTYPE_7BITS. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i Addr} \cell }{- 7bit or 10bit slave address value. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {
\par
\pard\plain \s82\fi-360\li1080\widctlpar\jclisttab\tx1080{\*\pn \pnlvlbody\ilvl0\ls3\pnrnot0\pndec }\ls3\adjustright \fs20\cgrid 
Error code, possible codes: ERR_OK - OK ERR_BUSY - The device is busy, wait until the current operation is finished. ERR_DISABLED - The device is disabled. ERR_SPEED - This device does not work in the active clock configuration ERR_PARAM_ADDRESS_TYPE - Invalid address type. ERR_PARAM_ADDRESS - Invalid address value. \par}
}}}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Cpu module documentation\par \pard\plain 
{\tc\tcl2 \v Cpu module documentation}
{\xe \v Cpu module documentation}
{\bkmkstart AAAAAAAAXP}
{\bkmkend AAAAAAAAXP}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Structures\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b TCpuClockConfiguration}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b tVectorTable}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macros\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b PEcfg_FLASH}\~ 1U{\bkmkstart AAAAAAAABQ}
{\bkmkend AAAAAAAABQ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b Cpu_OnNMIINT_EVENT_ENABLED}{\bkmkstart AAAAAAAABR}
{\bkmkend AAAAAAAABR}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b CPU_BUS_CLK_HZ}\~ 20971520U /* Initial value of the bus clock frequency in Hz */{\bkmkstart AAAAAAAABS}
{\bkmkend AAAAAAAABS}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b CPU_CORE_CLK_HZ}\~ 20971520U /* Initial value of the core/system clock frequency in Hz.  */{\bkmkstart AAAAAAAABT}
{\bkmkend AAAAAAAABT}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b CPU_CLOCK_CONFIG_NUMBER}\~ 0x01U /* Specifies number of defined clock configurations. */{\bkmkstart AAAAAAAABU}
{\bkmkend AAAAAAAABU}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b CPU_BUS_CLK_HZ_CLOCK_CONFIG0}\~ 20971520U /* Value of the bus clock frequency in the clock configuration 0 in Hz. */{\bkmkstart AAAAAAAABV}
{\bkmkend AAAAAAAABV}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b CPU_CORE_CLK_HZ_CLOCK_CONFIG0}\~ 20971520U /* Value of the core/system clock frequency in the clock configuration 0 in Hz. */{\bkmkstart AAAAAAAABW}
{\bkmkend AAAAAAAABW}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b CPU_XTAL_CLK_HZ}\~ 8000000U /* Value of the external crystal or oscillator clock frequency in Hz */{\bkmkstart AAAAAAAABX}
{\bkmkend AAAAAAAABX}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b CPU_INT_SLOW_CLK_HZ}\~ 32768U /* Value of the slow internal oscillator clock frequency in Hz  */{\bkmkstart AAAAAAAABY}
{\bkmkend AAAAAAAABY}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b CPU_INT_FAST_CLK_HZ}\~ 4000000U /* Value of the fast internal oscillator clock frequency in Hz  */{\bkmkstart AAAAAAAABZ}
{\bkmkend AAAAAAAABZ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b CPU_FAMILY_Kinetis}\~ /* Specification of the core type of the selected cpu */{\bkmkstart AAAAAAAACA}
{\bkmkend AAAAAAAACA}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b CPU_DERIVATIVE_MKL25Z128LK4}\~ /* Name of the selected cpu derivative */{\bkmkstart AAAAAAAACB}
{\bkmkend AAAAAAAACB}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b CPU_PARTNUM_MKL25Z128VLK4}\~ /* Part number of the selected cpu */{\bkmkstart AAAAAAAACC}
{\bkmkend AAAAAAAACC}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b CPU_LITTLE_ENDIAN}\~ /* The selected cpu uses little endian */{\bkmkstart AAAAAAAACD}
{\bkmkend AAAAAAAACD}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b CPU_CLOCK_CONFIG_0}\~ 0x00U /* Clock configuration 0 identifier */{\bkmkstart AAAAAAAACE}
{\bkmkend AAAAAAAACE}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b CPU_CORE_CLK_HZ_CONFIG_0}\~ 20971520UL /* Core clock frequency in clock configuration 0 */{\bkmkstart AAAAAAAACF}
{\bkmkend AAAAAAAACF}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b CPU_BUS_CLK_HZ_CONFIG_0}\~ 20971520UL /* Bus clock frequency in clock configuration 0 */{\bkmkstart AAAAAAAACG}
{\bkmkend AAAAAAAACG}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b CPU_FLEXBUS_CLK_HZ_CONFIG_0}\~ 0UL /* Flexbus clock frequency in clock configuration 0 */{\bkmkstart AAAAAAAACH}
{\bkmkend AAAAAAAACH}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b CPU_FLASH_CLK_HZ_CONFIG_0}\~ 0UL /* FLASH clock frequency in clock configuration 0 */{\bkmkstart AAAAAAAACI}
{\bkmkend AAAAAAAACI}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b CPU_USB_CLK_HZ_CONFIG_0}\~ 0UL /* USB clock frequency in clock configuration 0 */{\bkmkstart AAAAAAAACJ}
{\bkmkend AAAAAAAACJ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b CPU_PLL_FLL_CLK_HZ_CONFIG_0}\~ 20971520UL /* PLL/FLL clock frequency in clock configuration 0 */{\bkmkstart AAAAAAAACK}
{\bkmkend AAAAAAAACK}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b CPU_MCGIR_CLK_HZ_CONFIG_0}\~ 32768UL /* MCG internal reference clock frequency in clock configuration 0 */{\bkmkstart AAAAAAAACL}
{\bkmkend AAAAAAAACL}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b CPU_OSCER_CLK_HZ_CONFIG_0}\~ 8000000UL /* System OSC external reference clock frequency in clock configuration 0 */{\bkmkstart AAAAAAAACM}
{\bkmkend AAAAAAAACM}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b CPU_ERCLK32K_CLK_HZ_CONFIG_0}\~ 32768UL /* External reference clock 32k frequency in clock configuration 0 */{\bkmkstart AAAAAAAACN}
{\bkmkend AAAAAAAACN}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b CPU_MCGFF_CLK_HZ_CONFIG_0}\~ 32768UL /* MCG fixed frequency clock */{\bkmkstart AAAAAAAACO}
{\bkmkend AAAAAAAACO}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Typedefs\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

typedef void(*const {\b tIsrFunc} )(void){\bkmkstart AAAAAAAACP}
{\bkmkend AAAAAAAACP}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b PE_ISR} (Cpu_INT_NMIInterrupt){\bkmkstart AAAAAAAABI}
{\bkmkend AAAAAAAABI}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b PE_ISR} (Cpu_Interrupt){\bkmkstart AAAAAAAABJ}
{\bkmkend AAAAAAAABJ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b __init_hardware} (void){\bkmkstart AAAAAAAABK}
{\bkmkend AAAAAAAABK}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b PE_low_level_init} (void){\bkmkstart AAAAAAAABL}
{\bkmkend AAAAAAAABL}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b __attribute__} ((section(".cfmconfig"))) const{\bkmkstart AAAAAAAABM}
{\bkmkend AAAAAAAABM}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

volatile uint8_t {\b SR_reg}{\bkmkstart AAAAAAAABN}
{\bkmkend AAAAAAAABN}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

volatile uint8_t {\b SR_lock} = 0x00U{\bkmkstart AAAAAAAABO}
{\bkmkend AAAAAAAABO}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const {\b TCpuClockConfiguration} {\b PE_CpuClockConfigurations} [CPU_CLOCK_CONFIG_NUMBER]\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

const {\b tVectorTable} {\b __vect_table}{\bkmkstart AAAAAAAACQ}
{\bkmkend AAAAAAAACQ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

volatile uint8_t {\b SR_reg}{\bkmkstart AAAAAAAABN}
{\bkmkend AAAAAAAABN}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

volatile uint8_t {\b SR_lock}{\bkmkstart AAAAAAAABO}
{\bkmkend AAAAAAAABO}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variable Documentation\par
\pard\plain 
{\xe \v PE_CpuClockConfigurations\:Cpu module documentation}
{\xe \v Cpu module documentation\:PE_CpuClockConfigurations}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const {\b TCpuClockConfiguration} PE_CpuClockConfigurations[CPU_CLOCK_CONFIG_NUMBER]}}
\par
{\bkmkstart AAAAAAAAXQ}
{\bkmkend AAAAAAAAXQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The array of clock configurations (frequencies) configured in configured clock configurations of the CPU component. \par
}}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CS1 module documentation\par \pard\plain 
{\tc\tcl2 \v CS1 module documentation}
{\xe \v CS1 module documentation}
{\bkmkstart AAAAAAAAXR}
{\bkmkend AAAAAAAAXR}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macros\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b CS1_CriticalVariableDrv}()\~ CS1_CriticalVariable(){\bkmkstart AAAAAAAACT}
{\bkmkend AAAAAAAACT}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b CS1_EnterCriticalDrv}()\~ CS1_EnterCritical(){\bkmkstart AAAAAAAACU}
{\bkmkend AAAAAAAACU}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b CS1_ExitCriticalDrv}()\~ CS1_ExitCritical(){\bkmkstart AAAAAAAACV}
{\bkmkend AAAAAAAACV}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b CS1_CriticalVariable}()\~ uint8_t cpuSR; /* variable to store current status */{\bkmkstart AAAAAAAACW}
{\bkmkend AAAAAAAACW}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b CS1_EnterCritical}()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b CS1_ExitCritical}()\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macro Definition Documentation\par
\pard\plain 
{\xe \v CS1_EnterCritical\:CS1 module documentation}
{\xe \v CS1 module documentation\:CS1_EnterCritical}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define CS1_EnterCritical()}}
\par
{\bkmkstart AAAAAAAAXS}
{\bkmkend AAAAAAAAXS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Value:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid do \{                                  \\\par
      /*lint -save  -esym(529,cpuSR) Symbol 'cpuSR' not subsequently referenced. */\\\par
      __asm (                             \\\par
      "mrs   r0, PRIMASK     \\n\\t"        \\\par
      "cpsid i               \\n\\t"        \\\par
      "strb r0, %[output]   \\n\\t"         \\\par
      : [output] "=m" (cpuSR) :: "r0");   \\\par
      __asm ("" ::: "memory");            \\\par
      /*lint -restore Symbol 'cpuSR' not subsequently referenced. */\\\par
    \} while(0)\par
}
}
{\xe \v CS1_ExitCritical\:CS1 module documentation}
{\xe \v CS1 module documentation\:CS1_ExitCritical}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define CS1_ExitCritical()}}
\par
{\bkmkstart AAAAAAAAXT}
{\bkmkend AAAAAAAAXT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Value:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid do\{                                  \\\par
     __asm (                            \\\par
     "ldrb r0, %[input]    \\n\\t"        \\\par
     "msr PRIMASK,r0        \\n\\t"       \\\par
     ::[input] "m" (cpuSR) : "r0");     \\\par
   \} while(0)\par
}
}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
EE241 module documentation\par \pard\plain 
{\tc\tcl2 \v EE241 module documentation}
{\xe \v EE241 module documentation}
{\bkmkstart AAAAAAAAXU}
{\bkmkend AAAAAAAAXU}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macros\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b EE241_I2CAddress}\~ (0&EE241_MAX_I2C_ADDR_MASK) /* address defined by the A2|A1|A0 pins */{\bkmkstart AAAAAAAACY}
{\bkmkend AAAAAAAACY}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b EE241_CTRL_NBL}\~ (0x0A<<3)  /* control byte high nibble. Typically this is 1010 (shifted by one to the right) */{\bkmkstart AAAAAAAACZ}
{\bkmkend AAAAAAAACZ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b EE241_CTRL_ADDR}\~ 0        /* no additional address bits */{\bkmkstart AAAAAAAADA}
{\bkmkend AAAAAAAADA}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b EE241_BANK_0}\~ (0<<2)   /* B0 bit (0) inside the CTRL_BYTE: 1010|B0|A1|A0 */{\bkmkstart AAAAAAAADB}
{\bkmkend AAAAAAAADB}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b EE241_BANK_1}\~ (1<<2)   /* B0 bit (1) inside the CTRL_BYTE: 1010|B0|A1|A0 */{\bkmkstart AAAAAAAADC}
{\bkmkend AAAAAAAADC}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b EE241_CTRL_BYTE}\~ (EE241_CTRL_NBL|EE241_CTRL_ADDR) /* 1010|B0|A1|A0 */{\bkmkstart AAAAAAAADD}
{\bkmkend AAAAAAAADD}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b EE241_DEVICE_ADDR}(addr)\~ ( EE241_CTRL_BYTE|((addr>>8)&0x07) ){\bkmkstart AAAAAAAADE}
{\bkmkend AAAAAAAADE}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b EE241_DEVICE_ID_8}\~ 8 /* 24AA08, 24LC08 */{\bkmkstart AAAAAAAADL}
{\bkmkend AAAAAAAADL}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b EE241_DEVICE_ID_16}\~ 16 /* 24AA16, 24LC16 */{\bkmkstart AAAAAAAADM}
{\bkmkend AAAAAAAADM}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b EE241_DEVICE_ID_32}\~ 32 /* 24AA32, 24LC32 */{\bkmkstart AAAAAAAADN}
{\bkmkend AAAAAAAADN}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b EE241_DEVICE_ID_256}\~ 256 /* 24AA256, 24LC256, 24FC256 */{\bkmkstart AAAAAAAADO}
{\bkmkend AAAAAAAADO}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b EE241_DEVICE_ID_512}\~ 512 /* 24AA512, 24LC512, 24FC256 */{\bkmkstart AAAAAAAADP}
{\bkmkend AAAAAAAADP}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b EE241_DEVICE_ID_1025}\~ 1025 /* 24AA1025, 24LC1025, 24FC1025 */{\bkmkstart AAAAAAAADQ}
{\bkmkend AAAAAAAADQ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b EE241_DEVICE_ID}\~ EE241_DEVICE_ID_8{\bkmkstart AAAAAAAADR}
{\bkmkend AAAAAAAADR}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b EE241_BLOCK_BUF_SIZE}\~ 12         /* buffer used for block read/write. Max is 128. Keep it small to reduce stack consumption. */{\bkmkstart AAAAAAAADS}
{\bkmkend AAAAAAAADS}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b EE241_MAX_I2C_ADDR_MASK}\~ 0     /* A2|A1|A0 are not used */{\bkmkstart AAAAAAAADT}
{\bkmkend AAAAAAAADT}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b EE241_MAX_ADDRESS}\~ 0x03FF /* 8 kBit is 1KByte */{\bkmkstart AAAAAAAADU}
{\bkmkend AAAAAAAADU}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b EE241_ADDRT}\~ word  /* a word/16bit is enough to hold the address */{\bkmkstart AAAAAAAADV}
{\bkmkend AAAAAAAADV}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b EE241_PAGE_SIZE}\~ 16    /* maximum page size (for page/block operation) */{\bkmkstart AAAAAAAADW}
{\bkmkend AAAAAAAADW}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b EE241_DO_ACKNOWLEDGE_POLLING}\~ 1 /* Perform acknowledge polling in the driver */{\bkmkstart AAAAAAAADX}
{\bkmkend AAAAAAAADX}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b EE241_PAGE_WRITE_TIME_MS}\~ 10 /* Page Write Time as per data sheet */{\bkmkstart AAAAAAAADY}
{\bkmkend AAAAAAAADY}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b EE241_ACK_POLLING_TIME_US}\~ 100 /* Acknowledge polling {\b time} in the I2C driver*/{\bkmkstart AAAAAAAADZ}
{\bkmkend AAAAAAAADZ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b __BWUserType_EE241_Address}{\bkmkstart AAAAAAAAEA}
{\bkmkend AAAAAAAAEA}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b EE241_PARSE_COMMAND_ENABLED}\~ 0 /* set to 1 if method ParseCommand() is present, 0 otherwise */{\bkmkstart AAAAAAAAEB}
{\bkmkend AAAAAAAAEB}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Typedefs\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

typedef EE241_ADDRT {\b EE241_Address}{\bkmkstart AAAAAAAAEC}
{\bkmkend AAAAAAAAEC}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

byte {\b EE241_WriteByte} (EE241_Address addr, byte data){\bkmkstart AAAAAAAADF}
{\bkmkend AAAAAAAADF}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

byte {\b EE241_ReadByte} (EE241_Address addr, byte *data){\bkmkstart AAAAAAAADG}
{\bkmkend AAAAAAAADG}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

byte {\b EE241_ReadBlock} (EE241_Address addr, byte *data, word dataSize){\bkmkstart AAAAAAAADH}
{\bkmkend AAAAAAAADH}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

byte {\b EE241_WriteBlockPage} (EE241_Address addr, byte *data, word dataSize){\bkmkstart AAAAAAAADI}
{\bkmkend AAAAAAAADI}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

byte {\b EE241_WriteBlock} (EE241_Address addr, byte *data, word dataSize){\bkmkstart AAAAAAAADJ}
{\bkmkend AAAAAAAADJ}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
ExtIntLdd4 module documentation\par \pard\plain 
{\tc\tcl2 \v ExtIntLdd4 module documentation}
{\xe \v ExtIntLdd4 module documentation}
{\bkmkstart AAAAAAAAXV}
{\bkmkend AAAAAAAAXV}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Structures\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b ExtIntLdd4_TDeviceData}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macros\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ExtIntLdd4_PRPH_BASE_ADDRESS}\~ 0x400FF0C0U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ExtIntLdd4_DeviceData}\~ (({\b LDD_TDeviceData} *){\b PE_LDD_GetDeviceStructure}(PE_LDD_COMPONENT_ExtIntLdd4_ID))\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ExtIntLdd4_Init_METHOD_ENABLED}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ExtIntLdd4_GetVal_METHOD_ENABLED}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ExtIntLdd4_SetEdge_METHOD_ENABLED}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ExtIntLdd4_OnInterrupt_EVENT_ENABLED}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ExtIntLdd4_PIN_INDEX}\~ 0x07U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ExtIntLdd4_PIN_MASK}\~ 0x80U\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Typedefs\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

typedef struct \par
{\b ExtIntLdd4_TDeviceData} * {\b ExtIntLdd4_TDeviceDataPtr}{\bkmkstart AAAAAAAAEE}
{\bkmkend AAAAAAAAEE}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LDD_TDeviceData} * {\b ExtIntLdd4_Init} ({\b LDD_TUserData} *UserDataPtr)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This method initializes the associated peripheral(s) and the component internal variables. The method is called automatically as a part of the application initialization code. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b PE_ISR} (ExtIntLdd4_Interrupt){\bkmkstart AAAAAAAAEF}
{\bkmkend AAAAAAAAEF}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b ExtIntLdd4_GetVal} ({\b LDD_TDeviceData} *DeviceDataPtr)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Returns the actual value of the input pin of the component. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LDD_TError} {\b ExtIntLdd4_SetEdge} ({\b LDD_TDeviceData} *DeviceDataPtr, uint8_t Edge)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the edge type for this component that generates the interrupt. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macro Definition Documentation\par
\pard\plain 
{\xe \v ExtIntLdd4_DeviceData\:ExtIntLdd4 module documentation}
{\xe \v ExtIntLdd4 module documentation\:ExtIntLdd4_DeviceData}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ExtIntLdd4_DeviceData\~ (({\b LDD_TDeviceData} *){\b PE_LDD_GetDeviceStructure}(PE_LDD_COMPONENT_ExtIntLdd4_ID))}}
\par
{\bkmkstart AAAAAAAAXW}
{\bkmkend AAAAAAAAXW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Device data structure pointer used when auto initialization property is enabled. This constant can be passed as a first parameter to all component's methods. \par
}}
{\xe \v ExtIntLdd4_GetVal_METHOD_ENABLED\:ExtIntLdd4 module documentation}
{\xe \v ExtIntLdd4 module documentation\:ExtIntLdd4_GetVal_METHOD_ENABLED}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ExtIntLdd4_GetVal_METHOD_ENABLED}}
\par
{\bkmkstart AAAAAAAAXX}
{\bkmkend AAAAAAAAXX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
GetVal method of the component ExtIntLdd4 is enabled (generated) \par
}}
{\xe \v ExtIntLdd4_Init_METHOD_ENABLED\:ExtIntLdd4 module documentation}
{\xe \v ExtIntLdd4 module documentation\:ExtIntLdd4_Init_METHOD_ENABLED}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ExtIntLdd4_Init_METHOD_ENABLED}}
\par
{\bkmkstart AAAAAAAAXY}
{\bkmkend AAAAAAAAXY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Init method of the component ExtIntLdd4 is enabled (generated) \par
}}
{\xe \v ExtIntLdd4_OnInterrupt_EVENT_ENABLED\:ExtIntLdd4 module documentation}
{\xe \v ExtIntLdd4 module documentation\:ExtIntLdd4_OnInterrupt_EVENT_ENABLED}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ExtIntLdd4_OnInterrupt_EVENT_ENABLED}}
\par
{\bkmkstart AAAAAAAAXZ}
{\bkmkend AAAAAAAAXZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
OnInterrupt event of the component ExtIntLdd4 is enabled (generated) \par
}}
{\xe \v ExtIntLdd4_PIN_INDEX\:ExtIntLdd4 module documentation}
{\xe \v ExtIntLdd4 module documentation\:ExtIntLdd4_PIN_INDEX}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ExtIntLdd4_PIN_INDEX\~ 0x07U}}
\par
{\bkmkstart AAAAAAAAYA}
{\bkmkend AAAAAAAAYA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Index of the used pin from the port \par
}}
{\xe \v ExtIntLdd4_PIN_MASK\:ExtIntLdd4 module documentation}
{\xe \v ExtIntLdd4 module documentation\:ExtIntLdd4_PIN_MASK}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ExtIntLdd4_PIN_MASK\~ 0x80U}}
\par
{\bkmkstart AAAAAAAAYB}
{\bkmkend AAAAAAAAYB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Mask of the used pin from the port \par
}}
{\xe \v ExtIntLdd4_PRPH_BASE_ADDRESS\:ExtIntLdd4 module documentation}
{\xe \v ExtIntLdd4 module documentation\:ExtIntLdd4_PRPH_BASE_ADDRESS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ExtIntLdd4_PRPH_BASE_ADDRESS\~ 0x400FF0C0U}}
\par
{\bkmkstart AAAAAAAAYC}
{\bkmkend AAAAAAAAYC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Peripheral base address of a device allocated by the component. This constant can be used directly in PDD macros. \par
}}
{\xe \v ExtIntLdd4_SetEdge_METHOD_ENABLED\:ExtIntLdd4 module documentation}
{\xe \v ExtIntLdd4 module documentation\:ExtIntLdd4_SetEdge_METHOD_ENABLED}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ExtIntLdd4_SetEdge_METHOD_ENABLED}}
\par
{\bkmkstart AAAAAAAAYD}
{\bkmkend AAAAAAAAYD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
SetEdge method of the component ExtIntLdd4 is enabled (generated) \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v ExtIntLdd4_GetVal\:ExtIntLdd4 module documentation}
{\xe \v ExtIntLdd4 module documentation\:ExtIntLdd4_GetVal}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool ExtIntLdd4_GetVal ({\b LDD_TDeviceData} * {\i DeviceDataPtr})}}
\par
{\bkmkstart AAAAAAAAYE}
{\bkmkend AAAAAAAAYE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Returns the actual value of the input pin of the component. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i DeviceDataPtr} \cell }{- Device data structure pointer returned by <Init> method. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {
\par
\pard\plain \s82\fi-360\li1080\widctlpar\jclisttab\tx1080{\*\pn \pnlvlbody\ilvl0\ls3\pnrnot0\pndec }\ls3\adjustright \fs20\cgrid 
Returned input value. Possible values: <false> - logical "0" (Low level) <true> - logical "1" (High level) \par}
}}}
{\xe \v ExtIntLdd4_Init\:ExtIntLdd4 module documentation}
{\xe \v ExtIntLdd4 module documentation\:ExtIntLdd4_Init}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LDD_TDeviceData} * ExtIntLdd4_Init ({\b LDD_TUserData} * {\i UserDataPtr})}}
\par
{\bkmkstart AAAAAAAAYF}
{\bkmkend AAAAAAAAYF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This method initializes the associated peripheral(s) and the component internal variables. The method is called automatically as a part of the application initialization code. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i UserDataPtr} \cell }{- Pointer to the RTOS device structure. This pointer will be passed to all events as parameter. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {
\par
\pard\plain \s82\fi-360\li1080\widctlpar\jclisttab\tx1080{\*\pn \pnlvlbody\ilvl0\ls3\pnrnot0\pndec }\ls3\adjustright \fs20\cgrid 
Pointer to the dynamically allocated private structure or NULL if there was an error. \par}
}}}
{\xe \v ExtIntLdd4_SetEdge\:ExtIntLdd4 module documentation}
{\xe \v ExtIntLdd4 module documentation\:ExtIntLdd4_SetEdge}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LDD_TError} ExtIntLdd4_SetEdge ({\b LDD_TDeviceData} * {\i DeviceDataPtr}, uint8_t {\i Edge})}}
\par
{\bkmkstart AAAAAAAAYG}
{\bkmkend AAAAAAAAYG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the edge type for this component that generates the interrupt. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i DeviceDataPtr} \cell }{- Device data structure pointer returned by <Init> method. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i Edge} \cell }{- Edge type: 0 - falling edge 1 - rising edge 2 - both edges 3 - low level 4 - high level \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {
\par
\pard\plain \s82\fi-360\li1080\widctlpar\jclisttab\tx1080{\*\pn \pnlvlbody\ilvl0\ls3\pnrnot0\pndec }\ls3\adjustright \fs20\cgrid 
Error code, possible codes: ERR_OK - OK ERR_RANGE - Value is out of range \par}
}}}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
GI2C1 module documentation\par \pard\plain 
{\tc\tcl2 \v GI2C1 module documentation}
{\xe \v GI2C1 module documentation}
{\bkmkstart AAAAAAAAYH}
{\bkmkend AAAAAAAAYH}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Structures\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b GI2C1_TDataState}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macros\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b GI2C1_WRITE_BUFFER_SIZE}\~ 16 /* size of internal buffer used, set in the component properties */{\bkmkstart AAAAAAAAFA}
{\bkmkend AAAAAAAAFA}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Typedefs\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

typedef enum GI2C1_EnumSendFlags_ {\b GI2C1_EnumSendFlags}{\bkmkstart AAAAAAAAFB}
{\bkmkend AAAAAAAAFB}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

typedef enum GI2C1_EnumStartFlags_ {\b GI2C1_EnumStartFlags}{\bkmkstart AAAAAAAAFC}
{\bkmkend AAAAAAAAFC}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

typedef enum GI2C1_EnumAckFlags_ {\b GI2C1_EnumAckFlags}{\bkmkstart AAAAAAAAFD}
{\bkmkend AAAAAAAAFD}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Enumerations\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b GI2C1_EnumSendFlags_} \{ {\b GI2C1_SEND_STOP}, 
{\b GI2C1_DO_NOT_SEND_STOP}, 
{\b GI2C1_STOP_NOSTART}
 \}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b GI2C1_EnumStartFlags_} \{ {\b GI2C1_SEND_START}, 
{\b GI2C1_DO_NOT_SEND_START}
 \}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b GI2C1_EnumAckFlags_} \{ {\b GI2C1_SEND_LAST_ACK}, 
{\b GI2C1_DO_NOT_LAST_ACK}
 \}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b GI2C1_RequestBus} (void){\bkmkstart AAAAAAAAEI}
{\bkmkend AAAAAAAAEI}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b GI2C1_ReleaseBus} (void){\bkmkstart AAAAAAAAEJ}
{\bkmkend AAAAAAAAEJ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint8_t {\b GI2C1_SelectSlave} (uint8_t i2cAddr){\bkmkstart AAAAAAAAEK}
{\bkmkend AAAAAAAAEK}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint8_t {\b GI2C1_UnselectSlave} (void){\bkmkstart AAAAAAAAEL}
{\bkmkend AAAAAAAAEL}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint8_t {\b GI2C1_ReadBlock} (void *data, uint16_t dataSize, GI2C1_EnumSendFlags flags){\bkmkstart AAAAAAAAEM}
{\bkmkend AAAAAAAAEM}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint8_t {\b GI2C1_WriteBlock} (void *data, uint16_t dataSize, GI2C1_EnumSendFlags flags){\bkmkstart AAAAAAAAEN}
{\bkmkend AAAAAAAAEN}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint8_t {\b GI2C1_ReadAddress} (uint8_t i2cAddr, uint8_t *memAddr, uint8_t memAddrSize, uint8_t *data, uint16_t dataSize){\bkmkstart AAAAAAAAEO}
{\bkmkend AAAAAAAAEO}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint8_t {\b GI2C1_WriteAddress} (uint8_t i2cAddr, uint8_t *memAddr, uint8_t memAddrSize, uint8_t *data, uint16_t dataSize){\bkmkstart AAAAAAAAEP}
{\bkmkend AAAAAAAAEP}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b CI2C1_OnMasterBlockSent} ({\b LDD_TUserData} *UserDataPtr){\bkmkstart AAAAAAAAEQ}
{\bkmkend AAAAAAAAEQ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b CI2C1_OnMasterBlockReceived} ({\b LDD_TUserData} *UserDataPtr){\bkmkstart AAAAAAAAER}
{\bkmkend AAAAAAAAER}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b GI2C1_Init} (void){\bkmkstart AAAAAAAAES}
{\bkmkend AAAAAAAAES}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b GI2C1_Deinit} (void){\bkmkstart AAAAAAAAET}
{\bkmkend AAAAAAAAET}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void * {\b GI2C1_GetSemaphore} (void){\bkmkstart AAAAAAAAEU}
{\bkmkend AAAAAAAAEU}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint8_t {\b GI2C1_ReadByteAddress8} (uint8_t i2cAddr, uint8_t memAddr, uint8_t *data){\bkmkstart AAAAAAAAEV}
{\bkmkend AAAAAAAAEV}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint8_t {\b GI2C1_WriteByteAddress8} (uint8_t i2cAddr, uint8_t memAddr, uint8_t data){\bkmkstart AAAAAAAAEW}
{\bkmkend AAAAAAAAEW}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint8_t {\b GI2C1_ScanDevice} (uint8_t i2cAddr){\bkmkstart AAAAAAAAEX}
{\bkmkend AAAAAAAAEX}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint8_t {\b GI2C1_ProbeACK} (void *data, uint16_t dataSize, GI2C1_EnumSendFlags flags, uint16_t WaitTimeUS){\bkmkstart AAAAAAAAEY}
{\bkmkend AAAAAAAAEY}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
LT module documentation\par \pard\plain 
{\tc\tcl2 \v LT module documentation}
{\xe \v LT module documentation}
{\bkmkstart AAAAAAAAYI}
{\bkmkend AAAAAAAAYI}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macros\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b LT_GetVal}()\~ ({\b BitIoLdd7_GetVal}({\b BitIoLdd7_DeviceData})){\bkmkstart AAAAAAAAFH}
{\bkmkend AAAAAAAAFH}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b LT_PutVal}(Val)\~ ({\b BitIoLdd7_PutVal}({\b BitIoLdd7_DeviceData}, (Val))){\bkmkstart AAAAAAAAFI}
{\bkmkend AAAAAAAAFI}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b LT_ClrVal}()\~ ({\b BitIoLdd7_ClrVal}({\b BitIoLdd7_DeviceData})){\bkmkstart AAAAAAAAFJ}
{\bkmkend AAAAAAAAFJ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b LT_SetVal}()\~ ({\b BitIoLdd7_SetVal}({\b BitIoLdd7_DeviceData})){\bkmkstart AAAAAAAAFK}
{\bkmkend AAAAAAAAFK}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b LT_NegVal}()\~ ({\b BitIoLdd7_NegVal}({\b BitIoLdd7_DeviceData})){\bkmkstart AAAAAAAAFL}
{\bkmkend AAAAAAAAFL}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
MCUC1 module documentation\par \pard\plain 
{\tc\tcl2 \v MCUC1 module documentation}
{\xe \v MCUC1 module documentation}
{\bkmkstart AAAAAAAAYJ}
{\bkmkend AAAAAAAAYJ}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
PC module documentation\par \pard\plain 
{\tc\tcl2 \v PC module documentation}
{\xe \v PC module documentation}
{\bkmkstart AAAAAAAAYK}
{\bkmkend AAAAAAAAYK}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Structures\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
union {\b PC_TError}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macros\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b OVERRUN_ERR}\~ 0x01U         /* Overrun error flag bit    */{\bkmkstart AAAAAAAAGE}
{\bkmkend AAAAAAAAGE}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b FRAMING_ERR}\~ 0x02U         /* Framing error flag bit    */{\bkmkstart AAAAAAAAGF}
{\bkmkend AAAAAAAAGF}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b PARITY_ERR}\~ 0x04U         /* Parity error flag bit     */{\bkmkstart AAAAAAAAGG}
{\bkmkend AAAAAAAAGG}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b CHAR_IN_RX}\~ 0x08U         /* Char is in RX buffer      */{\bkmkstart AAAAAAAAGH}
{\bkmkend AAAAAAAAGH}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b FULL_TX}\~ 0x10U         /* Full transmit buffer      */{\bkmkstart AAAAAAAAGI}
{\bkmkend AAAAAAAAGI}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b RUNINT_FROM_TX}\~ 0x20U         /* Interrupt is in progress  */{\bkmkstart AAAAAAAAGJ}
{\bkmkend AAAAAAAAGJ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b FULL_RX}\~ 0x40U         /* Full receive buffer       */{\bkmkstart AAAAAAAAGK}
{\bkmkend AAAAAAAAGK}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b NOISE_ERR}\~ 0x80U         /* Noise error flag bit      */{\bkmkstart AAAAAAAAGL}
{\bkmkend AAAAAAAAGL}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b IDLE_ERR}\~ 0x0100U       /* Idle character flag bit   */{\bkmkstart AAAAAAAAGM}
{\bkmkend AAAAAAAAGM}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b BREAK_ERR}\~ 0x0200U       /* Break detect              */{\bkmkstart AAAAAAAAGN}
{\bkmkend AAAAAAAAGN}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b COMMON_ERR}\~ 0x0800U       /* Common error of RX       */{\bkmkstart AAAAAAAAGO}
{\bkmkend AAAAAAAAGO}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b ON_ERROR}\~ 0x01U{\bkmkstart AAAAAAAAGP}
{\bkmkend AAAAAAAAGP}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b ON_FULL_RX}\~ 0x02U{\bkmkstart AAAAAAAAGQ}
{\bkmkend AAAAAAAAGQ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b ON_RX_CHAR}\~ 0x04U{\bkmkstart AAAAAAAAGR}
{\bkmkend AAAAAAAAGR}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b ON_FREE_TX}\~ 0x01U{\bkmkstart AAAAAAAAGS}
{\bkmkend AAAAAAAAGS}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b ON_TX_CHAR}\~ 0x02U{\bkmkstart AAAAAAAAGT}
{\bkmkend AAAAAAAAGT}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b __BWUserType_PC_TError}{\bkmkstart AAAAAAAAHJ}
{\bkmkend AAAAAAAAHJ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b __BWUserType_PC_TComData}{\bkmkstart AAAAAAAAHK}
{\bkmkend AAAAAAAAHK}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b PC_INP_BUF_SIZE}\~ 0x0100U       /* Length of the RX buffer */{\bkmkstart AAAAAAAAHL}
{\bkmkend AAAAAAAAHL}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b PC_OUT_BUF_SIZE}\~ 0x0100U       /* Length of the TX buffer */{\bkmkstart AAAAAAAAHM}
{\bkmkend AAAAAAAAHM}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Typedefs\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

typedef byte {\b PC_TComData}{\bkmkstart AAAAAAAAHN}
{\bkmkend AAAAAAAAHN}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

byte {\b PC_RecvChar} (PC_TComData *Chr){\bkmkstart AAAAAAAAGU}
{\bkmkend AAAAAAAAGU}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

byte {\b PC_SendChar} (PC_TComData Chr){\bkmkstart AAAAAAAAGV}
{\bkmkend AAAAAAAAGV}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

byte {\b PC_RecvBlock} (PC_TComData *Ptr, word Size, word *Rcv){\bkmkstart AAAAAAAAGW}
{\bkmkend AAAAAAAAGW}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

byte {\b PC_SendBlock} (PC_TComData *Ptr, word Size, word *Snd){\bkmkstart AAAAAAAAGX}
{\bkmkend AAAAAAAAGX}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

byte {\b PC_ClearRxBuf} (void){\bkmkstart AAAAAAAAGY}
{\bkmkend AAAAAAAAGY}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

byte {\b PC_ClearTxBuf} (void){\bkmkstart AAAAAAAAGZ}
{\bkmkend AAAAAAAAGZ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

word {\b PC_GetCharsInRxBuf} (void){\bkmkstart AAAAAAAAHA}
{\bkmkend AAAAAAAAHA}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

word {\b PC_GetCharsInTxBuf} (void){\bkmkstart AAAAAAAAHB}
{\bkmkend AAAAAAAAHB}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b PC_Init} (void){\bkmkstart AAAAAAAAHC}
{\bkmkend AAAAAAAAHC}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b ASerialLdd1_OnBlockReceived} ({\b LDD_TUserData} *UserDataPtr){\bkmkstart AAAAAAAAHD}
{\bkmkend AAAAAAAAHD}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b ASerialLdd1_OnBlockSent} ({\b LDD_TUserData} *UserDataPtr){\bkmkstart AAAAAAAAHE}
{\bkmkend AAAAAAAAHE}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b ASerialLdd1_OnError} ({\b LDD_TUserData} *UserDataPtr){\bkmkstart AAAAAAAAHF}
{\bkmkend AAAAAAAAHF}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b ASerialLdd1_OnBreak} ({\b LDD_TUserData} *UserDataPtr){\bkmkstart AAAAAAAAHG}
{\bkmkend AAAAAAAAHG}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b LDD_TDeviceData} * {\b ASerialLdd1_DeviceDataPtr}{\bkmkstart AAAAAAAAHH}
{\bkmkend AAAAAAAAHH}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
PE_Const module documentation\par \pard\plain 
{\tc\tcl2 \v PE_Const module documentation}
{\xe \v PE_Const module documentation}
{\bkmkstart AAAAAAAAYL}
{\bkmkend AAAAAAAAYL}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macros\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b RSTSRC_WAKEUP}\~ 0x01U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b RSTSRC_LVD}\~ 0x02U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b RSTSRC_LOC}\~ 0x04U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b RSTSRC_LOL}\~ 0x08U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b RSTSRC_COP}\~ 0x20U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b RSTSRC_WDOG}\~ 0x20U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b RSTSRC_PIN}\~ 0x40U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b RSTSRC_POR}\~ 0x80U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b RSTSRC_JTAG}\~ 0x0100U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b RSTSRC_LOCKUP}\~ 0x0200U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b RSTSRC_SW}\~ 0x0400U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b RSTSRC_MDM_AP}\~ 0x0800U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b RSTSRC_SACKERR}\~ 0x2000U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LVDSRC_LVD}\~ 0x01U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LVDSRC_LVW}\~ 0x02U\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macro Definition Documentation\par
\pard\plain 
{\xe \v LVDSRC_LVD\:PE_Const module documentation}
{\xe \v PE_Const module documentation\:LVDSRC_LVD}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LVDSRC_LVD\~ 0x01U}}
\par
{\bkmkstart AAAAAAAAYM}
{\bkmkend AAAAAAAAYM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Low voltage detect \par
}}
{\xe \v LVDSRC_LVW\:PE_Const module documentation}
{\xe \v PE_Const module documentation\:LVDSRC_LVW}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LVDSRC_LVW\~ 0x02U}}
\par
{\bkmkstart AAAAAAAAYN}
{\bkmkend AAAAAAAAYN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Low-voltage warning \par
}}
{\xe \v RSTSRC_COP\:PE_Const module documentation}
{\xe \v PE_Const module documentation\:RSTSRC_COP}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define RSTSRC_COP\~ 0x20U}}
\par
{\bkmkstart AAAAAAAAYO}
{\bkmkend AAAAAAAAYO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Watchdog reset \par
}}
{\xe \v RSTSRC_JTAG\:PE_Const module documentation}
{\xe \v PE_Const module documentation\:RSTSRC_JTAG}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define RSTSRC_JTAG\~ 0x0100U}}
\par
{\bkmkstart AAAAAAAAYP}
{\bkmkend AAAAAAAAYP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
JTAG reset pin \par
}}
{\xe \v RSTSRC_LOC\:PE_Const module documentation}
{\xe \v PE_Const module documentation\:RSTSRC_LOC}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define RSTSRC_LOC\~ 0x04U}}
\par
{\bkmkstart AAAAAAAAYQ}
{\bkmkend AAAAAAAAYQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Loss-of-clock reset \par
}}
{\xe \v RSTSRC_LOCKUP\:PE_Const module documentation}
{\xe \v PE_Const module documentation\:RSTSRC_LOCKUP}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define RSTSRC_LOCKUP\~ 0x0200U}}
\par
{\bkmkstart AAAAAAAAYR}
{\bkmkend AAAAAAAAYR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Core Lock-up reset \par
}}
{\xe \v RSTSRC_LOL\:PE_Const module documentation}
{\xe \v PE_Const module documentation\:RSTSRC_LOL}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define RSTSRC_LOL\~ 0x08U}}
\par
{\bkmkstart AAAAAAAAYS}
{\bkmkend AAAAAAAAYS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Loss-of-lock reset \par
}}
{\xe \v RSTSRC_LVD\:PE_Const module documentation}
{\xe \v PE_Const module documentation\:RSTSRC_LVD}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define RSTSRC_LVD\~ 0x02U}}
\par
{\bkmkstart AAAAAAAAYT}
{\bkmkend AAAAAAAAYT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Low-voltage detect reset \par
}}
{\xe \v RSTSRC_MDM_AP\:PE_Const module documentation}
{\xe \v PE_Const module documentation\:RSTSRC_MDM_AP}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define RSTSRC_MDM_AP\~ 0x0800U}}
\par
{\bkmkstart AAAAAAAAYU}
{\bkmkend AAAAAAAAYU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Reset caused by host debugger system \par
}}
{\xe \v RSTSRC_PIN\:PE_Const module documentation}
{\xe \v PE_Const module documentation\:RSTSRC_PIN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define RSTSRC_PIN\~ 0x40U}}
\par
{\bkmkstart AAAAAAAAYV}
{\bkmkend AAAAAAAAYV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
External pin reset \par
}}
{\xe \v RSTSRC_POR\:PE_Const module documentation}
{\xe \v PE_Const module documentation\:RSTSRC_POR}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define RSTSRC_POR\~ 0x80U}}
\par
{\bkmkstart AAAAAAAAYW}
{\bkmkend AAAAAAAAYW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Power-on reset \par
}}
{\xe \v RSTSRC_SACKERR\:PE_Const module documentation}
{\xe \v PE_Const module documentation\:RSTSRC_SACKERR}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define RSTSRC_SACKERR\~ 0x2000U}}
\par
{\bkmkstart AAAAAAAAYX}
{\bkmkend AAAAAAAAYX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Stop Mode Acknowledge Error Reset \par
}}
{\xe \v RSTSRC_SW\:PE_Const module documentation}
{\xe \v PE_Const module documentation\:RSTSRC_SW}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define RSTSRC_SW\~ 0x0400U}}
\par
{\bkmkstart AAAAAAAAYY}
{\bkmkend AAAAAAAAYY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Software reset \par
}}
{\xe \v RSTSRC_WAKEUP\:PE_Const module documentation}
{\xe \v PE_Const module documentation\:RSTSRC_WAKEUP}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define RSTSRC_WAKEUP\~ 0x01U}}
\par
{\bkmkstart AAAAAAAAYZ}
{\bkmkend AAAAAAAAYZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
LLWU module wakeup reset \par
}}
{\xe \v RSTSRC_WDOG\:PE_Const module documentation}
{\xe \v PE_Const module documentation\:RSTSRC_WDOG}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define RSTSRC_WDOG\~ 0x20U}}
\par
{\bkmkstart AAAAAAAAZA}
{\bkmkend AAAAAAAAZA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Watchdog reset \par
}}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
PE_Error module documentation\par \pard\plain 
{\tc\tcl2 \v PE_Error module documentation}
{\xe \v PE_Error module documentation}
{\bkmkstart AAAAAAAAZB}
{\bkmkend AAAAAAAAZB}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macros\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ERR_OK}\~ 0x00U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ERR_SPEED}\~ 0x01U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ERR_RANGE}\~ 0x02U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ERR_VALUE}\~ 0x03U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ERR_OVERFLOW}\~ 0x04U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ERR_MATH}\~ 0x05U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ERR_ENABLED}\~ 0x06U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ERR_DISABLED}\~ 0x07U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ERR_BUSY}\~ 0x08U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ERR_NOTAVAIL}\~ 0x09U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ERR_RXEMPTY}\~ 0x0AU\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ERR_TXFULL}\~ 0x0BU\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ERR_BUSOFF}\~ 0x0CU\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ERR_OVERRUN}\~ 0x0DU\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ERR_FRAMING}\~ 0x0EU\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ERR_PARITY}\~ 0x0FU\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ERR_NOISE}\~ 0x10U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ERR_IDLE}\~ 0x11U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ERR_FAULT}\~ 0x12U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ERR_BREAK}\~ 0x13U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ERR_CRC}\~ 0x14U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ERR_ARBITR}\~ 0x15U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ERR_PROTECT}\~ 0x16U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ERR_UNDERFLOW}\~ 0x17U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ERR_UNDERRUN}\~ 0x18U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ERR_COMMON}\~ 0x19U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ERR_LINSYNC}\~ 0x1AU\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ERR_FAILED}\~ 0x1BU\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ERR_QFULL}\~ 0x1CU\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ERR_PARAM_MASK}\~ 0x80U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ERR_PARAM_MODE}\~ 0x81U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ERR_PARAM_INDEX}\~ 0x82U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ERR_PARAM_DATA}\~ 0x83U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ERR_PARAM_SIZE}\~ 0x84U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ERR_PARAM_VALUE}\~ 0x85U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ERR_PARAM_RANGE}\~ 0x86U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ERR_PARAM_LOW_VALUE}\~ 0x87U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ERR_PARAM_HIGH_VALUE}\~ 0x88U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ERR_PARAM_ADDRESS}\~ 0x89U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ERR_PARAM_PARITY}\~ 0x8AU\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ERR_PARAM_WIDTH}\~ 0x8BU\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ERR_PARAM_LENGTH}\~ 0x8CU\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ERR_PARAM_ADDRESS_TYPE}\~ 0x8DU\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ERR_PARAM_COMMAND_TYPE}\~ 0x8EU\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ERR_PARAM_COMMAND}\~ 0x8FU\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ERR_PARAM_RECIPIENT}\~ 0x90U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ERR_PARAM_BUFFER_COUNT}\~ 0x91U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ERR_PARAM_ID}\~ 0x92U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ERR_PARAM_GROUP}\~ 0x93U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ERR_PARAM_CHIP_SELECT}\~ 0x94U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ERR_PARAM_ATTRIBUTE_SET}\~ 0x95U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ERR_PARAM_SAMPLE_COUNT}\~ 0x96U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ERR_PARAM_CONDITION}\~ 0x97U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ERR_PARAM_TICKS}\~ 0x98U\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macro Definition Documentation\par
\pard\plain 
{\xe \v ERR_ARBITR\:PE_Error module documentation}
{\xe \v PE_Error module documentation\:ERR_ARBITR}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ERR_ARBITR\~ 0x15U}}
\par
{\bkmkstart AAAAAAAAZC}
{\bkmkend AAAAAAAAZC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A node losts arbitration. This error occurs if two nodes start transmission at the same time. \par
}}
{\xe \v ERR_BREAK\:PE_Error module documentation}
{\xe \v PE_Error module documentation\:ERR_BREAK}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ERR_BREAK\~ 0x13U}}
\par
{\bkmkstart AAAAAAAAZD}
{\bkmkend AAAAAAAAZD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Break char is received during communication. \par
}}
{\xe \v ERR_BUSOFF\:PE_Error module documentation}
{\xe \v PE_Error module documentation\:ERR_BUSOFF}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ERR_BUSOFF\~ 0x0CU}}
\par
{\bkmkstart AAAAAAAAZE}
{\bkmkend AAAAAAAAZE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Bus not available. \par
}}
{\xe \v ERR_BUSY\:PE_Error module documentation}
{\xe \v PE_Error module documentation\:ERR_BUSY}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ERR_BUSY\~ 0x08U}}
\par
{\bkmkstart AAAAAAAAZF}
{\bkmkend AAAAAAAAZF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Device is busy. \par
}}
{\xe \v ERR_COMMON\:PE_Error module documentation}
{\xe \v PE_Error module documentation\:ERR_COMMON}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ERR_COMMON\~ 0x19U}}
\par
{\bkmkstart AAAAAAAAZG}
{\bkmkend AAAAAAAAZG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Common error of a device. \par
}}
{\xe \v ERR_CRC\:PE_Error module documentation}
{\xe \v PE_Error module documentation\:ERR_CRC}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ERR_CRC\~ 0x14U}}
\par
{\bkmkstart AAAAAAAAZH}
{\bkmkend AAAAAAAAZH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
CRC error is detected. \par
}}
{\xe \v ERR_DISABLED\:PE_Error module documentation}
{\xe \v PE_Error module documentation\:ERR_DISABLED}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ERR_DISABLED\~ 0x07U}}
\par
{\bkmkstart AAAAAAAAZI}
{\bkmkend AAAAAAAAZI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Device is disabled. \par
}}
{\xe \v ERR_ENABLED\:PE_Error module documentation}
{\xe \v PE_Error module documentation\:ERR_ENABLED}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ERR_ENABLED\~ 0x06U}}
\par
{\bkmkstart AAAAAAAAZJ}
{\bkmkend AAAAAAAAZJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Device is enabled. \par
}}
{\xe \v ERR_FAILED\:PE_Error module documentation}
{\xe \v PE_Error module documentation\:ERR_FAILED}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ERR_FAILED\~ 0x1BU}}
\par
{\bkmkstart AAAAAAAAZK}
{\bkmkend AAAAAAAAZK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Requested functionality or process failed. \par
}}
{\xe \v ERR_FAULT\:PE_Error module documentation}
{\xe \v PE_Error module documentation\:ERR_FAULT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ERR_FAULT\~ 0x12U}}
\par
{\bkmkstart AAAAAAAAZL}
{\bkmkend AAAAAAAAZL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Fault error is detected. \par
}}
{\xe \v ERR_FRAMING\:PE_Error module documentation}
{\xe \v PE_Error module documentation\:ERR_FRAMING}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ERR_FRAMING\~ 0x0EU}}
\par
{\bkmkstart AAAAAAAAZM}
{\bkmkend AAAAAAAAZM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Framing error is detected. \par
}}
{\xe \v ERR_IDLE\:PE_Error module documentation}
{\xe \v PE_Error module documentation\:ERR_IDLE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ERR_IDLE\~ 0x11U}}
\par
{\bkmkstart AAAAAAAAZN}
{\bkmkend AAAAAAAAZN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Idle error is detected. \par
}}
{\xe \v ERR_LINSYNC\:PE_Error module documentation}
{\xe \v PE_Error module documentation\:ERR_LINSYNC}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ERR_LINSYNC\~ 0x1AU}}
\par
{\bkmkstart AAAAAAAAZO}
{\bkmkend AAAAAAAAZO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
LIN synchronization error is detected. \par
}}
{\xe \v ERR_MATH\:PE_Error module documentation}
{\xe \v PE_Error module documentation\:ERR_MATH}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ERR_MATH\~ 0x05U}}
\par
{\bkmkstart AAAAAAAAZP}
{\bkmkend AAAAAAAAZP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Overflow during evaluation. \par
}}
{\xe \v ERR_NOISE\:PE_Error module documentation}
{\xe \v PE_Error module documentation\:ERR_NOISE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ERR_NOISE\~ 0x10U}}
\par
{\bkmkstart AAAAAAAAZQ}
{\bkmkend AAAAAAAAZQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Noise error is detected. \par
}}
{\xe \v ERR_NOTAVAIL\:PE_Error module documentation}
{\xe \v PE_Error module documentation\:ERR_NOTAVAIL}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ERR_NOTAVAIL\~ 0x09U}}
\par
{\bkmkstart AAAAAAAAZR}
{\bkmkend AAAAAAAAZR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Requested value or method not available. \par
}}
{\xe \v ERR_OK\:PE_Error module documentation}
{\xe \v PE_Error module documentation\:ERR_OK}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ERR_OK\~ 0x00U}}
\par
{\bkmkstart AAAAAAAAZS}
{\bkmkend AAAAAAAAZS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
OK \par
}}
{\xe \v ERR_OVERFLOW\:PE_Error module documentation}
{\xe \v PE_Error module documentation\:ERR_OVERFLOW}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ERR_OVERFLOW\~ 0x04U}}
\par
{\bkmkstart AAAAAAAAZT}
{\bkmkend AAAAAAAAZT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Timer overflow. \par
}}
{\xe \v ERR_OVERRUN\:PE_Error module documentation}
{\xe \v PE_Error module documentation\:ERR_OVERRUN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ERR_OVERRUN\~ 0x0DU}}
\par
{\bkmkstart AAAAAAAAZU}
{\bkmkend AAAAAAAAZU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Overrun error is detected. \par
}}
{\xe \v ERR_PARAM_ADDRESS\:PE_Error module documentation}
{\xe \v PE_Error module documentation\:ERR_PARAM_ADDRESS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ERR_PARAM_ADDRESS\~ 0x89U}}
\par
{\bkmkstart AAAAAAAAZV}
{\bkmkend AAAAAAAAZV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Invalid address. \par
}}
{\xe \v ERR_PARAM_ADDRESS_TYPE\:PE_Error module documentation}
{\xe \v PE_Error module documentation\:ERR_PARAM_ADDRESS_TYPE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ERR_PARAM_ADDRESS_TYPE\~ 0x8DU}}
\par
{\bkmkstart AAAAAAAAZW}
{\bkmkend AAAAAAAAZW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Invalid address type. \par
}}
{\xe \v ERR_PARAM_ATTRIBUTE_SET\:PE_Error module documentation}
{\xe \v PE_Error module documentation\:ERR_PARAM_ATTRIBUTE_SET}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ERR_PARAM_ATTRIBUTE_SET\~ 0x95U}}
\par
{\bkmkstart AAAAAAAAZX}
{\bkmkend AAAAAAAAZX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Invalid set of attributes. \par
}}
{\xe \v ERR_PARAM_BUFFER_COUNT\:PE_Error module documentation}
{\xe \v PE_Error module documentation\:ERR_PARAM_BUFFER_COUNT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ERR_PARAM_BUFFER_COUNT\~ 0x91U}}
\par
{\bkmkstart AAAAAAAAZY}
{\bkmkend AAAAAAAAZY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Invalid buffer count. \par
}}
{\xe \v ERR_PARAM_CHIP_SELECT\:PE_Error module documentation}
{\xe \v PE_Error module documentation\:ERR_PARAM_CHIP_SELECT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ERR_PARAM_CHIP_SELECT\~ 0x94U}}
\par
{\bkmkstart AAAAAAAAZZ}
{\bkmkend AAAAAAAAZZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Invalid chip select. \par
}}
{\xe \v ERR_PARAM_COMMAND\:PE_Error module documentation}
{\xe \v PE_Error module documentation\:ERR_PARAM_COMMAND}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ERR_PARAM_COMMAND\~ 0x8FU}}
\par
{\bkmkstart AAAAAAABAA}
{\bkmkend AAAAAAABAA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Invalid command. \par
}}
{\xe \v ERR_PARAM_COMMAND_TYPE\:PE_Error module documentation}
{\xe \v PE_Error module documentation\:ERR_PARAM_COMMAND_TYPE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ERR_PARAM_COMMAND_TYPE\~ 0x8EU}}
\par
{\bkmkstart AAAAAAABAB}
{\bkmkend AAAAAAABAB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Invalid command type. \par
}}
{\xe \v ERR_PARAM_CONDITION\:PE_Error module documentation}
{\xe \v PE_Error module documentation\:ERR_PARAM_CONDITION}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ERR_PARAM_CONDITION\~ 0x97U}}
\par
{\bkmkstart AAAAAAABAC}
{\bkmkend AAAAAAABAC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Invalid condition. \par
}}
{\xe \v ERR_PARAM_DATA\:PE_Error module documentation}
{\xe \v PE_Error module documentation\:ERR_PARAM_DATA}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ERR_PARAM_DATA\~ 0x83U}}
\par
{\bkmkstart AAAAAAABAD}
{\bkmkend AAAAAAABAD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Invalid data. \par
}}
{\xe \v ERR_PARAM_GROUP\:PE_Error module documentation}
{\xe \v PE_Error module documentation\:ERR_PARAM_GROUP}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ERR_PARAM_GROUP\~ 0x93U}}
\par
{\bkmkstart AAAAAAABAE}
{\bkmkend AAAAAAABAE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Invalid group. \par
}}
{\xe \v ERR_PARAM_HIGH_VALUE\:PE_Error module documentation}
{\xe \v PE_Error module documentation\:ERR_PARAM_HIGH_VALUE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ERR_PARAM_HIGH_VALUE\~ 0x88U}}
\par
{\bkmkstart AAAAAAABAF}
{\bkmkend AAAAAAABAF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Invalid value (HIGH part). \par
}}
{\xe \v ERR_PARAM_ID\:PE_Error module documentation}
{\xe \v PE_Error module documentation\:ERR_PARAM_ID}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ERR_PARAM_ID\~ 0x92U}}
\par
{\bkmkstart AAAAAAABAG}
{\bkmkend AAAAAAABAG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Invalid ID. \par
}}
{\xe \v ERR_PARAM_INDEX\:PE_Error module documentation}
{\xe \v PE_Error module documentation\:ERR_PARAM_INDEX}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ERR_PARAM_INDEX\~ 0x82U}}
\par
{\bkmkstart AAAAAAABAH}
{\bkmkend AAAAAAABAH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Invalid index. \par
}}
{\xe \v ERR_PARAM_LENGTH\:PE_Error module documentation}
{\xe \v PE_Error module documentation\:ERR_PARAM_LENGTH}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ERR_PARAM_LENGTH\~ 0x8CU}}
\par
{\bkmkstart AAAAAAABAI}
{\bkmkend AAAAAAABAI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Invalid length. \par
}}
{\xe \v ERR_PARAM_LOW_VALUE\:PE_Error module documentation}
{\xe \v PE_Error module documentation\:ERR_PARAM_LOW_VALUE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ERR_PARAM_LOW_VALUE\~ 0x87U}}
\par
{\bkmkstart AAAAAAABAJ}
{\bkmkend AAAAAAABAJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Invalid value (LOW part). \par
}}
{\xe \v ERR_PARAM_MASK\:PE_Error module documentation}
{\xe \v PE_Error module documentation\:ERR_PARAM_MASK}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ERR_PARAM_MASK\~ 0x80U}}
\par
{\bkmkstart AAAAAAABAK}
{\bkmkend AAAAAAABAK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Invalid mask. \par
}}
{\xe \v ERR_PARAM_MODE\:PE_Error module documentation}
{\xe \v PE_Error module documentation\:ERR_PARAM_MODE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ERR_PARAM_MODE\~ 0x81U}}
\par
{\bkmkstart AAAAAAABAL}
{\bkmkend AAAAAAABAL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Invalid mode. \par
}}
{\xe \v ERR_PARAM_PARITY\:PE_Error module documentation}
{\xe \v PE_Error module documentation\:ERR_PARAM_PARITY}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ERR_PARAM_PARITY\~ 0x8AU}}
\par
{\bkmkstart AAAAAAABAM}
{\bkmkend AAAAAAABAM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Invalid parity. \par
}}
{\xe \v ERR_PARAM_RANGE\:PE_Error module documentation}
{\xe \v PE_Error module documentation\:ERR_PARAM_RANGE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ERR_PARAM_RANGE\~ 0x86U}}
\par
{\bkmkstart AAAAAAABAN}
{\bkmkend AAAAAAABAN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Invalid parameter's range or parameters' combination. \par
}}
{\xe \v ERR_PARAM_RECIPIENT\:PE_Error module documentation}
{\xe \v PE_Error module documentation\:ERR_PARAM_RECIPIENT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ERR_PARAM_RECIPIENT\~ 0x90U}}
\par
{\bkmkstart AAAAAAABAO}
{\bkmkend AAAAAAABAO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Invalid recipient. \par
}}
{\xe \v ERR_PARAM_SAMPLE_COUNT\:PE_Error module documentation}
{\xe \v PE_Error module documentation\:ERR_PARAM_SAMPLE_COUNT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ERR_PARAM_SAMPLE_COUNT\~ 0x96U}}
\par
{\bkmkstart AAAAAAABAP}
{\bkmkend AAAAAAABAP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Invalid sample count. \par
}}
{\xe \v ERR_PARAM_SIZE\:PE_Error module documentation}
{\xe \v PE_Error module documentation\:ERR_PARAM_SIZE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ERR_PARAM_SIZE\~ 0x84U}}
\par
{\bkmkstart AAAAAAABAQ}
{\bkmkend AAAAAAABAQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Invalid size. \par
}}
{\xe \v ERR_PARAM_TICKS\:PE_Error module documentation}
{\xe \v PE_Error module documentation\:ERR_PARAM_TICKS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ERR_PARAM_TICKS\~ 0x98U}}
\par
{\bkmkstart AAAAAAABAR}
{\bkmkend AAAAAAABAR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Invalid ticks parameter. \par
}}
{\xe \v ERR_PARAM_VALUE\:PE_Error module documentation}
{\xe \v PE_Error module documentation\:ERR_PARAM_VALUE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ERR_PARAM_VALUE\~ 0x85U}}
\par
{\bkmkstart AAAAAAABAS}
{\bkmkend AAAAAAABAS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Invalid value. \par
}}
{\xe \v ERR_PARAM_WIDTH\:PE_Error module documentation}
{\xe \v PE_Error module documentation\:ERR_PARAM_WIDTH}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ERR_PARAM_WIDTH\~ 0x8BU}}
\par
{\bkmkstart AAAAAAABAT}
{\bkmkend AAAAAAABAT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Invalid width. \par
}}
{\xe \v ERR_PARITY\:PE_Error module documentation}
{\xe \v PE_Error module documentation\:ERR_PARITY}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ERR_PARITY\~ 0x0FU}}
\par
{\bkmkstart AAAAAAABAU}
{\bkmkend AAAAAAABAU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Parity error is detected. \par
}}
{\xe \v ERR_PROTECT\:PE_Error module documentation}
{\xe \v PE_Error module documentation\:ERR_PROTECT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ERR_PROTECT\~ 0x16U}}
\par
{\bkmkstart AAAAAAABAV}
{\bkmkend AAAAAAABAV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Protection error is detected. \par
}}
{\xe \v ERR_QFULL\:PE_Error module documentation}
{\xe \v PE_Error module documentation\:ERR_QFULL}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ERR_QFULL\~ 0x1CU}}
\par
{\bkmkstart AAAAAAABAW}
{\bkmkend AAAAAAABAW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Queue is full. \par
}}
{\xe \v ERR_RANGE\:PE_Error module documentation}
{\xe \v PE_Error module documentation\:ERR_RANGE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ERR_RANGE\~ 0x02U}}
\par
{\bkmkstart AAAAAAABAX}
{\bkmkend AAAAAAABAX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Parameter out of range. \par
}}
{\xe \v ERR_RXEMPTY\:PE_Error module documentation}
{\xe \v PE_Error module documentation\:ERR_RXEMPTY}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ERR_RXEMPTY\~ 0x0AU}}
\par
{\bkmkstart AAAAAAABAY}
{\bkmkend AAAAAAABAY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
No data in receiver. \par
}}
{\xe \v ERR_SPEED\:PE_Error module documentation}
{\xe \v PE_Error module documentation\:ERR_SPEED}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ERR_SPEED\~ 0x01U}}
\par
{\bkmkstart AAAAAAABAZ}
{\bkmkend AAAAAAABAZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This device does not work in the active speed mode. \par
}}
{\xe \v ERR_TXFULL\:PE_Error module documentation}
{\xe \v PE_Error module documentation\:ERR_TXFULL}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ERR_TXFULL\~ 0x0BU}}
\par
{\bkmkstart AAAAAAABBA}
{\bkmkend AAAAAAABBA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Transmitter is full. \par
}}
{\xe \v ERR_UNDERFLOW\:PE_Error module documentation}
{\xe \v PE_Error module documentation\:ERR_UNDERFLOW}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ERR_UNDERFLOW\~ 0x17U}}
\par
{\bkmkstart AAAAAAABBB}
{\bkmkend AAAAAAABBB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Underflow error is detected. \par
}}
{\xe \v ERR_UNDERRUN\:PE_Error module documentation}
{\xe \v PE_Error module documentation\:ERR_UNDERRUN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ERR_UNDERRUN\~ 0x18U}}
\par
{\bkmkstart AAAAAAABBC}
{\bkmkend AAAAAAABBC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Underrun error is detected. \par
}}
{\xe \v ERR_VALUE\:PE_Error module documentation}
{\xe \v PE_Error module documentation\:ERR_VALUE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ERR_VALUE\~ 0x03U}}
\par
{\bkmkstart AAAAAAABBD}
{\bkmkend AAAAAAABBD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Parameter of incorrect value. \par
}}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
PE_LDD module documentation\par \pard\plain 
{\tc\tcl2 \v PE_LDD module documentation}
{\xe \v PE_LDD module documentation}
{\bkmkstart AAAAAAABBE}
{\bkmkend AAAAAAABBE}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b PE_FillMemory} (register void *SourceAddressPtr, register uint8_t c, register uint32_t len)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Fills a memory area block by a specified value. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b PE_PeripheralUsed} (uint32_t PrphBaseAddress)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Returns information whether a peripheral is allocated by PEx or not. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b LDD_SetClockConfiguration} ({\b LDD_TClockConfiguration} ClockConfiguration)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Changes the clock configuration of all LDD components in a project. }{
}\par
}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LDD_TDeviceData} * {\b PE_LDD_DeviceDataList} [16]\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const {\b TCpuClockConfiguration} {\b PE_CpuClockConfigurations} [CPU_CLOCK_CONFIG_NUMBER]\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v LDD_SetClockConfiguration\:PE_LDD module documentation}
{\xe \v PE_LDD module documentation\:LDD_SetClockConfiguration}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void LDD_SetClockConfiguration ({\b LDD_TClockConfiguration} {\i ClockConfiguration})}}
\par
{\bkmkstart AAAAAAABBF}
{\bkmkend AAAAAAABBF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Changes the clock configuration of all LDD components in a project. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i ClockConfiguration} \cell }{- New CPU clock configuration changed by CPU SetClockConfiguration method. \cell }
{\row }
}
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
< Parameter is not used, suppress unused argument warning \par
}}
{\xe \v PE_FillMemory\:PE_LDD module documentation}
{\xe \v PE_LDD module documentation\:PE_FillMemory}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void PE_FillMemory (register void * {\i SourceAddressPtr}, register uint8_t {\i c}, register uint32_t {\i len})}}
\par
{\bkmkstart AAAAAAABBG}
{\bkmkend AAAAAAABBG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Fills a memory area block by a specified value. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i SourceAddressPtr} \cell }{- Source address pointer. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i c} \cell }{- A value used to fill a memory block. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i len} \cell }{- Length of a memory block to fill. \cell }
{\row }
}
}}
{\xe \v PE_PeripheralUsed\:PE_LDD module documentation}
{\xe \v PE_LDD module documentation\:PE_PeripheralUsed}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool PE_PeripheralUsed (uint32_t {\i PrphBaseAddress})}}
\par
{\bkmkstart AAAAAAABBH}
{\bkmkend AAAAAAABBH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Returns information whether a peripheral is allocated by PEx or not. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i PrphBaseAddress} \cell }{- Base address of a peripheral. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid TRUE if a peripheral is used by PEx or FALSE if it isn't used. \par
}}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variable Documentation\par
\pard\plain 
{\xe \v PE_CpuClockConfigurations\:PE_LDD module documentation}
{\xe \v PE_LDD module documentation\:PE_CpuClockConfigurations}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const {\b TCpuClockConfiguration} PE_CpuClockConfigurations[CPU_CLOCK_CONFIG_NUMBER]}}
\par
{\bkmkstart AAAAAAABBI}
{\bkmkend AAAAAAABBI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Initial value:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid = \{\par
  \par
  \{\par
    CPU_CORE_CLK_HZ_CONFIG_0,          \par
    CPU_BUS_CLK_HZ_CONFIG_0,           \par
    CPU_FLEXBUS_CLK_HZ_CONFIG_0,       \par
    CPU_FLASH_CLK_HZ_CONFIG_0,         \par
    CPU_USB_CLK_HZ_CONFIG_0,           \par
    CPU_PLL_FLL_CLK_HZ_CONFIG_0,       \par
    CPU_MCGIR_CLK_HZ_CONFIG_0,         \par
    CPU_OSCER_CLK_HZ_CONFIG_0,         \par
    CPU_ERCLK32K_CLK_HZ_CONFIG_0,      \par
    CPU_MCGFF_CLK_HZ_CONFIG_0          \par
  \}\par
\}\par
}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The array of clock configurations (frequencies) configured in configured clock configurations of the CPU component. \par
}}
{\xe \v PE_LDD_DeviceDataList\:PE_LDD module documentation}
{\xe \v PE_LDD module documentation\:PE_LDD_DeviceDataList}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LDD_TDeviceData}* PE_LDD_DeviceDataList[16]}}
\par
{\bkmkstart AAAAAAABBJ}
{\bkmkend AAAAAAABBJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Initial value:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid = \{\par
    NULL,\par
    NULL,\par
    NULL,\par
    NULL,\par
    NULL,\par
    NULL,\par
    NULL,\par
    NULL,\par
    NULL,\par
    NULL,\par
    NULL,\par
    NULL,\par
    NULL,\par
    NULL,\par
    NULL,\par
    NULL\par
  \}\par
}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Array of LDD component device structures \par
}}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
PE_Types module documentation\par \pard\plain 
{\tc\tcl2 \v PE_Types module documentation}
{\xe \v PE_Types module documentation}
{\bkmkstart AAAAAAABBK}
{\bkmkend AAAAAAABBK}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Structures\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b LDD_TimeDate_TTimeRec}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b LDD_TimeDate_TDateRec}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b LDD_SERIAL_TStats}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b LDD_ADC_TPinMask}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b LDD_ADC_TSample}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b LDD_I2C_TStats}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b LDD_ETH_TBufferDesc}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b LDD_ETH_TStats}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b LDD_CAN_TStats}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b LDD_CAN_TFrame}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b LDD_USB_TSDP_Struct}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b LDD_USB_TEpDescriptor_Struct}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b LDD_USB_TDevDescriptor_Struct}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b LDD_USB_Device_TTD_Head_Struct}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b LDD_USB_Device_TTD_Struct}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b LDD_USB_Host_TPipeDescr_Struct}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b LDD_USB_Host_TTD_Struct}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b LDD_USB_TGetDecriptorRequest_Struct}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b LDD_USB_TEndpointStatusRequest_Struct}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b LDD_USB_TEndpointFeatureRequest_Struct}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b LDD_USB_TInterfaceFeatureRequest_Struct}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b LDD_USB_TDeviceFeatureRequest_Struct}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b LDD_USB_TGetInterfaceRequest_Struct}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b LDD_USB_TSetInterfaceRequest_Struct}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b LDD_USB_TSetAddressRequest_Struct}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b LDD_USB_TSetConfigRequest_Struct}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b LDD_FLASH_TErrorStatus}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b LDD_SDHC_TCardAccess}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b LDD_SDHC_TCardErase}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b LDD_SDHC_TCardWriteProtect}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b LDD_SDHC_TCardCaps}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b LDD_SDHC_TCardInfo}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b LDD_SDHC_TBufferDesc}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b LDD_DMA_TError}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b LDD_DMA_TTransferDescriptor}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b LDD_SPIMASTER_TStats}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b LDD_SPISLAVE_TStats}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b LDD_SSI_TDataBlocks}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b LDD_SSI_TAC97Command}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b LDD_SSI_TStats}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b LDD_RTC_TTime}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b LDD_CRC_TUserCRCStandard}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b LDD_LCDC_TBitmap}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b LDD_LCDC_TWindow}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macros\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b FALSE}\~ 0x00u                /* Boolean value FALSE. FALSE is defined always as a zero value. */{\bkmkstart AAAAAAAAHT}
{\bkmkend AAAAAAAAHT}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b TRUE}\~ 0x01u                /* Boolean value TRUE. TRUE is defined always as a non zero value. */{\bkmkstart AAAAAAAAHU}
{\bkmkend AAAAAAAAHU}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b NULL}\~ 0x00u{\bkmkstart AAAAAAAAHV}
{\bkmkend AAAAAAAAHV}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b __EI}()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b __DI}()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b EnterCritical}()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ExitCritical}()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b PE_DEBUGHALT}()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b PE_NOP}()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b PE_WFI}()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b PE_ISR}(ISR_name)\~ void __attribute__ ((interrupt)) ISR_name(void){\bkmkstart AAAAAAAAHW}
{\bkmkend AAAAAAAAHW}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b PE_LDD_VERSION}\~ 0x0100U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b PE_LDD_DRIVER_DISABLED_IN_CLOCK_CONFIGURATION}\~ 0x01U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b PE_LDD_DRIVER_DISABLED_BY_USER}\~ 0x02U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b PE_LDD_DRIVER_BUSY}\~ 0x04U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b PE_LDD_RegisterDeviceStructure}(ComponentIndex, DeviceStructure)\~ ({\b PE_LDD_DeviceDataList}[ComponentIndex] = DeviceStructure)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b PE_LDD_UnregisterDeviceStructure}(ComponentIndex)\~ ({\b PE_LDD_DeviceDataList}[ComponentIndex] = NULL)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b PE_LDD_GetDeviceStructure}(ComponentIndex)\~ ({\b PE_LDD_DeviceDataList}[ComponentIndex])\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b PE_LDD_COMPONENT_ASerialLdd1_ID}\~ 0x00U{\bkmkstart AAAAAAAAHX}
{\bkmkend AAAAAAAAHX}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b PE_LDD_COMPONENT_ASerialLdd2_ID}\~ 0x01U{\bkmkstart AAAAAAAAHY}
{\bkmkend AAAAAAAAHY}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b PE_LDD_COMPONENT_TU1_ID}\~ 0x02U{\bkmkstart AAAAAAAAHZ}
{\bkmkend AAAAAAAAHZ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b PE_LDD_COMPONENT_TimerIntLdd1_ID}\~ 0x03U{\bkmkstart AAAAAAAAIA}
{\bkmkend AAAAAAAAIA}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b PE_LDD_COMPONENT_RTC1_ID}\~ 0x04U{\bkmkstart AAAAAAAAIB}
{\bkmkend AAAAAAAAIB}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b PE_LDD_COMPONENT_SM1_ID}\~ 0x05U{\bkmkstart AAAAAAAAIC}
{\bkmkend AAAAAAAAIC}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b PE_LDD_COMPONENT_BitIoLdd7_ID}\~ 0x06U{\bkmkstart AAAAAAAAID}
{\bkmkend AAAAAAAAID}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b PE_LDD_COMPONENT_TU3_ID}\~ 0x07U{\bkmkstart AAAAAAAAIE}
{\bkmkend AAAAAAAAIE}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b PE_LDD_COMPONENT_RealTimeLdd1_ID}\~ 0x08U{\bkmkstart AAAAAAAAIF}
{\bkmkend AAAAAAAAIF}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b PE_LDD_COMPONENT_CI2C1_ID}\~ 0x09U{\bkmkstart AAAAAAAAIG}
{\bkmkend AAAAAAAAIG}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b PE_LDD_COMPONENT_TU4_ID}\~ 0x0AU{\bkmkstart AAAAAAAAIH}
{\bkmkend AAAAAAAAIH}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b PE_LDD_COMPONENT_RealTimeLdd2_ID}\~ 0x0BU{\bkmkstart AAAAAAAAII}
{\bkmkend AAAAAAAAII}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b PE_LDD_COMPONENT_ExtIntLdd4_ID}\~ 0x0CU{\bkmkstart AAAAAAAAIJ}
{\bkmkend AAAAAAAAIJ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b PE_LDD_COMPONENT_BitIoLdd8_ID}\~ 0x0DU{\bkmkstart AAAAAAAAIK}
{\bkmkend AAAAAAAAIK}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b PE_LDD_COMPONENT_TU6_ID}\~ 0x0EU{\bkmkstart AAAAAAAAIL}
{\bkmkend AAAAAAAAIL}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b PE_LDD_COMPONENT_BitIoLdd9_ID}\~ 0x0FU{\bkmkstart AAAAAAAAIM}
{\bkmkend AAAAAAAAIM}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_TIMERUNIT_ON_CHANNEL_0}\~ 0x01u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_TIMERUNIT_ON_CHANNEL_1}\~ 0x02u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_TIMERUNIT_ON_CHANNEL_2}\~ 0x04u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_TIMERUNIT_ON_CHANNEL_3}\~ 0x08u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_TIMERUNIT_ON_CHANNEL_4}\~ 0x10u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_TIMERUNIT_ON_CHANNEL_5}\~ 0x20u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_TIMERUNIT_ON_CHANNEL_6}\~ 0x40u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_TIMERUNIT_ON_CHANNEL_7}\~ 0x80u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_TIMERUNIT_ON_COUNTER_RESTART}\~ 0x0100u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_CMT_ON_END}\~ 0x01u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_PPG_ON_END}\~ 0x01u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_PWM_ON_END}\~ 0x01u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_CAPTURE_ON_CAPTURE}\~ 0x01u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_CAPTURE_ON_OVERRUN}\~ 0x02u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_TIMERINT_ON_INTERRUPT}\~ 0x01u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_TIMEROUT_ON_INTERRUPT}\~ 0x01u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_EVENTCNTR_ON_END}\~ 0x01u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_FREECNTR_ON_INTERRUPT}\~ 0x01u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_TIMEDATE_ON_ALARM}\~ 0x01u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_TIMEDATE_ON_SECOND}\~ 0x02u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_SERIAL_RX_PIN}\~ 0x01u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_SERIAL_TX_PIN}\~ 0x02u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_SERIAL_CTS_PIN}\~ 0x04u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_SERIAL_RTS_PIN}\~ 0x08u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_SERIAL_ON_BLOCK_RECEIVED}\~ 0x01u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_SERIAL_ON_BLOCK_SENT}\~ 0x02u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_SERIAL_ON_BREAK}\~ 0x04u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_SERIAL_ON_TXCOMPLETE}\~ 0x08u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_SERIAL_ON_ERROR}\~ 0x10u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_SERIAL_RX_OVERRUN}\~ 0x01u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_SERIAL_PARITY_ERROR}\~ 0x02u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_SERIAL_FRAMING_ERROR}\~ 0x04u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_SERIAL_NOISE_ERROR}\~ 0x08u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_ADC_CHANNEL_0_PIN}\~ 0x01u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_ADC_CHANNEL_1_PIN}\~ 0x02u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_ADC_CHANNEL_2_PIN}\~ 0x04u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_ADC_CHANNEL_3_PIN}\~ 0x08u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_ADC_CHANNEL_4_PIN}\~ 0x10u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_ADC_CHANNEL_5_PIN}\~ 0x20u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_ADC_CHANNEL_6_PIN}\~ 0x40u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_ADC_CHANNEL_7_PIN}\~ 0x80u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_ADC_CHANNEL_8_PIN}\~ 0x0100u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_ADC_CHANNEL_9_PIN}\~ 0x0200u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_ADC_CHANNEL_10_PIN}\~ 0x0400u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_ADC_CHANNEL_11_PIN}\~ 0x0800u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_ADC_CHANNEL_12_PIN}\~ 0x1000u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_ADC_CHANNEL_13_PIN}\~ 0x2000u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_ADC_CHANNEL_14_PIN}\~ 0x4000u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_ADC_CHANNEL_15_PIN}\~ 0x8000u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_ADC_CHANNEL_16_PIN}\~ 0x00010000u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_ADC_CHANNEL_17_PIN}\~ 0x00020000u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_ADC_CHANNEL_18_PIN}\~ 0x00040000u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_ADC_CHANNEL_19_PIN}\~ 0x00080000u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_ADC_CHANNEL_20_PIN}\~ 0x00100000u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_ADC_CHANNEL_21_PIN}\~ 0x00200000u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_ADC_CHANNEL_22_PIN}\~ 0x00400000u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_ADC_CHANNEL_23_PIN}\~ 0x00800000u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_ADC_CHANNEL_24_PIN}\~ 0x01000000u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_ADC_CHANNEL_25_PIN}\~ 0x02000000u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_ADC_CHANNEL_26_PIN}\~ 0x04000000u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_ADC_CHANNEL_27_PIN}\~ 0x08000000u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_ADC_CHANNEL_28_PIN}\~ 0x10000000u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_ADC_CHANNEL_29_PIN}\~ 0x20000000u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_ADC_CHANNEL_30_PIN}\~ 0x40000000u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_ADC_CHANNEL_31_PIN}\~ 0x80000000u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_ADC_CHANNEL_32_PIN}\~ 0x01u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_ADC_CHANNEL_33_PIN}\~ 0x02u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_ADC_CHANNEL_34_PIN}\~ 0x04u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_ADC_CHANNEL_35_PIN}\~ 0x08u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_ADC_CHANNEL_36_PIN}\~ 0x10u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_ADC_CHANNEL_37_PIN}\~ 0x20u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_ADC_CHANNEL_38_PIN}\~ 0x40u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_ADC_CHANNEL_39_PIN}\~ 0x80u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_ADC_CHANNEL_40_PIN}\~ 0x0100u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_ADC_CHANNEL_41_PIN}\~ 0x0200u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_ADC_CHANNEL_42_PIN}\~ 0x0400u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_ADC_CHANNEL_43_PIN}\~ 0x0800u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_ADC_CHANNEL_44_PIN}\~ 0x1000u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_ADC_CHANNEL_45_PIN}\~ 0x2000u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_ADC_CHANNEL_46_PIN}\~ 0x4000u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_ADC_CHANNEL_47_PIN}\~ 0x8000u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_ADC_CHANNEL_48_PIN}\~ 0x00010000u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_ADC_CHANNEL_49_PIN}\~ 0x00020000u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_ADC_CHANNEL_50_PIN}\~ 0x00040000u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_ADC_CHANNEL_51_PIN}\~ 0x00080000u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_ADC_CHANNEL_52_PIN}\~ 0x00100000u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_ADC_CHANNEL_53_PIN}\~ 0x00200000u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_ADC_CHANNEL_54_PIN}\~ 0x00400000u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_ADC_CHANNEL_55_PIN}\~ 0x00800000u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_ADC_CHANNEL_56_PIN}\~ 0x01000000u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_ADC_CHANNEL_57_PIN}\~ 0x02000000u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_ADC_CHANNEL_58_PIN}\~ 0x04000000u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_ADC_CHANNEL_59_PIN}\~ 0x08000000u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_ADC_CHANNEL_60_PIN}\~ 0x10000000u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_ADC_CHANNEL_61_PIN}\~ 0x20000000u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_ADC_CHANNEL_62_PIN}\~ 0x40000000u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_ADC_CHANNEL_63_PIN}\~ 0x80000000u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_ADC_TRIGGER_0_PIN}\~ 0x01u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_ADC_TRIGGER_1_PIN}\~ 0x02u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_ADC_LOW_VOLT_REF_PIN}\~ 0x01u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_ADC_HIGH_VOLT_REF_PIN}\~ 0x02u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_ADC_ON_MEASUREMENT_COMPLETE}\~ 0x40u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_ADC_ON_ERROR}\~ 0x80u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_ADC_DMA_ERROR}\~ 0x01u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_I2C_SDA_PIN}\~ 0x01u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_I2C_SCL_PIN}\~ 0x02u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_I2C_ON_MASTER_BLOCK_SENT}\~ 0x0001u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_I2C_ON_MASTER_BLOCK_RECEIVED}\~ 0x0002u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_I2C_ON_SLAVE_BLOCK_SENT}\~ 0x0004u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_I2C_ON_SLAVE_BLOCK_RECEIVED}\~ 0x0008u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_I2C_ON_SLAVE_TX_REQUEST}\~ 0x0010u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_I2C_ON_SLAVE_RX_REQUEST}\~ 0x0020u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_I2C_ON_ERROR}\~ 0x0040u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_I2C_ON_SLAVE_SM_BUS_CALL_ADDR}\~ 0x0080u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_I2C_ON_SLAVE_SM_BUS_ALERT_RESPONSE}\~ 0x0100u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_I2C_ON_SLAVE_GENERAL_CALL_ADDR}\~ 0x0200u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_I2C_ON_MASTER_BYTE_RECEIVED}\~ 0x0400u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_I2C_ON_SLAVE_BYTE_RECEIVED}\~ 0x0800u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_I2C_ON_BUS_START_DETECTED}\~ 0x1000u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_I2C_ON_BUS_STOP_DETECTED}\~ 0x2000u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_I2C_SLAVE_TX_UNDERRUN}\~ 0x0001u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_I2C_SLAVE_RX_OVERRUN}\~ 0x0002u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_I2C_ARBIT_LOST}\~ 0x0004u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_I2C_MASTER_NACK}\~ 0x0008u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_I2C_SCL_LOW_TIMEOUT}\~ 0x0010u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_I2C_SDA_LOW_TIMEOUT}\~ 0x0020u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_I2C_SLAVE_NACK}\~ 0x0040u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_SEGLCD_ON_FRAME_FREQUENCY}\~ 0x0001u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_SEGLCD_ON_FAULT_DETECT_COMPLETE}\~ 0x0002u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_GPIO_PIN_0}\~ 0x01u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_GPIO_PIN_1}\~ 0x02u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_GPIO_PIN_2}\~ 0x04u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_GPIO_PIN_3}\~ 0x08u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_GPIO_PIN_4}\~ 0x10u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_GPIO_PIN_5}\~ 0x20u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_GPIO_PIN_6}\~ 0x40u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_GPIO_PIN_7}\~ 0x80u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_GPIO_PIN_8}\~ 0x0100u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_GPIO_PIN_9}\~ 0x0200u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_GPIO_PIN_10}\~ 0x0400u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_GPIO_PIN_11}\~ 0x0800u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_GPIO_PIN_12}\~ 0x1000u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_GPIO_PIN_13}\~ 0x2000u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_GPIO_PIN_14}\~ 0x4000u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_GPIO_PIN_15}\~ 0x8000u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_GPIO_PIN_16}\~ 0x00010000u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_GPIO_PIN_17}\~ 0x00020000u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_GPIO_PIN_18}\~ 0x00040000u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_GPIO_PIN_19}\~ 0x00080000u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_GPIO_PIN_20}\~ 0x00100000u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_GPIO_PIN_21}\~ 0x00200000u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_GPIO_PIN_22}\~ 0x00400000u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_GPIO_PIN_23}\~ 0x00800000u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_GPIO_PIN_24}\~ 0x01000000u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_GPIO_PIN_25}\~ 0x02000000u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_GPIO_PIN_26}\~ 0x04000000u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_GPIO_PIN_27}\~ 0x08000000u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_GPIO_PIN_28}\~ 0x10000000u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_GPIO_PIN_29}\~ 0x20000000u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_GPIO_PIN_30}\~ 0x40000000u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_GPIO_PIN_31}\~ 0x80000000u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_GPIO_ON_PORT_EVENT}\~ 0x01u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b LDD_GPIO_EVENT_CONDITIONS_MASK}\~ 0x000F0000u{\bkmkstart AAAAAAAAIN}
{\bkmkend AAAAAAAAIN}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_BITSIO_PIN_0}\~ 0x01U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_BITSIO_PIN_1}\~ 0x02U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_BITSIO_PIN_2}\~ 0x04U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_BITSIO_PIN_3}\~ 0x08U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_BITSIO_PIN_4}\~ 0x10U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_BITSIO_PIN_5}\~ 0x20U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_BITSIO_PIN_6}\~ 0x40U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_BITSIO_PIN_7}\~ 0x80U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_BITSIO_PIN_8}\~ 0x0100U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_BITSIO_PIN_9}\~ 0x0200U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_BITSIO_PIN_10}\~ 0x0400U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_BITSIO_PIN_11}\~ 0x0800U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_BITSIO_PIN_12}\~ 0x1000U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_BITSIO_PIN_13}\~ 0x2000U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_BITSIO_PIN_14}\~ 0x4000U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_BITSIO_PIN_15}\~ 0x8000U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_BITSIO_PIN_16}\~ 0x00010000U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_BITSIO_PIN_17}\~ 0x00020000U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_BITSIO_PIN_18}\~ 0x00040000U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_BITSIO_PIN_19}\~ 0x00080000U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_BITSIO_PIN_20}\~ 0x00100000U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_BITSIO_PIN_21}\~ 0x00200000U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_BITSIO_PIN_22}\~ 0x00400000U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_BITSIO_PIN_23}\~ 0x00800000U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_BITSIO_PIN_24}\~ 0x01000000U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_BITSIO_PIN_25}\~ 0x02000000U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_BITSIO_PIN_26}\~ 0x04000000U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_BITSIO_PIN_27}\~ 0x08000000U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_BITSIO_PIN_28}\~ 0x10000000U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_BITSIO_PIN_29}\~ 0x20000000U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_BITSIO_PIN_30}\~ 0x40000000U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_BITSIO_PIN_31}\~ 0x80000000U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_ETH_MDC_PIN}\~ 0x01u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_ETH_MDIO_PIN}\~ 0x02u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_ETH_COL_PIN}\~ 0x04u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_ETH_CRS_PIN}\~ 0x08u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_ETH_TXCLK_PIN}\~ 0x10u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_ETH_TXD0_PIN}\~ 0x20u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_ETH_TXD1_PIN}\~ 0x40u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_ETH_TXD2_PIN}\~ 0x80u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_ETH_TXD3_PIN}\~ 0x0100u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_ETH_TXEN_PIN}\~ 0x0200u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_ETH_TXER_PIN}\~ 0x0400u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_ETH_RXCLK_PIN}\~ 0x0800u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_ETH_RXDV_PIN}\~ 0x1000u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_ETH_RXD0_PIN}\~ 0x2000u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_ETH_RXD1_PIN}\~ 0x4000u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_ETH_RXD2_PIN}\~ 0x8000u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_ETH_RXD3_PIN}\~ 0x00010000u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_ETH_RXER_PIN}\~ 0x00020000u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_ETH_ON_FRAME_TRANSMITTED}\~ 0x01u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_ETH_ON_FRAME_TRANSMITTED_TIMESTAMPED}\~ 0x02u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_ETH_ON_FRAME_RECEIVED}\~ 0x04u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_ETH_ON_FRAME_RECEIVED_TIMESTAMPED}\~ 0x08u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_ETH_ON_MII_FINISHED}\~ 0x10u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_ETH_ON_FATAL_ERROR}\~ 0x20u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_ETH_ON_WAKE_UP}\~ 0x40u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_CAN_RX_PIN}\~ 0x01U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_CAN_TX_PIN}\~ 0x02U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_CAN_ON_FULL_RXBUFFER}\~ 0x01U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_CAN_ON_FREE_TXBUFFER}\~ 0x02U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_CAN_ON_BUSOFF}\~ 0x04U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_CAN_ON_TXWARNING}\~ 0x08U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_CAN_ON_RXWARNING}\~ 0x10U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_CAN_ON_ERROR}\~ 0x20U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_CAN_ON_WAKEUP}\~ 0x40U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_CAN_BIT0_ERROR}\~ 0x4000UL\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_CAN_BIT1_ERROR}\~ 0x8000UL\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_CAN_ACK_ERROR}\~ 0x2000UL\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_CAN_CRC_ERROR}\~ 0x1000UL\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_CAN_FORM_ERROR}\~ 0x0800UL\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_CAN_STUFFING_ERROR}\~ 0x0400UL\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_CAN_MESSAGE_ID_EXT}\~ 0x80000000UL\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_USB_ON_DEVICE_RESET}\~ 0x00000001u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_USB_ON_DEVICE_SPEED_DETECT}\~ 0x00000002u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_USB_ON_DEVICE_SUSPEND}\~ 0x00000004u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_USB_ON_DEVICE_RESUME}\~ 0x00000008u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_USB_ON_DEVICE_SETUP_PACKET}\~ 0x00000010u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_USB_ON_DEVICE_SOF}\~ 0x00000020u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_USB_ON_DEVICE_1MS_TIMER}\~ 0x00000040u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_USB_ON_DEVICE_1_MS_TIMER}\~ 0x00000040u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_USB_ON_DEVICE_ERROR}\~ 0x00000080u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_USB_ON_HOST_DEVICE_DEATTACH}\~ 0x00000100u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_USB_ON_HOST_RESET_RECOVERY}\~ 0x00000200u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_USB_ON_HOST_RESUME_RECOVERY}\~ 0x00000400u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_USB_ON_HOST_1MS_TIMER}\~ 0x00000800u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_USB_ON_HOST_1_MS_TIMER}\~ 0x00000800u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_USB_ON_HOST_ERROR}\~ 0x00001000u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_USB_ON_OTG_DEVICE}\~ 0x00002000u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_USB_ON_OTG_HOST}\~ 0x00004000u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_USB_ON_OTG_STATE_CHANGE}\~ 0x00008000u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_USB_ON_SIGNAL_CHANGE}\~ 0x00010000u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_USB_DP_PIN}\~ 0x00000001u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_USB_DM_PIN}\~ 0x00000002u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_USB_DP_PU_PIN}\~ 0x00000004u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_USB_DM_PU_PIN}\~ 0x00000008u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_USB_DP_PD_PIN}\~ 0x00000010u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_USB_DM_PD_PIN}\~ 0x00000020u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_USB_DEVICE_VBUS_DETECT_PIN}\~ 0x00000040u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_USB_HOST_VBUS_ENABLE_PIN}\~ 0x00000080u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_USB_HOST_VBUS_OVERCURRENT_PIN}\~ 0x00000100u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_USB_OTG_ID_PIN}\~ 0x00000200u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_USB_OTG_VBUS_VALID_PIN}\~ 0x00000400u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_USB_OTG_SESSION_VALID_PIN}\~ 0x00000800u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_USB_OTG_B_SESSION_END_PIN}\~ 0x00004000u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_USB_OTG_VBUS_ENABLE_PIN}\~ 0x00008000u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_USB_OTG_VBUS_CHARGE_PIN}\~ 0x00010000u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_USB_OTG_VBUS_DISCHARGE_PIN}\~ 0x00020000u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_USB_ULPI_CLK_PIN}\~ 0x00080000u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_USB_ULPI_DIR_PIN}\~ 0x00100000u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_USB_ULPI_NXT_PIN}\~ 0x00200000u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_USB_ULPI_STP_PIN}\~ 0x00400000u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_USB_ULPI_DATA_0_PIN}\~ 0x00800000u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_USB_ULPI_DATA_1_PIN}\~ 0x01000000u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_USB_ULPI_DATA_2_PIN}\~ 0x02000000u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_USB_ULPI_DATA_3_PIN}\~ 0x04000000u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_USB_ULPI_DATA_4_PIN}\~ 0x08000000u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_USB_ULPI_DATA_5_PIN}\~ 0x10000000u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_USB_ULPI_DATA_6_PIN}\~ 0x20000000u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_USB_ULPI_DATA_7_PIN}\~ 0x40000000u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_USB_CLKIN_PIN}\~ 0x80000000u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_USB_ALT_CLK_PIN}\~ 0x80000000u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_USB_CMD_GET_EP_STATUS}\~ 0x00u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_USB_CMD_SET_EP_HALT_FATURE}\~ 0x01u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_USB_CMD_CLR_EP_HALT_FATURE}\~ 0x02u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_USB_CMD_EP_STATUS_HALT_MASK}\~ 0x01u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_USB_ID_EP0_OUT}\~ 0x00u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_USB_ID_EP0_IN}\~ 0x80u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_USB_ID_EP1_OUT}\~ 0x01u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_USB_ID_EP1_IN}\~ 0x81u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_USB_ID_EP2_OUT}\~ 0x02u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_USB_ID_EP2_IN}\~ 0x82u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_USB_ID_EP3_OUT}\~ 0x03u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_USB_ID_EP3_IN}\~ 0x83u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_USB_ID_EP4_OUT}\~ 0x04u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_USB_ID_EP4_IN}\~ 0x84u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_USB_ID_EP5_OUT}\~ 0x05u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_USB_ID_EP5_IN}\~ 0x85u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_USB_ID_EP6_OUT}\~ 0x06u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_USB_ID_EP6_IN}\~ 0x86u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_USB_ID_EP7_OUT}\~ 0x07u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_USB_ID_EP7_IN}\~ 0x87u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_USB_ID_EP8_OUT}\~ 0x08u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_USB_ID_EP8_IN}\~ 0x88u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_USB_ID_EP9_OUT}\~ 0x09u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_USB_ID_EP9_IN}\~ 0x89u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_USB_ID_EP10_OUT}\~ 0x0Au\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_USB_ID_EP10_IN}\~ 0x8Au\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_USB_ID_EP11_OUT}\~ 0x0Bu\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_USB_ID_EP11_IN}\~ 0x8Bu\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_USB_ID_EP12_OUT}\~ 0x0Cu\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_USB_ID_EP12_IN}\~ 0x8Cu\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_USB_ID_EP13_OUT}\~ 0x0Du\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_USB_ID_EP13_IN}\~ 0x8Du\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_USB_ID_EP14_OUT}\~ 0x0Eu\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_USB_ID_EP14_IN}\~ 0x8Eu\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_USB_ID_EP15_OUT}\~ 0x0Fu\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_USB_ID_EP15_IN}\~ 0x8Fu\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_USB_ID_EP_MASK}\~ 0x8Fu\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_USB_PID_OUT}\~ 0x01u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_USB_PID_IN}\~ 0x09u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_USB_PID_SOF}\~ 0x05u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_USB_PID_SETUP}\~ 0x0Du\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_USB_PID_DATA0}\~ 0x03u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_USB_PID_DATA1}\~ 0x0Bu\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_USB_PID_DATA2}\~ 0x07u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_USB_PID_MDATA}\~ 0x0Fu\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_USB_PID_ACK}\~ 0x02u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_USB_PID_NACK}\~ 0x0Au\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_USB_PID_STALL}\~ 0x0Eu\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_USB_PID_NYET}\~ 0x06u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_USB_PID_PRE}\~ 0x0Cu\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_USB_PID_ERR}\~ 0x0Cu\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_USB_PID_SPLIT}\~ 0x08u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_USB_PID_PING}\~ 0x04u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_USB_DIR_OUT}\~ 0x00u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_USB_DIR_IN}\~ 0x80u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_USB_DIR_MASK}\~ 0x80u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b LDD_USB_DEVICE_TRANSFER_FLAG_ZLT}\~ 0x01u{\bkmkstart AAAAAAAAIO}
{\bkmkend AAAAAAAAIO}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b LDD_USB_DEVICE_TRANSFER_FLAG_EXT_PARAM}\~ 0x02u{\bkmkstart AAAAAAAAIP}
{\bkmkend AAAAAAAAIP}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b ERR_COMPONET_SPECIFIC}\~ 0x100u{\bkmkstart AAAAAAAAIQ}
{\bkmkend AAAAAAAAIQ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ERR_USB_DEVICE_DISABLED}\~ (ERR_COMPONET_SPECIFIC + 0x00u)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ERR_USB_DEVICE_DISABLED_BY_OTG}\~ (ERR_COMPONET_SPECIFIC + 0x01u)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ERR_USB_DEVICE_VBUS_OFF}\~ (ERR_COMPONET_SPECIFIC + 0x02u)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ERR_USB_DEVICE_VBUS_ON}\~ (ERR_COMPONET_SPECIFIC + 0x03u)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ERR_USB_DEVICE_ENABLED}\~ (ERR_COMPONET_SPECIFIC + 0x04u)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ERR_USB_DEVICE_SUSPENDED}\~ (ERR_COMPONET_SPECIFIC + 0x05u)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ERR_USB_DEVICE_SUSPENDED_RESUME_READY}\~ (ERR_COMPONET_SPECIFIC + 0x06u)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ERR_USB_DEVICE_RESUME_PENDING}\~ (ERR_COMPONET_SPECIFIC + 0x07u)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ERR_USB_HOST_DISABLED}\~ (ERR_COMPONET_SPECIFIC + 0x00u)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ERR_USB_HOST_DISABLED_BY_OTG}\~ (ERR_COMPONET_SPECIFIC + 0x01u)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ERR_USB_HOST_PORT_POWERED_OFF}\~ (ERR_COMPONET_SPECIFIC + 0x02u)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ERR_USB_HOST_PORT_DISCONNECTED}\~ (ERR_COMPONET_SPECIFIC + 0x03u)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ERR_USB_HOST_PORT_DISABLED}\~ (ERR_COMPONET_SPECIFIC + 0x04u)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ERR_USB_HOST_PORT_RESETING}\~ (ERR_COMPONET_SPECIFIC + 0x05u)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ERR_USB_HOST_PORT_RESET_RECOVERING}\~ (ERR_COMPONET_SPECIFIC + 0x06u)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ERR_USB_HOST_PORT_ENABLED}\~ (ERR_COMPONET_SPECIFIC + 0x07u)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ERR_USB_HOST_PORT_SUSPENDED}\~ (ERR_COMPONET_SPECIFIC + 0x08u)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ERR_USB_HOST_PORT_RESUME_READY}\~ (ERR_COMPONET_SPECIFIC + 0x09u)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ERR_USB_HOST_PORT_RESUMING}\~ (ERR_COMPONET_SPECIFIC + 0x0Au)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ERR_USB_HOST_PORT_RESUME_RECOVERING}\~ (ERR_COMPONET_SPECIFIC + 0x0Bu)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ERR_USB_OTG_DISABLED}\~ (ERR_COMPONET_SPECIFIC + 0x00u)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ERR_USB_OTG_ENABLED_PENDING}\~ (ERR_COMPONET_SPECIFIC + 0x01u)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ERR_USB_OTG_A_IDLE}\~ (ERR_COMPONET_SPECIFIC + 0x02u)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ERR_USB_OTG_A_WAIT_VRISE}\~ (ERR_COMPONET_SPECIFIC + 0x03u)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ERR_USB_OTG_A_WAIT_VFALL}\~ (ERR_COMPONET_SPECIFIC + 0x05u)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ERR_USB_OTG_A_WAIT_BCON}\~ (ERR_COMPONET_SPECIFIC + 0x07u)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ERR_USB_OTG_A_VBUS_ERROR}\~ (ERR_COMPONET_SPECIFIC + 0x09u)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ERR_USB_OTG_A_SUSPEND}\~ (ERR_COMPONET_SPECIFIC + 0x0Au)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ERR_USB_OTG_B_IDLE}\~ (ERR_COMPONET_SPECIFIC + 0x0Cu)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ERR_USB_OTG_B_SRP_INIT}\~ (ERR_COMPONET_SPECIFIC + 0x0Eu)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ERR_USB_OTG_B_WAIT_ACON}\~ (ERR_COMPONET_SPECIFIC + 0x0Fu)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ERR_USB_OTG_A_HOST}\~ (ERR_COMPONET_SPECIFIC + 0x10u)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ERR_USB_OTG_A_PERIPHERAL}\~ (ERR_COMPONET_SPECIFIC + 0x11u)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ERR_USB_OTG_B_HOST}\~ (ERR_COMPONET_SPECIFIC + 0x12u)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ERR_USB_OTG_B_PERIPHERAL}\~ (ERR_COMPONET_SPECIFIC + 0x13u)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_USB_REQ_TYPE_STANDARD}\~ 0x00u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_USB_REQ_TYPE_CLASS}\~ 0x20u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_USB_REQ_TYPE_VENDOR}\~ 0x40u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_USB_REQ_TYPE_MASK}\~ 0x60u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_USB_REQ_RECP_DEVICE}\~ 0x00u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_USB_REQ_RECP_INTERFACE}\~ 0x01u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_USB_REQ_RECP_ENDPOINT}\~ 0x02u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_USB_REQ_RECP_OTHER}\~ 0x03u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_USB_REQ_RECP_MASK}\~ 0x03u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_USB_REQ_GET_STATUS}\~ 0x00u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_USB_REQ_CLEAR_FEATURE}\~ 0x01u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_USB_REQ_SET_FEATURE}\~ 0x03u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_USB_REQ_GET_STATE}\~ 0x04u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_USB_REQ_SET_ADDRESS}\~ 0x05u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_USB_REQ_GET_DESCRIPTOR}\~ 0x06u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_USB_REQ_SET_DESCRIPTOR}\~ 0x07u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_USB_REQ_GET_CONFIGURATION}\~ 0x08u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_USB_REQ_SET_CONFIGURATION}\~ 0x09u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_USB_REQ_GET_INTERFACE}\~ 0x0Au\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_USB_REQ_SET_INTERFACE}\~ 0x0Bu\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_USB_REQ_SYNCH_FRAME}\~ 0x0Cu\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_USB_STD_REQ_GET_DEV_STATUS}\~ 0x0080u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_USB_STD_REQ_CLR_DEV_FEATURE}\~ 0x0100u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_USB_STD_REQ_SET_DEV_FEATURE}\~ 0x0300u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_USB_STD_REQ_SET_ADDRESS}\~ 0x0500u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_USB_STD_REQ_GET_DESCRIPTOR}\~ 0x0680u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_USB_STD_REQ_SET_DESCRIPTOR}\~ 0x0700u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_USB_STD_REQ_GET_CONFIGURATION}\~ 0x0880u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_USB_STD_REQ_SET_CONFIGURATION}\~ 0x0900u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_USB_STD_REQ_GET_INT_STATUS}\~ 0x0081u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_USB_STD_REQ_CLR_INT_FEATURE}\~ 0x0101u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_USB_STD_REQ_SET_INT_FEATURE}\~ 0x0301u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_USB_STD_REQ_GET_INTERFACE}\~ 0x0A81u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_USB_STD_REQ_SET_INTERFACE}\~ 0x0B01u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_USB_STD_REQ_GET_EP_STATUS}\~ 0x0082u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_USB_STD_REQ_CLR_EP_FEATURE}\~ 0x0102u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_USB_STD_REQ_SET_EP_FEATURE}\~ 0x0302u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_USB_STD_REQ_SYNCH_FRAME}\~ 0x0C12u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b LDD_USB_STATUS_DEVICE_SELF_POWERED_MASK}\~ 0x01u{\bkmkstart AAAAAAAAIR}
{\bkmkend AAAAAAAAIR}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b LDD_USB_STATUS_DEVICE_REMOTE_WAKEUP_MASK}\~ 0x02u{\bkmkstart AAAAAAAAIS}
{\bkmkend AAAAAAAAIS}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_USB_DT_DEVICE}\~ 0x01u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_USB_DT_CONFIGURATION}\~ 0x02u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_USB_DT_STRING}\~ 0x03u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_USB_DT_INTERFACE}\~ 0x04u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_USB_DT_ENDPOINT}\~ 0x05u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_USB_DT_DEVICE_QUALIFIER}\~ 0x06u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_USB_DT_OTHER_SPEED_CONFIGURATION}\~ 0x07u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_USB_DT_INTERFACE_POWER}\~ 0x08u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_USB_DT_OTG}\~ 0x09u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_USB_DT_DEBUG}\~ 0x0Au\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_USB_DT_INTERFACE_ASSOCIATION}\~ 0x0Bu\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_USB_FEATURE_EP_HALT}\~ 0x00u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_USB_FEATURE_DEV_REMOTE_WAKEUP}\~ 0x01u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_USB_FEATURE_DEV_TEST_MODE}\~ 0x02u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_DAC_OUTPUT_PIN_0}\~ 0x01u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_DAC_ON_BUFFER_END}\~ 0x01U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_DAC_ON_BUFFER_START}\~ 0x02U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_DAC_ON_BUFFER_WATERMARK}\~ 0x04U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_DAC_ON_COMPLETE}\~ {\b LDD_DMA_ON_COMPLETE}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_DAC_ON_ERROR}\~ {\b LDD_DMA_ON_ERROR}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_DAC_DMA_ERROR}\~ 0x01u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_FLASH_ON_OPERATION_COMPLETE}\~ 0x02u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_FLASH_ON_ERROR}\~ 0x04u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_FLASH_READ_COLLISION_ERROR}\~ 0x40u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_FLASH_ACCESS_ERROR}\~ 0x20u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_FLASH_PROTECTION_VIOLATION}\~ 0x10u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_FLASH_ERASE_VERIFICATION_ERROR}\~ 0x08u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_FLASH_MULTIPLE_WRITE_ERROR}\~ 0x04u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_ANALOGCOMP_ON_COMPARE}\~ 0x01u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_ANALOGCOMP_POSITIVE_INPUT_0_MASK}\~ 0x01U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_ANALOGCOMP_POSITIVE_INPUT_1_MASK}\~ 0x02U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_ANALOGCOMP_POSITIVE_INPUT_2_MASK}\~ 0x04U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_ANALOGCOMP_POSITIVE_INPUT_3_MASK}\~ 0x08U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_ANALOGCOMP_POSITIVE_INPUT_4_MASK}\~ 0x10U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_ANALOGCOMP_POSITIVE_INPUT_5_MASK}\~ 0x20U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_ANALOGCOMP_POSITIVE_INPUT_6_MASK}\~ 0x40U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_ANALOGCOMP_POSITIVE_INPUT_7_MASK}\~ 0x80U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_ANALOGCOMP_NEGATIVE_INPUT_0_MASK}\~ 0x0100U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_ANALOGCOMP_NEGATIVE_INPUT_1_MASK}\~ 0x0200U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_ANALOGCOMP_NEGATIVE_INPUT_2_MASK}\~ 0x0400U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_ANALOGCOMP_NEGATIVE_INPUT_3_MASK}\~ 0x0800U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_ANALOGCOMP_NEGATIVE_INPUT_4_MASK}\~ 0x1000U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_ANALOGCOMP_NEGATIVE_INPUT_5_MASK}\~ 0x2000U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_ANALOGCOMP_NEGATIVE_INPUT_6_MASK}\~ 0x4000U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_ANALOGCOMP_NEGATIVE_INPUT_7_MASK}\~ 0x8000U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_ANALOGCOMP_OUTPUT_PIN_MASK}\~ 0x00010000U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b LDD_ANALOGCOMP_WINDOWSAMPLE_PIN_MASK}\~ 0x00020000UL{\bkmkstart AAAAAAAAIT}
{\bkmkend AAAAAAAAIT}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_SDHC_CARD_DATA_WIDTH_1_BIT}\~ 0x01u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_SDHC_CARD_DATA_WIDTH_4_BIT}\~ 0x02u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_SDHC_CARD_DATA_WIDTH_8_BIT}\~ 0x04u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_SDHC_CARD_BLOCK_READ}\~ 0x01u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_SDHC_CARD_BLOCK_WRITE}\~ 0x04u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_SDHC_CARD_ERASE}\~ 0x08u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_SDHC_CARD_WRITE_PROTECTION}\~ 0x10u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_SDHC_CARD_IO}\~ 0x80u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_SDHC_CLK_PIN}\~ 0x01u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_SDHC_CMD_PIN}\~ 0x02u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_SDHC_DAT0_PIN}\~ 0x04u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_SDHC_DAT1_PIN}\~ 0x08u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_SDHC_DAT2_PIN}\~ 0x10u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_SDHC_DAT3_PIN}\~ 0x20u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_SDHC_DAT4_PIN}\~ 0x40u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_SDHC_DAT5_PIN}\~ 0x80u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_SDHC_DAT6_PIN}\~ 0x0100u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_SDHC_DAT7_PIN}\~ 0x0200u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_SDHC_CD_PIN}\~ 0x0400u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_SDHC_WP_PIN}\~ 0x0800u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_SDHC_LCTL_PIN}\~ 0x1000u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_SDHC_VS_PIN}\~ 0x2000u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_SDHC_ON_CARD_INSERTED}\~ 0x01u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_SDHC_ON_CARD_REMOVED}\~ 0x02u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_SDHC_ON_FINISHED}\~ 0x04u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_DMA_ON_COMPLETE}\~ 0x01U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_DMA_ON_ERROR}\~ 0x02U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_DMA_CONFIGURATION_ERROR}\~ 0x40000000U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_DMA_SOURCE_BUS_ERROR}\~ 0x20000000U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_DMA_DESTINATION_BUS_ERROR}\~ 0x10000000U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_DMA_CHANNEL_PRIORITY_ERROR}\~ 0x4000U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_DMA_SOURCE_ADDRESS_ERROR}\~ 0x80U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_DMA_SOURCE_OFFSET_ERROR}\~ 0x40U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_DMA_DESTINATION_ADDRESS_ERROR}\~ 0x20U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_DMA_DESTINATION_OFFSET_ERROR}\~ 0x10U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_DMA_COUNT_ERROR}\~ 0x08U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_DMA_SCATTER_GATHER_ERROR}\~ 0x04U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_DMA_CHANNEL_0_MASK}\~ 0x01U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_DMA_CHANNEL_1_MASK}\~ 0x02U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_DMA_CHANNEL_2_MASK}\~ 0x04U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_DMA_CHANNEL_3_MASK}\~ 0x08U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_DMA_CHANNEL_4_MASK}\~ 0x10U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_DMA_CHANNEL_5_MASK}\~ 0x20U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_DMA_CHANNEL_6_MASK}\~ 0x40U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_DMA_CHANNEL_7_MASK}\~ 0x80U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_DMA_CHANNEL_8_MASK}\~ 0x0100U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_DMA_CHANNEL_9_MASK}\~ 0x0200U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_DMA_CHANNEL_10_MASK}\~ 0x0400U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_DMA_CHANNEL_11_MASK}\~ 0x0800U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_DMA_CHANNEL_12_MASK}\~ 0x1000U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_DMA_CHANNEL_13_MASK}\~ 0x2000U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_DMA_CHANNEL_14_MASK}\~ 0x4000U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_DMA_CHANNEL_15_MASK}\~ 0x8000U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_DMA_NO_ACTION}\~ 0x00U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_DMA_DESTINATION_ADDRESS_ADJUSTMENT}\~ 0x01U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_DMA_SOURCE_ADDRESS_ADJUSTMENT}\~ 0x02U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_DMA_ADDRESS_ADJUSTMENT}\~ 0x01U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_DMA_SCATTER_GATHER}\~ 0x02U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_SPIMASTER_INPUT_PIN}\~ 0x01U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_SPIMASTER_OUTPUT_PIN}\~ 0x02U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_SPIMASTER_CLK_PIN}\~ 0x04U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_SPIMASTER_CS_0_PIN}\~ 0x08U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_SPIMASTER_CS_1_PIN}\~ 0x10U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_SPIMASTER_CS_2_PIN}\~ 0x20U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_SPIMASTER_CS_3_PIN}\~ 0x40U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_SPIMASTER_CS_4_PIN}\~ 0x80U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_SPIMASTER_CS_5_PIN}\~ 0x0100U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_SPIMASTER_CS_6_PIN}\~ 0x0200U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_SPIMASTER_CS_7_PIN}\~ 0x0400U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_SPIMASTER_CSS_PIN}\~ 0x0800U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_SPIMASTER_ON_BLOCK_RECEIVED}\~ 0x01U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_SPIMASTER_ON_BLOCK_SENT}\~ 0x02U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_SPIMASTER_ON_ERROR}\~ 0x04U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_SPIMASTER_RX_OVERFLOW}\~ 0x01U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_SPIMASTER_PARITY_ERROR}\~ 0x02U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_SPIMASTER_RX_DMA_ERROR}\~ 0x04U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_SPIMASTER_TX_DMA_ERROR}\~ 0x08U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_SPISLAVE_INPUT_PIN}\~ 0x01U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_SPISLAVE_OUTPUT_PIN}\~ 0x02U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_SPISLAVE_CLK_PIN}\~ 0x04U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_SPISLAVE_SS_PIN}\~ 0x08U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_SPISLAVE_ON_BLOCK_RECEIVED}\~ 0x01U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_SPISLAVE_ON_BLOCK_SENT}\~ 0x02U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_SPISLAVE_ON_ERROR}\~ 0x04U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_SPISLAVE_RX_OVERFLOW}\~ 0x01U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_SPISLAVE_TX_UNDERFLOW}\~ 0x02U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_SPISLAVE_PARITY_ERROR}\~ 0x04U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_SPISLAVE_RX_DMA_ERROR}\~ 0x08U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_SPISLAVE_TX_DMA_ERROR}\~ 0x10U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_SSI_INPUT_PIN}\~ 0x01U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_SSI_OUTPUT_PIN}\~ 0x02U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_SSI_RX_CLK_PIN}\~ 0x04U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_SSI_TX_CLK_PIN}\~ 0x08U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_SSI_RX_FS_PIN}\~ 0x10U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_SSI_TX_FS_PIN}\~ 0x20U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_SSI_MCLK_PIN}\~ 0x40U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_SSI_INPUT_PIN_CHANNEL_0}\~ 0x80U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_SSI_INPUT_PIN_CHANNEL_1}\~ 0x0100U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_SSI_OUTPUT_PIN_CHANNEL_0}\~ 0x0200U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_SSI_OUTPUT_PIN_CHANNEL_1}\~ 0x0400U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_SSI_ON_BLOCK_RECEIVED}\~ 0x01u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_SSI_ON_BLOCK_SENT}\~ 0x02u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_SSI_ON_ERROR}\~ 0x04u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_SSI_ON_BLOCK_RECEIVED_1}\~ 0x08u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_SSI_ON_BLOCK_SENT_1}\~ 0x10u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_SSI_ON_RECEIVE_FRAME_SYNC}\~ 0x20u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_SSI_ON_TRANSMIT_FRAME_SYNC}\~ 0x40u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_SSI_ON_RECEIVE_LAST_SLOT}\~ 0x80u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_SSI_ON_TRANSMIT_LAST_SLOT}\~ 0x0100u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_SSI_ON_RECEIVE_COMPLETE}\~ 0x0200u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_SSI_ON_TRANSMIT_COMPLETE}\~ 0x0400u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_SSI_ON_A_C_9_7_TAG_UPDATED}\~ 0x0800u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_SSI_ON_AC_97_TAG_UPDATED}\~ 0x0800u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_SSI_ON_A_C_9_7_COMMAND_ADDRESS_UPDATED}\~ 0x1000u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_SSI_ON_AC_97_COMMAND_ADDRESS_UPDATED}\~ 0x1000u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_SSI_ON_A_C_9_7_COMMAND_DATA_UPDATED}\~ 0x2000u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_SSI_ON_AC_97_COMMAND_DATA_UPDATED}\~ 0x2000u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_SSI_RECEIVER}\~ (I2S_CR_RE_MASK)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_SSI_TRANSMITTER}\~ (I2S_CR_TE_MASK)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_SSI_RX_OVERFLOW}\~ (I2S_ISR_ROE0_MASK)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_SSI_RX_OVERFLOW_1}\~ (I2S_ISR_ROE1_MASK)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_SSI_TX_UNDERFLOW}\~ (I2S_ISR_TUE0_MASK)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_SSI_TX_UNDERFLOW_1}\~ (I2S_ISR_TUE1_MASK)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_SSI_RX_FRAME_COMPLETE}\~ (I2S_ISR_RFRC_MASK)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_SSI_TX_FRAME_COMPLETE}\~ (I2S_ISR_TFRC_MASK)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_SSI_RX_FRAME_SYNC}\~ (I2S_ISR_RFS_MASK)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_SSI_TX_FRAME_SYNC}\~ (I2S_ISR_TFS_MASK)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_SSI_RX_LAST_SLOT}\~ (I2S_ISR_RLS_MASK)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_SSI_TX_LAST_SLOT}\~ (I2S_ISR_TLS_MASK)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_SSI_AC97_TAG}\~ (I2S_ISR_RXT_MASK)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_SSI_AC97_COMMAND_ADDRESS}\~ (I2S_ISR_CMDAU_MASK)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_SSI_AC97_COMMAND_DATA}\~ (I2S_ISR_CMDDU_MASK)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_RTC_ON_SECOND}\~ 0x10u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_RTC_ON_MONOTONIC_OVERFLOW}\~ 0x08u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_RTC_ON_ALARM}\~ 0x04u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_RTC_ON_TIME_OVERFLOW}\~ 0x02u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_RTC_ON_TIME_INVALID}\~ 0x01u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_RTC_ON_STOPWATCH}\~ 0x0100u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_CRC_16_SEED_LOW}\~ 0x00U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_CRC_16_POLY_LOW}\~ 0x8005U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_CRC_32_SEED_LOW}\~ 0xFFFFU\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_CRC_32_SEED_HIGH}\~ 0xFFFFU\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_CRC_32_POLY_LOW}\~ 0x1DB7U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_CRC_32_POLY_HIGH}\~ 0x04C1U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_CRC_CCITT_SEED_LOW}\~ 0xFFFFU\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_CRC_CCITT_POLY_LOW}\~ 0x1021U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_CRC_MODBUS_16_SEED_LOW}\~ 0xFFFFU\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_CRC_MODBUS_16_POLY_LOW}\~ 0x8005U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_CRC_KERMIT_SEED_LOW}\~ 0x00U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_CRC_KERMIT_POLY_LOW}\~ 0x1021U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_CRC_DNP_SEED_LOW}\~ 0x00U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_CRC_DNP_POLY_LOW}\~ 0x3D65U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_RNG_LFSR_ERROR}\~ 0x01U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_RNG_OSCILLATOR_ERROR}\~ 0x02U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_RNG_SELF_TEST_ERROR}\~ 0x04U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_RNG_STATISTICAL_ERROR}\~ 0x08U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_RNG_FIFO_UNDERFLOW_ERROR}\~ 0x10U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_RNG_SELF_TETS_RESEED_ERROR}\~ 0x00200000U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_RNG_SELF_TEST_PRNG_ERROR}\~ 0x00400000U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_RNG_SELF_TEST_TRNG_ERROR}\~ 0x00800000U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_RNG_MONOBIT_TEST_ERROR}\~ 0x01000000U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_RNG_LENGTH_1_RUN_TEST_ERROR}\~ 0x02000000U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_RNG_LENGTH_2_RUN_TEST_ERROR}\~ 0x04000000U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_RNG_LENGTH_3_RUN_TEST_ERROR}\~ 0x08000000U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_RNG_LENGTH_4_RUN_TEST_ERROR}\~ 0x10000000U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_RNG_LENGTH_5_RUN_TEST_ERROR}\~ 0x20000000U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_RNG_LENGTH_6_RUN_TEST_ERROR}\~ 0x40000000U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_RNG_LONG_RUN_TEST_ERROR}\~ 0x80000000U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_RNG_ON_SEED_GENERATION_DONE}\~ 0x01U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_RNG_ON_SELF_TEST_DONE}\~ 0x02U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_RNG_ON_ERROR_LFSR}\~ 0x04U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_RNG_ON_OSC_ERROR}\~ 0x08U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_RNG_ON_SELF_TEST_ERROR}\~ 0x10U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_RNG_ON_STATISTICAL_ERROR}\~ 0x20U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_RNG_ON_FIFO_UNDER_FLOW_ERROR}\~ 0x40U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_RNG_ON_FIFOUNDER_FLOW_ERROR}\~ 0x40U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_RNG_STATUS_ERROR}\~ 0xFFFFU\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_RNG_STATUS_NEW_SEED_DONE}\~ 0x40U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_RNG_STATUS_SEED_DONE}\~ 0x20U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_RNG_STATUS_SELF_TEST_DONE}\~ 0x10U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_RNG_STATUS_RESEED_NEEDED}\~ 0x08U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_RNG_STATUS_SLEEP}\~ 0x04U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_RNG_STATUS_BUSY}\~ 0x02U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_RNG_ON_ERROR}\~ 0x01U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_RNG_STATUS_SECURITY_VIOLATION}\~ 0x01U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_RNG_STATUS_LAST_READ_UNDERFLOW}\~ 0x02U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_RNG_STATUS_OUT_REG_UNDERFLOW}\~ 0x04U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_RNG_STATUS_ERR_INT_PENDING}\~ 0x08U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_RNG_STATUS_SLEEP_MODE}\~ 0x10U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_DRY_ON_TAMPER_DETECTED}\~ 0x01U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_DRY_TIME_OVERFLOW}\~ 0x04U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_DRY_MONOTONIC_OVERFLOW}\~ 0x08U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_DRY_VOLTAGE_TAMPER}\~ 0x10U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_DRY_CLOCK_TAMPER}\~ 0x20U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_DRY_TEMPERATURE_TAMPER}\~ 0x40U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_DRY_SECURITY_TAMPER}\~ 0x80U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_DRY_FLASH_SECURITY}\~ 0x0100U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_DRY_TEST_MODE}\~ 0x0200U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_DRY_TAMPER_PIN_0}\~ 0x00010000U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_DRY_TAMPER_PIN_1}\~ 0x00020000U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_DRY_TAMPER_PIN_2}\~ 0x00040000U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_DRY_TAMPER_PIN_3}\~ 0x00080000U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_DRY_TAMPER_PIN_4}\~ 0x00100000U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_DRY_TAMPER_PIN_5}\~ 0x00200000U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_DRY_TAMPER_PIN_6}\~ 0x00400000U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_DRY_TAMPER_PIN_7}\~ 0x00800000U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_DRY_SECURE_KEY_WORD_0}\~ 0x01U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_DRY_SECURE_KEY_WORD_1}\~ 0x02U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_DRY_SECURE_KEY_WORD_2}\~ 0x04U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_DRY_SECURE_KEY_WORD_3}\~ 0x08U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_DRY_SECURE_KEY_WORD_4}\~ 0x10U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_DRY_SECURE_KEY_WORD_5}\~ 0x20U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_DRY_SECURE_KEY_WORD_6}\~ 0x40U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_DRY_SECURE_KEY_WORD_7}\~ 0x80U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_NFC_ON_CMD_ERROR}\~ 0x01U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_NFC_ON_CMD_DONE}\~ 0x02U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_NFC_CE0_PIN}\~ 0x01U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_NFC_RB0_PIN}\~ 0x02U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_NFC_CE1_PIN}\~ 0x04U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_NFC_RB1_PIN}\~ 0x08U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_NFC_CE2_PIN}\~ 0x10U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_NFC_RB2_PIN}\~ 0x20U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_NFC_CE3_PIN}\~ 0x40U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_NFC_RB3_PIN}\~ 0x80U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_NFC_ALE_PIN}\~ 0x0100U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_NFC_CLE_PIN}\~ 0x0200U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_NFC_RE_PIN}\~ 0x0400U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_NFC_WE_PIN}\~ 0x0800U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_NFC_D0_PIN}\~ 0x00010000U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_NFC_D1_PIN}\~ 0x00020000U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_NFC_D2_PIN}\~ 0x00040000U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_NFC_D3_PIN}\~ 0x00080000U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_NFC_D4_PIN}\~ 0x00100000U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_NFC_D5_PIN}\~ 0x00200000U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_NFC_D6_PIN}\~ 0x00400000U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_NFC_D7_PIN}\~ 0x00800000U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_NFC_D8_PIN}\~ 0x01000000U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_NFC_D9_PIN}\~ 0x02000000U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_NFC_D10_PIN}\~ 0x04000000U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_NFC_D11_PIN}\~ 0x08000000U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_NFC_D12_PIN}\~ 0x10000000U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_NFC_D13_PIN}\~ 0x20000000U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_NFC_D14_PIN}\~ 0x40000000U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_NFC_D15_PIN}\~ 0x80000000U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_LCDC_ON_ERROR}\~ 0x01U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_LCDC_ON_START_OF_FRAME}\~ 0x02U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_LCDC_ON_END_OF_FRAME}\~ 0x04U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_LCDC_NO_ERR}\~ 0x00U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_LCDC_PLANE_0_UNDERRUN_ERR}\~ 0x01U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_LCDC_PLANE_1_UNDERRUN_ERR}\~ 0x02U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_LCDC_REVERSED_VERTICAL_SCAN}\~ 0x8000U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b LDD_ivIndex_INT_Initial_Stack_Pointer}\~ 0x00u{\bkmkstart AAAAAAAAIU}
{\bkmkend AAAAAAAAIU}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b LDD_ivIndex_INT_Initial_Program_Counter}\~ 0x01u{\bkmkstart AAAAAAAAIV}
{\bkmkend AAAAAAAAIV}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b LDD_ivIndex_INT_NMI}\~ 0x02u{\bkmkstart AAAAAAAAIW}
{\bkmkend AAAAAAAAIW}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b LDD_ivIndex_INT_Hard_Fault}\~ 0x03u{\bkmkstart AAAAAAAAIX}
{\bkmkend AAAAAAAAIX}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b LDD_ivIndex_INT_Reserved4}\~ 0x04u{\bkmkstart AAAAAAAAIY}
{\bkmkend AAAAAAAAIY}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b LDD_ivIndex_INT_Reserved5}\~ 0x05u{\bkmkstart AAAAAAAAIZ}
{\bkmkend AAAAAAAAIZ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b LDD_ivIndex_INT_Reserved6}\~ 0x06u{\bkmkstart AAAAAAAAJA}
{\bkmkend AAAAAAAAJA}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b LDD_ivIndex_INT_Reserved7}\~ 0x07u{\bkmkstart AAAAAAAAJB}
{\bkmkend AAAAAAAAJB}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b LDD_ivIndex_INT_Reserved8}\~ 0x08u{\bkmkstart AAAAAAAAJC}
{\bkmkend AAAAAAAAJC}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b LDD_ivIndex_INT_Reserved9}\~ 0x09u{\bkmkstart AAAAAAAAJD}
{\bkmkend AAAAAAAAJD}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b LDD_ivIndex_INT_Reserved10}\~ 0x0Au{\bkmkstart AAAAAAAAJE}
{\bkmkend AAAAAAAAJE}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b LDD_ivIndex_INT_SVCall}\~ 0x0Bu{\bkmkstart AAAAAAAAJF}
{\bkmkend AAAAAAAAJF}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b LDD_ivIndex_INT_Reserved12}\~ 0x0Cu{\bkmkstart AAAAAAAAJG}
{\bkmkend AAAAAAAAJG}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b LDD_ivIndex_INT_Reserved13}\~ 0x0Du{\bkmkstart AAAAAAAAJH}
{\bkmkend AAAAAAAAJH}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b LDD_ivIndex_INT_PendableSrvReq}\~ 0x0Eu{\bkmkstart AAAAAAAAJI}
{\bkmkend AAAAAAAAJI}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b LDD_ivIndex_INT_SysTick}\~ 0x0Fu{\bkmkstart AAAAAAAAJJ}
{\bkmkend AAAAAAAAJJ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b LDD_ivIndex_INT_DMA0}\~ 0x10u{\bkmkstart AAAAAAAAJK}
{\bkmkend AAAAAAAAJK}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b LDD_ivIndex_INT_DMA1}\~ 0x11u{\bkmkstart AAAAAAAAJL}
{\bkmkend AAAAAAAAJL}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b LDD_ivIndex_INT_DMA2}\~ 0x12u{\bkmkstart AAAAAAAAJM}
{\bkmkend AAAAAAAAJM}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b LDD_ivIndex_INT_DMA3}\~ 0x13u{\bkmkstart AAAAAAAAJN}
{\bkmkend AAAAAAAAJN}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b LDD_ivIndex_INT_Reserved20}\~ 0x14u{\bkmkstart AAAAAAAAJO}
{\bkmkend AAAAAAAAJO}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b LDD_ivIndex_INT_FTFA}\~ 0x15u{\bkmkstart AAAAAAAAJP}
{\bkmkend AAAAAAAAJP}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b LDD_ivIndex_INT_LVD_LVW}\~ 0x16u{\bkmkstart AAAAAAAAJQ}
{\bkmkend AAAAAAAAJQ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b LDD_ivIndex_INT_LLW}\~ 0x17u{\bkmkstart AAAAAAAAJR}
{\bkmkend AAAAAAAAJR}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b LDD_ivIndex_INT_I2C0}\~ 0x18u{\bkmkstart AAAAAAAAJS}
{\bkmkend AAAAAAAAJS}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b LDD_ivIndex_INT_I2C1}\~ 0x19u{\bkmkstart AAAAAAAAJT}
{\bkmkend AAAAAAAAJT}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b LDD_ivIndex_INT_SPI0}\~ 0x1Au{\bkmkstart AAAAAAAAJU}
{\bkmkend AAAAAAAAJU}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b LDD_ivIndex_INT_SPI1}\~ 0x1Bu{\bkmkstart AAAAAAAAJV}
{\bkmkend AAAAAAAAJV}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b LDD_ivIndex_INT_UART0}\~ 0x1Cu{\bkmkstart AAAAAAAAJW}
{\bkmkend AAAAAAAAJW}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b LDD_ivIndex_INT_UART1}\~ 0x1Du{\bkmkstart AAAAAAAAJX}
{\bkmkend AAAAAAAAJX}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b LDD_ivIndex_INT_UART2}\~ 0x1Eu{\bkmkstart AAAAAAAAJY}
{\bkmkend AAAAAAAAJY}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b LDD_ivIndex_INT_ADC0}\~ 0x1Fu{\bkmkstart AAAAAAAAJZ}
{\bkmkend AAAAAAAAJZ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b LDD_ivIndex_INT_CMP0}\~ 0x20u{\bkmkstart AAAAAAAAKA}
{\bkmkend AAAAAAAAKA}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b LDD_ivIndex_INT_TPM0}\~ 0x21u{\bkmkstart AAAAAAAAKB}
{\bkmkend AAAAAAAAKB}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b LDD_ivIndex_INT_TPM1}\~ 0x22u{\bkmkstart AAAAAAAAKC}
{\bkmkend AAAAAAAAKC}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b LDD_ivIndex_INT_TPM2}\~ 0x23u{\bkmkstart AAAAAAAAKD}
{\bkmkend AAAAAAAAKD}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b LDD_ivIndex_INT_RTC}\~ 0x24u{\bkmkstart AAAAAAAAKE}
{\bkmkend AAAAAAAAKE}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b LDD_ivIndex_INT_RTC_Seconds}\~ 0x25u{\bkmkstart AAAAAAAAKF}
{\bkmkend AAAAAAAAKF}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b LDD_ivIndex_INT_PIT}\~ 0x26u{\bkmkstart AAAAAAAAKG}
{\bkmkend AAAAAAAAKG}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b LDD_ivIndex_INT_Reserved39}\~ 0x27u{\bkmkstart AAAAAAAAKH}
{\bkmkend AAAAAAAAKH}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b LDD_ivIndex_INT_USB0}\~ 0x28u{\bkmkstart AAAAAAAAKI}
{\bkmkend AAAAAAAAKI}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b LDD_ivIndex_INT_DAC0}\~ 0x29u{\bkmkstart AAAAAAAAKJ}
{\bkmkend AAAAAAAAKJ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b LDD_ivIndex_INT_TSI0}\~ 0x2Au{\bkmkstart AAAAAAAAKK}
{\bkmkend AAAAAAAAKK}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b LDD_ivIndex_INT_MCG}\~ 0x2Bu{\bkmkstart AAAAAAAAKL}
{\bkmkend AAAAAAAAKL}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b LDD_ivIndex_INT_LPTimer}\~ 0x2Cu{\bkmkstart AAAAAAAAKM}
{\bkmkend AAAAAAAAKM}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b LDD_ivIndex_INT_Reserved45}\~ 0x2Du{\bkmkstart AAAAAAAAKN}
{\bkmkend AAAAAAAAKN}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b LDD_ivIndex_INT_PORTA}\~ 0x2Eu{\bkmkstart AAAAAAAAKO}
{\bkmkend AAAAAAAAKO}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b LDD_ivIndex_INT_PORTD}\~ 0x2Fu{\bkmkstart AAAAAAAAKP}
{\bkmkend AAAAAAAAKP}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Typedefs\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

typedef unsigned char {\b bool}{\bkmkstart AAAAAAAAKQ}
{\bkmkend AAAAAAAAKQ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

typedef unsigned char {\b byte}{\bkmkstart AAAAAAAAKR}
{\bkmkend AAAAAAAAKR}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

typedef unsigned short {\b word}{\bkmkstart AAAAAAAAKS}
{\bkmkend AAAAAAAAKS}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

typedef unsigned long {\b dword}{\bkmkstart AAAAAAAAKT}
{\bkmkend AAAAAAAAKT}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

typedef unsigned long long {\b dlong}{\bkmkstart AAAAAAAAKU}
{\bkmkend AAAAAAAAKU}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

typedef unsigned char {\b TPE_ErrCode}{\bkmkstart AAAAAAAAKV}
{\bkmkend AAAAAAAAKV}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

typedef float {\b TPE_Float}{\bkmkstart AAAAAAAAKW}
{\bkmkend AAAAAAAAKW}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

typedef char {\b char_t}{\bkmkstart AAAAAAAAKX}
{\bkmkend AAAAAAAAKX}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

typedef signed char {\b int8}{\bkmkstart AAAAAAAAKY}
{\bkmkend AAAAAAAAKY}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

typedef signed short int {\b int16}{\bkmkstart AAAAAAAAKZ}
{\bkmkend AAAAAAAAKZ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

typedef signed long int {\b int32}{\bkmkstart AAAAAAAALA}
{\bkmkend AAAAAAAALA}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

typedef unsigned char {\b uint8}{\bkmkstart AAAAAAAALB}
{\bkmkend AAAAAAAALB}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

typedef unsigned short int {\b uint16}{\bkmkstart AAAAAAAALC}
{\bkmkend AAAAAAAALC}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

typedef unsigned long int {\b uint32}{\bkmkstart AAAAAAAALD}
{\bkmkend AAAAAAAALD}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef uint32_t {\b LDD_TPinMask}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef uint16_t {\b LDD_TError}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef uint32_t {\b LDD_TEventMask}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef uint8_t {\b LDD_TClockConfiguration}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef void {\b LDD_TDeviceData}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef void * {\b LDD_TDeviceDataPtr}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef void {\b LDD_TData}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef void {\b LDD_TUserData}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef uint16_t {\b LDD_TDriverState}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef void {\b LDD_TCallbackParam}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef void(* {\b LDD_TCallback} )({\b LDD_TCallbackParam} *CallbackParam)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef float {\b LDD_TimerUnit_Tfloat}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef float {\b LDD_PPG_Tfloat}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef float {\b LDD_RealTime_Tfloat}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef uint32_t {\b LDD_SERIAL_TError}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef uint8_t {\b LDD_SERIAL_TDataWidth}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef uint16_t {\b LDD_SERIAL_TSize}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef uint8_t {\b LDD_SERIAL_TBaudMode}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef uint32_t {\b LDD_ADC_TErrorMask}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef uint16_t {\b LDD_I2C_TSize}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef uint16_t {\b LDD_I2C_TAddr}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef uint16_t {\b LDD_I2C_TErrorMask}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef bool {\b LDD_I2C_TMode}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef uint8_t {\b LDD_SegLCD_TPinIndex}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef uint8_t {\b LDD_SegLCD_TFrontplaneData}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef uint8_t {\b LDD_SegLCD_TFaultValue}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef uint32_t {\b LDD_GPIO_TBitField}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef uint8_t {\b LDD_ETH_TMACAddress} [6]\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef {\b LDD_ETH_TBufferDesc} * {\b LDD_ETH_TBufferDescPtr}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef uint8_t {\b LDD_CAN_TMBIndex}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef uint32_t {\b LDD_CAN_TAccMask}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef uint32_t {\b LDD_CAN_TMessageID}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef uint8_t {\b LDD_CAN_TErrorCounter}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef uint32_t {\b LDD_CAN_TErrorMask}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef uint16_t {\b LDD_CAN_TBufferMask}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef struct {\b LDD_USB_TSDP_Struct} {\b LDD_USB_TSDP}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef struct \par
{\b LDD_USB_TEpDescriptor_Struct} {\b LDD_USB_TEpDescriptor}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef struct \par
{\b LDD_USB_TDevDescriptor_Struct} {\b LDD_USB_TDevDescriptor}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef void( {\b LDD_USB_Device_TTransferDoneCalback} )({\b LDD_TDeviceData} *DevDataPtr, struct {\b LDD_USB_Device_TTD_Struct} *TrParamPtr)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef struct \par
{\b LDD_USB_Device_TTD_Head_Struct} {\b LDD_USB_Device_TTD_Head}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef struct \par
{\b LDD_USB_Device_TTD_Struct} {\b LDD_USB_Device_TTD}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef void {\b LDD_USB_Host_TPipeHandle}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef void {\b LDD_USB_Host_TTransferHandle}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef struct \par
{\b LDD_USB_Host_TPipeDescr_Struct} {\b LDD_USB_Host_TPipeDescr}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef void( {\b LDD_USB_Host_TTransferDoneCalback} )({\b LDD_TDeviceData} *DevDataPtr, {\b LDD_TData} *BufferPtr, uint16_t BufferSize, uint8_t *ParamPtr, {\b LDD_USB_TTransferState} Status)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef struct \par
{\b LDD_USB_Host_TTD_Struct} {\b LDD_USB_Host_TTD}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef struct \par
{\b LDD_USB_TGetDecriptorRequest_Struct} {\b LDD_USB_TGetDecriptorRequest}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef struct \par
{\b LDD_USB_TEndpointStatusRequest_Struct} {\b LDD_USB_TEndpointStatusRequest}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef struct \par
{\b LDD_USB_TEndpointFeatureRequest_Struct} {\b LDD_USB_TEndpointFeatureRequest}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef struct \par
{\b LDD_USB_TInterfaceFeatureRequest_Struct} {\b LDD_USB_TInterfaceFeatureRequest}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef struct \par
{\b LDD_USB_TDeviceFeatureRequest_Struct} {\b LDD_USB_TDeviceFeatureRequest}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef struct \par
{\b LDD_USB_TGetInterfaceRequest_Struct} {\b LDD_USB_TGetInterfaceRequest}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef struct \par
{\b LDD_USB_TSetInterfaceRequest_Struct} {\b LDD_USB_TSetInterfaceRequest}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef struct \par
{\b LDD_USB_TSetAddressRequest_Struct} {\b LDD_USB_TSetAddressRequest}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef struct \par
{\b LDD_USB_TSetConfigRequest_Struct} {\b LDD_USB_TSetConfigRequest}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef void * {\b LDD_DAC_TDataPtr}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef uint32_t {\b LDD_DAC_TData}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef uint32_t {\b LDD_DAC_TErrorMask}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef uint32_t {\b LDD_DAC_TArrayLength}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef uint8_t {\b LDD_FLASH_TErrorFlags}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef uint32_t {\b LDD_FLASH_TAddress}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef uint32_t {\b LDD_FLASH_TDataSize}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef uint16_t {\b LDD_FLASH_TErasableUnitSize}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef uint8_t {\b LDD_AnalogComp_TOutputValue}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

typedef void {\b LDD_DMA_TData}{\bkmkstart AAAAAAAALE}
{\bkmkend AAAAAAAALE}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

typedef uint8_t {\b LDD_DMA_TTransactionSize}{\bkmkstart AAAAAAAALF}
{\bkmkend AAAAAAAALF}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

typedef uint32_t {\b LDD_DMA_TTransactionCount}{\bkmkstart AAAAAAAALG}
{\bkmkend AAAAAAAALG}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

typedef uint32_t {\b LDD_DMA_TRequestCount}{\bkmkstart AAAAAAAALH}
{\bkmkend AAAAAAAALH}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

typedef uint32_t {\b LDD_DMA_TTransferDataSize}{\bkmkstart AAAAAAAALI}
{\bkmkend AAAAAAAALI}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef uint32_t {\b LDD_DMA_TAddress}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef int32_t {\b LDD_DMA_TAddressOffset}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef uint32_t {\b LDD_DMA_TByteCount}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef uint8_t {\b LDD_DMA_TTransferSize}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef uint8_t {\b LDD_DMA_TModuloSize}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef uint8_t {\b LDD_DMA_TTriggerSource}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef uint8_t {\b LDD_DMA_TChannelNumber}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef uint8_t {\b LDD_DMA_TRecordNumber}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef uint16_t {\b LDD_DMA_TChannelMask}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef uint8_t {\b LDD_DMA_TChannelPriority}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef uint8_t {\b LDD_DMA_TOuterLoopCount}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef uint8_t {\b LDD_DMA_TAfterRequest}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef uint8_t {\b LDD_DMA_TAfterTransfer}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef uint8_t {\b LDD_DMA_TBandwidthControl}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef uint32_t {\b LDD_DMA_TErrorFlags}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef \par
{\b LDD_DMA_TTransferDescriptor} * {\b LDD_DMA_TTransferDescriptorPtr}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef uint32_t {\b LDD_SPIMASTER_TError}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef uint32_t {\b LDD_SPISLAVE_TError}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef uint8_t {\b LDD_SSI_TSectionMask}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef uint32_t {\b LDD_SSI_TError}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef uint32_t {\b LDD_SSI_TComStatus}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef uint32_t {\b LDD_NFC_TTargetID}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Enumerations\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b LDD_TDriverOperationMode} \{ {\b DOM_NONE}, 
{\b DOM_RUN}, 
{\b DOM_WAIT}, 
{\b DOM_SLEEP}, 
{\b DOM_STOP}
 \}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b LDD_TimerUnit_TCounterDirection} \{ {\b DIR_UP}, 
{\b DIR_DOWN}
 \}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b LDD_TimerUnit_TOutAction} \{ {\b OUTPUT_NONE}, 
{\b OUTPUT_TOGGLE}, 
{\b OUTPUT_CLEAR}, 
{\b OUTPUT_SET}
 \}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b LDD_TimerUnit_TEdge} \{ {\b EDGE_NONE}, 
{\b EDGE_RISING}, 
{\b EDGE_FALLING}, 
{\b EDGE_BOTH}
 \}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b LDD_SERIAL_TParity} \{ {\b LDD_SERIAL_PARITY_UNDEF}, 
{\b LDD_SERIAL_PARITY_NONE}, 
{\b LDD_SERIAL_PARITY_ODD}, 
{\b LDD_SERIAL_PARITY_EVEN}, 
{\b LDD_SERIAL_PARITY_MARK}, 
{\b LDD_SERIAL_PARITY_SPACE}
 \}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b LDD_SERIAL_TStopBitLen} \{ {\b LDD_SERIAL_STOP_BIT_LEN_UNDEF}, 
{\b LDD_SERIAL_STOP_BIT_LEN_1}, 
{\b LDD_SERIAL_STOP_BIT_LEN_1_5}, 
{\b LDD_SERIAL_STOP_BIT_LEN_2}
 \}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b LDD_SERIAL_TLoopMode} \{ {\b LOOPMODE_UNDEF}, 
{\b LOOPMODE_NORMAL}, 
{\b LOOPMODE_AUTO_ECHO}, 
{\b LOOPMODE_LOCAL_LOOPBACK}, 
{\b LOOPMODE_REMOTE_LOOPBACK}
 \}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b LDD_ADC_TCompareMode} \{ {\b LDD_ADC_LESS_THAN} = 0x00u, 
{\b LDD_ADC_GREATER_THAN_OR_EQUAL} = 0x01u, 
{\b LDD_ADC_INSIDE_RANGE_INCLUSIVE} = 0x02u, 
{\b LDD_ADC_INSIDE_RANGE_NOT_INCLUSIVE} = 0x03u, 
{\b LDD_ADC_OUTSIDE_RANGE_INCLUSIVE} = 0x04u, 
{\b LDD_ADC_OUTSIDE_RANGE_NOT_INCLUSIVE} = 0x05u
 \}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b LDD_I2C_TAddrType} \{ {\b LDD_I2C_ADDRTYPE_7BITS}, 
{\b LDD_I2C_ADDRTYPE_10BITS}, 
{\b LDD_I2C_ADDRTYPE_GENERAL_CALL}
 \}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b LDD_I2C_TSendStop} \{ {\b LDD_I2C_NO_SEND_STOP}, 
{\b LDD_I2C_SEND_STOP}
 \}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b LDD_I2C_TBusState} \{ {\b LDD_I2C_BUSY}, 
{\b LDD_I2C_IDLE}
 \}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b LDD_I2C_TAckType} \{ {\b LDD_I2C_ACK_BYTE}, 
{\b LDD_I2C_NACK_BYTE}
 \}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b LDD_SegLCD_TBlinking} \{ {\b LDD_SEGLCD_BLINK_OFF}, 
{\b LDD_SEGLCD_BLINK_ALL}, 
{\b LDD_SEGLCD_BLINK_ALL_ALTERNATE}
 \}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b LDD_SegLCD_TSetBlank} \{ {\b LDD_SEGLCD_BLANK_STATE}, 
{\b LDD_SEGLCD_NORMAL_STATE}, 
{\b LDD_SEGLCD_ALTERNATE_STATE}
 \}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b LDD_SegLCD_TPinType} \{ {\b LDD_SEGLCD_BACKPLANE_PIN}, 
{\b LDD_SEGLCD_FRONTPLANE_PIN}
 \}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b LDD_GPIO_TEventCondition} \{ {\b LDD_GPIO_DISABLED} = 0x00u, 
{\b LDD_GPIO_LOW} = 0x00080000u, 
{\b LDD_GPIO_HIGH} = 0x000C0000u, 
{\b LDD_GPIO_RISING} = 0x00090000u, 
{\b LDD_GPIO_FALLING} = 0x000A0000u, 
{\b LDD_GPIO_BOTH} = 0x000B0000u
 \}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b LDD_ETH_TDuplexMode} \{ {\b LDD_ETH_FULL_DUPLEX}, 
{\b LDD_ETH_HALF_DUPLEX}
 \}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b LDD_ETH_TFilterMode} \{ {\b LDD_ETH_PROMISC}, 
{\b LDD_ETH_REJECT_BC}, 
{\b LDD_ETH_ACCEPT_BC}
 \}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b LDD_ETH_TSleepMode} \{ {\b LDD_ETH_ENABLED}, 
{\b LDD_ETH_ENABLED_WITH_WAKEUP}, 
{\b LDD_ETH_DISABLED}
 \}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b LDD_CAN_TRxBufferState} \{ {\b LDD_CAN_MB_RX_NOT_ACTIVE} = 0x00U, 
{\b LDD_CAN_MB_RX_FULL} = 0x02U, 
{\b LDD_CAN_MB_RX_EMPTY} = 0x04U, 
{\b LDD_CAN_MB_RX_OVERRUN} = 0x06U, 
{\b LDD_CAN_MB_RX_BUSY} = 0x01U, 
{\b LDD_CAN_MB_RX_RANSWER} = 0x0AU
 \}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b LDD_CAN_TFrameType} \{ {\b LDD_CAN_DATA_FRAME}, 
{\b LDD_CAN_REMOTE_FRAME}, 
{\b LDD_CAN_RESPONSE_FRAME}
 \}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b LDD_USB_TBusSpeed} \{ {\b LDD_USB_LOW_SPEED} = 0x00u, 
{\b LDD_USB_FULL_SPEED} = 0x01u, 
{\b LDD_USB_HIGH_SPEED} = 0x02u, 
{\b LDD_USB_SPEED_UNKNOWN} = 0xFFu
 \}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b LDD_USB_TTransferType} \{ {\b LDD_USB_CONTROL} = 0x00u, 
{\b LDD_USB_ISOCHRONOUS} = 0x01u, 
{\b LDD_USB_BULK} = 0x02u, 
{\b LDD_USB_INTERRUPT} = 0x03u
 \}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b LDD_USB_TTransferState} \{ {\b LDD_USB_TRANSFER_NONE} = 0x00u, 
{\b LDD_USB_TRANSFER_DONE} = 0x01u, 
{\b LDD_USB_TRANSFER_ERROR_CANCELLED} = 0x02u, 
{\b LDD_USB_TRANSFER_ERROR_STALLED} = 0x03u, 
{\b LDD_USB_TRANSFER_ERROR_BUS_TIMEOUT} = 0x04u, 
{\b LDD_USB_TRANSFER_ERROR_DATA} = 0x05u, 
{\b LDD_USB_TRANSFER_ERROR_PID} = 0x06u, 
{\b LDD_USB_TRANSFER_ERROR_EOF} = 0x07u, 
{\b LDD_USB_TRANSFER_ERROR_CRC16} = 0x08u, 
{\b LDD_USB_TRANSFER_ERROR_DFN8} = 0x09u, 
{\b LDD_USB_TRANSFER_ERROR_DMA} = 0x0Au, 
{\b LDD_USB_TRANSFER_ERROR_BTS} = 0x0Bu, 
{\b LDD_USB_TRANSFER_ERROR} = 0x0Fu, 
{\b LDD_USB_TRANSFER_QUEUED} = 0x10u, 
{\b LDD_USB_TRANSFER_PENDING} = 0x30u
 \}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b LDD_USB_Device_TState} \{ {\b LDD_USB_DEVICE_DISABLED} = ERR_USB_DEVICE_DISABLED, 
{\b LDD_USB_DEVICE_DISABLED_BY_OTG} = ERR_USB_DEVICE_DISABLED_BY_OTG, 
{\b LDD_USB_DEVICE_VBUS_OFF} = ERR_USB_DEVICE_VBUS_OFF, 
{\b LDD_USB_DEVICE_VBUS_ON} = ERR_USB_DEVICE_VBUS_ON, 
{\b LDD_USB_DEVICE_ENABLED} = ERR_USB_DEVICE_ENABLED, 
{\b LDD_USB_DEVICE_SUSPENDED} = ERR_USB_DEVICE_SUSPENDED, 
{\b LDD_USB_DEVICE_SUSPENDED_RESUME_READY} = ERR_USB_DEVICE_SUSPENDED_RESUME_READY, 
{\b LDD_USB_DEVICE_RESUME_PENDING} = ERR_USB_DEVICE_RESUME_PENDING
 \}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b LDD_USB_Host_TState} \{ {\b LDD_USB_HOST_DISABLED} = ERR_USB_HOST_DISABLED, 
{\b LDD_USB_HOST_DISABLED_BY_OTG} = ERR_USB_HOST_DISABLED_BY_OTG, 
{\b LDD_USB_HOST_PORT_POWERED_OFF} = ERR_USB_HOST_PORT_POWERED_OFF, 
{\b LDD_USB_HOST_PORT_DISCONNECTED} = ERR_USB_HOST_PORT_DISCONNECTED, 
{\b LDD_USB_HOST_PORT_DISABLED} = ERR_USB_HOST_PORT_DISABLED, 
{\b LDD_USB_HOST_PORT_RESETING} = ERR_USB_HOST_PORT_RESETING, 
{\b LDD_USB_HOST_PORT_RESET_RECOVERING} = ERR_USB_HOST_PORT_RESET_RECOVERING, 
{\b LDD_USB_HOST_PORT_ENABLED} = ERR_USB_HOST_PORT_ENABLED, 
{\b LDD_USB_HOST_PORT_SUSPENDED} = ERR_USB_HOST_PORT_SUSPENDED, 
{\b LDD_USB_HOST_PORT_RESUME_READY} = ERR_USB_HOST_PORT_RESUME_READY, 
{\b LDD_USB_HOST_PORT_RESUMING} = ERR_USB_HOST_PORT_RESUMING, 
{\b LDD_USB_HOST_PORT_RESUME_RECOVERING} = ERR_USB_HOST_PORT_RESUME_RECOVERING
 \}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b LDD_USB_Otg_TState} \{ {\b LDD_USB_OTG_DISABLED} = ERR_USB_OTG_DISABLED, 
{\b LDD_USB_OTG_ENABLED} = ERR_USB_OTG_ENABLED_PENDING, 
{\b LDD_USB_OTG_A_IDLE} = ERR_USB_OTG_A_IDLE, 
{\b LDD_USB_OTG_A_WAIT_VRISE} = ERR_USB_OTG_A_WAIT_VRISE, 
{\b LDD_USB_OTG_A_WAIT_VFALL} = ERR_USB_OTG_A_WAIT_VFALL, 
{\b LDD_USB_OTG_A_WAIT_BCON} = ERR_USB_OTG_A_WAIT_BCON, 
{\b LDD_USB_OTG_A_VBUS_ERROR} = ERR_USB_OTG_A_VBUS_ERROR, 
{\b LDD_USB_OTG_A_SUSPEND} = ERR_USB_OTG_A_SUSPEND, 
{\b LDD_USB_OTG_B_IDLE} = ERR_USB_OTG_B_IDLE, 
{\b LDD_USB_OTG_B_SRP_INIT} = ERR_USB_OTG_B_SRP_INIT, 
{\b LDD_USB_OTG_B_WAIT_ACON} = ERR_USB_OTG_B_WAIT_ACON, 
{\b LDD_USB_OTG_A_HOST} = ERR_USB_OTG_A_HOST, 
{\b LDD_USB_OTG_A_PERIPHERAL} = ERR_USB_OTG_A_PERIPHERAL, 
{\b LDD_USB_OTG_B_HOST} = ERR_USB_OTG_B_HOST, 
{\b LDD_USB_OTG_B_PERIPHERAL} = ERR_USB_OTG_B_PERIPHERAL
 \}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b LDD_USB_Otg_TCmd} \{ {\b LDD_USB_OTG_CMD_SET_A_BUS_REQUEST}, 
{\b LDD_USB_OTG_CMD_CLR_A_BUS_REQUEST}, 
{\b LDD_USB_OTG_CMD_SET_B_BUS_REQUEST}, 
{\b LDD_USB_OTG_CMD_CLR_B_BUS_REQUEST}, 
{\b LDD_USB_OTG_CMD_SET_A_BUS_DROP}, 
{\b LDD_USB_OTG_CMD_CLR_A_BUS_DROP}, 
{\b LDD_USB_OTG_CMD_SET_A_SUSPEND_REQUEST}, 
{\b LDD_USB_OTG_CMD_CLR_A_SUSPEND_REQUEST}, 
{\b LDD_USB_OTG_CMD_SET_A_SET_B_HNP_EN_REQUEST}, 
{\b LDD_USB_OTG_CMD_CLR_A_SET_B_HNP_EN_REQUEST}, 
{\b LDD_USB_OTG_CMD_SET_B_HNP_EN_REQUEST}, 
{\b LDD_USB_OTG_CMD_CLR_B_HNP_EN_REQUEST}
 \}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b LDD_USB_Host_TPortControlCmd} \{ {\b LDD_USB_HOST_PORT_CMD_POWER_ON}, 
{\b LDD_USB_HOST_PORT_CMD_POWER_OFF}, 
{\b LDD_USB_HOST_PORT_CMD_RESET}, 
{\b LDD_USB_HOST_PORT_CMD_RESUME}, 
{\b LDD_USB_HOST_PORT_CMD_SUSPEND}, 
{\b LDD_USB_HOST_PORT_CMD_DISABLE}
 \}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b LDD_DAC_TBufferMode} \{ {\b LDD_DAC_BUFFER_NORMAL_MODE} = 0x00U, 
{\b LDD_DAC_BUFFER_SWING_MODE} = 0x01U, 
{\b LDD_DAC_BUFFER_SCAN_MODE} = 0x02U
 \}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b LDD_DAC_TBufferWatermark} \{ {\b LDD_DAC_BUFFER_WATERMARK_L1} = 0x00U, 
{\b LDD_DAC_BUFFER_WATERMARK_L2} = 0x01U, 
{\b LDD_DAC_BUFFER_WATERMARK_L3} = 0x02U, 
{\b LDD_DAC_BUFFER_WATERMARK_L4} = 0x03U
 \}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b LDD_FLASH_TCommand} \{ {\b LDD_FLASH_READ_1S_BLOCK} = 0x00u, 
{\b LDD_FLASH_READ_1S_SECTION} = 0x01u, 
{\b LDD_FLASH_WRITE_BYTE} = 0x04u, 
{\b LDD_FLASH_WRITE_WORD} = 0x05u, 
{\b LDD_FLASH_WRITE_LONG_WORD} = 0x06u, 
{\b LDD_FLASH_WRITE_PHRASE} = 0x07u, 
{\b LDD_FLASH_ERASE_FLASH_BLOCK} = 0x08u, 
{\b LDD_FLASH_ERASE_SECTOR} = 0x09u, 
{\b LDD_FLASH_ERASE_ALL_FLASH_BLOCKS} = 0x44u
 \}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b LDD_FLASH_TOperationType} \{ {\b LDD_FLASH_NO_OPERATION}, 
{\b LDD_FLASH_READ}, 
{\b LDD_FLASH_WRITE}, 
{\b LDD_FLASH_ERASE}, 
{\b LDD_FLASH_ERASE_BLOCK}, 
{\b LDD_FLASH_VERIFY_ERASED_BLOCK}
 \}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b LDD_FLASH_TOperationStatus} \{ {\b LDD_FLASH_FAILED} = 0x00u, 
{\b LDD_FLASH_STOP} = 0x01u, 
{\b LDD_FLASH_IDLE} = 0x02u, 
{\b LDD_FLASH_STOP_REQ} = 0x03u, 
{\b LDD_FLASH_START} = 0x04u, 
{\b LDD_FLASH_RUNNING} = 0x05u
 \}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b LDD_AnalogComp_TComparatorInput} \{ {\b LDD_ANALOGCOMP_INPUT_0} = 0x00U, 
{\b LDD_ANALOGCOMP_INPUT_1} = 0x01U, 
{\b LDD_ANALOGCOMP_INPUT_2} = 0x02U, 
{\b LDD_ANALOGCOMP_INPUT_3} = 0x03U, 
{\b LDD_ANALOGCOMP_INPUT_4} = 0x04U, 
{\b LDD_ANALOGCOMP_INPUT_5} = 0x05U, 
{\b LDD_ANALOGCOMP_INPUT_6} = 0x06U, 
{\b LDD_ANALOGCOMP_INPUT_7} = 0x07U, 
{\b LDD_ANALOGCOMP_INPUT_DISABLED} = 0x08U
 \}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b LDD_AnalogComp_TCompareStatus} \{ {\b LDD_ANALOGCOMP_NO_EDGE} = 0x00U, 
{\b LDD_ANALOGCOMP_FALLING_EDGE} = 0x02U, 
{\b LDD_ANALOGCOMP_RISING_EDGE} = 0x04U, 
{\b LDD_ANALOGCOMP_BOTH_EDGES} = 0x06U
 \}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b LDD_AnalogComp_TComparatorMode} \{ {\b LDD_ANALOGCOMP_RISING_EDGE_MODE} = 0x10U, 
{\b LDD_ANALOGCOMP_FALLING_EDGE_MODE} = 0x08U, 
{\b LDD_ANALOGCOMP_BOTH_EDGES_MODE} = 0x18U
 \}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b LDD_SDHC_TCardType} \{ {\b LDD_SDHC_SD}, 
{\b LDD_SDHC_SDIO}, 
{\b LDD_SDHC_SDCOMBO}, 
{\b LDD_SDHC_MMC}, 
{\b LDD_SDHC_CE_ATA}
 \}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b LDD_SDHC_TTransferOperation} \{ {\b LDD_SDHC_READ}, 
{\b LDD_SDHC_WRITE}
 \}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b LDD_SDHC_TVoltage} \{ {\b LDD_SDHC_LOW_VOLTAGE}, 
{\b LDD_SDHC_HIGH_VOLTAGE}
 \}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b LDD_SDHC_TWriteProtectType} \{ {\b LDD_SDHC_GROUP}, 
{\b LDD_SDHC_CARD}
 \}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b LDD_SDHC_TStatus} \{ {\b LDD_SDHC_DISABLED}, 
{\b LDD_SDHC_RESET}, 
{\b LDD_SDHC_IDLE}, 
{\b LDD_SDHC_VOLTAGE_VALIDATION}, 
{\b LDD_SDHC_CARD_REGISTRATION}, 
{\b LDD_SDHC_CARD_SELECTION}, 
{\b LDD_SDHC_CARD_INFO_RETRIEVAL}, 
{\b LDD_SDHC_TRANSFER}, 
{\b LDD_SDHC_ERASION}, 
{\b LDD_SDHC_IO_REG_TRANSFER}, 
{\b LDD_SDHC_DATA_WIDTH_SELECTION}, 
{\b LDD_SDHC_BUS_CLOCK_SELECTION}, 
{\b LDD_SDHC_WRITE_PROTECTION_SETUP}, 
{\b LDD_SDHC_WRITE_PROTECTION_RETRIEVAL}
 \}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b LDD_SDHC_TError} \{ {\b LDD_SDHC_ERR_OK}, 
{\b LDD_SDHC_ERR_DMA}, 
{\b LDD_SDHC_ERR_NOT_SUPPORTED}, 
{\b LDD_SDHC_ERR_TIMEOUT}, 
{\b LDD_SDHC_ERR_COMMAND_CRC}, 
{\b LDD_SDHC_ERR_DATA_CRC}, 
{\b LDD_SDHC_ERR_ADDRESS_OUT_OF_RANGE}, 
{\b LDD_SDHC_ERR_ADDRESS_MISALIGN}, 
{\b LDD_SDHC_ERR_BLOCK_LEN_ERROR}, 
{\b LDD_SDHC_ERR_WP_VIOLATION}, 
{\b LDD_SDHC_ERR_CARD_IS_LOCKED}, 
{\b LDD_SDHC_ERR_WP_ERASE_SKIP}, 
{\b LDD_SDHC_ERR_INTERNAL_FAILURE}, 
{\b LDD_SDHC_ERR_CARD_FAILURE}
 \}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b LDD_DMA_TChannelStatus} \{ {\b LDD_DMA_IDLE}, 
{\b LDD_DMA_BUSY}, 
{\b LDD_DMA_DONE}, 
{\b LDD_DMA_ERROR}
 \}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b LDD_DMA_TTransferState} \{ {\b LDD_DMA_TRANSFER_IDLE}, 
{\b LDD_DMA_TRANSFER_BUSY}, 
{\b LDD_DMA_TRANSFER_ERROR}
 \}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b LDD_DMA_TTransferMode} \{ {\b LDD_DMA_CYCLE_STEAL_TRANSFERS}, 
{\b LDD_DMA_SINGLE_TRANSFER}, 
{\b LDD_DMA_NESTED_TRANSFERS}
 \}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b LDD_DMA_TTriggerType} \{ {\b LDD_DMA_SW_TRIGGER}, 
{\b LDD_DMA_HW_TRIGGER}, 
{\b LDD_DMA_ALWAYS_ENABLED_TRIGGER}
 \}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b LDD_DMA_TChannelLinkingMode} \{ {\b LDD_DMA_LINKING_DISABLED}, 
{\b LDD_DMA_CYCLE_STEAL_AND_TRANSFER_COMPLETE_LINKING}, 
{\b LDD_DMA_CYCLE_STEAL_LINKING}, 
{\b LDD_DMA_TRANSFER_COMPLETE_LINKING}
 \}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b LDD_SSI_TAC97CommandType} \{ {\b LDD_SSI_READ_COMMAND} = 0x08u, 
{\b LDD_SSI_WRITE_COMMAND} = 0x10u
 \}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b LDD_CRC_TTransposeType} \{ {\b LDD_CRC_NO_TRANSPOSE} = 0, 
{\b LDD_CRC_BITS} = 1, 
{\b LDD_CRC_BITS_AND_BYTES} = 2, 
{\b LDD_CRC_BYTES} = 3
 \}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b LDD_CRC_TCRCStandard} \{ {\b LDD_CRC_16}, 
{\b LDD_CRC_CCITT}, 
{\b LDD_CRC_MODBUS_16}, 
{\b LDD_CRC_KERMIT}, 
{\b LDD_CRC_DNP}, 
{\b LDD_CRC_32}, 
{\b LDD_CRC_USER}
 \}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b LDD_RNG_TSleepMode} \{ {\b LDD_RNG_SLEEP_ENABLED}, 
{\b LDD_RNG_SLEEP_DISABLED}
 \}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b LDD_NFC_TeCmd} \{ {\b LDD_NFC_CMD_NONE} = 0x00U, 
{\b LDD_NFC_CMD_RESET} = 0x01U, 
{\b LDD_NFC_CMD_ERASE} = 0x02U, 
{\b LDD_NFC_CMD_READ_ID} = 0x03U, 
{\b LDD_NFC_CMD_READ_PAGES} = 0x04U, 
{\b LDD_NFC_CMD_WRITE_PAGES} = 0x05U, 
{\b LDD_NFC_CMD_ERASE_BLOCKS} = 0x06U, 
{\b LDD_NFC_CMD_READ_RAW_PAGE} = 0x07U, 
{\b LDD_NFC_CMD_WRITE_RAW_PAGE} = 0x08U
 \}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b LDD_LCDC_CursorOperation} \{ {\b LDD_LCDC_DISABLED} = 0, 
{\b LDD_LCDC_ALWAYS_1}, 
{\b LDD_LCDC_ALWAYS_0}, 
{\b LDD_LCDC_COLOR}, 
{\b LDD_LCDC_INVERTED}, 
{\b LDD_LCDC_INVERTED_COLOR}, 
{\b LDD_LCDC_AND}, 
{\b LDD_LCDC_OR}, 
{\b LDD_LCDC_XOR}
 \}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b LDD_LCDC_TPlaneID} \{ {\b LDD_LCDC_PLANE_COMMON}, 
{\b LDD_LCDC_PLANE_0}, 
{\b LDD_LCDC_PLANE_1}
 \}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b PE_FillMemory} (register void *SourceAddressPtr, register uint8_t c, register uint32_t len)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Fills a memory area block by a specified value. }{
}\par
}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LDD_TDeviceData} * {\b PE_LDD_DeviceDataList} []\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macro Definition Documentation\par
\pard\plain 
{\xe \v __DI\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:__DI}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define __DI()}}
\par
{\bkmkstart AAAAAAABBL}
{\bkmkend AAAAAAABBL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Value:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid do \{\\\par
  /*lint -save  -e950 Disable MISRA rule (1.1) checking. */\\\par
     __asm ("CPSID i");\\\par
  /*lint -restore Enable MISRA rule (1.1) checking. */\\\par
 \} while(0)\par
}
}
{\xe \v __EI\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:__EI}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define __EI()}}
\par
{\bkmkstart AAAAAAABBM}
{\bkmkend AAAAAAABBM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Value:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid do \{\\\par
  /*lint -save  -e950 Disable MISRA rule (1.1) checking. */\\\par
     __asm("CPSIE i");\\\par
  /*lint -restore Enable MISRA rule (1.1) checking. */\\\par
 \} while(0)\par
}
}
{\xe \v EnterCritical\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:EnterCritical}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define EnterCritical()}}
\par
{\bkmkstart AAAAAAABBN}
{\bkmkend AAAAAAABBN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Value:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid do \{\\\par
  uint8_t SR_reg_local;\\\par
  /*lint -save  -e586 -e950 Disable MISRA rule (2.1,1.1) checking. */\\\par
   __asm ( \\\par
   "MRS R0, PRIMASK\\n\\t" \\\par
   "CPSID i\\n\\t"            \\\par
   "STRB R0, %[output]"  \\\par
   : [output] "=m" (SR_reg_local)\\\par
   :: "r0");\\\par
  /*lint -restore Enable MISRA rule (2.1,1.1) checking. */\\\par
   if (++SR_lock == 1u) \{\\\par
     SR_reg = SR_reg_local;\\\par
   \}\\\par
 \} while(0)\par
}
}
{\xe \v ERR_USB_DEVICE_DISABLED\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:ERR_USB_DEVICE_DISABLED}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ERR_USB_DEVICE_DISABLED\~ (ERR_COMPONET_SPECIFIC + 0x00u)}}
\par
{\bkmkstart AAAAAAABBO}
{\bkmkend AAAAAAABBO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Device mode is disabled (by the user or by the clock configuration) \par
}}
{\xe \v ERR_USB_DEVICE_DISABLED_BY_OTG\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:ERR_USB_DEVICE_DISABLED_BY_OTG}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ERR_USB_DEVICE_DISABLED_BY_OTG\~ (ERR_COMPONET_SPECIFIC + 0x01u)}}
\par
{\bkmkstart AAAAAAABBP}
{\bkmkend AAAAAAABBP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Device mode is disabled by the OTG driver \par
}}
{\xe \v ERR_USB_DEVICE_ENABLED\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:ERR_USB_DEVICE_ENABLED}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ERR_USB_DEVICE_ENABLED\~ (ERR_COMPONET_SPECIFIC + 0x04u)}}
\par
{\bkmkstart AAAAAAABBQ}
{\bkmkend AAAAAAABBQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Device is enabled \par
}}
{\xe \v ERR_USB_DEVICE_RESUME_PENDING\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:ERR_USB_DEVICE_RESUME_PENDING}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ERR_USB_DEVICE_RESUME_PENDING\~ (ERR_COMPONET_SPECIFIC + 0x07u)}}
\par
{\bkmkstart AAAAAAABBR}
{\bkmkend AAAAAAABBR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Device generates resume signaling \par
}}
{\xe \v ERR_USB_DEVICE_SUSPENDED\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:ERR_USB_DEVICE_SUSPENDED}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ERR_USB_DEVICE_SUSPENDED\~ (ERR_COMPONET_SPECIFIC + 0x05u)}}
\par
{\bkmkstart AAAAAAABBS}
{\bkmkend AAAAAAABBS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Device is suspended \par
}}
{\xe \v ERR_USB_DEVICE_SUSPENDED_RESUME_READY\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:ERR_USB_DEVICE_SUSPENDED_RESUME_READY}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ERR_USB_DEVICE_SUSPENDED_RESUME_READY\~ (ERR_COMPONET_SPECIFIC + 0x06u)}}
\par
{\bkmkstart AAAAAAABBT}
{\bkmkend AAAAAAABBT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Device is suspended and ready to generate resume signaling \par
}}
{\xe \v ERR_USB_DEVICE_VBUS_OFF\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:ERR_USB_DEVICE_VBUS_OFF}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ERR_USB_DEVICE_VBUS_OFF\~ (ERR_COMPONET_SPECIFIC + 0x02u)}}
\par
{\bkmkstart AAAAAAABBU}
{\bkmkend AAAAAAABBU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
No VBUS is detected \par
}}
{\xe \v ERR_USB_DEVICE_VBUS_ON\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:ERR_USB_DEVICE_VBUS_ON}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ERR_USB_DEVICE_VBUS_ON\~ (ERR_COMPONET_SPECIFIC + 0x03u)}}
\par
{\bkmkstart AAAAAAABBV}
{\bkmkend AAAAAAABBV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
VBUS is detected \par
}}
{\xe \v ERR_USB_HOST_DISABLED\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:ERR_USB_HOST_DISABLED}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ERR_USB_HOST_DISABLED\~ (ERR_COMPONET_SPECIFIC + 0x00u)}}
\par
{\bkmkstart AAAAAAABBW}
{\bkmkend AAAAAAABBW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Host mode is disabled (by the user or by the clock configuration) \par
}}
{\xe \v ERR_USB_HOST_DISABLED_BY_OTG\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:ERR_USB_HOST_DISABLED_BY_OTG}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ERR_USB_HOST_DISABLED_BY_OTG\~ (ERR_COMPONET_SPECIFIC + 0x01u)}}
\par
{\bkmkstart AAAAAAABBX}
{\bkmkend AAAAAAABBX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Host mode is disabled by the OTG driver \par
}}
{\xe \v ERR_USB_HOST_PORT_DISABLED\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:ERR_USB_HOST_PORT_DISABLED}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ERR_USB_HOST_PORT_DISABLED\~ (ERR_COMPONET_SPECIFIC + 0x04u)}}
\par
{\bkmkstart AAAAAAABBY}
{\bkmkend AAAAAAABBY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Device is connected to the port \par
}}
{\xe \v ERR_USB_HOST_PORT_DISCONNECTED\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:ERR_USB_HOST_PORT_DISCONNECTED}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ERR_USB_HOST_PORT_DISCONNECTED\~ (ERR_COMPONET_SPECIFIC + 0x03u)}}
\par
{\bkmkstart AAAAAAABBZ}
{\bkmkend AAAAAAABBZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Port is power on \par
}}
{\xe \v ERR_USB_HOST_PORT_ENABLED\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:ERR_USB_HOST_PORT_ENABLED}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ERR_USB_HOST_PORT_ENABLED\~ (ERR_COMPONET_SPECIFIC + 0x07u)}}
\par
{\bkmkstart AAAAAAABCA}
{\bkmkend AAAAAAABCA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
PortDevice is connected, reset and ready to use \par
}}
{\xe \v ERR_USB_HOST_PORT_POWERED_OFF\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:ERR_USB_HOST_PORT_POWERED_OFF}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ERR_USB_HOST_PORT_POWERED_OFF\~ (ERR_COMPONET_SPECIFIC + 0x02u)}}
\par
{\bkmkstart AAAAAAABCB}
{\bkmkend AAAAAAABCB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Port is power off \par
}}
{\xe \v ERR_USB_HOST_PORT_RESET_RECOVERING\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:ERR_USB_HOST_PORT_RESET_RECOVERING}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ERR_USB_HOST_PORT_RESET_RECOVERING\~ (ERR_COMPONET_SPECIFIC + 0x06u)}}
\par
{\bkmkstart AAAAAAABCC}
{\bkmkend AAAAAAABCC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Port waits 10ms for reset recovery \par
}}
{\xe \v ERR_USB_HOST_PORT_RESETING\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:ERR_USB_HOST_PORT_RESETING}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ERR_USB_HOST_PORT_RESETING\~ (ERR_COMPONET_SPECIFIC + 0x05u)}}
\par
{\bkmkstart AAAAAAABCD}
{\bkmkend AAAAAAABCD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Port generates reset signaling \par
}}
{\xe \v ERR_USB_HOST_PORT_RESUME_READY\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:ERR_USB_HOST_PORT_RESUME_READY}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ERR_USB_HOST_PORT_RESUME_READY\~ (ERR_COMPONET_SPECIFIC + 0x09u)}}
\par
{\bkmkstart AAAAAAABCE}
{\bkmkend AAAAAAABCE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Port can generate resume signaling \par
}}
{\xe \v ERR_USB_HOST_PORT_RESUME_RECOVERING\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:ERR_USB_HOST_PORT_RESUME_RECOVERING}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ERR_USB_HOST_PORT_RESUME_RECOVERING\~ (ERR_COMPONET_SPECIFIC + 0x0Bu)}}
\par
{\bkmkstart AAAAAAABCF}
{\bkmkend AAAAAAABCF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Port generates resume signaling \par
}}
{\xe \v ERR_USB_HOST_PORT_RESUMING\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:ERR_USB_HOST_PORT_RESUMING}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ERR_USB_HOST_PORT_RESUMING\~ (ERR_COMPONET_SPECIFIC + 0x0Au)}}
\par
{\bkmkstart AAAAAAABCG}
{\bkmkend AAAAAAABCG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Port generates resume signaling \par
}}
{\xe \v ERR_USB_HOST_PORT_SUSPENDED\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:ERR_USB_HOST_PORT_SUSPENDED}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ERR_USB_HOST_PORT_SUSPENDED\~ (ERR_COMPONET_SPECIFIC + 0x08u)}}
\par
{\bkmkstart AAAAAAABCH}
{\bkmkend AAAAAAABCH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Port is suspended \par
}}
{\xe \v ERR_USB_OTG_A_HOST\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:ERR_USB_OTG_A_HOST}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ERR_USB_OTG_A_HOST\~ (ERR_COMPONET_SPECIFIC + 0x10u)}}
\par
{\bkmkstart AAAAAAABCI}
{\bkmkend AAAAAAABCI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
OTG device is in A_HOST state \par
}}
{\xe \v ERR_USB_OTG_A_IDLE\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:ERR_USB_OTG_A_IDLE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ERR_USB_OTG_A_IDLE\~ (ERR_COMPONET_SPECIFIC + 0x02u)}}
\par
{\bkmkstart AAAAAAABCJ}
{\bkmkend AAAAAAABCJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
OTG device is in A_IDLE state \par
}}
{\xe \v ERR_USB_OTG_A_PERIPHERAL\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:ERR_USB_OTG_A_PERIPHERAL}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ERR_USB_OTG_A_PERIPHERAL\~ (ERR_COMPONET_SPECIFIC + 0x11u)}}
\par
{\bkmkstart AAAAAAABCK}
{\bkmkend AAAAAAABCK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
OTG device is in A_PERIPHERAL state \par
}}
{\xe \v ERR_USB_OTG_A_SUSPEND\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:ERR_USB_OTG_A_SUSPEND}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ERR_USB_OTG_A_SUSPEND\~ (ERR_COMPONET_SPECIFIC + 0x0Au)}}
\par
{\bkmkstart AAAAAAABCL}
{\bkmkend AAAAAAABCL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
OTG device is in A_SUSPEND state \par
}}
{\xe \v ERR_USB_OTG_A_VBUS_ERROR\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:ERR_USB_OTG_A_VBUS_ERROR}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ERR_USB_OTG_A_VBUS_ERROR\~ (ERR_COMPONET_SPECIFIC + 0x09u)}}
\par
{\bkmkstart AAAAAAABCM}
{\bkmkend AAAAAAABCM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
OTG device is in A_VBUS_ERROR state \par
}}
{\xe \v ERR_USB_OTG_A_WAIT_BCON\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:ERR_USB_OTG_A_WAIT_BCON}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ERR_USB_OTG_A_WAIT_BCON\~ (ERR_COMPONET_SPECIFIC + 0x07u)}}
\par
{\bkmkstart AAAAAAABCN}
{\bkmkend AAAAAAABCN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
OTG device is in A_WAIT_BCON state \par
}}
{\xe \v ERR_USB_OTG_A_WAIT_VFALL\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:ERR_USB_OTG_A_WAIT_VFALL}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ERR_USB_OTG_A_WAIT_VFALL\~ (ERR_COMPONET_SPECIFIC + 0x05u)}}
\par
{\bkmkstart AAAAAAABCO}
{\bkmkend AAAAAAABCO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
OTG device is in A_WAIT_VFALL state \par
}}
{\xe \v ERR_USB_OTG_A_WAIT_VRISE\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:ERR_USB_OTG_A_WAIT_VRISE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ERR_USB_OTG_A_WAIT_VRISE\~ (ERR_COMPONET_SPECIFIC + 0x03u)}}
\par
{\bkmkstart AAAAAAABCP}
{\bkmkend AAAAAAABCP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
OTG device is in WAIT_VRISE state \par
}}
{\xe \v ERR_USB_OTG_B_HOST\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:ERR_USB_OTG_B_HOST}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ERR_USB_OTG_B_HOST\~ (ERR_COMPONET_SPECIFIC + 0x12u)}}
\par
{\bkmkstart AAAAAAABCQ}
{\bkmkend AAAAAAABCQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
OTG device is in B_HOST state \par
}}
{\xe \v ERR_USB_OTG_B_IDLE\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:ERR_USB_OTG_B_IDLE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ERR_USB_OTG_B_IDLE\~ (ERR_COMPONET_SPECIFIC + 0x0Cu)}}
\par
{\bkmkstart AAAAAAABCR}
{\bkmkend AAAAAAABCR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
OTG device is in B_IDLE state \par
}}
{\xe \v ERR_USB_OTG_B_PERIPHERAL\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:ERR_USB_OTG_B_PERIPHERAL}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ERR_USB_OTG_B_PERIPHERAL\~ (ERR_COMPONET_SPECIFIC + 0x13u)}}
\par
{\bkmkstart AAAAAAABCS}
{\bkmkend AAAAAAABCS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
OTG device is in B_PERIPHERAL state \par
}}
{\xe \v ERR_USB_OTG_B_SRP_INIT\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:ERR_USB_OTG_B_SRP_INIT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ERR_USB_OTG_B_SRP_INIT\~ (ERR_COMPONET_SPECIFIC + 0x0Eu)}}
\par
{\bkmkstart AAAAAAABCT}
{\bkmkend AAAAAAABCT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
OTG device is in B_SRP_INIT state \par
}}
{\xe \v ERR_USB_OTG_B_WAIT_ACON\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:ERR_USB_OTG_B_WAIT_ACON}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ERR_USB_OTG_B_WAIT_ACON\~ (ERR_COMPONET_SPECIFIC + 0x0Fu)}}
\par
{\bkmkstart AAAAAAABCU}
{\bkmkend AAAAAAABCU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
OTG device is in B_WAIT_ACON state \par
}}
{\xe \v ERR_USB_OTG_DISABLED\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:ERR_USB_OTG_DISABLED}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ERR_USB_OTG_DISABLED\~ (ERR_COMPONET_SPECIFIC + 0x00u)}}
\par
{\bkmkstart AAAAAAABCV}
{\bkmkend AAAAAAABCV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
OTG device is DISABLED state \par
}}
{\xe \v ERR_USB_OTG_ENABLED_PENDING\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:ERR_USB_OTG_ENABLED_PENDING}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ERR_USB_OTG_ENABLED_PENDING\~ (ERR_COMPONET_SPECIFIC + 0x01u)}}
\par
{\bkmkstart AAAAAAABCW}
{\bkmkend AAAAAAABCW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
OTG device is in ENABLED_PENDING state \par
}}
{\xe \v ExitCritical\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:ExitCritical}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ExitCritical()}}
\par
{\bkmkstart AAAAAAABCX}
{\bkmkend AAAAAAABCX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Value:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid do \{\\\par
   if (--SR_lock == 0u) \{ \\\par
  /*lint -save  -e586 -e950 Disable MISRA rule (2.1,1.1) checking. */\\\par
     __asm (                 \\\par
       "ldrb r0, %[input]\\n\\t"\\\par
       "msr PRIMASK,r0;\\n\\t" \\\par
       ::[input] "m" (SR_reg)  \\\par
       : "r0");                \\\par
  /*lint -restore Enable MISRA rule (2.1,1.1) checking. */\\\par
   \}\\\par
 \} while(0)\par
}
}
{\xe \v LDD_ADC_CHANNEL_0_PIN\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_ADC_CHANNEL_0_PIN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_ADC_CHANNEL_0_PIN\~ 0x01u}}
\par
{\bkmkstart AAAAAAABCY}
{\bkmkend AAAAAAABCY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Channel 0 pin mask \par
}}
{\xe \v LDD_ADC_CHANNEL_10_PIN\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_ADC_CHANNEL_10_PIN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_ADC_CHANNEL_10_PIN\~ 0x0400u}}
\par
{\bkmkstart AAAAAAABCZ}
{\bkmkend AAAAAAABCZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Channel 10 pin mask \par
}}
{\xe \v LDD_ADC_CHANNEL_11_PIN\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_ADC_CHANNEL_11_PIN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_ADC_CHANNEL_11_PIN\~ 0x0800u}}
\par
{\bkmkstart AAAAAAABDA}
{\bkmkend AAAAAAABDA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Channel 11 pin mask \par
}}
{\xe \v LDD_ADC_CHANNEL_12_PIN\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_ADC_CHANNEL_12_PIN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_ADC_CHANNEL_12_PIN\~ 0x1000u}}
\par
{\bkmkstart AAAAAAABDB}
{\bkmkend AAAAAAABDB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Channel 12 pin mask \par
}}
{\xe \v LDD_ADC_CHANNEL_13_PIN\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_ADC_CHANNEL_13_PIN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_ADC_CHANNEL_13_PIN\~ 0x2000u}}
\par
{\bkmkstart AAAAAAABDC}
{\bkmkend AAAAAAABDC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Channel 13 pin mask \par
}}
{\xe \v LDD_ADC_CHANNEL_14_PIN\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_ADC_CHANNEL_14_PIN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_ADC_CHANNEL_14_PIN\~ 0x4000u}}
\par
{\bkmkstart AAAAAAABDD}
{\bkmkend AAAAAAABDD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Channel 14 pin mask \par
}}
{\xe \v LDD_ADC_CHANNEL_15_PIN\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_ADC_CHANNEL_15_PIN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_ADC_CHANNEL_15_PIN\~ 0x8000u}}
\par
{\bkmkstart AAAAAAABDE}
{\bkmkend AAAAAAABDE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Channel 15 pin mask \par
}}
{\xe \v LDD_ADC_CHANNEL_16_PIN\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_ADC_CHANNEL_16_PIN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_ADC_CHANNEL_16_PIN\~ 0x00010000u}}
\par
{\bkmkstart AAAAAAABDF}
{\bkmkend AAAAAAABDF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Channel 16 pin mask \par
}}
{\xe \v LDD_ADC_CHANNEL_17_PIN\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_ADC_CHANNEL_17_PIN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_ADC_CHANNEL_17_PIN\~ 0x00020000u}}
\par
{\bkmkstart AAAAAAABDG}
{\bkmkend AAAAAAABDG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Channel 17 pin mask \par
}}
{\xe \v LDD_ADC_CHANNEL_18_PIN\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_ADC_CHANNEL_18_PIN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_ADC_CHANNEL_18_PIN\~ 0x00040000u}}
\par
{\bkmkstart AAAAAAABDH}
{\bkmkend AAAAAAABDH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Channel 18 pin mask \par
}}
{\xe \v LDD_ADC_CHANNEL_19_PIN\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_ADC_CHANNEL_19_PIN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_ADC_CHANNEL_19_PIN\~ 0x00080000u}}
\par
{\bkmkstart AAAAAAABDI}
{\bkmkend AAAAAAABDI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Channel 19 pin mask \par
}}
{\xe \v LDD_ADC_CHANNEL_1_PIN\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_ADC_CHANNEL_1_PIN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_ADC_CHANNEL_1_PIN\~ 0x02u}}
\par
{\bkmkstart AAAAAAABDJ}
{\bkmkend AAAAAAABDJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Channel 1 pin mask \par
}}
{\xe \v LDD_ADC_CHANNEL_20_PIN\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_ADC_CHANNEL_20_PIN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_ADC_CHANNEL_20_PIN\~ 0x00100000u}}
\par
{\bkmkstart AAAAAAABDK}
{\bkmkend AAAAAAABDK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Channel 20 pin mask \par
}}
{\xe \v LDD_ADC_CHANNEL_21_PIN\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_ADC_CHANNEL_21_PIN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_ADC_CHANNEL_21_PIN\~ 0x00200000u}}
\par
{\bkmkstart AAAAAAABDL}
{\bkmkend AAAAAAABDL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Channel 21 pin mask \par
}}
{\xe \v LDD_ADC_CHANNEL_22_PIN\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_ADC_CHANNEL_22_PIN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_ADC_CHANNEL_22_PIN\~ 0x00400000u}}
\par
{\bkmkstart AAAAAAABDM}
{\bkmkend AAAAAAABDM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Channel 22 pin mask \par
}}
{\xe \v LDD_ADC_CHANNEL_23_PIN\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_ADC_CHANNEL_23_PIN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_ADC_CHANNEL_23_PIN\~ 0x00800000u}}
\par
{\bkmkstart AAAAAAABDN}
{\bkmkend AAAAAAABDN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Channel 23 pin mask \par
}}
{\xe \v LDD_ADC_CHANNEL_24_PIN\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_ADC_CHANNEL_24_PIN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_ADC_CHANNEL_24_PIN\~ 0x01000000u}}
\par
{\bkmkstart AAAAAAABDO}
{\bkmkend AAAAAAABDO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Channel 24 pin mask \par
}}
{\xe \v LDD_ADC_CHANNEL_25_PIN\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_ADC_CHANNEL_25_PIN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_ADC_CHANNEL_25_PIN\~ 0x02000000u}}
\par
{\bkmkstart AAAAAAABDP}
{\bkmkend AAAAAAABDP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Channel 25 pin mask \par
}}
{\xe \v LDD_ADC_CHANNEL_26_PIN\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_ADC_CHANNEL_26_PIN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_ADC_CHANNEL_26_PIN\~ 0x04000000u}}
\par
{\bkmkstart AAAAAAABDQ}
{\bkmkend AAAAAAABDQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Channel 26 pin mask \par
}}
{\xe \v LDD_ADC_CHANNEL_27_PIN\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_ADC_CHANNEL_27_PIN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_ADC_CHANNEL_27_PIN\~ 0x08000000u}}
\par
{\bkmkstart AAAAAAABDR}
{\bkmkend AAAAAAABDR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Channel 27 pin mask \par
}}
{\xe \v LDD_ADC_CHANNEL_28_PIN\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_ADC_CHANNEL_28_PIN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_ADC_CHANNEL_28_PIN\~ 0x10000000u}}
\par
{\bkmkstart AAAAAAABDS}
{\bkmkend AAAAAAABDS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Channel 28 pin mask \par
}}
{\xe \v LDD_ADC_CHANNEL_29_PIN\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_ADC_CHANNEL_29_PIN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_ADC_CHANNEL_29_PIN\~ 0x20000000u}}
\par
{\bkmkstart AAAAAAABDT}
{\bkmkend AAAAAAABDT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Channel 29 pin mask \par
}}
{\xe \v LDD_ADC_CHANNEL_2_PIN\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_ADC_CHANNEL_2_PIN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_ADC_CHANNEL_2_PIN\~ 0x04u}}
\par
{\bkmkstart AAAAAAABDU}
{\bkmkend AAAAAAABDU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Channel 2 pin mask \par
}}
{\xe \v LDD_ADC_CHANNEL_30_PIN\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_ADC_CHANNEL_30_PIN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_ADC_CHANNEL_30_PIN\~ 0x40000000u}}
\par
{\bkmkstart AAAAAAABDV}
{\bkmkend AAAAAAABDV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Channel 30 pin mask \par
}}
{\xe \v LDD_ADC_CHANNEL_31_PIN\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_ADC_CHANNEL_31_PIN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_ADC_CHANNEL_31_PIN\~ 0x80000000u}}
\par
{\bkmkstart AAAAAAABDW}
{\bkmkend AAAAAAABDW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Channel 31 pin mask \par
}}
{\xe \v LDD_ADC_CHANNEL_32_PIN\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_ADC_CHANNEL_32_PIN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_ADC_CHANNEL_32_PIN\~ 0x01u}}
\par
{\bkmkstart AAAAAAABDX}
{\bkmkend AAAAAAABDX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Channel 32 pin mask \par
}}
{\xe \v LDD_ADC_CHANNEL_33_PIN\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_ADC_CHANNEL_33_PIN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_ADC_CHANNEL_33_PIN\~ 0x02u}}
\par
{\bkmkstart AAAAAAABDY}
{\bkmkend AAAAAAABDY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Channel 33 pin mask \par
}}
{\xe \v LDD_ADC_CHANNEL_34_PIN\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_ADC_CHANNEL_34_PIN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_ADC_CHANNEL_34_PIN\~ 0x04u}}
\par
{\bkmkstart AAAAAAABDZ}
{\bkmkend AAAAAAABDZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Channel 34 pin mask \par
}}
{\xe \v LDD_ADC_CHANNEL_35_PIN\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_ADC_CHANNEL_35_PIN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_ADC_CHANNEL_35_PIN\~ 0x08u}}
\par
{\bkmkstart AAAAAAABEA}
{\bkmkend AAAAAAABEA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Channel 35 pin mask \par
}}
{\xe \v LDD_ADC_CHANNEL_36_PIN\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_ADC_CHANNEL_36_PIN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_ADC_CHANNEL_36_PIN\~ 0x10u}}
\par
{\bkmkstart AAAAAAABEB}
{\bkmkend AAAAAAABEB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Channel 36 pin mask \par
}}
{\xe \v LDD_ADC_CHANNEL_37_PIN\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_ADC_CHANNEL_37_PIN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_ADC_CHANNEL_37_PIN\~ 0x20u}}
\par
{\bkmkstart AAAAAAABEC}
{\bkmkend AAAAAAABEC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Channel 37 pin mask \par
}}
{\xe \v LDD_ADC_CHANNEL_38_PIN\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_ADC_CHANNEL_38_PIN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_ADC_CHANNEL_38_PIN\~ 0x40u}}
\par
{\bkmkstart AAAAAAABED}
{\bkmkend AAAAAAABED}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Channel 38 pin mask \par
}}
{\xe \v LDD_ADC_CHANNEL_39_PIN\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_ADC_CHANNEL_39_PIN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_ADC_CHANNEL_39_PIN\~ 0x80u}}
\par
{\bkmkstart AAAAAAABEE}
{\bkmkend AAAAAAABEE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Channel 39 pin mask \par
}}
{\xe \v LDD_ADC_CHANNEL_3_PIN\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_ADC_CHANNEL_3_PIN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_ADC_CHANNEL_3_PIN\~ 0x08u}}
\par
{\bkmkstart AAAAAAABEF}
{\bkmkend AAAAAAABEF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Channel 3 pin mask \par
}}
{\xe \v LDD_ADC_CHANNEL_40_PIN\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_ADC_CHANNEL_40_PIN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_ADC_CHANNEL_40_PIN\~ 0x0100u}}
\par
{\bkmkstart AAAAAAABEG}
{\bkmkend AAAAAAABEG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Channel 40 pin mask \par
}}
{\xe \v LDD_ADC_CHANNEL_41_PIN\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_ADC_CHANNEL_41_PIN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_ADC_CHANNEL_41_PIN\~ 0x0200u}}
\par
{\bkmkstart AAAAAAABEH}
{\bkmkend AAAAAAABEH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Channel 41 pin mask \par
}}
{\xe \v LDD_ADC_CHANNEL_42_PIN\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_ADC_CHANNEL_42_PIN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_ADC_CHANNEL_42_PIN\~ 0x0400u}}
\par
{\bkmkstart AAAAAAABEI}
{\bkmkend AAAAAAABEI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Channel 42 pin mask \par
}}
{\xe \v LDD_ADC_CHANNEL_43_PIN\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_ADC_CHANNEL_43_PIN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_ADC_CHANNEL_43_PIN\~ 0x0800u}}
\par
{\bkmkstart AAAAAAABEJ}
{\bkmkend AAAAAAABEJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Channel 43 pin mask \par
}}
{\xe \v LDD_ADC_CHANNEL_44_PIN\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_ADC_CHANNEL_44_PIN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_ADC_CHANNEL_44_PIN\~ 0x1000u}}
\par
{\bkmkstart AAAAAAABEK}
{\bkmkend AAAAAAABEK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Channel 44 pin mask \par
}}
{\xe \v LDD_ADC_CHANNEL_45_PIN\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_ADC_CHANNEL_45_PIN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_ADC_CHANNEL_45_PIN\~ 0x2000u}}
\par
{\bkmkstart AAAAAAABEL}
{\bkmkend AAAAAAABEL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Channel 45 pin mask \par
}}
{\xe \v LDD_ADC_CHANNEL_46_PIN\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_ADC_CHANNEL_46_PIN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_ADC_CHANNEL_46_PIN\~ 0x4000u}}
\par
{\bkmkstart AAAAAAABEM}
{\bkmkend AAAAAAABEM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Channel 46 pin mask \par
}}
{\xe \v LDD_ADC_CHANNEL_47_PIN\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_ADC_CHANNEL_47_PIN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_ADC_CHANNEL_47_PIN\~ 0x8000u}}
\par
{\bkmkstart AAAAAAABEN}
{\bkmkend AAAAAAABEN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Channel 47 pin mask \par
}}
{\xe \v LDD_ADC_CHANNEL_48_PIN\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_ADC_CHANNEL_48_PIN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_ADC_CHANNEL_48_PIN\~ 0x00010000u}}
\par
{\bkmkstart AAAAAAABEO}
{\bkmkend AAAAAAABEO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Channel 48 pin mask \par
}}
{\xe \v LDD_ADC_CHANNEL_49_PIN\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_ADC_CHANNEL_49_PIN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_ADC_CHANNEL_49_PIN\~ 0x00020000u}}
\par
{\bkmkstart AAAAAAABEP}
{\bkmkend AAAAAAABEP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Channel 49 pin mask \par
}}
{\xe \v LDD_ADC_CHANNEL_4_PIN\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_ADC_CHANNEL_4_PIN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_ADC_CHANNEL_4_PIN\~ 0x10u}}
\par
{\bkmkstart AAAAAAABEQ}
{\bkmkend AAAAAAABEQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Channel 4 pin mask \par
}}
{\xe \v LDD_ADC_CHANNEL_50_PIN\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_ADC_CHANNEL_50_PIN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_ADC_CHANNEL_50_PIN\~ 0x00040000u}}
\par
{\bkmkstart AAAAAAABER}
{\bkmkend AAAAAAABER}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Channel 50 pin mask \par
}}
{\xe \v LDD_ADC_CHANNEL_51_PIN\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_ADC_CHANNEL_51_PIN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_ADC_CHANNEL_51_PIN\~ 0x00080000u}}
\par
{\bkmkstart AAAAAAABES}
{\bkmkend AAAAAAABES}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Channel 51 pin mask \par
}}
{\xe \v LDD_ADC_CHANNEL_52_PIN\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_ADC_CHANNEL_52_PIN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_ADC_CHANNEL_52_PIN\~ 0x00100000u}}
\par
{\bkmkstart AAAAAAABET}
{\bkmkend AAAAAAABET}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Channel 52 pin mask \par
}}
{\xe \v LDD_ADC_CHANNEL_53_PIN\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_ADC_CHANNEL_53_PIN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_ADC_CHANNEL_53_PIN\~ 0x00200000u}}
\par
{\bkmkstart AAAAAAABEU}
{\bkmkend AAAAAAABEU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Channel 53 pin mask \par
}}
{\xe \v LDD_ADC_CHANNEL_54_PIN\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_ADC_CHANNEL_54_PIN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_ADC_CHANNEL_54_PIN\~ 0x00400000u}}
\par
{\bkmkstart AAAAAAABEV}
{\bkmkend AAAAAAABEV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Channel 54 pin mask \par
}}
{\xe \v LDD_ADC_CHANNEL_55_PIN\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_ADC_CHANNEL_55_PIN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_ADC_CHANNEL_55_PIN\~ 0x00800000u}}
\par
{\bkmkstart AAAAAAABEW}
{\bkmkend AAAAAAABEW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Channel 55 pin mask \par
}}
{\xe \v LDD_ADC_CHANNEL_56_PIN\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_ADC_CHANNEL_56_PIN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_ADC_CHANNEL_56_PIN\~ 0x01000000u}}
\par
{\bkmkstart AAAAAAABEX}
{\bkmkend AAAAAAABEX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Channel 56 pin mask \par
}}
{\xe \v LDD_ADC_CHANNEL_57_PIN\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_ADC_CHANNEL_57_PIN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_ADC_CHANNEL_57_PIN\~ 0x02000000u}}
\par
{\bkmkstart AAAAAAABEY}
{\bkmkend AAAAAAABEY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Channel 57 pin mask \par
}}
{\xe \v LDD_ADC_CHANNEL_58_PIN\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_ADC_CHANNEL_58_PIN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_ADC_CHANNEL_58_PIN\~ 0x04000000u}}
\par
{\bkmkstart AAAAAAABEZ}
{\bkmkend AAAAAAABEZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Channel 58 pin mask \par
}}
{\xe \v LDD_ADC_CHANNEL_59_PIN\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_ADC_CHANNEL_59_PIN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_ADC_CHANNEL_59_PIN\~ 0x08000000u}}
\par
{\bkmkstart AAAAAAABFA}
{\bkmkend AAAAAAABFA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Channel 59 pin mask \par
}}
{\xe \v LDD_ADC_CHANNEL_5_PIN\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_ADC_CHANNEL_5_PIN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_ADC_CHANNEL_5_PIN\~ 0x20u}}
\par
{\bkmkstart AAAAAAABFB}
{\bkmkend AAAAAAABFB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Channel 5 pin mask \par
}}
{\xe \v LDD_ADC_CHANNEL_60_PIN\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_ADC_CHANNEL_60_PIN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_ADC_CHANNEL_60_PIN\~ 0x10000000u}}
\par
{\bkmkstart AAAAAAABFC}
{\bkmkend AAAAAAABFC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Channel 60 pin mask \par
}}
{\xe \v LDD_ADC_CHANNEL_61_PIN\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_ADC_CHANNEL_61_PIN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_ADC_CHANNEL_61_PIN\~ 0x20000000u}}
\par
{\bkmkstart AAAAAAABFD}
{\bkmkend AAAAAAABFD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Channel 61 pin mask \par
}}
{\xe \v LDD_ADC_CHANNEL_62_PIN\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_ADC_CHANNEL_62_PIN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_ADC_CHANNEL_62_PIN\~ 0x40000000u}}
\par
{\bkmkstart AAAAAAABFE}
{\bkmkend AAAAAAABFE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Channel 62 pin mask \par
}}
{\xe \v LDD_ADC_CHANNEL_63_PIN\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_ADC_CHANNEL_63_PIN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_ADC_CHANNEL_63_PIN\~ 0x80000000u}}
\par
{\bkmkstart AAAAAAABFF}
{\bkmkend AAAAAAABFF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Channel 63 pin mask \par
}}
{\xe \v LDD_ADC_CHANNEL_6_PIN\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_ADC_CHANNEL_6_PIN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_ADC_CHANNEL_6_PIN\~ 0x40u}}
\par
{\bkmkstart AAAAAAABFG}
{\bkmkend AAAAAAABFG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Channel 6 pin mask \par
}}
{\xe \v LDD_ADC_CHANNEL_7_PIN\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_ADC_CHANNEL_7_PIN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_ADC_CHANNEL_7_PIN\~ 0x80u}}
\par
{\bkmkstart AAAAAAABFH}
{\bkmkend AAAAAAABFH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Channel 7 pin mask \par
}}
{\xe \v LDD_ADC_CHANNEL_8_PIN\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_ADC_CHANNEL_8_PIN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_ADC_CHANNEL_8_PIN\~ 0x0100u}}
\par
{\bkmkstart AAAAAAABFI}
{\bkmkend AAAAAAABFI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Channel 8 pin mask \par
}}
{\xe \v LDD_ADC_CHANNEL_9_PIN\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_ADC_CHANNEL_9_PIN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_ADC_CHANNEL_9_PIN\~ 0x0200u}}
\par
{\bkmkstart AAAAAAABFJ}
{\bkmkend AAAAAAABFJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Channel 9 pin mask \par
}}
{\xe \v LDD_ADC_DMA_ERROR\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_ADC_DMA_ERROR}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_ADC_DMA_ERROR\~ 0x01u}}
\par
{\bkmkstart AAAAAAABFK}
{\bkmkend AAAAAAABFK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
DMA error mask \par
}}
{\xe \v LDD_ADC_HIGH_VOLT_REF_PIN\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_ADC_HIGH_VOLT_REF_PIN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_ADC_HIGH_VOLT_REF_PIN\~ 0x02u}}
\par
{\bkmkstart AAAAAAABFL}
{\bkmkend AAAAAAABFL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
High voltage reference pin mask \par
}}
{\xe \v LDD_ADC_LOW_VOLT_REF_PIN\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_ADC_LOW_VOLT_REF_PIN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_ADC_LOW_VOLT_REF_PIN\~ 0x01u}}
\par
{\bkmkstart AAAAAAABFM}
{\bkmkend AAAAAAABFM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Low voltage reference pin mask \par
}}
{\xe \v LDD_ADC_ON_ERROR\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_ADC_ON_ERROR}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_ADC_ON_ERROR\~ 0x80u}}
\par
{\bkmkstart AAAAAAABFN}
{\bkmkend AAAAAAABFN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
OnError event mask \par
}}
{\xe \v LDD_ADC_ON_MEASUREMENT_COMPLETE\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_ADC_ON_MEASUREMENT_COMPLETE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_ADC_ON_MEASUREMENT_COMPLETE\~ 0x40u}}
\par
{\bkmkstart AAAAAAABFO}
{\bkmkend AAAAAAABFO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
OnMeasurementComplete event mask \par
}}
{\xe \v LDD_ADC_TRIGGER_0_PIN\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_ADC_TRIGGER_0_PIN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_ADC_TRIGGER_0_PIN\~ 0x01u}}
\par
{\bkmkstart AAAAAAABFP}
{\bkmkend AAAAAAABFP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Trigger 0 pin mask \par
}}
{\xe \v LDD_ADC_TRIGGER_1_PIN\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_ADC_TRIGGER_1_PIN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_ADC_TRIGGER_1_PIN\~ 0x02u}}
\par
{\bkmkstart AAAAAAABFQ}
{\bkmkend AAAAAAABFQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Trigger 1 pin mask \par
}}
{\xe \v LDD_ANALOGCOMP_NEGATIVE_INPUT_0_MASK\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_ANALOGCOMP_NEGATIVE_INPUT_0_MASK}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_ANALOGCOMP_NEGATIVE_INPUT_0_MASK\~ 0x0100U}}
\par
{\bkmkstart AAAAAAABFR}
{\bkmkend AAAAAAABFR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Mask for negative input pin 0 \par
}}
{\xe \v LDD_ANALOGCOMP_NEGATIVE_INPUT_1_MASK\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_ANALOGCOMP_NEGATIVE_INPUT_1_MASK}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_ANALOGCOMP_NEGATIVE_INPUT_1_MASK\~ 0x0200U}}
\par
{\bkmkstart AAAAAAABFS}
{\bkmkend AAAAAAABFS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Mask for negative input pin 1 \par
}}
{\xe \v LDD_ANALOGCOMP_NEGATIVE_INPUT_2_MASK\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_ANALOGCOMP_NEGATIVE_INPUT_2_MASK}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_ANALOGCOMP_NEGATIVE_INPUT_2_MASK\~ 0x0400U}}
\par
{\bkmkstart AAAAAAABFT}
{\bkmkend AAAAAAABFT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Mask for negative input pin 2 \par
}}
{\xe \v LDD_ANALOGCOMP_NEGATIVE_INPUT_3_MASK\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_ANALOGCOMP_NEGATIVE_INPUT_3_MASK}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_ANALOGCOMP_NEGATIVE_INPUT_3_MASK\~ 0x0800U}}
\par
{\bkmkstart AAAAAAABFU}
{\bkmkend AAAAAAABFU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Mask for negative input pin 3 \par
}}
{\xe \v LDD_ANALOGCOMP_NEGATIVE_INPUT_4_MASK\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_ANALOGCOMP_NEGATIVE_INPUT_4_MASK}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_ANALOGCOMP_NEGATIVE_INPUT_4_MASK\~ 0x1000U}}
\par
{\bkmkstart AAAAAAABFV}
{\bkmkend AAAAAAABFV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Mask for negative input pin 4 \par
}}
{\xe \v LDD_ANALOGCOMP_NEGATIVE_INPUT_5_MASK\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_ANALOGCOMP_NEGATIVE_INPUT_5_MASK}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_ANALOGCOMP_NEGATIVE_INPUT_5_MASK\~ 0x2000U}}
\par
{\bkmkstart AAAAAAABFW}
{\bkmkend AAAAAAABFW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Mask for negative input pin 5 \par
}}
{\xe \v LDD_ANALOGCOMP_NEGATIVE_INPUT_6_MASK\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_ANALOGCOMP_NEGATIVE_INPUT_6_MASK}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_ANALOGCOMP_NEGATIVE_INPUT_6_MASK\~ 0x4000U}}
\par
{\bkmkstart AAAAAAABFX}
{\bkmkend AAAAAAABFX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Mask for negative input pin 6 \par
}}
{\xe \v LDD_ANALOGCOMP_NEGATIVE_INPUT_7_MASK\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_ANALOGCOMP_NEGATIVE_INPUT_7_MASK}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_ANALOGCOMP_NEGATIVE_INPUT_7_MASK\~ 0x8000U}}
\par
{\bkmkstart AAAAAAABFY}
{\bkmkend AAAAAAABFY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Mask for negative input pin 7 \par
}}
{\xe \v LDD_ANALOGCOMP_ON_COMPARE\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_ANALOGCOMP_ON_COMPARE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_ANALOGCOMP_ON_COMPARE\~ 0x01u}}
\par
{\bkmkstart AAAAAAABFZ}
{\bkmkend AAAAAAABFZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
OnCompare event mask \par
}}
{\xe \v LDD_ANALOGCOMP_OUTPUT_PIN_MASK\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_ANALOGCOMP_OUTPUT_PIN_MASK}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_ANALOGCOMP_OUTPUT_PIN_MASK\~ 0x00010000U}}
\par
{\bkmkstart AAAAAAABGA}
{\bkmkend AAAAAAABGA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Mask for output pin \par
}}
{\xe \v LDD_ANALOGCOMP_POSITIVE_INPUT_0_MASK\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_ANALOGCOMP_POSITIVE_INPUT_0_MASK}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_ANALOGCOMP_POSITIVE_INPUT_0_MASK\~ 0x01U}}
\par
{\bkmkstart AAAAAAABGB}
{\bkmkend AAAAAAABGB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Mask for positive input pin 0 \par
}}
{\xe \v LDD_ANALOGCOMP_POSITIVE_INPUT_1_MASK\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_ANALOGCOMP_POSITIVE_INPUT_1_MASK}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_ANALOGCOMP_POSITIVE_INPUT_1_MASK\~ 0x02U}}
\par
{\bkmkstart AAAAAAABGC}
{\bkmkend AAAAAAABGC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Mask for positive input pin 1 \par
}}
{\xe \v LDD_ANALOGCOMP_POSITIVE_INPUT_2_MASK\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_ANALOGCOMP_POSITIVE_INPUT_2_MASK}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_ANALOGCOMP_POSITIVE_INPUT_2_MASK\~ 0x04U}}
\par
{\bkmkstart AAAAAAABGD}
{\bkmkend AAAAAAABGD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Mask for positive input pin 2 \par
}}
{\xe \v LDD_ANALOGCOMP_POSITIVE_INPUT_3_MASK\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_ANALOGCOMP_POSITIVE_INPUT_3_MASK}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_ANALOGCOMP_POSITIVE_INPUT_3_MASK\~ 0x08U}}
\par
{\bkmkstart AAAAAAABGE}
{\bkmkend AAAAAAABGE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Mask for positive input pin 3 \par
}}
{\xe \v LDD_ANALOGCOMP_POSITIVE_INPUT_4_MASK\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_ANALOGCOMP_POSITIVE_INPUT_4_MASK}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_ANALOGCOMP_POSITIVE_INPUT_4_MASK\~ 0x10U}}
\par
{\bkmkstart AAAAAAABGF}
{\bkmkend AAAAAAABGF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Mask for positive input pin 4 \par
}}
{\xe \v LDD_ANALOGCOMP_POSITIVE_INPUT_5_MASK\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_ANALOGCOMP_POSITIVE_INPUT_5_MASK}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_ANALOGCOMP_POSITIVE_INPUT_5_MASK\~ 0x20U}}
\par
{\bkmkstart AAAAAAABGG}
{\bkmkend AAAAAAABGG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Mask for positive input pin 5 \par
}}
{\xe \v LDD_ANALOGCOMP_POSITIVE_INPUT_6_MASK\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_ANALOGCOMP_POSITIVE_INPUT_6_MASK}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_ANALOGCOMP_POSITIVE_INPUT_6_MASK\~ 0x40U}}
\par
{\bkmkstart AAAAAAABGH}
{\bkmkend AAAAAAABGH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Mask for positive input pin 6 \par
}}
{\xe \v LDD_ANALOGCOMP_POSITIVE_INPUT_7_MASK\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_ANALOGCOMP_POSITIVE_INPUT_7_MASK}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_ANALOGCOMP_POSITIVE_INPUT_7_MASK\~ 0x80U}}
\par
{\bkmkstart AAAAAAABGI}
{\bkmkend AAAAAAABGI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Mask for positive input pin 7 \par
}}
{\xe \v LDD_BITSIO_PIN_0\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_BITSIO_PIN_0}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_BITSIO_PIN_0\~ 0x01U}}
\par
{\bkmkstart AAAAAAABGJ}
{\bkmkend AAAAAAABGJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Pin 0 inside pin list of component \par
}}
{\xe \v LDD_BITSIO_PIN_1\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_BITSIO_PIN_1}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_BITSIO_PIN_1\~ 0x02U}}
\par
{\bkmkstart AAAAAAABGK}
{\bkmkend AAAAAAABGK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Pin 1 inside pin list of component \par
}}
{\xe \v LDD_BITSIO_PIN_10\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_BITSIO_PIN_10}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_BITSIO_PIN_10\~ 0x0400U}}
\par
{\bkmkstart AAAAAAABGL}
{\bkmkend AAAAAAABGL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Pin 10 inside pin list of component \par
}}
{\xe \v LDD_BITSIO_PIN_11\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_BITSIO_PIN_11}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_BITSIO_PIN_11\~ 0x0800U}}
\par
{\bkmkstart AAAAAAABGM}
{\bkmkend AAAAAAABGM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Pin 11 inside pin list of component \par
}}
{\xe \v LDD_BITSIO_PIN_12\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_BITSIO_PIN_12}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_BITSIO_PIN_12\~ 0x1000U}}
\par
{\bkmkstart AAAAAAABGN}
{\bkmkend AAAAAAABGN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Pin 12 inside pin list of component \par
}}
{\xe \v LDD_BITSIO_PIN_13\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_BITSIO_PIN_13}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_BITSIO_PIN_13\~ 0x2000U}}
\par
{\bkmkstart AAAAAAABGO}
{\bkmkend AAAAAAABGO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Pin 13 inside pin list of component \par
}}
{\xe \v LDD_BITSIO_PIN_14\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_BITSIO_PIN_14}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_BITSIO_PIN_14\~ 0x4000U}}
\par
{\bkmkstart AAAAAAABGP}
{\bkmkend AAAAAAABGP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Pin 14 inside pin list of component \par
}}
{\xe \v LDD_BITSIO_PIN_15\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_BITSIO_PIN_15}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_BITSIO_PIN_15\~ 0x8000U}}
\par
{\bkmkstart AAAAAAABGQ}
{\bkmkend AAAAAAABGQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Pin 15 inside pin list of component \par
}}
{\xe \v LDD_BITSIO_PIN_16\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_BITSIO_PIN_16}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_BITSIO_PIN_16\~ 0x00010000U}}
\par
{\bkmkstart AAAAAAABGR}
{\bkmkend AAAAAAABGR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Pin 16 inside pin list of component \par
}}
{\xe \v LDD_BITSIO_PIN_17\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_BITSIO_PIN_17}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_BITSIO_PIN_17\~ 0x00020000U}}
\par
{\bkmkstart AAAAAAABGS}
{\bkmkend AAAAAAABGS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Pin 17 inside pin list of component \par
}}
{\xe \v LDD_BITSIO_PIN_18\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_BITSIO_PIN_18}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_BITSIO_PIN_18\~ 0x00040000U}}
\par
{\bkmkstart AAAAAAABGT}
{\bkmkend AAAAAAABGT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Pin 18 inside pin list of component \par
}}
{\xe \v LDD_BITSIO_PIN_19\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_BITSIO_PIN_19}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_BITSIO_PIN_19\~ 0x00080000U}}
\par
{\bkmkstart AAAAAAABGU}
{\bkmkend AAAAAAABGU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Pin 19 inside pin list of component \par
}}
{\xe \v LDD_BITSIO_PIN_2\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_BITSIO_PIN_2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_BITSIO_PIN_2\~ 0x04U}}
\par
{\bkmkstart AAAAAAABGV}
{\bkmkend AAAAAAABGV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Pin 2 inside pin list of component \par
}}
{\xe \v LDD_BITSIO_PIN_20\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_BITSIO_PIN_20}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_BITSIO_PIN_20\~ 0x00100000U}}
\par
{\bkmkstart AAAAAAABGW}
{\bkmkend AAAAAAABGW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Pin 20 inside pin list of component \par
}}
{\xe \v LDD_BITSIO_PIN_21\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_BITSIO_PIN_21}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_BITSIO_PIN_21\~ 0x00200000U}}
\par
{\bkmkstart AAAAAAABGX}
{\bkmkend AAAAAAABGX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Pin 21 inside pin list of component \par
}}
{\xe \v LDD_BITSIO_PIN_22\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_BITSIO_PIN_22}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_BITSIO_PIN_22\~ 0x00400000U}}
\par
{\bkmkstart AAAAAAABGY}
{\bkmkend AAAAAAABGY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Pin 22 inside pin list of component \par
}}
{\xe \v LDD_BITSIO_PIN_23\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_BITSIO_PIN_23}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_BITSIO_PIN_23\~ 0x00800000U}}
\par
{\bkmkstart AAAAAAABGZ}
{\bkmkend AAAAAAABGZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Pin 23 inside pin list of component \par
}}
{\xe \v LDD_BITSIO_PIN_24\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_BITSIO_PIN_24}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_BITSIO_PIN_24\~ 0x01000000U}}
\par
{\bkmkstart AAAAAAABHA}
{\bkmkend AAAAAAABHA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Pin 24 inside pin list of component \par
}}
{\xe \v LDD_BITSIO_PIN_25\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_BITSIO_PIN_25}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_BITSIO_PIN_25\~ 0x02000000U}}
\par
{\bkmkstart AAAAAAABHB}
{\bkmkend AAAAAAABHB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Pin 25 inside pin list of component \par
}}
{\xe \v LDD_BITSIO_PIN_26\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_BITSIO_PIN_26}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_BITSIO_PIN_26\~ 0x04000000U}}
\par
{\bkmkstart AAAAAAABHC}
{\bkmkend AAAAAAABHC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Pin 26 inside pin list of component \par
}}
{\xe \v LDD_BITSIO_PIN_27\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_BITSIO_PIN_27}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_BITSIO_PIN_27\~ 0x08000000U}}
\par
{\bkmkstart AAAAAAABHD}
{\bkmkend AAAAAAABHD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Pin 27 inside pin list of component \par
}}
{\xe \v LDD_BITSIO_PIN_28\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_BITSIO_PIN_28}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_BITSIO_PIN_28\~ 0x10000000U}}
\par
{\bkmkstart AAAAAAABHE}
{\bkmkend AAAAAAABHE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Pin 28 inside pin list of component \par
}}
{\xe \v LDD_BITSIO_PIN_29\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_BITSIO_PIN_29}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_BITSIO_PIN_29\~ 0x20000000U}}
\par
{\bkmkstart AAAAAAABHF}
{\bkmkend AAAAAAABHF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Pin 29 inside pin list of component \par
}}
{\xe \v LDD_BITSIO_PIN_3\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_BITSIO_PIN_3}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_BITSIO_PIN_3\~ 0x08U}}
\par
{\bkmkstart AAAAAAABHG}
{\bkmkend AAAAAAABHG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Pin 3 inside pin list of component \par
}}
{\xe \v LDD_BITSIO_PIN_30\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_BITSIO_PIN_30}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_BITSIO_PIN_30\~ 0x40000000U}}
\par
{\bkmkstart AAAAAAABHH}
{\bkmkend AAAAAAABHH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Pin 30 inside pin list of component \par
}}
{\xe \v LDD_BITSIO_PIN_31\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_BITSIO_PIN_31}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_BITSIO_PIN_31\~ 0x80000000U}}
\par
{\bkmkstart AAAAAAABHI}
{\bkmkend AAAAAAABHI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Pin 31 inside pin list of component \par
}}
{\xe \v LDD_BITSIO_PIN_4\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_BITSIO_PIN_4}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_BITSIO_PIN_4\~ 0x10U}}
\par
{\bkmkstart AAAAAAABHJ}
{\bkmkend AAAAAAABHJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Pin 4 inside pin list of component \par
}}
{\xe \v LDD_BITSIO_PIN_5\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_BITSIO_PIN_5}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_BITSIO_PIN_5\~ 0x20U}}
\par
{\bkmkstart AAAAAAABHK}
{\bkmkend AAAAAAABHK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Pin 5 inside pin list of component \par
}}
{\xe \v LDD_BITSIO_PIN_6\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_BITSIO_PIN_6}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_BITSIO_PIN_6\~ 0x40U}}
\par
{\bkmkstart AAAAAAABHL}
{\bkmkend AAAAAAABHL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Pin 6 inside pin list of component \par
}}
{\xe \v LDD_BITSIO_PIN_7\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_BITSIO_PIN_7}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_BITSIO_PIN_7\~ 0x80U}}
\par
{\bkmkstart AAAAAAABHM}
{\bkmkend AAAAAAABHM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Pin 7 inside pin list of component \par
}}
{\xe \v LDD_BITSIO_PIN_8\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_BITSIO_PIN_8}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_BITSIO_PIN_8\~ 0x0100U}}
\par
{\bkmkstart AAAAAAABHN}
{\bkmkend AAAAAAABHN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Pin 8 inside pin list of component \par
}}
{\xe \v LDD_BITSIO_PIN_9\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_BITSIO_PIN_9}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_BITSIO_PIN_9\~ 0x0200U}}
\par
{\bkmkstart AAAAAAABHO}
{\bkmkend AAAAAAABHO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Pin 9 inside pin list of component \par
}}
{\xe \v LDD_CAN_ACK_ERROR\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_CAN_ACK_ERROR}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_CAN_ACK_ERROR\~ 0x2000UL}}
\par
{\bkmkstart AAAAAAABHP}
{\bkmkend AAAAAAABHP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Acknowledge error detect error mask \par
}}
{\xe \v LDD_CAN_BIT0_ERROR\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_CAN_BIT0_ERROR}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_CAN_BIT0_ERROR\~ 0x4000UL}}
\par
{\bkmkstart AAAAAAABHQ}
{\bkmkend AAAAAAABHQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Bit0 error detect error mask \par
}}
{\xe \v LDD_CAN_BIT1_ERROR\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_CAN_BIT1_ERROR}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_CAN_BIT1_ERROR\~ 0x8000UL}}
\par
{\bkmkstart AAAAAAABHR}
{\bkmkend AAAAAAABHR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Bit1 error detect error mask \par
}}
{\xe \v LDD_CAN_CRC_ERROR\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_CAN_CRC_ERROR}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_CAN_CRC_ERROR\~ 0x1000UL}}
\par
{\bkmkstart AAAAAAABHS}
{\bkmkend AAAAAAABHS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Cyclic redundancy check error detect error mask \par
}}
{\xe \v LDD_CAN_FORM_ERROR\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_CAN_FORM_ERROR}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_CAN_FORM_ERROR\~ 0x0800UL}}
\par
{\bkmkstart AAAAAAABHT}
{\bkmkend AAAAAAABHT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Message form error detect error mask \par
}}
{\xe \v LDD_CAN_MESSAGE_ID_EXT\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_CAN_MESSAGE_ID_EXT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_CAN_MESSAGE_ID_EXT\~ 0x80000000UL}}
\par
{\bkmkstart AAAAAAABHU}
{\bkmkend AAAAAAABHU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Value specifying extended Mask, ID \par
}}
{\xe \v LDD_CAN_ON_BUSOFF\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_CAN_ON_BUSOFF}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_CAN_ON_BUSOFF\~ 0x04U}}
\par
{\bkmkstart AAAAAAABHV}
{\bkmkend AAAAAAABHV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
OnBusOff event mask \par
}}
{\xe \v LDD_CAN_ON_ERROR\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_CAN_ON_ERROR}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_CAN_ON_ERROR\~ 0x20U}}
\par
{\bkmkstart AAAAAAABHW}
{\bkmkend AAAAAAABHW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
OnError event mask \par
}}
{\xe \v LDD_CAN_ON_FREE_TXBUFFER\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_CAN_ON_FREE_TXBUFFER}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_CAN_ON_FREE_TXBUFFER\~ 0x02U}}
\par
{\bkmkstart AAAAAAABHX}
{\bkmkend AAAAAAABHX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
OnFreeTxBuffer event mask \par
}}
{\xe \v LDD_CAN_ON_FULL_RXBUFFER\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_CAN_ON_FULL_RXBUFFER}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_CAN_ON_FULL_RXBUFFER\~ 0x01U}}
\par
{\bkmkstart AAAAAAABHY}
{\bkmkend AAAAAAABHY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
OnFullRxBuffer event mask \par
}}
{\xe \v LDD_CAN_ON_RXWARNING\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_CAN_ON_RXWARNING}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_CAN_ON_RXWARNING\~ 0x10U}}
\par
{\bkmkstart AAAAAAABHZ}
{\bkmkend AAAAAAABHZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
OnReceiverWarning event mask \par
}}
{\xe \v LDD_CAN_ON_TXWARNING\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_CAN_ON_TXWARNING}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_CAN_ON_TXWARNING\~ 0x08U}}
\par
{\bkmkstart AAAAAAABIA}
{\bkmkend AAAAAAABIA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
OnTransmitterWarning event mask \par
}}
{\xe \v LDD_CAN_ON_WAKEUP\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_CAN_ON_WAKEUP}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_CAN_ON_WAKEUP\~ 0x40U}}
\par
{\bkmkstart AAAAAAABIB}
{\bkmkend AAAAAAABIB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
OnWakeUp event mask \par
}}
{\xe \v LDD_CAN_RX_PIN\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_CAN_RX_PIN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_CAN_RX_PIN\~ 0x01U}}
\par
{\bkmkstart AAAAAAABIC}
{\bkmkend AAAAAAABIC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Rx pin mask \par
}}
{\xe \v LDD_CAN_STUFFING_ERROR\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_CAN_STUFFING_ERROR}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_CAN_STUFFING_ERROR\~ 0x0400UL}}
\par
{\bkmkstart AAAAAAABID}
{\bkmkend AAAAAAABID}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Bit stuff error detect error mask \par
}}
{\xe \v LDD_CAN_TX_PIN\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_CAN_TX_PIN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_CAN_TX_PIN\~ 0x02U}}
\par
{\bkmkstart AAAAAAABIE}
{\bkmkend AAAAAAABIE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Tx pin mask \par
}}
{\xe \v LDD_CAPTURE_ON_CAPTURE\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_CAPTURE_ON_CAPTURE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_CAPTURE_ON_CAPTURE\~ 0x01u}}
\par
{\bkmkstart AAAAAAABIF}
{\bkmkend AAAAAAABIF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
OnCapture event mask value \par
}}
{\xe \v LDD_CAPTURE_ON_OVERRUN\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_CAPTURE_ON_OVERRUN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_CAPTURE_ON_OVERRUN\~ 0x02u}}
\par
{\bkmkstart AAAAAAABIG}
{\bkmkend AAAAAAABIG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
OnOverrun event mask value \par
}}
{\xe \v LDD_CMT_ON_END\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_CMT_ON_END}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_CMT_ON_END\~ 0x01u}}
\par
{\bkmkstart AAAAAAABIH}
{\bkmkend AAAAAAABIH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
OnEnd event mask value \par
}}
{\xe \v LDD_CRC_16_POLY_LOW\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_CRC_16_POLY_LOW}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_CRC_16_POLY_LOW\~ 0x8005U}}
\par
{\bkmkstart AAAAAAABII}
{\bkmkend AAAAAAABII}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
CRC 16bit poly low \par
}}
{\xe \v LDD_CRC_16_SEED_LOW\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_CRC_16_SEED_LOW}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_CRC_16_SEED_LOW\~ 0x00U}}
\par
{\bkmkstart AAAAAAABIJ}
{\bkmkend AAAAAAABIJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
CRC 16bit seed low \par
}}
{\xe \v LDD_CRC_32_POLY_HIGH\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_CRC_32_POLY_HIGH}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_CRC_32_POLY_HIGH\~ 0x04C1U}}
\par
{\bkmkstart AAAAAAABIK}
{\bkmkend AAAAAAABIK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
CRC 32bit poly high \par
}}
{\xe \v LDD_CRC_32_POLY_LOW\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_CRC_32_POLY_LOW}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_CRC_32_POLY_LOW\~ 0x1DB7U}}
\par
{\bkmkstart AAAAAAABIL}
{\bkmkend AAAAAAABIL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
CRC 32bit poly low \par
}}
{\xe \v LDD_CRC_32_SEED_HIGH\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_CRC_32_SEED_HIGH}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_CRC_32_SEED_HIGH\~ 0xFFFFU}}
\par
{\bkmkstart AAAAAAABIM}
{\bkmkend AAAAAAABIM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
CRC 32bit seed high \par
}}
{\xe \v LDD_CRC_32_SEED_LOW\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_CRC_32_SEED_LOW}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_CRC_32_SEED_LOW\~ 0xFFFFU}}
\par
{\bkmkstart AAAAAAABIN}
{\bkmkend AAAAAAABIN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
CRC 32bit seed low \par
}}
{\xe \v LDD_CRC_CCITT_POLY_LOW\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_CRC_CCITT_POLY_LOW}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_CRC_CCITT_POLY_LOW\~ 0x1021U}}
\par
{\bkmkstart AAAAAAABIO}
{\bkmkend AAAAAAABIO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
CRC CCITT poly low \par
}}
{\xe \v LDD_CRC_CCITT_SEED_LOW\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_CRC_CCITT_SEED_LOW}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_CRC_CCITT_SEED_LOW\~ 0xFFFFU}}
\par
{\bkmkstart AAAAAAABIP}
{\bkmkend AAAAAAABIP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
CRC CCITT seed low \par
}}
{\xe \v LDD_CRC_DNP_POLY_LOW\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_CRC_DNP_POLY_LOW}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_CRC_DNP_POLY_LOW\~ 0x3D65U}}
\par
{\bkmkstart AAAAAAABIQ}
{\bkmkend AAAAAAABIQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
CRC DNP poly low \par
}}
{\xe \v LDD_CRC_DNP_SEED_LOW\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_CRC_DNP_SEED_LOW}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_CRC_DNP_SEED_LOW\~ 0x00U}}
\par
{\bkmkstart AAAAAAABIR}
{\bkmkend AAAAAAABIR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
CRC DNP seed low \par
}}
{\xe \v LDD_CRC_KERMIT_POLY_LOW\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_CRC_KERMIT_POLY_LOW}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_CRC_KERMIT_POLY_LOW\~ 0x1021U}}
\par
{\bkmkstart AAAAAAABIS}
{\bkmkend AAAAAAABIS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
CRC KERMIT poly low \par
}}
{\xe \v LDD_CRC_KERMIT_SEED_LOW\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_CRC_KERMIT_SEED_LOW}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_CRC_KERMIT_SEED_LOW\~ 0x00U}}
\par
{\bkmkstart AAAAAAABIT}
{\bkmkend AAAAAAABIT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
CRC KERMIT seed low \par
}}
{\xe \v LDD_CRC_MODBUS_16_POLY_LOW\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_CRC_MODBUS_16_POLY_LOW}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_CRC_MODBUS_16_POLY_LOW\~ 0x8005U}}
\par
{\bkmkstart AAAAAAABIU}
{\bkmkend AAAAAAABIU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
CRC MODBUS16 poly low \par
}}
{\xe \v LDD_CRC_MODBUS_16_SEED_LOW\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_CRC_MODBUS_16_SEED_LOW}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_CRC_MODBUS_16_SEED_LOW\~ 0xFFFFU}}
\par
{\bkmkstart AAAAAAABIV}
{\bkmkend AAAAAAABIV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
CRC MODBUS16 seed low \par
}}
{\xe \v LDD_DAC_DMA_ERROR\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_DAC_DMA_ERROR}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_DAC_DMA_ERROR\~ 0x01u}}
\par
{\bkmkstart AAAAAAABIW}
{\bkmkend AAAAAAABIW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
DMA error mask \par
}}
{\xe \v LDD_DAC_ON_BUFFER_END\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_DAC_ON_BUFFER_END}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_DAC_ON_BUFFER_END\~ 0x01U}}
\par
{\bkmkstart AAAAAAABIX}
{\bkmkend AAAAAAABIX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
OnBufferEnd event mask \par
}}
{\xe \v LDD_DAC_ON_BUFFER_START\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_DAC_ON_BUFFER_START}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_DAC_ON_BUFFER_START\~ 0x02U}}
\par
{\bkmkstart AAAAAAABIY}
{\bkmkend AAAAAAABIY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
OnBufferStart event mask \par
}}
{\xe \v LDD_DAC_ON_BUFFER_WATERMARK\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_DAC_ON_BUFFER_WATERMARK}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_DAC_ON_BUFFER_WATERMARK\~ 0x04U}}
\par
{\bkmkstart AAAAAAABIZ}
{\bkmkend AAAAAAABIZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
OnBufferWatermark event mask \par
}}
{\xe \v LDD_DAC_ON_COMPLETE\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_DAC_ON_COMPLETE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_DAC_ON_COMPLETE\~ {\b LDD_DMA_ON_COMPLETE}}}
\par
{\bkmkstart AAAAAAABJA}
{\bkmkend AAAAAAABJA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
OnComplete event mask \par
}}
{\xe \v LDD_DAC_ON_ERROR\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_DAC_ON_ERROR}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_DAC_ON_ERROR\~ {\b LDD_DMA_ON_ERROR}}}
\par
{\bkmkstart AAAAAAABJB}
{\bkmkend AAAAAAABJB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
OnError event mask \par
}}
{\xe \v LDD_DAC_OUTPUT_PIN_0\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_DAC_OUTPUT_PIN_0}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_DAC_OUTPUT_PIN_0\~ 0x01u}}
\par
{\bkmkstart AAAAAAABJC}
{\bkmkend AAAAAAABJC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
DAC output pin 0 mask \par
}}
{\xe \v LDD_DMA_ADDRESS_ADJUSTMENT\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_DMA_ADDRESS_ADJUSTMENT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_DMA_ADDRESS_ADJUSTMENT\~ 0x01U}}
\par
{\bkmkstart AAAAAAABJD}
{\bkmkend AAAAAAABJD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Address adjustment after transfer completed. \par
}}
{\xe \v LDD_DMA_CHANNEL_0_MASK\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_DMA_CHANNEL_0_MASK}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_DMA_CHANNEL_0_MASK\~ 0x01U}}
\par
{\bkmkstart AAAAAAABJE}
{\bkmkend AAAAAAABJE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
DMA channel 0 mask. \par
}}
{\xe \v LDD_DMA_CHANNEL_10_MASK\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_DMA_CHANNEL_10_MASK}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_DMA_CHANNEL_10_MASK\~ 0x0400U}}
\par
{\bkmkstart AAAAAAABJF}
{\bkmkend AAAAAAABJF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
DMA channel 10 mask. \par
}}
{\xe \v LDD_DMA_CHANNEL_11_MASK\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_DMA_CHANNEL_11_MASK}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_DMA_CHANNEL_11_MASK\~ 0x0800U}}
\par
{\bkmkstart AAAAAAABJG}
{\bkmkend AAAAAAABJG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
DMA channel 11 mask. \par
}}
{\xe \v LDD_DMA_CHANNEL_12_MASK\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_DMA_CHANNEL_12_MASK}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_DMA_CHANNEL_12_MASK\~ 0x1000U}}
\par
{\bkmkstart AAAAAAABJH}
{\bkmkend AAAAAAABJH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
DMA channel 12 mask. \par
}}
{\xe \v LDD_DMA_CHANNEL_13_MASK\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_DMA_CHANNEL_13_MASK}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_DMA_CHANNEL_13_MASK\~ 0x2000U}}
\par
{\bkmkstart AAAAAAABJI}
{\bkmkend AAAAAAABJI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
DMA channel 13 mask. \par
}}
{\xe \v LDD_DMA_CHANNEL_14_MASK\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_DMA_CHANNEL_14_MASK}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_DMA_CHANNEL_14_MASK\~ 0x4000U}}
\par
{\bkmkstart AAAAAAABJJ}
{\bkmkend AAAAAAABJJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
DMA channel 14 mask. \par
}}
{\xe \v LDD_DMA_CHANNEL_15_MASK\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_DMA_CHANNEL_15_MASK}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_DMA_CHANNEL_15_MASK\~ 0x8000U}}
\par
{\bkmkstart AAAAAAABJK}
{\bkmkend AAAAAAABJK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
DMA channel 15 mask. \par
}}
{\xe \v LDD_DMA_CHANNEL_1_MASK\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_DMA_CHANNEL_1_MASK}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_DMA_CHANNEL_1_MASK\~ 0x02U}}
\par
{\bkmkstart AAAAAAABJL}
{\bkmkend AAAAAAABJL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
DMA channel 1 mask. \par
}}
{\xe \v LDD_DMA_CHANNEL_2_MASK\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_DMA_CHANNEL_2_MASK}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_DMA_CHANNEL_2_MASK\~ 0x04U}}
\par
{\bkmkstart AAAAAAABJM}
{\bkmkend AAAAAAABJM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
DMA channel 2 mask. \par
}}
{\xe \v LDD_DMA_CHANNEL_3_MASK\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_DMA_CHANNEL_3_MASK}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_DMA_CHANNEL_3_MASK\~ 0x08U}}
\par
{\bkmkstart AAAAAAABJN}
{\bkmkend AAAAAAABJN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
DMA channel 3 mask. \par
}}
{\xe \v LDD_DMA_CHANNEL_4_MASK\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_DMA_CHANNEL_4_MASK}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_DMA_CHANNEL_4_MASK\~ 0x10U}}
\par
{\bkmkstart AAAAAAABJO}
{\bkmkend AAAAAAABJO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
DMA channel 4 mask. \par
}}
{\xe \v LDD_DMA_CHANNEL_5_MASK\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_DMA_CHANNEL_5_MASK}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_DMA_CHANNEL_5_MASK\~ 0x20U}}
\par
{\bkmkstart AAAAAAABJP}
{\bkmkend AAAAAAABJP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
DMA channel 5 mask. \par
}}
{\xe \v LDD_DMA_CHANNEL_6_MASK\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_DMA_CHANNEL_6_MASK}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_DMA_CHANNEL_6_MASK\~ 0x40U}}
\par
{\bkmkstart AAAAAAABJQ}
{\bkmkend AAAAAAABJQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
DMA channel 6 mask. \par
}}
{\xe \v LDD_DMA_CHANNEL_7_MASK\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_DMA_CHANNEL_7_MASK}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_DMA_CHANNEL_7_MASK\~ 0x80U}}
\par
{\bkmkstart AAAAAAABJR}
{\bkmkend AAAAAAABJR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
DMA channel 7 mask. \par
}}
{\xe \v LDD_DMA_CHANNEL_8_MASK\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_DMA_CHANNEL_8_MASK}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_DMA_CHANNEL_8_MASK\~ 0x0100U}}
\par
{\bkmkstart AAAAAAABJS}
{\bkmkend AAAAAAABJS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
DMA channel 8 mask. \par
}}
{\xe \v LDD_DMA_CHANNEL_9_MASK\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_DMA_CHANNEL_9_MASK}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_DMA_CHANNEL_9_MASK\~ 0x0200U}}
\par
{\bkmkstart AAAAAAABJT}
{\bkmkend AAAAAAABJT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
DMA channel 9 mask. \par
}}
{\xe \v LDD_DMA_CHANNEL_PRIORITY_ERROR\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_DMA_CHANNEL_PRIORITY_ERROR}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_DMA_CHANNEL_PRIORITY_ERROR\~ 0x4000U}}
\par
{\bkmkstart AAAAAAABJU}
{\bkmkend AAAAAAABJU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Channel priority error. \par
}}
{\xe \v LDD_DMA_CONFIGURATION_ERROR\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_DMA_CONFIGURATION_ERROR}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_DMA_CONFIGURATION_ERROR\~ 0x40000000U}}
\par
{\bkmkstart AAAAAAABJV}
{\bkmkend AAAAAAABJV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Configuration error. \par
}}
{\xe \v LDD_DMA_COUNT_ERROR\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_DMA_COUNT_ERROR}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_DMA_COUNT_ERROR\~ 0x08U}}
\par
{\bkmkstart AAAAAAABJW}
{\bkmkend AAAAAAABJW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Byte count inconsistency with transfer sizes or transfer count error. \par
}}
{\xe \v LDD_DMA_DESTINATION_ADDRESS_ADJUSTMENT\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_DMA_DESTINATION_ADDRESS_ADJUSTMENT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_DMA_DESTINATION_ADDRESS_ADJUSTMENT\~ 0x01U}}
\par
{\bkmkstart AAAAAAABJX}
{\bkmkend AAAAAAABJX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destination address adjustment after request serviced. \par
}}
{\xe \v LDD_DMA_DESTINATION_ADDRESS_ERROR\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_DMA_DESTINATION_ADDRESS_ERROR}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_DMA_DESTINATION_ADDRESS_ERROR\~ 0x20U}}
\par
{\bkmkstart AAAAAAABJY}
{\bkmkend AAAAAAABJY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Address inconsistency with transfer size error. \par
}}
{\xe \v LDD_DMA_DESTINATION_BUS_ERROR\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_DMA_DESTINATION_BUS_ERROR}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_DMA_DESTINATION_BUS_ERROR\~ 0x10000000U}}
\par
{\bkmkstart AAAAAAABJZ}
{\bkmkend AAAAAAABJZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Bus error on a destination write. \par
}}
{\xe \v LDD_DMA_DESTINATION_OFFSET_ERROR\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_DMA_DESTINATION_OFFSET_ERROR}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_DMA_DESTINATION_OFFSET_ERROR\~ 0x10U}}
\par
{\bkmkstart AAAAAAABKA}
{\bkmkend AAAAAAABKA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Offset inconsistency with transfer size error. \par
}}
{\xe \v LDD_DMA_NO_ACTION\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_DMA_NO_ACTION}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_DMA_NO_ACTION\~ 0x00U}}
\par
{\bkmkstart AAAAAAABKB}
{\bkmkend AAAAAAABKB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
No action performed after request serviced. \par
}}
{\xe \v LDD_DMA_ON_COMPLETE\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_DMA_ON_COMPLETE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_DMA_ON_COMPLETE\~ 0x01U}}
\par
{\bkmkstart AAAAAAABKC}
{\bkmkend AAAAAAABKC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
OnTransferComplete event mask. \par
}}
{\xe \v LDD_DMA_ON_ERROR\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_DMA_ON_ERROR}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_DMA_ON_ERROR\~ 0x02U}}
\par
{\bkmkstart AAAAAAABKD}
{\bkmkend AAAAAAABKD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
OnError event mask. \par
}}
{\xe \v LDD_DMA_SCATTER_GATHER\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_DMA_SCATTER_GATHER}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_DMA_SCATTER_GATHER\~ 0x02U}}
\par
{\bkmkstart AAAAAAABKE}
{\bkmkend AAAAAAABKE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Scatter/gather performed after transfer completed. \par
}}
{\xe \v LDD_DMA_SCATTER_GATHER_ERROR\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_DMA_SCATTER_GATHER_ERROR}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_DMA_SCATTER_GATHER_ERROR\~ 0x04U}}
\par
{\bkmkstart AAAAAAABKF}
{\bkmkend AAAAAAABKF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Scatter/gather configuration error. \par
}}
{\xe \v LDD_DMA_SOURCE_ADDRESS_ADJUSTMENT\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_DMA_SOURCE_ADDRESS_ADJUSTMENT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_DMA_SOURCE_ADDRESS_ADJUSTMENT\~ 0x02U}}
\par
{\bkmkstart AAAAAAABKG}
{\bkmkend AAAAAAABKG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Source address adjustment after request serviced. \par
}}
{\xe \v LDD_DMA_SOURCE_ADDRESS_ERROR\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_DMA_SOURCE_ADDRESS_ERROR}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_DMA_SOURCE_ADDRESS_ERROR\~ 0x80U}}
\par
{\bkmkstart AAAAAAABKH}
{\bkmkend AAAAAAABKH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Address inconsistency with transfer size error. \par
}}
{\xe \v LDD_DMA_SOURCE_BUS_ERROR\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_DMA_SOURCE_BUS_ERROR}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_DMA_SOURCE_BUS_ERROR\~ 0x20000000U}}
\par
{\bkmkstart AAAAAAABKI}
{\bkmkend AAAAAAABKI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Bus error on a source read. \par
}}
{\xe \v LDD_DMA_SOURCE_OFFSET_ERROR\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_DMA_SOURCE_OFFSET_ERROR}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_DMA_SOURCE_OFFSET_ERROR\~ 0x40U}}
\par
{\bkmkstart AAAAAAABKJ}
{\bkmkend AAAAAAABKJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Offset inconsistency with transfer size error. \par
}}
{\xe \v LDD_DRY_CLOCK_TAMPER\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_DRY_CLOCK_TAMPER}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_DRY_CLOCK_TAMPER\~ 0x20U}}
\par
{\bkmkstart AAAAAAABKK}
{\bkmkend AAAAAAABKK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The 32.768 kHz clock source is outside the valid range. \par
}}
{\xe \v LDD_DRY_FLASH_SECURITY\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_DRY_FLASH_SECURITY}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_DRY_FLASH_SECURITY\~ 0x0100U}}
\par
{\bkmkstart AAAAAAABKL}
{\bkmkend AAAAAAABKL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The flash security is disabled. \par
}}
{\xe \v LDD_DRY_MONOTONIC_OVERFLOW\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_DRY_MONOTONIC_OVERFLOW}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_DRY_MONOTONIC_OVERFLOW\~ 0x08U}}
\par
{\bkmkstart AAAAAAABKM}
{\bkmkend AAAAAAABKM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
RTC monotonic overflow has occurred. \par
}}
{\xe \v LDD_DRY_ON_TAMPER_DETECTED\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_DRY_ON_TAMPER_DETECTED}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_DRY_ON_TAMPER_DETECTED\~ 0x01U}}
\par
{\bkmkstart AAAAAAABKN}
{\bkmkend AAAAAAABKN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
OnTamperDetected event mask \par
}}
{\xe \v LDD_DRY_SECURE_KEY_WORD_0\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_DRY_SECURE_KEY_WORD_0}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_DRY_SECURE_KEY_WORD_0\~ 0x01U}}
\par
{\bkmkstart AAAAAAABKO}
{\bkmkend AAAAAAABKO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Secure key word 0 mask \par
}}
{\xe \v LDD_DRY_SECURE_KEY_WORD_1\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_DRY_SECURE_KEY_WORD_1}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_DRY_SECURE_KEY_WORD_1\~ 0x02U}}
\par
{\bkmkstart AAAAAAABKP}
{\bkmkend AAAAAAABKP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Secure key word 1 mask \par
}}
{\xe \v LDD_DRY_SECURE_KEY_WORD_2\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_DRY_SECURE_KEY_WORD_2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_DRY_SECURE_KEY_WORD_2\~ 0x04U}}
\par
{\bkmkstart AAAAAAABKQ}
{\bkmkend AAAAAAABKQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Secure key word 2 mask \par
}}
{\xe \v LDD_DRY_SECURE_KEY_WORD_3\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_DRY_SECURE_KEY_WORD_3}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_DRY_SECURE_KEY_WORD_3\~ 0x08U}}
\par
{\bkmkstart AAAAAAABKR}
{\bkmkend AAAAAAABKR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Secure key word 3 mask \par
}}
{\xe \v LDD_DRY_SECURE_KEY_WORD_4\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_DRY_SECURE_KEY_WORD_4}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_DRY_SECURE_KEY_WORD_4\~ 0x10U}}
\par
{\bkmkstart AAAAAAABKS}
{\bkmkend AAAAAAABKS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Secure key word 4 mask \par
}}
{\xe \v LDD_DRY_SECURE_KEY_WORD_5\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_DRY_SECURE_KEY_WORD_5}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_DRY_SECURE_KEY_WORD_5\~ 0x20U}}
\par
{\bkmkstart AAAAAAABKT}
{\bkmkend AAAAAAABKT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Secure key word 5 mask \par
}}
{\xe \v LDD_DRY_SECURE_KEY_WORD_6\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_DRY_SECURE_KEY_WORD_6}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_DRY_SECURE_KEY_WORD_6\~ 0x40U}}
\par
{\bkmkstart AAAAAAABKU}
{\bkmkend AAAAAAABKU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Secure key word 6 mask \par
}}
{\xe \v LDD_DRY_SECURE_KEY_WORD_7\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_DRY_SECURE_KEY_WORD_7}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_DRY_SECURE_KEY_WORD_7\~ 0x80U}}
\par
{\bkmkstart AAAAAAABKV}
{\bkmkend AAAAAAABKV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Secure key word 7 mask \par
}}
{\xe \v LDD_DRY_SECURITY_TAMPER\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_DRY_SECURITY_TAMPER}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_DRY_SECURITY_TAMPER\~ 0x80U}}
\par
{\bkmkstart AAAAAAABKW}
{\bkmkend AAAAAAABKW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The (optional) security module asserted its tamper detect. \par
}}
{\xe \v LDD_DRY_TAMPER_PIN_0\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_DRY_TAMPER_PIN_0}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_DRY_TAMPER_PIN_0\~ 0x00010000U}}
\par
{\bkmkstart AAAAAAABKX}
{\bkmkend AAAAAAABKX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Mismatch on tamper pin 0. \par
}}
{\xe \v LDD_DRY_TAMPER_PIN_1\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_DRY_TAMPER_PIN_1}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_DRY_TAMPER_PIN_1\~ 0x00020000U}}
\par
{\bkmkstart AAAAAAABKY}
{\bkmkend AAAAAAABKY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Mismatch on tamper pin 1. \par
}}
{\xe \v LDD_DRY_TAMPER_PIN_2\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_DRY_TAMPER_PIN_2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_DRY_TAMPER_PIN_2\~ 0x00040000U}}
\par
{\bkmkstart AAAAAAABKZ}
{\bkmkend AAAAAAABKZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Mismatch on tamper pin 2. \par
}}
{\xe \v LDD_DRY_TAMPER_PIN_3\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_DRY_TAMPER_PIN_3}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_DRY_TAMPER_PIN_3\~ 0x00080000U}}
\par
{\bkmkstart AAAAAAABLA}
{\bkmkend AAAAAAABLA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Mismatch on tamper pin 3. \par
}}
{\xe \v LDD_DRY_TAMPER_PIN_4\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_DRY_TAMPER_PIN_4}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_DRY_TAMPER_PIN_4\~ 0x00100000U}}
\par
{\bkmkstart AAAAAAABLB}
{\bkmkend AAAAAAABLB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Mismatch on tamper pin 4. \par
}}
{\xe \v LDD_DRY_TAMPER_PIN_5\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_DRY_TAMPER_PIN_5}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_DRY_TAMPER_PIN_5\~ 0x00200000U}}
\par
{\bkmkstart AAAAAAABLC}
{\bkmkend AAAAAAABLC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Mismatch on tamper pin 5. \par
}}
{\xe \v LDD_DRY_TAMPER_PIN_6\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_DRY_TAMPER_PIN_6}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_DRY_TAMPER_PIN_6\~ 0x00400000U}}
\par
{\bkmkstart AAAAAAABLD}
{\bkmkend AAAAAAABLD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Mismatch on tamper pin 6. \par
}}
{\xe \v LDD_DRY_TAMPER_PIN_7\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_DRY_TAMPER_PIN_7}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_DRY_TAMPER_PIN_7\~ 0x00800000U}}
\par
{\bkmkstart AAAAAAABLE}
{\bkmkend AAAAAAABLE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Mismatch on tamper pin 7. \par
}}
{\xe \v LDD_DRY_TEMPERATURE_TAMPER\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_DRY_TEMPERATURE_TAMPER}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_DRY_TEMPERATURE_TAMPER\~ 0x40U}}
\par
{\bkmkstart AAAAAAABLF}
{\bkmkend AAAAAAABLF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The junction temperature is outside of specification. \par
}}
{\xe \v LDD_DRY_TEST_MODE\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_DRY_TEST_MODE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_DRY_TEST_MODE\~ 0x0200U}}
\par
{\bkmkstart AAAAAAABLG}
{\bkmkend AAAAAAABLG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Any test mode has been entered. \par
}}
{\xe \v LDD_DRY_TIME_OVERFLOW\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_DRY_TIME_OVERFLOW}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_DRY_TIME_OVERFLOW\~ 0x04U}}
\par
{\bkmkstart AAAAAAABLH}
{\bkmkend AAAAAAABLH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
RTC time overflow has occurred. \par
}}
{\xe \v LDD_DRY_VOLTAGE_TAMPER\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_DRY_VOLTAGE_TAMPER}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_DRY_VOLTAGE_TAMPER\~ 0x10U}}
\par
{\bkmkstart AAAAAAABLI}
{\bkmkend AAAAAAABLI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
VBAT voltage is outside of the valid range. \par
}}
{\xe \v LDD_ETH_COL_PIN\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_ETH_COL_PIN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_ETH_COL_PIN\~ 0x04u}}
\par
{\bkmkstart AAAAAAABLJ}
{\bkmkend AAAAAAABLJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
COL pin mask \par
}}
{\xe \v LDD_ETH_CRS_PIN\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_ETH_CRS_PIN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_ETH_CRS_PIN\~ 0x08u}}
\par
{\bkmkstart AAAAAAABLK}
{\bkmkend AAAAAAABLK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
CRS pin mask \par
}}
{\xe \v LDD_ETH_MDC_PIN\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_ETH_MDC_PIN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_ETH_MDC_PIN\~ 0x01u}}
\par
{\bkmkstart AAAAAAABLL}
{\bkmkend AAAAAAABLL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
MDC pin mask \par
}}
{\xe \v LDD_ETH_MDIO_PIN\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_ETH_MDIO_PIN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_ETH_MDIO_PIN\~ 0x02u}}
\par
{\bkmkstart AAAAAAABLM}
{\bkmkend AAAAAAABLM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
MDIO pin mask \par
}}
{\xe \v LDD_ETH_ON_FATAL_ERROR\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_ETH_ON_FATAL_ERROR}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_ETH_ON_FATAL_ERROR\~ 0x20u}}
\par
{\bkmkstart AAAAAAABLN}
{\bkmkend AAAAAAABLN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
OnFatalError event mask \par
}}
{\xe \v LDD_ETH_ON_FRAME_RECEIVED\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_ETH_ON_FRAME_RECEIVED}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_ETH_ON_FRAME_RECEIVED\~ 0x04u}}
\par
{\bkmkstart AAAAAAABLO}
{\bkmkend AAAAAAABLO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
OnFrameReceived event mask \par
}}
{\xe \v LDD_ETH_ON_FRAME_RECEIVED_TIMESTAMPED\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_ETH_ON_FRAME_RECEIVED_TIMESTAMPED}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_ETH_ON_FRAME_RECEIVED_TIMESTAMPED\~ 0x08u}}
\par
{\bkmkstart AAAAAAABLP}
{\bkmkend AAAAAAABLP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
OnFrameReceivedTimestamped event mask \par
}}
{\xe \v LDD_ETH_ON_FRAME_TRANSMITTED\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_ETH_ON_FRAME_TRANSMITTED}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_ETH_ON_FRAME_TRANSMITTED\~ 0x01u}}
\par
{\bkmkstart AAAAAAABLQ}
{\bkmkend AAAAAAABLQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
OnFrameTransmitted event mask \par
}}
{\xe \v LDD_ETH_ON_FRAME_TRANSMITTED_TIMESTAMPED\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_ETH_ON_FRAME_TRANSMITTED_TIMESTAMPED}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_ETH_ON_FRAME_TRANSMITTED_TIMESTAMPED\~ 0x02u}}
\par
{\bkmkstart AAAAAAABLR}
{\bkmkend AAAAAAABLR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
OnFrameTransmittedTimestamped event mask \par
}}
{\xe \v LDD_ETH_ON_MII_FINISHED\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_ETH_ON_MII_FINISHED}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_ETH_ON_MII_FINISHED\~ 0x10u}}
\par
{\bkmkstart AAAAAAABLS}
{\bkmkend AAAAAAABLS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
OnMIIFinished event mask \par
}}
{\xe \v LDD_ETH_ON_WAKE_UP\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_ETH_ON_WAKE_UP}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_ETH_ON_WAKE_UP\~ 0x40u}}
\par
{\bkmkstart AAAAAAABLT}
{\bkmkend AAAAAAABLT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
OnWakeUp event mask \par
}}
{\xe \v LDD_ETH_RXCLK_PIN\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_ETH_RXCLK_PIN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_ETH_RXCLK_PIN\~ 0x0800u}}
\par
{\bkmkstart AAAAAAABLU}
{\bkmkend AAAAAAABLU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
RXCLK pin mask \par
}}
{\xe \v LDD_ETH_RXD0_PIN\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_ETH_RXD0_PIN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_ETH_RXD0_PIN\~ 0x2000u}}
\par
{\bkmkstart AAAAAAABLV}
{\bkmkend AAAAAAABLV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
RXD0 pin mask \par
}}
{\xe \v LDD_ETH_RXD1_PIN\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_ETH_RXD1_PIN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_ETH_RXD1_PIN\~ 0x4000u}}
\par
{\bkmkstart AAAAAAABLW}
{\bkmkend AAAAAAABLW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
RXD1 pin mask \par
}}
{\xe \v LDD_ETH_RXD2_PIN\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_ETH_RXD2_PIN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_ETH_RXD2_PIN\~ 0x8000u}}
\par
{\bkmkstart AAAAAAABLX}
{\bkmkend AAAAAAABLX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
RXD2 pin mask \par
}}
{\xe \v LDD_ETH_RXD3_PIN\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_ETH_RXD3_PIN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_ETH_RXD3_PIN\~ 0x00010000u}}
\par
{\bkmkstart AAAAAAABLY}
{\bkmkend AAAAAAABLY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
RXD3 pin mask \par
}}
{\xe \v LDD_ETH_RXDV_PIN\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_ETH_RXDV_PIN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_ETH_RXDV_PIN\~ 0x1000u}}
\par
{\bkmkstart AAAAAAABLZ}
{\bkmkend AAAAAAABLZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
RXDV pin mask \par
}}
{\xe \v LDD_ETH_RXER_PIN\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_ETH_RXER_PIN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_ETH_RXER_PIN\~ 0x00020000u}}
\par
{\bkmkstart AAAAAAABMA}
{\bkmkend AAAAAAABMA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
RXER pin mask \par
}}
{\xe \v LDD_ETH_TXCLK_PIN\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_ETH_TXCLK_PIN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_ETH_TXCLK_PIN\~ 0x10u}}
\par
{\bkmkstart AAAAAAABMB}
{\bkmkend AAAAAAABMB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
TXCLK pin mask \par
}}
{\xe \v LDD_ETH_TXD0_PIN\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_ETH_TXD0_PIN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_ETH_TXD0_PIN\~ 0x20u}}
\par
{\bkmkstart AAAAAAABMC}
{\bkmkend AAAAAAABMC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
TXD0 pin mask \par
}}
{\xe \v LDD_ETH_TXD1_PIN\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_ETH_TXD1_PIN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_ETH_TXD1_PIN\~ 0x40u}}
\par
{\bkmkstart AAAAAAABMD}
{\bkmkend AAAAAAABMD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
TXD1 pin mask \par
}}
{\xe \v LDD_ETH_TXD2_PIN\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_ETH_TXD2_PIN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_ETH_TXD2_PIN\~ 0x80u}}
\par
{\bkmkstart AAAAAAABME}
{\bkmkend AAAAAAABME}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
TXD2 pin mask \par
}}
{\xe \v LDD_ETH_TXD3_PIN\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_ETH_TXD3_PIN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_ETH_TXD3_PIN\~ 0x0100u}}
\par
{\bkmkstart AAAAAAABMF}
{\bkmkend AAAAAAABMF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
TXD3 pin mask \par
}}
{\xe \v LDD_ETH_TXEN_PIN\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_ETH_TXEN_PIN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_ETH_TXEN_PIN\~ 0x0200u}}
\par
{\bkmkstart AAAAAAABMG}
{\bkmkend AAAAAAABMG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
TXEN pin mask \par
}}
{\xe \v LDD_ETH_TXER_PIN\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_ETH_TXER_PIN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_ETH_TXER_PIN\~ 0x0400u}}
\par
{\bkmkstart AAAAAAABMH}
{\bkmkend AAAAAAABMH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
TXER pin mask \par
}}
{\xe \v LDD_EVENTCNTR_ON_END\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_EVENTCNTR_ON_END}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_EVENTCNTR_ON_END\~ 0x01u}}
\par
{\bkmkstart AAAAAAABMI}
{\bkmkend AAAAAAABMI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
OnEnd event mask value \par
}}
{\xe \v LDD_FLASH_ACCESS_ERROR\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_FLASH_ACCESS_ERROR}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_FLASH_ACCESS_ERROR\~ 0x20u}}
\par
{\bkmkstart AAAAAAABMJ}
{\bkmkend AAAAAAABMJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Access error flag's mask \par
}}
{\xe \v LDD_FLASH_ERASE_VERIFICATION_ERROR\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_FLASH_ERASE_VERIFICATION_ERROR}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_FLASH_ERASE_VERIFICATION_ERROR\~ 0x08u}}
\par
{\bkmkstart AAAAAAABMK}
{\bkmkend AAAAAAABMK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Erase verification error flag's mask \par
}}
{\xe \v LDD_FLASH_MULTIPLE_WRITE_ERROR\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_FLASH_MULTIPLE_WRITE_ERROR}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_FLASH_MULTIPLE_WRITE_ERROR\~ 0x04u}}
\par
{\bkmkstart AAAAAAABML}
{\bkmkend AAAAAAABML}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Multiple write to one flash memory location error flag's mask \par
}}
{\xe \v LDD_FLASH_ON_ERROR\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_FLASH_ON_ERROR}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_FLASH_ON_ERROR\~ 0x04u}}
\par
{\bkmkstart AAAAAAABMM}
{\bkmkend AAAAAAABMM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
OnError event mask \par
}}
{\xe \v LDD_FLASH_ON_OPERATION_COMPLETE\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_FLASH_ON_OPERATION_COMPLETE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_FLASH_ON_OPERATION_COMPLETE\~ 0x02u}}
\par
{\bkmkstart AAAAAAABMN}
{\bkmkend AAAAAAABMN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
OnOperationComplete event mask \par
}}
{\xe \v LDD_FLASH_PROTECTION_VIOLATION\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_FLASH_PROTECTION_VIOLATION}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_FLASH_PROTECTION_VIOLATION\~ 0x10u}}
\par
{\bkmkstart AAAAAAABMO}
{\bkmkend AAAAAAABMO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Protection violation error flag's mask \par
}}
{\xe \v LDD_FLASH_READ_COLLISION_ERROR\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_FLASH_READ_COLLISION_ERROR}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_FLASH_READ_COLLISION_ERROR\~ 0x40u}}
\par
{\bkmkstart AAAAAAABMP}
{\bkmkend AAAAAAABMP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Read collision error flag's mask \par
}}
{\xe \v LDD_FREECNTR_ON_INTERRUPT\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_FREECNTR_ON_INTERRUPT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_FREECNTR_ON_INTERRUPT\~ 0x01u}}
\par
{\bkmkstart AAAAAAABMQ}
{\bkmkend AAAAAAABMQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
OnInterrupt event mask value \par
}}
{\xe \v LDD_GPIO_ON_PORT_EVENT\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_GPIO_ON_PORT_EVENT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_GPIO_ON_PORT_EVENT\~ 0x01u}}
\par
{\bkmkstart AAAAAAABMR}
{\bkmkend AAAAAAABMR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
OnPortEvent event mask \par
}}
{\xe \v LDD_GPIO_PIN_0\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_GPIO_PIN_0}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_GPIO_PIN_0\~ 0x01u}}
\par
{\bkmkstart AAAAAAABMS}
{\bkmkend AAAAAAABMS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Pin 0 inside the port \par
}}
{\xe \v LDD_GPIO_PIN_1\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_GPIO_PIN_1}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_GPIO_PIN_1\~ 0x02u}}
\par
{\bkmkstart AAAAAAABMT}
{\bkmkend AAAAAAABMT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Pin 1 inside the port \par
}}
{\xe \v LDD_GPIO_PIN_10\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_GPIO_PIN_10}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_GPIO_PIN_10\~ 0x0400u}}
\par
{\bkmkstart AAAAAAABMU}
{\bkmkend AAAAAAABMU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Pin 10 inside the port \par
}}
{\xe \v LDD_GPIO_PIN_11\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_GPIO_PIN_11}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_GPIO_PIN_11\~ 0x0800u}}
\par
{\bkmkstart AAAAAAABMV}
{\bkmkend AAAAAAABMV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Pin 11 inside the port \par
}}
{\xe \v LDD_GPIO_PIN_12\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_GPIO_PIN_12}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_GPIO_PIN_12\~ 0x1000u}}
\par
{\bkmkstart AAAAAAABMW}
{\bkmkend AAAAAAABMW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Pin 12 inside the port \par
}}
{\xe \v LDD_GPIO_PIN_13\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_GPIO_PIN_13}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_GPIO_PIN_13\~ 0x2000u}}
\par
{\bkmkstart AAAAAAABMX}
{\bkmkend AAAAAAABMX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Pin 13 inside the port \par
}}
{\xe \v LDD_GPIO_PIN_14\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_GPIO_PIN_14}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_GPIO_PIN_14\~ 0x4000u}}
\par
{\bkmkstart AAAAAAABMY}
{\bkmkend AAAAAAABMY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Pin 14 inside the port \par
}}
{\xe \v LDD_GPIO_PIN_15\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_GPIO_PIN_15}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_GPIO_PIN_15\~ 0x8000u}}
\par
{\bkmkstart AAAAAAABMZ}
{\bkmkend AAAAAAABMZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Pin 15 inside the port \par
}}
{\xe \v LDD_GPIO_PIN_16\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_GPIO_PIN_16}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_GPIO_PIN_16\~ 0x00010000u}}
\par
{\bkmkstart AAAAAAABNA}
{\bkmkend AAAAAAABNA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Pin 16 inside the port \par
}}
{\xe \v LDD_GPIO_PIN_17\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_GPIO_PIN_17}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_GPIO_PIN_17\~ 0x00020000u}}
\par
{\bkmkstart AAAAAAABNB}
{\bkmkend AAAAAAABNB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Pin 17 inside the port \par
}}
{\xe \v LDD_GPIO_PIN_18\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_GPIO_PIN_18}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_GPIO_PIN_18\~ 0x00040000u}}
\par
{\bkmkstart AAAAAAABNC}
{\bkmkend AAAAAAABNC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Pin 18 inside the port \par
}}
{\xe \v LDD_GPIO_PIN_19\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_GPIO_PIN_19}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_GPIO_PIN_19\~ 0x00080000u}}
\par
{\bkmkstart AAAAAAABND}
{\bkmkend AAAAAAABND}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Pin 19 inside the port \par
}}
{\xe \v LDD_GPIO_PIN_2\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_GPIO_PIN_2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_GPIO_PIN_2\~ 0x04u}}
\par
{\bkmkstart AAAAAAABNE}
{\bkmkend AAAAAAABNE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Pin 2 inside the port \par
}}
{\xe \v LDD_GPIO_PIN_20\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_GPIO_PIN_20}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_GPIO_PIN_20\~ 0x00100000u}}
\par
{\bkmkstart AAAAAAABNF}
{\bkmkend AAAAAAABNF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Pin 20 inside the port \par
}}
{\xe \v LDD_GPIO_PIN_21\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_GPIO_PIN_21}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_GPIO_PIN_21\~ 0x00200000u}}
\par
{\bkmkstart AAAAAAABNG}
{\bkmkend AAAAAAABNG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Pin 21 inside the port \par
}}
{\xe \v LDD_GPIO_PIN_22\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_GPIO_PIN_22}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_GPIO_PIN_22\~ 0x00400000u}}
\par
{\bkmkstart AAAAAAABNH}
{\bkmkend AAAAAAABNH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Pin 22 inside the port \par
}}
{\xe \v LDD_GPIO_PIN_23\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_GPIO_PIN_23}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_GPIO_PIN_23\~ 0x00800000u}}
\par
{\bkmkstart AAAAAAABNI}
{\bkmkend AAAAAAABNI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Pin 23 inside the port \par
}}
{\xe \v LDD_GPIO_PIN_24\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_GPIO_PIN_24}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_GPIO_PIN_24\~ 0x01000000u}}
\par
{\bkmkstart AAAAAAABNJ}
{\bkmkend AAAAAAABNJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Pin 24 inside the port \par
}}
{\xe \v LDD_GPIO_PIN_25\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_GPIO_PIN_25}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_GPIO_PIN_25\~ 0x02000000u}}
\par
{\bkmkstart AAAAAAABNK}
{\bkmkend AAAAAAABNK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Pin 25 inside the port \par
}}
{\xe \v LDD_GPIO_PIN_26\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_GPIO_PIN_26}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_GPIO_PIN_26\~ 0x04000000u}}
\par
{\bkmkstart AAAAAAABNL}
{\bkmkend AAAAAAABNL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Pin 26 inside the port \par
}}
{\xe \v LDD_GPIO_PIN_27\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_GPIO_PIN_27}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_GPIO_PIN_27\~ 0x08000000u}}
\par
{\bkmkstart AAAAAAABNM}
{\bkmkend AAAAAAABNM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Pin 27 inside the port \par
}}
{\xe \v LDD_GPIO_PIN_28\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_GPIO_PIN_28}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_GPIO_PIN_28\~ 0x10000000u}}
\par
{\bkmkstart AAAAAAABNN}
{\bkmkend AAAAAAABNN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Pin 28 inside the port \par
}}
{\xe \v LDD_GPIO_PIN_29\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_GPIO_PIN_29}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_GPIO_PIN_29\~ 0x20000000u}}
\par
{\bkmkstart AAAAAAABNO}
{\bkmkend AAAAAAABNO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Pin 29 inside the port \par
}}
{\xe \v LDD_GPIO_PIN_3\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_GPIO_PIN_3}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_GPIO_PIN_3\~ 0x08u}}
\par
{\bkmkstart AAAAAAABNP}
{\bkmkend AAAAAAABNP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Pin 3 inside the port \par
}}
{\xe \v LDD_GPIO_PIN_30\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_GPIO_PIN_30}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_GPIO_PIN_30\~ 0x40000000u}}
\par
{\bkmkstart AAAAAAABNQ}
{\bkmkend AAAAAAABNQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Pin 30 inside the port \par
}}
{\xe \v LDD_GPIO_PIN_31\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_GPIO_PIN_31}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_GPIO_PIN_31\~ 0x80000000u}}
\par
{\bkmkstart AAAAAAABNR}
{\bkmkend AAAAAAABNR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Pin 31 inside the port \par
}}
{\xe \v LDD_GPIO_PIN_4\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_GPIO_PIN_4}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_GPIO_PIN_4\~ 0x10u}}
\par
{\bkmkstart AAAAAAABNS}
{\bkmkend AAAAAAABNS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Pin 4 inside the port \par
}}
{\xe \v LDD_GPIO_PIN_5\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_GPIO_PIN_5}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_GPIO_PIN_5\~ 0x20u}}
\par
{\bkmkstart AAAAAAABNT}
{\bkmkend AAAAAAABNT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Pin 5 inside the port \par
}}
{\xe \v LDD_GPIO_PIN_6\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_GPIO_PIN_6}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_GPIO_PIN_6\~ 0x40u}}
\par
{\bkmkstart AAAAAAABNU}
{\bkmkend AAAAAAABNU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Pin 6 inside the port \par
}}
{\xe \v LDD_GPIO_PIN_7\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_GPIO_PIN_7}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_GPIO_PIN_7\~ 0x80u}}
\par
{\bkmkstart AAAAAAABNV}
{\bkmkend AAAAAAABNV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Pin 7 inside the port \par
}}
{\xe \v LDD_GPIO_PIN_8\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_GPIO_PIN_8}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_GPIO_PIN_8\~ 0x0100u}}
\par
{\bkmkstart AAAAAAABNW}
{\bkmkend AAAAAAABNW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Pin 8 inside the port \par
}}
{\xe \v LDD_GPIO_PIN_9\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_GPIO_PIN_9}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_GPIO_PIN_9\~ 0x0200u}}
\par
{\bkmkstart AAAAAAABNX}
{\bkmkend AAAAAAABNX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Pin 9 inside the port \par
}}
{\xe \v LDD_I2C_ARBIT_LOST\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_I2C_ARBIT_LOST}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_I2C_ARBIT_LOST\~ 0x0004u}}
\par
{\bkmkstart AAAAAAABNY}
{\bkmkend AAAAAAABNY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
ArbitLost error mask \par
}}
{\xe \v LDD_I2C_MASTER_NACK\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_I2C_MASTER_NACK}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_I2C_MASTER_NACK\~ 0x0008u}}
\par
{\bkmkstart AAAAAAABNZ}
{\bkmkend AAAAAAABNZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
MasterNACK error mask \par
}}
{\xe \v LDD_I2C_ON_BUS_START_DETECTED\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_I2C_ON_BUS_START_DETECTED}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_I2C_ON_BUS_START_DETECTED\~ 0x1000u}}
\par
{\bkmkstart AAAAAAABOA}
{\bkmkend AAAAAAABOA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
OnBusStartDetected event mask \par
}}
{\xe \v LDD_I2C_ON_BUS_STOP_DETECTED\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_I2C_ON_BUS_STOP_DETECTED}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_I2C_ON_BUS_STOP_DETECTED\~ 0x2000u}}
\par
{\bkmkstart AAAAAAABOB}
{\bkmkend AAAAAAABOB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
OnBusStopDetected event mask \par
}}
{\xe \v LDD_I2C_ON_ERROR\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_I2C_ON_ERROR}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_I2C_ON_ERROR\~ 0x0040u}}
\par
{\bkmkstart AAAAAAABOC}
{\bkmkend AAAAAAABOC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
OnError event mask \par
}}
{\xe \v LDD_I2C_ON_MASTER_BLOCK_RECEIVED\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_I2C_ON_MASTER_BLOCK_RECEIVED}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_I2C_ON_MASTER_BLOCK_RECEIVED\~ 0x0002u}}
\par
{\bkmkstart AAAAAAABOD}
{\bkmkend AAAAAAABOD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
OnMasterBlockReceived event mask \par
}}
{\xe \v LDD_I2C_ON_MASTER_BLOCK_SENT\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_I2C_ON_MASTER_BLOCK_SENT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_I2C_ON_MASTER_BLOCK_SENT\~ 0x0001u}}
\par
{\bkmkstart AAAAAAABOE}
{\bkmkend AAAAAAABOE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
OnMasterBlockSent event mask \par
}}
{\xe \v LDD_I2C_ON_MASTER_BYTE_RECEIVED\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_I2C_ON_MASTER_BYTE_RECEIVED}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_I2C_ON_MASTER_BYTE_RECEIVED\~ 0x0400u}}
\par
{\bkmkstart AAAAAAABOF}
{\bkmkend AAAAAAABOF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
OnMasterByteReceived event mask \par
}}
{\xe \v LDD_I2C_ON_SLAVE_BLOCK_RECEIVED\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_I2C_ON_SLAVE_BLOCK_RECEIVED}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_I2C_ON_SLAVE_BLOCK_RECEIVED\~ 0x0008u}}
\par
{\bkmkstart AAAAAAABOG}
{\bkmkend AAAAAAABOG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
OnSlaveBlockReceived event mask \par
}}
{\xe \v LDD_I2C_ON_SLAVE_BLOCK_SENT\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_I2C_ON_SLAVE_BLOCK_SENT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_I2C_ON_SLAVE_BLOCK_SENT\~ 0x0004u}}
\par
{\bkmkstart AAAAAAABOH}
{\bkmkend AAAAAAABOH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
OnSlaveBlockSent event mask \par
}}
{\xe \v LDD_I2C_ON_SLAVE_BYTE_RECEIVED\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_I2C_ON_SLAVE_BYTE_RECEIVED}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_I2C_ON_SLAVE_BYTE_RECEIVED\~ 0x0800u}}
\par
{\bkmkstart AAAAAAABOI}
{\bkmkend AAAAAAABOI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
OnMasterByteReceived event mask \par
}}
{\xe \v LDD_I2C_ON_SLAVE_GENERAL_CALL_ADDR\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_I2C_ON_SLAVE_GENERAL_CALL_ADDR}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_I2C_ON_SLAVE_GENERAL_CALL_ADDR\~ 0x0200u}}
\par
{\bkmkstart AAAAAAABOJ}
{\bkmkend AAAAAAABOJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
OnSlaveGeneralCallAddr event mask \par
}}
{\xe \v LDD_I2C_ON_SLAVE_RX_REQUEST\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_I2C_ON_SLAVE_RX_REQUEST}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_I2C_ON_SLAVE_RX_REQUEST\~ 0x0020u}}
\par
{\bkmkstart AAAAAAABOK}
{\bkmkend AAAAAAABOK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
OnSlaveRxRequest event mask \par
}}
{\xe \v LDD_I2C_ON_SLAVE_SM_BUS_ALERT_RESPONSE\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_I2C_ON_SLAVE_SM_BUS_ALERT_RESPONSE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_I2C_ON_SLAVE_SM_BUS_ALERT_RESPONSE\~ 0x0100u}}
\par
{\bkmkstart AAAAAAABOL}
{\bkmkend AAAAAAABOL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
OnSlaveSMBusAlertResponse event mask \par
}}
{\xe \v LDD_I2C_ON_SLAVE_SM_BUS_CALL_ADDR\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_I2C_ON_SLAVE_SM_BUS_CALL_ADDR}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_I2C_ON_SLAVE_SM_BUS_CALL_ADDR\~ 0x0080u}}
\par
{\bkmkstart AAAAAAABOM}
{\bkmkend AAAAAAABOM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
OnSlaveSMBusCallAddr event mask \par
}}
{\xe \v LDD_I2C_ON_SLAVE_TX_REQUEST\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_I2C_ON_SLAVE_TX_REQUEST}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_I2C_ON_SLAVE_TX_REQUEST\~ 0x0010u}}
\par
{\bkmkstart AAAAAAABON}
{\bkmkend AAAAAAABON}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
OnSlaveTxRequest event mask \par
}}
{\xe \v LDD_I2C_SCL_LOW_TIMEOUT\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_I2C_SCL_LOW_TIMEOUT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_I2C_SCL_LOW_TIMEOUT\~ 0x0010u}}
\par
{\bkmkstart AAAAAAABOO}
{\bkmkend AAAAAAABOO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
SCLLowTimeout error mask \par
}}
{\xe \v LDD_I2C_SCL_PIN\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_I2C_SCL_PIN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_I2C_SCL_PIN\~ 0x02u}}
\par
{\bkmkstart AAAAAAABOP}
{\bkmkend AAAAAAABOP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
SCL pin mask \par
}}
{\xe \v LDD_I2C_SDA_LOW_TIMEOUT\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_I2C_SDA_LOW_TIMEOUT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_I2C_SDA_LOW_TIMEOUT\~ 0x0020u}}
\par
{\bkmkstart AAAAAAABOQ}
{\bkmkend AAAAAAABOQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
SDALowTimeout error mask \par
}}
{\xe \v LDD_I2C_SDA_PIN\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_I2C_SDA_PIN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_I2C_SDA_PIN\~ 0x01u}}
\par
{\bkmkstart AAAAAAABOR}
{\bkmkend AAAAAAABOR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
SDA pin mask \par
}}
{\xe \v LDD_I2C_SLAVE_NACK\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_I2C_SLAVE_NACK}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_I2C_SLAVE_NACK\~ 0x0040u}}
\par
{\bkmkstart AAAAAAABOS}
{\bkmkend AAAAAAABOS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
SlaveNACK error mask \par
}}
{\xe \v LDD_I2C_SLAVE_RX_OVERRUN\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_I2C_SLAVE_RX_OVERRUN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_I2C_SLAVE_RX_OVERRUN\~ 0x0002u}}
\par
{\bkmkstart AAAAAAABOT}
{\bkmkend AAAAAAABOT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
SlaveRxOverrun error mask \par
}}
{\xe \v LDD_I2C_SLAVE_TX_UNDERRUN\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_I2C_SLAVE_TX_UNDERRUN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_I2C_SLAVE_TX_UNDERRUN\~ 0x0001u}}
\par
{\bkmkstart AAAAAAABOU}
{\bkmkend AAAAAAABOU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
SlaveTxUnderrun error mask \par
}}
{\xe \v LDD_LCDC_NO_ERR\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_LCDC_NO_ERR}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_LCDC_NO_ERR\~ 0x00U}}
\par
{\bkmkstart AAAAAAABOV}
{\bkmkend AAAAAAABOV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
No error \par
}}
{\xe \v LDD_LCDC_ON_END_OF_FRAME\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_LCDC_ON_END_OF_FRAME}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_LCDC_ON_END_OF_FRAME\~ 0x04U}}
\par
{\bkmkstart AAAAAAABOW}
{\bkmkend AAAAAAABOW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
OnEndOfFrame event mask \par
}}
{\xe \v LDD_LCDC_ON_ERROR\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_LCDC_ON_ERROR}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_LCDC_ON_ERROR\~ 0x01U}}
\par
{\bkmkstart AAAAAAABOX}
{\bkmkend AAAAAAABOX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
OnError event mask \par
}}
{\xe \v LDD_LCDC_ON_START_OF_FRAME\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_LCDC_ON_START_OF_FRAME}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_LCDC_ON_START_OF_FRAME\~ 0x02U}}
\par
{\bkmkstart AAAAAAABOY}
{\bkmkend AAAAAAABOY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
OnStartOfFrame event mask \par
}}
{\xe \v LDD_LCDC_PLANE_0_UNDERRUN_ERR\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_LCDC_PLANE_0_UNDERRUN_ERR}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_LCDC_PLANE_0_UNDERRUN_ERR\~ 0x01U}}
\par
{\bkmkstart AAAAAAABOZ}
{\bkmkend AAAAAAABOZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Plane 0 underrurn error \par
}}
{\xe \v LDD_LCDC_PLANE_1_UNDERRUN_ERR\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_LCDC_PLANE_1_UNDERRUN_ERR}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_LCDC_PLANE_1_UNDERRUN_ERR\~ 0x02U}}
\par
{\bkmkstart AAAAAAABPA}
{\bkmkend AAAAAAABPA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Plane 1 underrurn error \par
}}
{\xe \v LDD_LCDC_REVERSED_VERTICAL_SCAN\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_LCDC_REVERSED_VERTICAL_SCAN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_LCDC_REVERSED_VERTICAL_SCAN\~ 0x8000U}}
\par
{\bkmkstart AAAAAAABPB}
{\bkmkend AAAAAAABPB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Enable reversed vertical scan (flip along x-axis) \par
}}
{\xe \v LDD_NFC_ALE_PIN\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_NFC_ALE_PIN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_NFC_ALE_PIN\~ 0x0100U}}
\par
{\bkmkstart AAAAAAABPC}
{\bkmkend AAAAAAABPC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
ALE pin mask \par
}}
{\xe \v LDD_NFC_CE0_PIN\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_NFC_CE0_PIN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_NFC_CE0_PIN\~ 0x01U}}
\par
{\bkmkstart AAAAAAABPD}
{\bkmkend AAAAAAABPD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
CE0 pin mask \par
}}
{\xe \v LDD_NFC_CE1_PIN\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_NFC_CE1_PIN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_NFC_CE1_PIN\~ 0x04U}}
\par
{\bkmkstart AAAAAAABPE}
{\bkmkend AAAAAAABPE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
CE1 pin mask \par
}}
{\xe \v LDD_NFC_CE2_PIN\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_NFC_CE2_PIN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_NFC_CE2_PIN\~ 0x10U}}
\par
{\bkmkstart AAAAAAABPF}
{\bkmkend AAAAAAABPF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
CE2 pin mask \par
}}
{\xe \v LDD_NFC_CE3_PIN\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_NFC_CE3_PIN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_NFC_CE3_PIN\~ 0x40U}}
\par
{\bkmkstart AAAAAAABPG}
{\bkmkend AAAAAAABPG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
CE3 pin mask \par
}}
{\xe \v LDD_NFC_CLE_PIN\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_NFC_CLE_PIN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_NFC_CLE_PIN\~ 0x0200U}}
\par
{\bkmkstart AAAAAAABPH}
{\bkmkend AAAAAAABPH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
CLE pin mask \par
}}
{\xe \v LDD_NFC_D0_PIN\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_NFC_D0_PIN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_NFC_D0_PIN\~ 0x00010000U}}
\par
{\bkmkstart AAAAAAABPI}
{\bkmkend AAAAAAABPI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
D0 pin mask \par
}}
{\xe \v LDD_NFC_D10_PIN\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_NFC_D10_PIN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_NFC_D10_PIN\~ 0x04000000U}}
\par
{\bkmkstart AAAAAAABPJ}
{\bkmkend AAAAAAABPJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
D10 pin mask \par
}}
{\xe \v LDD_NFC_D11_PIN\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_NFC_D11_PIN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_NFC_D11_PIN\~ 0x08000000U}}
\par
{\bkmkstart AAAAAAABPK}
{\bkmkend AAAAAAABPK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
D11 pin mask \par
}}
{\xe \v LDD_NFC_D12_PIN\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_NFC_D12_PIN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_NFC_D12_PIN\~ 0x10000000U}}
\par
{\bkmkstart AAAAAAABPL}
{\bkmkend AAAAAAABPL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
D12 pin mask \par
}}
{\xe \v LDD_NFC_D13_PIN\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_NFC_D13_PIN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_NFC_D13_PIN\~ 0x20000000U}}
\par
{\bkmkstart AAAAAAABPM}
{\bkmkend AAAAAAABPM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
D13 pin mask \par
}}
{\xe \v LDD_NFC_D14_PIN\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_NFC_D14_PIN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_NFC_D14_PIN\~ 0x40000000U}}
\par
{\bkmkstart AAAAAAABPN}
{\bkmkend AAAAAAABPN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
D14 pin mask \par
}}
{\xe \v LDD_NFC_D15_PIN\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_NFC_D15_PIN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_NFC_D15_PIN\~ 0x80000000U}}
\par
{\bkmkstart AAAAAAABPO}
{\bkmkend AAAAAAABPO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
D15 pin mask \par
}}
{\xe \v LDD_NFC_D1_PIN\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_NFC_D1_PIN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_NFC_D1_PIN\~ 0x00020000U}}
\par
{\bkmkstart AAAAAAABPP}
{\bkmkend AAAAAAABPP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
D1 pin mask \par
}}
{\xe \v LDD_NFC_D2_PIN\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_NFC_D2_PIN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_NFC_D2_PIN\~ 0x00040000U}}
\par
{\bkmkstart AAAAAAABPQ}
{\bkmkend AAAAAAABPQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
D2 pin mask \par
}}
{\xe \v LDD_NFC_D3_PIN\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_NFC_D3_PIN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_NFC_D3_PIN\~ 0x00080000U}}
\par
{\bkmkstart AAAAAAABPR}
{\bkmkend AAAAAAABPR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
D3 pin mask \par
}}
{\xe \v LDD_NFC_D4_PIN\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_NFC_D4_PIN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_NFC_D4_PIN\~ 0x00100000U}}
\par
{\bkmkstart AAAAAAABPS}
{\bkmkend AAAAAAABPS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
D4 pin mask \par
}}
{\xe \v LDD_NFC_D5_PIN\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_NFC_D5_PIN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_NFC_D5_PIN\~ 0x00200000U}}
\par
{\bkmkstart AAAAAAABPT}
{\bkmkend AAAAAAABPT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
D5 pin mask \par
}}
{\xe \v LDD_NFC_D6_PIN\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_NFC_D6_PIN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_NFC_D6_PIN\~ 0x00400000U}}
\par
{\bkmkstart AAAAAAABPU}
{\bkmkend AAAAAAABPU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
D6 pin mask \par
}}
{\xe \v LDD_NFC_D7_PIN\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_NFC_D7_PIN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_NFC_D7_PIN\~ 0x00800000U}}
\par
{\bkmkstart AAAAAAABPV}
{\bkmkend AAAAAAABPV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
D7 pin mask \par
}}
{\xe \v LDD_NFC_D8_PIN\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_NFC_D8_PIN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_NFC_D8_PIN\~ 0x01000000U}}
\par
{\bkmkstart AAAAAAABPW}
{\bkmkend AAAAAAABPW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
D8 pin mask \par
}}
{\xe \v LDD_NFC_D9_PIN\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_NFC_D9_PIN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_NFC_D9_PIN\~ 0x02000000U}}
\par
{\bkmkstart AAAAAAABPX}
{\bkmkend AAAAAAABPX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
D9 pin mask \par
}}
{\xe \v LDD_NFC_ON_CMD_DONE\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_NFC_ON_CMD_DONE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_NFC_ON_CMD_DONE\~ 0x02U}}
\par
{\bkmkstart AAAAAAABPY}
{\bkmkend AAAAAAABPY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
OnCmdDone event mask \par
}}
{\xe \v LDD_NFC_ON_CMD_ERROR\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_NFC_ON_CMD_ERROR}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_NFC_ON_CMD_ERROR\~ 0x01U}}
\par
{\bkmkstart AAAAAAABPZ}
{\bkmkend AAAAAAABPZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
OnCmdError event mask \par
}}
{\xe \v LDD_NFC_RB0_PIN\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_NFC_RB0_PIN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_NFC_RB0_PIN\~ 0x02U}}
\par
{\bkmkstart AAAAAAABQA}
{\bkmkend AAAAAAABQA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
RB0 pin mask \par
}}
{\xe \v LDD_NFC_RB1_PIN\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_NFC_RB1_PIN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_NFC_RB1_PIN\~ 0x08U}}
\par
{\bkmkstart AAAAAAABQB}
{\bkmkend AAAAAAABQB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
RB1 pin mask \par
}}
{\xe \v LDD_NFC_RB2_PIN\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_NFC_RB2_PIN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_NFC_RB2_PIN\~ 0x20U}}
\par
{\bkmkstart AAAAAAABQC}
{\bkmkend AAAAAAABQC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
RB2 pin mask \par
}}
{\xe \v LDD_NFC_RB3_PIN\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_NFC_RB3_PIN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_NFC_RB3_PIN\~ 0x80U}}
\par
{\bkmkstart AAAAAAABQD}
{\bkmkend AAAAAAABQD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
RB3 pin mask \par
}}
{\xe \v LDD_NFC_RE_PIN\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_NFC_RE_PIN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_NFC_RE_PIN\~ 0x0400U}}
\par
{\bkmkstart AAAAAAABQE}
{\bkmkend AAAAAAABQE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
RE pin mask \par
}}
{\xe \v LDD_NFC_WE_PIN\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_NFC_WE_PIN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_NFC_WE_PIN\~ 0x0800U}}
\par
{\bkmkstart AAAAAAABQF}
{\bkmkend AAAAAAABQF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
WE pin mask \par
}}
{\xe \v LDD_PPG_ON_END\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_PPG_ON_END}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_PPG_ON_END\~ 0x01u}}
\par
{\bkmkstart AAAAAAABQG}
{\bkmkend AAAAAAABQG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
OnEnd event mask value \par
}}
{\xe \v LDD_PWM_ON_END\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_PWM_ON_END}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_PWM_ON_END\~ 0x01u}}
\par
{\bkmkstart AAAAAAABQH}
{\bkmkend AAAAAAABQH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
OnEnd event mask value \par
}}
{\xe \v LDD_RNG_FIFO_UNDERFLOW_ERROR\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_RNG_FIFO_UNDERFLOW_ERROR}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_RNG_FIFO_UNDERFLOW_ERROR\~ 0x10U}}
\par
{\bkmkstart AAAAAAABQI}
{\bkmkend AAAAAAABQI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
FIFO underflow error \par
}}
{\xe \v LDD_RNG_LENGTH_1_RUN_TEST_ERROR\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_RNG_LENGTH_1_RUN_TEST_ERROR}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_RNG_LENGTH_1_RUN_TEST_ERROR\~ 0x02000000U}}
\par
{\bkmkstart AAAAAAABQJ}
{\bkmkend AAAAAAABQJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Length 1 run test fail \par
}}
{\xe \v LDD_RNG_LENGTH_2_RUN_TEST_ERROR\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_RNG_LENGTH_2_RUN_TEST_ERROR}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_RNG_LENGTH_2_RUN_TEST_ERROR\~ 0x04000000U}}
\par
{\bkmkstart AAAAAAABQK}
{\bkmkend AAAAAAABQK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Length 2 run test fail \par
}}
{\xe \v LDD_RNG_LENGTH_3_RUN_TEST_ERROR\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_RNG_LENGTH_3_RUN_TEST_ERROR}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_RNG_LENGTH_3_RUN_TEST_ERROR\~ 0x08000000U}}
\par
{\bkmkstart AAAAAAABQL}
{\bkmkend AAAAAAABQL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Length 3 run test fail \par
}}
{\xe \v LDD_RNG_LENGTH_4_RUN_TEST_ERROR\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_RNG_LENGTH_4_RUN_TEST_ERROR}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_RNG_LENGTH_4_RUN_TEST_ERROR\~ 0x10000000U}}
\par
{\bkmkstart AAAAAAABQM}
{\bkmkend AAAAAAABQM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Length 4 run test fail \par
}}
{\xe \v LDD_RNG_LENGTH_5_RUN_TEST_ERROR\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_RNG_LENGTH_5_RUN_TEST_ERROR}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_RNG_LENGTH_5_RUN_TEST_ERROR\~ 0x20000000U}}
\par
{\bkmkstart AAAAAAABQN}
{\bkmkend AAAAAAABQN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Length 5 run test fail \par
}}
{\xe \v LDD_RNG_LENGTH_6_RUN_TEST_ERROR\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_RNG_LENGTH_6_RUN_TEST_ERROR}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_RNG_LENGTH_6_RUN_TEST_ERROR\~ 0x40000000U}}
\par
{\bkmkstart AAAAAAABQO}
{\bkmkend AAAAAAABQO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Length 6 run test fail \par
}}
{\xe \v LDD_RNG_LFSR_ERROR\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_RNG_LFSR_ERROR}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_RNG_LFSR_ERROR\~ 0x01U}}
\par
{\bkmkstart AAAAAAABQP}
{\bkmkend AAAAAAABQP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Linear feedback shift register error \par
}}
{\xe \v LDD_RNG_LONG_RUN_TEST_ERROR\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_RNG_LONG_RUN_TEST_ERROR}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_RNG_LONG_RUN_TEST_ERROR\~ 0x80000000U}}
\par
{\bkmkstart AAAAAAABQQ}
{\bkmkend AAAAAAABQQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Long run test fail \par
}}
{\xe \v LDD_RNG_MONOBIT_TEST_ERROR\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_RNG_MONOBIT_TEST_ERROR}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_RNG_MONOBIT_TEST_ERROR\~ 0x01000000U}}
\par
{\bkmkstart AAAAAAABQR}
{\bkmkend AAAAAAABQR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Monobit test fail \par
}}
{\xe \v LDD_RNG_ON_ERROR\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_RNG_ON_ERROR}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_RNG_ON_ERROR\~ 0x01U}}
\par
{\bkmkstart AAAAAAABQS}
{\bkmkend AAAAAAABQS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
OnError event mask \par
}}
{\xe \v LDD_RNG_ON_ERROR_LFSR\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_RNG_ON_ERROR_LFSR}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_RNG_ON_ERROR_LFSR\~ 0x04U}}
\par
{\bkmkstart AAAAAAABQT}
{\bkmkend AAAAAAABQT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
OnErrorLFSR event mask \par
}}
{\xe \v LDD_RNG_ON_FIFO_UNDER_FLOW_ERROR\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_RNG_ON_FIFO_UNDER_FLOW_ERROR}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_RNG_ON_FIFO_UNDER_FLOW_ERROR\~ 0x40U}}
\par
{\bkmkstart AAAAAAABQU}
{\bkmkend AAAAAAABQU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
OnFIFOUnderFlowError event mask \par
}}
{\xe \v LDD_RNG_ON_FIFOUNDER_FLOW_ERROR\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_RNG_ON_FIFOUNDER_FLOW_ERROR}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_RNG_ON_FIFOUNDER_FLOW_ERROR\~ 0x40U}}
\par
{\bkmkstart AAAAAAABQV}
{\bkmkend AAAAAAABQV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
OnFIFOUnderFlowError event mask \par
}}
{\xe \v LDD_RNG_ON_OSC_ERROR\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_RNG_ON_OSC_ERROR}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_RNG_ON_OSC_ERROR\~ 0x08U}}
\par
{\bkmkstart AAAAAAABQW}
{\bkmkend AAAAAAABQW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
OnOscError event mask \par
}}
{\xe \v LDD_RNG_ON_SEED_GENERATION_DONE\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_RNG_ON_SEED_GENERATION_DONE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_RNG_ON_SEED_GENERATION_DONE\~ 0x01U}}
\par
{\bkmkstart AAAAAAABQX}
{\bkmkend AAAAAAABQX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
OnSeedGenerationDone event mask \par
}}
{\xe \v LDD_RNG_ON_SELF_TEST_DONE\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_RNG_ON_SELF_TEST_DONE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_RNG_ON_SELF_TEST_DONE\~ 0x02U}}
\par
{\bkmkstart AAAAAAABQY}
{\bkmkend AAAAAAABQY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
OnSelfTestDone event mask \par
}}
{\xe \v LDD_RNG_ON_SELF_TEST_ERROR\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_RNG_ON_SELF_TEST_ERROR}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_RNG_ON_SELF_TEST_ERROR\~ 0x10U}}
\par
{\bkmkstart AAAAAAABQZ}
{\bkmkend AAAAAAABQZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
OnSelfTestError event mask \par
}}
{\xe \v LDD_RNG_ON_STATISTICAL_ERROR\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_RNG_ON_STATISTICAL_ERROR}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_RNG_ON_STATISTICAL_ERROR\~ 0x20U}}
\par
{\bkmkstart AAAAAAABRA}
{\bkmkend AAAAAAABRA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
OnStatisticalError event mask \par
}}
{\xe \v LDD_RNG_OSCILLATOR_ERROR\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_RNG_OSCILLATOR_ERROR}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_RNG_OSCILLATOR_ERROR\~ 0x02U}}
\par
{\bkmkstart AAAAAAABRB}
{\bkmkend AAAAAAABRB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Oscillator error \par
}}
{\xe \v LDD_RNG_SELF_TEST_ERROR\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_RNG_SELF_TEST_ERROR}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_RNG_SELF_TEST_ERROR\~ 0x04U}}
\par
{\bkmkstart AAAAAAABRC}
{\bkmkend AAAAAAABRC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Self test error \par
}}
{\xe \v LDD_RNG_SELF_TEST_PRNG_ERROR\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_RNG_SELF_TEST_PRNG_ERROR}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_RNG_SELF_TEST_PRNG_ERROR\~ 0x00400000U}}
\par
{\bkmkstart AAAAAAABRD}
{\bkmkend AAAAAAABRD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
PRNG self test fail \par
}}
{\xe \v LDD_RNG_SELF_TEST_TRNG_ERROR\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_RNG_SELF_TEST_TRNG_ERROR}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_RNG_SELF_TEST_TRNG_ERROR\~ 0x00800000U}}
\par
{\bkmkstart AAAAAAABRE}
{\bkmkend AAAAAAABRE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
TRNG self test fail \par
}}
{\xe \v LDD_RNG_SELF_TETS_RESEED_ERROR\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_RNG_SELF_TETS_RESEED_ERROR}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_RNG_SELF_TETS_RESEED_ERROR\~ 0x00200000U}}
\par
{\bkmkstart AAAAAAABRF}
{\bkmkend AAAAAAABRF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Reseed self test fail \par
}}
{\xe \v LDD_RNG_STATISTICAL_ERROR\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_RNG_STATISTICAL_ERROR}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_RNG_STATISTICAL_ERROR\~ 0x08U}}
\par
{\bkmkstart AAAAAAABRG}
{\bkmkend AAAAAAABRG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
LStatistical test error \par
}}
{\xe \v LDD_RNG_STATUS_BUSY\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_RNG_STATUS_BUSY}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_RNG_STATUS_BUSY\~ 0x02U}}
\par
{\bkmkstart AAAAAAABRH}
{\bkmkend AAAAAAABRH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
RNG busy flag \par
}}
{\xe \v LDD_RNG_STATUS_ERR_INT_PENDING\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_RNG_STATUS_ERR_INT_PENDING}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_RNG_STATUS_ERR_INT_PENDING\~ 0x08U}}
\par
{\bkmkstart AAAAAAABRI}
{\bkmkend AAAAAAABRI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Error interrupt pending \par
}}
{\xe \v LDD_RNG_STATUS_ERROR\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_RNG_STATUS_ERROR}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_RNG_STATUS_ERROR\~ 0xFFFFU}}
\par
{\bkmkstart AAAAAAABRJ}
{\bkmkend AAAAAAABRJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Error in RNG module flag \par
}}
{\xe \v LDD_RNG_STATUS_LAST_READ_UNDERFLOW\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_RNG_STATUS_LAST_READ_UNDERFLOW}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_RNG_STATUS_LAST_READ_UNDERFLOW\~ 0x02U}}
\par
{\bkmkstart AAAAAAABRK}
{\bkmkend AAAAAAABRK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Last read from RNGA caused underflow error \par
}}
{\xe \v LDD_RNG_STATUS_NEW_SEED_DONE\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_RNG_STATUS_NEW_SEED_DONE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_RNG_STATUS_NEW_SEED_DONE\~ 0x40U}}
\par
{\bkmkstart AAAAAAABRL}
{\bkmkend AAAAAAABRL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
New seed done flag \par
}}
{\xe \v LDD_RNG_STATUS_OUT_REG_UNDERFLOW\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_RNG_STATUS_OUT_REG_UNDERFLOW}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_RNG_STATUS_OUT_REG_UNDERFLOW\~ 0x04U}}
\par
{\bkmkstart AAAAAAABRM}
{\bkmkend AAAAAAABRM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The RNGA Output Register has been read while empty since last read of the RNGA Status Register. \par
}}
{\xe \v LDD_RNG_STATUS_RESEED_NEEDED\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_RNG_STATUS_RESEED_NEEDED}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_RNG_STATUS_RESEED_NEEDED\~ 0x08U}}
\par
{\bkmkstart AAAAAAABRN}
{\bkmkend AAAAAAABRN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Reseed needed flag \par
}}
{\xe \v LDD_RNG_STATUS_SECURITY_VIOLATION\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_RNG_STATUS_SECURITY_VIOLATION}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_RNG_STATUS_SECURITY_VIOLATION\~ 0x01U}}
\par
{\bkmkstart AAAAAAABRO}
{\bkmkend AAAAAAABRO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Security violation occured \par
}}
{\xe \v LDD_RNG_STATUS_SEED_DONE\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_RNG_STATUS_SEED_DONE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_RNG_STATUS_SEED_DONE\~ 0x20U}}
\par
{\bkmkstart AAAAAAABRP}
{\bkmkend AAAAAAABRP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Seed done flag \par
}}
{\xe \v LDD_RNG_STATUS_SELF_TEST_DONE\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_RNG_STATUS_SELF_TEST_DONE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_RNG_STATUS_SELF_TEST_DONE\~ 0x10U}}
\par
{\bkmkstart AAAAAAABRQ}
{\bkmkend AAAAAAABRQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Self test done flag \par
}}
{\xe \v LDD_RNG_STATUS_SLEEP\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_RNG_STATUS_SLEEP}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_RNG_STATUS_SLEEP\~ 0x04U}}
\par
{\bkmkstart AAAAAAABRR}
{\bkmkend AAAAAAABRR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
RNG in sleep mode \par
}}
{\xe \v LDD_RNG_STATUS_SLEEP_MODE\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_RNG_STATUS_SLEEP_MODE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_RNG_STATUS_SLEEP_MODE\~ 0x10U}}
\par
{\bkmkstart AAAAAAABRS}
{\bkmkend AAAAAAABRS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sleep mode enabled \par
}}
{\xe \v LDD_RTC_ON_ALARM\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_RTC_ON_ALARM}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_RTC_ON_ALARM\~ 0x04u}}
\par
{\bkmkstart AAAAAAABRT}
{\bkmkend AAAAAAABRT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
OnAlarm event mask \par
}}
{\xe \v LDD_RTC_ON_MONOTONIC_OVERFLOW\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_RTC_ON_MONOTONIC_OVERFLOW}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_RTC_ON_MONOTONIC_OVERFLOW\~ 0x08u}}
\par
{\bkmkstart AAAAAAABRU}
{\bkmkend AAAAAAABRU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
OnMonotonicCounter event mask \par
}}
{\xe \v LDD_RTC_ON_SECOND\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_RTC_ON_SECOND}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_RTC_ON_SECOND\~ 0x10u}}
\par
{\bkmkstart AAAAAAABRV}
{\bkmkend AAAAAAABRV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
OnSecond event mask \par
}}
{\xe \v LDD_RTC_ON_STOPWATCH\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_RTC_ON_STOPWATCH}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_RTC_ON_STOPWATCH\~ 0x0100u}}
\par
{\bkmkstart AAAAAAABRW}
{\bkmkend AAAAAAABRW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
OnStopwatch event mask \par
}}
{\xe \v LDD_RTC_ON_TIME_INVALID\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_RTC_ON_TIME_INVALID}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_RTC_ON_TIME_INVALID\~ 0x01u}}
\par
{\bkmkstart AAAAAAABRX}
{\bkmkend AAAAAAABRX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
OnTimeInvalid event mask \par
}}
{\xe \v LDD_RTC_ON_TIME_OVERFLOW\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_RTC_ON_TIME_OVERFLOW}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_RTC_ON_TIME_OVERFLOW\~ 0x02u}}
\par
{\bkmkstart AAAAAAABRY}
{\bkmkend AAAAAAABRY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
OnTimeOverflow event mask \par
}}
{\xe \v LDD_SDHC_CARD_BLOCK_READ\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_SDHC_CARD_BLOCK_READ}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_SDHC_CARD_BLOCK_READ\~ 0x01u}}
\par
{\bkmkstart AAAAAAABRZ}
{\bkmkend AAAAAAABRZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Card supports block reading \par
}}
{\xe \v LDD_SDHC_CARD_BLOCK_WRITE\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_SDHC_CARD_BLOCK_WRITE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_SDHC_CARD_BLOCK_WRITE\~ 0x04u}}
\par
{\bkmkstart AAAAAAABSA}
{\bkmkend AAAAAAABSA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Card supports block writing \par
}}
{\xe \v LDD_SDHC_CARD_DATA_WIDTH_1_BIT\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_SDHC_CARD_DATA_WIDTH_1_BIT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_SDHC_CARD_DATA_WIDTH_1_BIT\~ 0x01u}}
\par
{\bkmkstart AAAAAAABSB}
{\bkmkend AAAAAAABSB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Card supports 1 bit data bus \par
}}
{\xe \v LDD_SDHC_CARD_DATA_WIDTH_4_BIT\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_SDHC_CARD_DATA_WIDTH_4_BIT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_SDHC_CARD_DATA_WIDTH_4_BIT\~ 0x02u}}
\par
{\bkmkstart AAAAAAABSC}
{\bkmkend AAAAAAABSC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Card supports 4 bit data bus \par
}}
{\xe \v LDD_SDHC_CARD_DATA_WIDTH_8_BIT\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_SDHC_CARD_DATA_WIDTH_8_BIT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_SDHC_CARD_DATA_WIDTH_8_BIT\~ 0x04u}}
\par
{\bkmkstart AAAAAAABSD}
{\bkmkend AAAAAAABSD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Card supports 8 bit data bus \par
}}
{\xe \v LDD_SDHC_CARD_ERASE\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_SDHC_CARD_ERASE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_SDHC_CARD_ERASE\~ 0x08u}}
\par
{\bkmkstart AAAAAAABSE}
{\bkmkend AAAAAAABSE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Card supports block erasion \par
}}
{\xe \v LDD_SDHC_CARD_IO\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_SDHC_CARD_IO}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_SDHC_CARD_IO\~ 0x80u}}
\par
{\bkmkstart AAAAAAABSF}
{\bkmkend AAAAAAABSF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Card supports IO \par
}}
{\xe \v LDD_SDHC_CARD_WRITE_PROTECTION\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_SDHC_CARD_WRITE_PROTECTION}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_SDHC_CARD_WRITE_PROTECTION\~ 0x10u}}
\par
{\bkmkstart AAAAAAABSG}
{\bkmkend AAAAAAABSG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Card supports write protection \par
}}
{\xe \v LDD_SDHC_CD_PIN\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_SDHC_CD_PIN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_SDHC_CD_PIN\~ 0x0400u}}
\par
{\bkmkstart AAAAAAABSH}
{\bkmkend AAAAAAABSH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
SD card detection pin mask \par
}}
{\xe \v LDD_SDHC_CLK_PIN\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_SDHC_CLK_PIN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_SDHC_CLK_PIN\~ 0x01u}}
\par
{\bkmkstart AAAAAAABSI}
{\bkmkend AAAAAAABSI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
SD clock pin mask \par
}}
{\xe \v LDD_SDHC_CMD_PIN\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_SDHC_CMD_PIN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_SDHC_CMD_PIN\~ 0x02u}}
\par
{\bkmkstart AAAAAAABSJ}
{\bkmkend AAAAAAABSJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
SD command line pin mask \par
}}
{\xe \v LDD_SDHC_DAT0_PIN\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_SDHC_DAT0_PIN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_SDHC_DAT0_PIN\~ 0x04u}}
\par
{\bkmkstart AAAAAAABSK}
{\bkmkend AAAAAAABSK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
SD data line 0 pin mask \par
}}
{\xe \v LDD_SDHC_DAT1_PIN\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_SDHC_DAT1_PIN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_SDHC_DAT1_PIN\~ 0x08u}}
\par
{\bkmkstart AAAAAAABSL}
{\bkmkend AAAAAAABSL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
SD data line 1 pin mask \par
}}
{\xe \v LDD_SDHC_DAT2_PIN\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_SDHC_DAT2_PIN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_SDHC_DAT2_PIN\~ 0x10u}}
\par
{\bkmkstart AAAAAAABSM}
{\bkmkend AAAAAAABSM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
SD data line 2 pin mask \par
}}
{\xe \v LDD_SDHC_DAT3_PIN\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_SDHC_DAT3_PIN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_SDHC_DAT3_PIN\~ 0x20u}}
\par
{\bkmkstart AAAAAAABSN}
{\bkmkend AAAAAAABSN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
SD data line 3 pin mask \par
}}
{\xe \v LDD_SDHC_DAT4_PIN\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_SDHC_DAT4_PIN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_SDHC_DAT4_PIN\~ 0x40u}}
\par
{\bkmkstart AAAAAAABSO}
{\bkmkend AAAAAAABSO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
SD data line 4 pin mask \par
}}
{\xe \v LDD_SDHC_DAT5_PIN\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_SDHC_DAT5_PIN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_SDHC_DAT5_PIN\~ 0x80u}}
\par
{\bkmkstart AAAAAAABSP}
{\bkmkend AAAAAAABSP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
SD data line 5 pin mask \par
}}
{\xe \v LDD_SDHC_DAT6_PIN\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_SDHC_DAT6_PIN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_SDHC_DAT6_PIN\~ 0x0100u}}
\par
{\bkmkstart AAAAAAABSQ}
{\bkmkend AAAAAAABSQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
SD data line 6 pin mask \par
}}
{\xe \v LDD_SDHC_DAT7_PIN\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_SDHC_DAT7_PIN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_SDHC_DAT7_PIN\~ 0x0200u}}
\par
{\bkmkstart AAAAAAABSR}
{\bkmkend AAAAAAABSR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
SD data line 7 pin mask \par
}}
{\xe \v LDD_SDHC_LCTL_PIN\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_SDHC_LCTL_PIN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_SDHC_LCTL_PIN\~ 0x1000u}}
\par
{\bkmkstart AAAAAAABSS}
{\bkmkend AAAAAAABSS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
SD LED control pin mask \par
}}
{\xe \v LDD_SDHC_ON_CARD_INSERTED\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_SDHC_ON_CARD_INSERTED}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_SDHC_ON_CARD_INSERTED\~ 0x01u}}
\par
{\bkmkstart AAAAAAABST}
{\bkmkend AAAAAAABST}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
OnCardInserted event mask \par
}}
{\xe \v LDD_SDHC_ON_CARD_REMOVED\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_SDHC_ON_CARD_REMOVED}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_SDHC_ON_CARD_REMOVED\~ 0x02u}}
\par
{\bkmkstart AAAAAAABSU}
{\bkmkend AAAAAAABSU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
OnCardRemoved event mask \par
}}
{\xe \v LDD_SDHC_ON_FINISHED\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_SDHC_ON_FINISHED}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_SDHC_ON_FINISHED\~ 0x04u}}
\par
{\bkmkstart AAAAAAABSV}
{\bkmkend AAAAAAABSV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
OnFinished event mask \par
}}
{\xe \v LDD_SDHC_VS_PIN\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_SDHC_VS_PIN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_SDHC_VS_PIN\~ 0x2000u}}
\par
{\bkmkstart AAAAAAABSW}
{\bkmkend AAAAAAABSW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
SD voltage control pin mask \par
}}
{\xe \v LDD_SDHC_WP_PIN\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_SDHC_WP_PIN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_SDHC_WP_PIN\~ 0x0800u}}
\par
{\bkmkstart AAAAAAABSX}
{\bkmkend AAAAAAABSX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
SD write protection pin mask \par
}}
{\xe \v LDD_SEGLCD_ON_FAULT_DETECT_COMPLETE\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_SEGLCD_ON_FAULT_DETECT_COMPLETE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_SEGLCD_ON_FAULT_DETECT_COMPLETE\~ 0x0002u}}
\par
{\bkmkstart AAAAAAABSY}
{\bkmkend AAAAAAABSY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
OnFaultDetectComplete event mask \par
}}
{\xe \v LDD_SEGLCD_ON_FRAME_FREQUENCY\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_SEGLCD_ON_FRAME_FREQUENCY}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_SEGLCD_ON_FRAME_FREQUENCY\~ 0x0001u}}
\par
{\bkmkstart AAAAAAABSZ}
{\bkmkend AAAAAAABSZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
OnFrameFrequency event mask \par
}}
{\xe \v LDD_SERIAL_CTS_PIN\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_SERIAL_CTS_PIN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_SERIAL_CTS_PIN\~ 0x04u}}
\par
{\bkmkstart AAAAAAABTA}
{\bkmkend AAAAAAABTA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
CTS pin mask \par
}}
{\xe \v LDD_SERIAL_FRAMING_ERROR\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_SERIAL_FRAMING_ERROR}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_SERIAL_FRAMING_ERROR\~ 0x04u}}
\par
{\bkmkstart AAAAAAABTB}
{\bkmkend AAAAAAABTB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Framing error \par
}}
{\xe \v LDD_SERIAL_NOISE_ERROR\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_SERIAL_NOISE_ERROR}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_SERIAL_NOISE_ERROR\~ 0x08u}}
\par
{\bkmkstart AAAAAAABTC}
{\bkmkend AAAAAAABTC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Noise error \par
}}
{\xe \v LDD_SERIAL_ON_BLOCK_RECEIVED\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_SERIAL_ON_BLOCK_RECEIVED}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_SERIAL_ON_BLOCK_RECEIVED\~ 0x01u}}
\par
{\bkmkstart AAAAAAABTD}
{\bkmkend AAAAAAABTD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
OnBlockReceived event mask \par
}}
{\xe \v LDD_SERIAL_ON_BLOCK_SENT\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_SERIAL_ON_BLOCK_SENT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_SERIAL_ON_BLOCK_SENT\~ 0x02u}}
\par
{\bkmkstart AAAAAAABTE}
{\bkmkend AAAAAAABTE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
OnBlockSent event mask \par
}}
{\xe \v LDD_SERIAL_ON_BREAK\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_SERIAL_ON_BREAK}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_SERIAL_ON_BREAK\~ 0x04u}}
\par
{\bkmkstart AAAAAAABTF}
{\bkmkend AAAAAAABTF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
OnBreak event mask \par
}}
{\xe \v LDD_SERIAL_ON_ERROR\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_SERIAL_ON_ERROR}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_SERIAL_ON_ERROR\~ 0x10u}}
\par
{\bkmkstart AAAAAAABTG}
{\bkmkend AAAAAAABTG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
OnError event mask \par
}}
{\xe \v LDD_SERIAL_ON_TXCOMPLETE\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_SERIAL_ON_TXCOMPLETE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_SERIAL_ON_TXCOMPLETE\~ 0x08u}}
\par
{\bkmkstart AAAAAAABTH}
{\bkmkend AAAAAAABTH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
OnTxComplete event mask \par
}}
{\xe \v LDD_SERIAL_PARITY_ERROR\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_SERIAL_PARITY_ERROR}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_SERIAL_PARITY_ERROR\~ 0x02u}}
\par
{\bkmkstart AAAAAAABTI}
{\bkmkend AAAAAAABTI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Parity error \par
}}
{\xe \v LDD_SERIAL_RTS_PIN\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_SERIAL_RTS_PIN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_SERIAL_RTS_PIN\~ 0x08u}}
\par
{\bkmkstart AAAAAAABTJ}
{\bkmkend AAAAAAABTJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
RTS pin mask \par
}}
{\xe \v LDD_SERIAL_RX_OVERRUN\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_SERIAL_RX_OVERRUN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_SERIAL_RX_OVERRUN\~ 0x01u}}
\par
{\bkmkstart AAAAAAABTK}
{\bkmkend AAAAAAABTK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Receiver overrun \par
}}
{\xe \v LDD_SERIAL_RX_PIN\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_SERIAL_RX_PIN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_SERIAL_RX_PIN\~ 0x01u}}
\par
{\bkmkstart AAAAAAABTL}
{\bkmkend AAAAAAABTL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Receiver pin mask \par
}}
{\xe \v LDD_SERIAL_TX_PIN\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_SERIAL_TX_PIN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_SERIAL_TX_PIN\~ 0x02u}}
\par
{\bkmkstart AAAAAAABTM}
{\bkmkend AAAAAAABTM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Transmitter pin mask \par
}}
{\xe \v LDD_SPIMASTER_CLK_PIN\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_SPIMASTER_CLK_PIN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_SPIMASTER_CLK_PIN\~ 0x04U}}
\par
{\bkmkstart AAAAAAABTN}
{\bkmkend AAAAAAABTN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Clock pin mask \par
}}
{\xe \v LDD_SPIMASTER_CS_0_PIN\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_SPIMASTER_CS_0_PIN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_SPIMASTER_CS_0_PIN\~ 0x08U}}
\par
{\bkmkstart AAAAAAABTO}
{\bkmkend AAAAAAABTO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Chip select 0 pin mask \par
}}
{\xe \v LDD_SPIMASTER_CS_1_PIN\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_SPIMASTER_CS_1_PIN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_SPIMASTER_CS_1_PIN\~ 0x10U}}
\par
{\bkmkstart AAAAAAABTP}
{\bkmkend AAAAAAABTP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Chip select 1 pin mask \par
}}
{\xe \v LDD_SPIMASTER_CS_2_PIN\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_SPIMASTER_CS_2_PIN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_SPIMASTER_CS_2_PIN\~ 0x20U}}
\par
{\bkmkstart AAAAAAABTQ}
{\bkmkend AAAAAAABTQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Chip select 2 pin mask \par
}}
{\xe \v LDD_SPIMASTER_CS_3_PIN\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_SPIMASTER_CS_3_PIN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_SPIMASTER_CS_3_PIN\~ 0x40U}}
\par
{\bkmkstart AAAAAAABTR}
{\bkmkend AAAAAAABTR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Chip select 3 pin mask \par
}}
{\xe \v LDD_SPIMASTER_CS_4_PIN\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_SPIMASTER_CS_4_PIN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_SPIMASTER_CS_4_PIN\~ 0x80U}}
\par
{\bkmkstart AAAAAAABTS}
{\bkmkend AAAAAAABTS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Chip select 4 pin mask \par
}}
{\xe \v LDD_SPIMASTER_CS_5_PIN\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_SPIMASTER_CS_5_PIN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_SPIMASTER_CS_5_PIN\~ 0x0100U}}
\par
{\bkmkstart AAAAAAABTT}
{\bkmkend AAAAAAABTT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Chip select 5 pin mask \par
}}
{\xe \v LDD_SPIMASTER_CS_6_PIN\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_SPIMASTER_CS_6_PIN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_SPIMASTER_CS_6_PIN\~ 0x0200U}}
\par
{\bkmkstart AAAAAAABTU}
{\bkmkend AAAAAAABTU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Chip select 6 pin mask \par
}}
{\xe \v LDD_SPIMASTER_CS_7_PIN\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_SPIMASTER_CS_7_PIN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_SPIMASTER_CS_7_PIN\~ 0x0400U}}
\par
{\bkmkstart AAAAAAABTV}
{\bkmkend AAAAAAABTV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Chip select 7 pin mask \par
}}
{\xe \v LDD_SPIMASTER_CSS_PIN\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_SPIMASTER_CSS_PIN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_SPIMASTER_CSS_PIN\~ 0x0800U}}
\par
{\bkmkstart AAAAAAABTW}
{\bkmkend AAAAAAABTW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Chip select strobe pin mask \par
}}
{\xe \v LDD_SPIMASTER_INPUT_PIN\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_SPIMASTER_INPUT_PIN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_SPIMASTER_INPUT_PIN\~ 0x01U}}
\par
{\bkmkstart AAAAAAABTX}
{\bkmkend AAAAAAABTX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Input pin mask \par
}}
{\xe \v LDD_SPIMASTER_ON_BLOCK_RECEIVED\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_SPIMASTER_ON_BLOCK_RECEIVED}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_SPIMASTER_ON_BLOCK_RECEIVED\~ 0x01U}}
\par
{\bkmkstart AAAAAAABTY}
{\bkmkend AAAAAAABTY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
OnBlockReceived event mask \par
}}
{\xe \v LDD_SPIMASTER_ON_BLOCK_SENT\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_SPIMASTER_ON_BLOCK_SENT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_SPIMASTER_ON_BLOCK_SENT\~ 0x02U}}
\par
{\bkmkstart AAAAAAABTZ}
{\bkmkend AAAAAAABTZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
OnBlockSent event mask \par
}}
{\xe \v LDD_SPIMASTER_ON_ERROR\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_SPIMASTER_ON_ERROR}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_SPIMASTER_ON_ERROR\~ 0x04U}}
\par
{\bkmkstart AAAAAAABUA}
{\bkmkend AAAAAAABUA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
OnError event mask \par
}}
{\xe \v LDD_SPIMASTER_OUTPUT_PIN\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_SPIMASTER_OUTPUT_PIN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_SPIMASTER_OUTPUT_PIN\~ 0x02U}}
\par
{\bkmkstart AAAAAAABUB}
{\bkmkend AAAAAAABUB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Output pin mask \par
}}
{\xe \v LDD_SPIMASTER_PARITY_ERROR\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_SPIMASTER_PARITY_ERROR}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_SPIMASTER_PARITY_ERROR\~ 0x02U}}
\par
{\bkmkstart AAAAAAABUC}
{\bkmkend AAAAAAABUC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Parity error \par
}}
{\xe \v LDD_SPIMASTER_RX_DMA_ERROR\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_SPIMASTER_RX_DMA_ERROR}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_SPIMASTER_RX_DMA_ERROR\~ 0x04U}}
\par
{\bkmkstart AAAAAAABUD}
{\bkmkend AAAAAAABUD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Receive DMA channel error \par
}}
{\xe \v LDD_SPIMASTER_RX_OVERFLOW\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_SPIMASTER_RX_OVERFLOW}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_SPIMASTER_RX_OVERFLOW\~ 0x01U}}
\par
{\bkmkstart AAAAAAABUE}
{\bkmkend AAAAAAABUE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Receiver overflow \par
}}
{\xe \v LDD_SPIMASTER_TX_DMA_ERROR\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_SPIMASTER_TX_DMA_ERROR}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_SPIMASTER_TX_DMA_ERROR\~ 0x08U}}
\par
{\bkmkstart AAAAAAABUF}
{\bkmkend AAAAAAABUF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Transmit DMA channel error \par
}}
{\xe \v LDD_SPISLAVE_CLK_PIN\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_SPISLAVE_CLK_PIN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_SPISLAVE_CLK_PIN\~ 0x04U}}
\par
{\bkmkstart AAAAAAABUG}
{\bkmkend AAAAAAABUG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Clock pin mask \par
}}
{\xe \v LDD_SPISLAVE_INPUT_PIN\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_SPISLAVE_INPUT_PIN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_SPISLAVE_INPUT_PIN\~ 0x01U}}
\par
{\bkmkstart AAAAAAABUH}
{\bkmkend AAAAAAABUH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Input pin mask \par
}}
{\xe \v LDD_SPISLAVE_ON_BLOCK_RECEIVED\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_SPISLAVE_ON_BLOCK_RECEIVED}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_SPISLAVE_ON_BLOCK_RECEIVED\~ 0x01U}}
\par
{\bkmkstart AAAAAAABUI}
{\bkmkend AAAAAAABUI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
OnBlockReceived event mask \par
}}
{\xe \v LDD_SPISLAVE_ON_BLOCK_SENT\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_SPISLAVE_ON_BLOCK_SENT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_SPISLAVE_ON_BLOCK_SENT\~ 0x02U}}
\par
{\bkmkstart AAAAAAABUJ}
{\bkmkend AAAAAAABUJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
OnBlockSent event mask \par
}}
{\xe \v LDD_SPISLAVE_ON_ERROR\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_SPISLAVE_ON_ERROR}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_SPISLAVE_ON_ERROR\~ 0x04U}}
\par
{\bkmkstart AAAAAAABUK}
{\bkmkend AAAAAAABUK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
OnError event mask \par
}}
{\xe \v LDD_SPISLAVE_OUTPUT_PIN\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_SPISLAVE_OUTPUT_PIN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_SPISLAVE_OUTPUT_PIN\~ 0x02U}}
\par
{\bkmkstart AAAAAAABUL}
{\bkmkend AAAAAAABUL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Output pin mask \par
}}
{\xe \v LDD_SPISLAVE_PARITY_ERROR\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_SPISLAVE_PARITY_ERROR}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_SPISLAVE_PARITY_ERROR\~ 0x04U}}
\par
{\bkmkstart AAAAAAABUM}
{\bkmkend AAAAAAABUM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Parity error \par
}}
{\xe \v LDD_SPISLAVE_RX_DMA_ERROR\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_SPISLAVE_RX_DMA_ERROR}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_SPISLAVE_RX_DMA_ERROR\~ 0x08U}}
\par
{\bkmkstart AAAAAAABUN}
{\bkmkend AAAAAAABUN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Receive DMA channel error \par
}}
{\xe \v LDD_SPISLAVE_RX_OVERFLOW\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_SPISLAVE_RX_OVERFLOW}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_SPISLAVE_RX_OVERFLOW\~ 0x01U}}
\par
{\bkmkstart AAAAAAABUO}
{\bkmkend AAAAAAABUO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Receiver overflow \par
}}
{\xe \v LDD_SPISLAVE_SS_PIN\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_SPISLAVE_SS_PIN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_SPISLAVE_SS_PIN\~ 0x08U}}
\par
{\bkmkstart AAAAAAABUP}
{\bkmkend AAAAAAABUP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Slave select pin mask \par
}}
{\xe \v LDD_SPISLAVE_TX_DMA_ERROR\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_SPISLAVE_TX_DMA_ERROR}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_SPISLAVE_TX_DMA_ERROR\~ 0x10U}}
\par
{\bkmkstart AAAAAAABUQ}
{\bkmkend AAAAAAABUQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Transmit DMA channel error \par
}}
{\xe \v LDD_SPISLAVE_TX_UNDERFLOW\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_SPISLAVE_TX_UNDERFLOW}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_SPISLAVE_TX_UNDERFLOW\~ 0x02U}}
\par
{\bkmkstart AAAAAAABUR}
{\bkmkend AAAAAAABUR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Transmitter underflow \par
}}
{\xe \v LDD_SSI_AC97_COMMAND_ADDRESS\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_SSI_AC97_COMMAND_ADDRESS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_SSI_AC97_COMMAND_ADDRESS\~ (I2S_ISR_CMDAU_MASK)}}
\par
{\bkmkstart AAAAAAABUS}
{\bkmkend AAAAAAABUS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
AC97 command address updated \par
}}
{\xe \v LDD_SSI_AC97_COMMAND_DATA\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_SSI_AC97_COMMAND_DATA}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_SSI_AC97_COMMAND_DATA\~ (I2S_ISR_CMDDU_MASK)}}
\par
{\bkmkstart AAAAAAABUT}
{\bkmkend AAAAAAABUT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
AC97 command data updated \par
}}
{\xe \v LDD_SSI_AC97_TAG\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_SSI_AC97_TAG}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_SSI_AC97_TAG\~ (I2S_ISR_RXT_MASK)}}
\par
{\bkmkstart AAAAAAABUU}
{\bkmkend AAAAAAABUU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
AC97 tag updated \par
}}
{\xe \v LDD_SSI_INPUT_PIN\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_SSI_INPUT_PIN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_SSI_INPUT_PIN\~ 0x01U}}
\par
{\bkmkstart AAAAAAABUV}
{\bkmkend AAAAAAABUV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Input pin mask \par
}}
{\xe \v LDD_SSI_INPUT_PIN_CHANNEL_0\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_SSI_INPUT_PIN_CHANNEL_0}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_SSI_INPUT_PIN_CHANNEL_0\~ 0x80U}}
\par
{\bkmkstart AAAAAAABUW}
{\bkmkend AAAAAAABUW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Input pin mask for data channel 0 \par
}}
{\xe \v LDD_SSI_INPUT_PIN_CHANNEL_1\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_SSI_INPUT_PIN_CHANNEL_1}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_SSI_INPUT_PIN_CHANNEL_1\~ 0x0100U}}
\par
{\bkmkstart AAAAAAABUX}
{\bkmkend AAAAAAABUX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Input pin mask for data channel 1 \par
}}
{\xe \v LDD_SSI_MCLK_PIN\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_SSI_MCLK_PIN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_SSI_MCLK_PIN\~ 0x40U}}
\par
{\bkmkstart AAAAAAABUY}
{\bkmkend AAAAAAABUY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Master clock pin mask \par
}}
{\xe \v LDD_SSI_ON_A_C_9_7_COMMAND_ADDRESS_UPDATED\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_SSI_ON_A_C_9_7_COMMAND_ADDRESS_UPDATED}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_SSI_ON_A_C_9_7_COMMAND_ADDRESS_UPDATED\~ 0x1000u}}
\par
{\bkmkstart AAAAAAABUZ}
{\bkmkend AAAAAAABUZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
OnAC97CommandAddressUpdated event mask for second channel \par
}}
{\xe \v LDD_SSI_ON_A_C_9_7_COMMAND_DATA_UPDATED\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_SSI_ON_A_C_9_7_COMMAND_DATA_UPDATED}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_SSI_ON_A_C_9_7_COMMAND_DATA_UPDATED\~ 0x2000u}}
\par
{\bkmkstart AAAAAAABVA}
{\bkmkend AAAAAAABVA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
OnAC97CommandDataUpdated event mask for second channel \par
}}
{\xe \v LDD_SSI_ON_A_C_9_7_TAG_UPDATED\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_SSI_ON_A_C_9_7_TAG_UPDATED}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_SSI_ON_A_C_9_7_TAG_UPDATED\~ 0x0800u}}
\par
{\bkmkstart AAAAAAABVB}
{\bkmkend AAAAAAABVB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
OnAC97TagUpdated event mask for second channel \par
}}
{\xe \v LDD_SSI_ON_AC_97_COMMAND_ADDRESS_UPDATED\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_SSI_ON_AC_97_COMMAND_ADDRESS_UPDATED}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_SSI_ON_AC_97_COMMAND_ADDRESS_UPDATED\~ 0x1000u}}
\par
{\bkmkstart AAAAAAABVC}
{\bkmkend AAAAAAABVC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
OnAC97CommandAddressUpdated event mask for second channel \par
}}
{\xe \v LDD_SSI_ON_AC_97_COMMAND_DATA_UPDATED\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_SSI_ON_AC_97_COMMAND_DATA_UPDATED}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_SSI_ON_AC_97_COMMAND_DATA_UPDATED\~ 0x2000u}}
\par
{\bkmkstart AAAAAAABVD}
{\bkmkend AAAAAAABVD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
OnAC97CommandDataUpdated event mask for second channel \par
}}
{\xe \v LDD_SSI_ON_AC_97_TAG_UPDATED\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_SSI_ON_AC_97_TAG_UPDATED}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_SSI_ON_AC_97_TAG_UPDATED\~ 0x0800u}}
\par
{\bkmkstart AAAAAAABVE}
{\bkmkend AAAAAAABVE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
OnAC97TagUpdated event mask for second channel \par
}}
{\xe \v LDD_SSI_ON_BLOCK_RECEIVED\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_SSI_ON_BLOCK_RECEIVED}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_SSI_ON_BLOCK_RECEIVED\~ 0x01u}}
\par
{\bkmkstart AAAAAAABVF}
{\bkmkend AAAAAAABVF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
OnBlockReceived event mask \par
}}
{\xe \v LDD_SSI_ON_BLOCK_RECEIVED_1\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_SSI_ON_BLOCK_RECEIVED_1}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_SSI_ON_BLOCK_RECEIVED_1\~ 0x08u}}
\par
{\bkmkstart AAAAAAABVG}
{\bkmkend AAAAAAABVG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
OnBlockReceived event mask for second channel \par
}}
{\xe \v LDD_SSI_ON_BLOCK_SENT\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_SSI_ON_BLOCK_SENT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_SSI_ON_BLOCK_SENT\~ 0x02u}}
\par
{\bkmkstart AAAAAAABVH}
{\bkmkend AAAAAAABVH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
OnBlockSent event mask \par
}}
{\xe \v LDD_SSI_ON_BLOCK_SENT_1\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_SSI_ON_BLOCK_SENT_1}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_SSI_ON_BLOCK_SENT_1\~ 0x10u}}
\par
{\bkmkstart AAAAAAABVI}
{\bkmkend AAAAAAABVI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
OnBlockSent event mask for second channel \par
}}
{\xe \v LDD_SSI_ON_ERROR\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_SSI_ON_ERROR}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_SSI_ON_ERROR\~ 0x04u}}
\par
{\bkmkstart AAAAAAABVJ}
{\bkmkend AAAAAAABVJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
OnError event mask \par
}}
{\xe \v LDD_SSI_ON_RECEIVE_COMPLETE\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_SSI_ON_RECEIVE_COMPLETE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_SSI_ON_RECEIVE_COMPLETE\~ 0x0200u}}
\par
{\bkmkstart AAAAAAABVK}
{\bkmkend AAAAAAABVK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
OnReceiveComplete event mask for second channel \par
}}
{\xe \v LDD_SSI_ON_RECEIVE_FRAME_SYNC\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_SSI_ON_RECEIVE_FRAME_SYNC}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_SSI_ON_RECEIVE_FRAME_SYNC\~ 0x20u}}
\par
{\bkmkstart AAAAAAABVL}
{\bkmkend AAAAAAABVL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
OnReceiveFrameSync event mask for second channel \par
}}
{\xe \v LDD_SSI_ON_RECEIVE_LAST_SLOT\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_SSI_ON_RECEIVE_LAST_SLOT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_SSI_ON_RECEIVE_LAST_SLOT\~ 0x80u}}
\par
{\bkmkstart AAAAAAABVM}
{\bkmkend AAAAAAABVM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
OnReceiveLastSlot event mask for second channel \par
}}
{\xe \v LDD_SSI_ON_TRANSMIT_COMPLETE\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_SSI_ON_TRANSMIT_COMPLETE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_SSI_ON_TRANSMIT_COMPLETE\~ 0x0400u}}
\par
{\bkmkstart AAAAAAABVN}
{\bkmkend AAAAAAABVN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
OnTransmitComplete event mask for second channel \par
}}
{\xe \v LDD_SSI_ON_TRANSMIT_FRAME_SYNC\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_SSI_ON_TRANSMIT_FRAME_SYNC}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_SSI_ON_TRANSMIT_FRAME_SYNC\~ 0x40u}}
\par
{\bkmkstart AAAAAAABVO}
{\bkmkend AAAAAAABVO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
OnTransmitFrameSync event mask for second channel \par
}}
{\xe \v LDD_SSI_ON_TRANSMIT_LAST_SLOT\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_SSI_ON_TRANSMIT_LAST_SLOT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_SSI_ON_TRANSMIT_LAST_SLOT\~ 0x0100u}}
\par
{\bkmkstart AAAAAAABVP}
{\bkmkend AAAAAAABVP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
OnTransmitLastSlot event mask for second channel \par
}}
{\xe \v LDD_SSI_OUTPUT_PIN\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_SSI_OUTPUT_PIN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_SSI_OUTPUT_PIN\~ 0x02U}}
\par
{\bkmkstart AAAAAAABVQ}
{\bkmkend AAAAAAABVQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Output pin mask \par
}}
{\xe \v LDD_SSI_OUTPUT_PIN_CHANNEL_0\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_SSI_OUTPUT_PIN_CHANNEL_0}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_SSI_OUTPUT_PIN_CHANNEL_0\~ 0x0200U}}
\par
{\bkmkstart AAAAAAABVR}
{\bkmkend AAAAAAABVR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Output pin mask for data channel 0 \par
}}
{\xe \v LDD_SSI_OUTPUT_PIN_CHANNEL_1\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_SSI_OUTPUT_PIN_CHANNEL_1}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_SSI_OUTPUT_PIN_CHANNEL_1\~ 0x0400U}}
\par
{\bkmkstart AAAAAAABVS}
{\bkmkend AAAAAAABVS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Output pin mask for data channel 1 \par
}}
{\xe \v LDD_SSI_RECEIVER\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_SSI_RECEIVER}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_SSI_RECEIVER\~ (I2S_CR_RE_MASK)}}
\par
{\bkmkstart AAAAAAABVT}
{\bkmkend AAAAAAABVT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Receive section of the device. \par
}}
{\xe \v LDD_SSI_RX_CLK_PIN\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_SSI_RX_CLK_PIN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_SSI_RX_CLK_PIN\~ 0x04U}}
\par
{\bkmkstart AAAAAAABVU}
{\bkmkend AAAAAAABVU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Rx clock pin mask \par
}}
{\xe \v LDD_SSI_RX_FRAME_COMPLETE\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_SSI_RX_FRAME_COMPLETE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_SSI_RX_FRAME_COMPLETE\~ (I2S_ISR_RFRC_MASK)}}
\par
{\bkmkstart AAAAAAABVV}
{\bkmkend AAAAAAABVV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Receive frame is finished after disabling transfer \par
}}
{\xe \v LDD_SSI_RX_FRAME_SYNC\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_SSI_RX_FRAME_SYNC}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_SSI_RX_FRAME_SYNC\~ (I2S_ISR_RFS_MASK)}}
\par
{\bkmkstart AAAAAAABVW}
{\bkmkend AAAAAAABVW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Receiver frame sync \par
}}
{\xe \v LDD_SSI_RX_FS_PIN\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_SSI_RX_FS_PIN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_SSI_RX_FS_PIN\~ 0x10U}}
\par
{\bkmkstart AAAAAAABVX}
{\bkmkend AAAAAAABVX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Rx frame sync pin mask \par
}}
{\xe \v LDD_SSI_RX_LAST_SLOT\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_SSI_RX_LAST_SLOT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_SSI_RX_LAST_SLOT\~ (I2S_ISR_RLS_MASK)}}
\par
{\bkmkstart AAAAAAABVY}
{\bkmkend AAAAAAABVY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Receive last time slot \par
}}
{\xe \v LDD_SSI_RX_OVERFLOW\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_SSI_RX_OVERFLOW}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_SSI_RX_OVERFLOW\~ (I2S_ISR_ROE0_MASK)}}
\par
{\bkmkstart AAAAAAABVZ}
{\bkmkend AAAAAAABVZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Receiver overflow \par
}}
{\xe \v LDD_SSI_RX_OVERFLOW_1\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_SSI_RX_OVERFLOW_1}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_SSI_RX_OVERFLOW_1\~ (I2S_ISR_ROE1_MASK)}}
\par
{\bkmkstart AAAAAAABWA}
{\bkmkend AAAAAAABWA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Receiver overflow 1 \par
}}
{\xe \v LDD_SSI_TRANSMITTER\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_SSI_TRANSMITTER}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_SSI_TRANSMITTER\~ (I2S_CR_TE_MASK)}}
\par
{\bkmkstart AAAAAAABWB}
{\bkmkend AAAAAAABWB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Transmit section of the device. \par
}}
{\xe \v LDD_SSI_TX_CLK_PIN\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_SSI_TX_CLK_PIN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_SSI_TX_CLK_PIN\~ 0x08U}}
\par
{\bkmkstart AAAAAAABWC}
{\bkmkend AAAAAAABWC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Tx clock pin mask \par
}}
{\xe \v LDD_SSI_TX_FRAME_COMPLETE\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_SSI_TX_FRAME_COMPLETE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_SSI_TX_FRAME_COMPLETE\~ (I2S_ISR_TFRC_MASK)}}
\par
{\bkmkstart AAAAAAABWD}
{\bkmkend AAAAAAABWD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Transmit frame is finished after disabling transfer \par
}}
{\xe \v LDD_SSI_TX_FRAME_SYNC\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_SSI_TX_FRAME_SYNC}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_SSI_TX_FRAME_SYNC\~ (I2S_ISR_TFS_MASK)}}
\par
{\bkmkstart AAAAAAABWE}
{\bkmkend AAAAAAABWE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Transmit frame sync \par
}}
{\xe \v LDD_SSI_TX_FS_PIN\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_SSI_TX_FS_PIN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_SSI_TX_FS_PIN\~ 0x20U}}
\par
{\bkmkstart AAAAAAABWF}
{\bkmkend AAAAAAABWF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Tx frame sync pin mask \par
}}
{\xe \v LDD_SSI_TX_LAST_SLOT\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_SSI_TX_LAST_SLOT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_SSI_TX_LAST_SLOT\~ (I2S_ISR_TLS_MASK)}}
\par
{\bkmkstart AAAAAAABWG}
{\bkmkend AAAAAAABWG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Transmit last time slot \par
}}
{\xe \v LDD_SSI_TX_UNDERFLOW\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_SSI_TX_UNDERFLOW}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_SSI_TX_UNDERFLOW\~ (I2S_ISR_TUE0_MASK)}}
\par
{\bkmkstart AAAAAAABWH}
{\bkmkend AAAAAAABWH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Transmitter underflow \par
}}
{\xe \v LDD_SSI_TX_UNDERFLOW_1\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_SSI_TX_UNDERFLOW_1}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_SSI_TX_UNDERFLOW_1\~ (I2S_ISR_TUE1_MASK)}}
\par
{\bkmkstart AAAAAAABWI}
{\bkmkend AAAAAAABWI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Transmitter underflow 1 \par
}}
{\xe \v LDD_TIMEDATE_ON_ALARM\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_TIMEDATE_ON_ALARM}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_TIMEDATE_ON_ALARM\~ 0x01u}}
\par
{\bkmkstart AAAAAAABWJ}
{\bkmkend AAAAAAABWJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
OnAlarm event mask value \par
}}
{\xe \v LDD_TIMEDATE_ON_SECOND\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_TIMEDATE_ON_SECOND}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_TIMEDATE_ON_SECOND\~ 0x02u}}
\par
{\bkmkstart AAAAAAABWK}
{\bkmkend AAAAAAABWK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
OnSecond event mask value Time struct \par
}}
{\xe \v LDD_TIMERINT_ON_INTERRUPT\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_TIMERINT_ON_INTERRUPT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_TIMERINT_ON_INTERRUPT\~ 0x01u}}
\par
{\bkmkstart AAAAAAABWL}
{\bkmkend AAAAAAABWL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
OnInterrupt event mask value \par
}}
{\xe \v LDD_TIMEROUT_ON_INTERRUPT\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_TIMEROUT_ON_INTERRUPT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_TIMEROUT_ON_INTERRUPT\~ 0x01u}}
\par
{\bkmkstart AAAAAAABWM}
{\bkmkend AAAAAAABWM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
OnInterrupt event mask value \par
}}
{\xe \v LDD_TIMERUNIT_ON_CHANNEL_0\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_TIMERUNIT_ON_CHANNEL_0}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_TIMERUNIT_ON_CHANNEL_0\~ 0x01u}}
\par
{\bkmkstart AAAAAAABWN}
{\bkmkend AAAAAAABWN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
OnChannel0 event mask value \par
}}
{\xe \v LDD_TIMERUNIT_ON_CHANNEL_1\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_TIMERUNIT_ON_CHANNEL_1}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_TIMERUNIT_ON_CHANNEL_1\~ 0x02u}}
\par
{\bkmkstart AAAAAAABWO}
{\bkmkend AAAAAAABWO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
OnChannel1 event mask value \par
}}
{\xe \v LDD_TIMERUNIT_ON_CHANNEL_2\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_TIMERUNIT_ON_CHANNEL_2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_TIMERUNIT_ON_CHANNEL_2\~ 0x04u}}
\par
{\bkmkstart AAAAAAABWP}
{\bkmkend AAAAAAABWP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
OnChannel2 event mask value \par
}}
{\xe \v LDD_TIMERUNIT_ON_CHANNEL_3\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_TIMERUNIT_ON_CHANNEL_3}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_TIMERUNIT_ON_CHANNEL_3\~ 0x08u}}
\par
{\bkmkstart AAAAAAABWQ}
{\bkmkend AAAAAAABWQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
OnChannel3 event mask value \par
}}
{\xe \v LDD_TIMERUNIT_ON_CHANNEL_4\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_TIMERUNIT_ON_CHANNEL_4}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_TIMERUNIT_ON_CHANNEL_4\~ 0x10u}}
\par
{\bkmkstart AAAAAAABWR}
{\bkmkend AAAAAAABWR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
OnChannel4 event mask value \par
}}
{\xe \v LDD_TIMERUNIT_ON_CHANNEL_5\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_TIMERUNIT_ON_CHANNEL_5}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_TIMERUNIT_ON_CHANNEL_5\~ 0x20u}}
\par
{\bkmkstart AAAAAAABWS}
{\bkmkend AAAAAAABWS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
OnChannel5 event mask value \par
}}
{\xe \v LDD_TIMERUNIT_ON_CHANNEL_6\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_TIMERUNIT_ON_CHANNEL_6}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_TIMERUNIT_ON_CHANNEL_6\~ 0x40u}}
\par
{\bkmkstart AAAAAAABWT}
{\bkmkend AAAAAAABWT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
OnChannel6 event mask value \par
}}
{\xe \v LDD_TIMERUNIT_ON_CHANNEL_7\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_TIMERUNIT_ON_CHANNEL_7}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_TIMERUNIT_ON_CHANNEL_7\~ 0x80u}}
\par
{\bkmkstart AAAAAAABWU}
{\bkmkend AAAAAAABWU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
OnChannel7 event mask value \par
}}
{\xe \v LDD_TIMERUNIT_ON_COUNTER_RESTART\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_TIMERUNIT_ON_COUNTER_RESTART}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_TIMERUNIT_ON_COUNTER_RESTART\~ 0x0100u}}
\par
{\bkmkstart AAAAAAABWV}
{\bkmkend AAAAAAABWV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
OnCounterRestart event mask value \par
}}
{\xe \v LDD_USB_ALT_CLK_PIN\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_USB_ALT_CLK_PIN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_USB_ALT_CLK_PIN\~ 0x80000000u}}
\par
{\bkmkstart AAAAAAABWW}
{\bkmkend AAAAAAABWW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Alternate clock pin mask \par
}}
{\xe \v LDD_USB_CLKIN_PIN\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_USB_CLKIN_PIN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_USB_CLKIN_PIN\~ 0x80000000u}}
\par
{\bkmkstart AAAAAAABWX}
{\bkmkend AAAAAAABWX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Alternate clock pin mask \par
}}
{\xe \v LDD_USB_CMD_CLR_EP_HALT_FATURE\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_USB_CMD_CLR_EP_HALT_FATURE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_USB_CMD_CLR_EP_HALT_FATURE\~ 0x02u}}
\par
{\bkmkstart AAAAAAABWY}
{\bkmkend AAAAAAABWY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Clear endpoint HALT feature command ID \par
}}
{\xe \v LDD_USB_CMD_EP_STATUS_HALT_MASK\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_USB_CMD_EP_STATUS_HALT_MASK}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_USB_CMD_EP_STATUS_HALT_MASK\~ 0x01u}}
\par
{\bkmkstart AAAAAAABWZ}
{\bkmkend AAAAAAABWZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Endpoint halt status mask \par
}}
{\xe \v LDD_USB_CMD_GET_EP_STATUS\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_USB_CMD_GET_EP_STATUS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_USB_CMD_GET_EP_STATUS\~ 0x00u}}
\par
{\bkmkstart AAAAAAABXA}
{\bkmkend AAAAAAABXA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get endpoint status command ID \par
}}
{\xe \v LDD_USB_CMD_SET_EP_HALT_FATURE\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_USB_CMD_SET_EP_HALT_FATURE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_USB_CMD_SET_EP_HALT_FATURE\~ 0x01u}}
\par
{\bkmkstart AAAAAAABXB}
{\bkmkend AAAAAAABXB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set endpoint HALT feature command ID \par
}}
{\xe \v LDD_USB_DEVICE_VBUS_DETECT_PIN\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_USB_DEVICE_VBUS_DETECT_PIN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_USB_DEVICE_VBUS_DETECT_PIN\~ 0x00000040u}}
\par
{\bkmkstart AAAAAAABXC}
{\bkmkend AAAAAAABXC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
VBUS detect pin mask \par
}}
{\xe \v LDD_USB_DIR_IN\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_USB_DIR_IN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_USB_DIR_IN\~ 0x80u}}
\par
{\bkmkstart AAAAAAABXD}
{\bkmkend AAAAAAABXD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Recipient is Host \par
}}
{\xe \v LDD_USB_DIR_MASK\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_USB_DIR_MASK}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_USB_DIR_MASK\~ 0x80u}}
\par
{\bkmkstart AAAAAAABXE}
{\bkmkend AAAAAAABXE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Bit mask for data transfer direction \par
}}
{\xe \v LDD_USB_DIR_OUT\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_USB_DIR_OUT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_USB_DIR_OUT\~ 0x00u}}
\par
{\bkmkstart AAAAAAABXF}
{\bkmkend AAAAAAABXF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Recipient is Device \par
}}
{\xe \v LDD_USB_DM_PD_PIN\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_USB_DM_PD_PIN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_USB_DM_PD_PIN\~ 0x00000020u}}
\par
{\bkmkstart AAAAAAABXG}
{\bkmkend AAAAAAABXG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Data- pull-down pin mask \par
}}
{\xe \v LDD_USB_DM_PIN\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_USB_DM_PIN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_USB_DM_PIN\~ 0x00000002u}}
\par
{\bkmkstart AAAAAAABXH}
{\bkmkend AAAAAAABXH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Data- pin mask \par
}}
{\xe \v LDD_USB_DM_PU_PIN\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_USB_DM_PU_PIN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_USB_DM_PU_PIN\~ 0x00000008u}}
\par
{\bkmkstart AAAAAAABXI}
{\bkmkend AAAAAAABXI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Data- pull-up pin mask \par
}}
{\xe \v LDD_USB_DP_PD_PIN\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_USB_DP_PD_PIN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_USB_DP_PD_PIN\~ 0x00000010u}}
\par
{\bkmkstart AAAAAAABXJ}
{\bkmkend AAAAAAABXJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Data+ pull-down pin mask \par
}}
{\xe \v LDD_USB_DP_PIN\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_USB_DP_PIN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_USB_DP_PIN\~ 0x00000001u}}
\par
{\bkmkstart AAAAAAABXK}
{\bkmkend AAAAAAABXK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Data+ pin mask \par
}}
{\xe \v LDD_USB_DP_PU_PIN\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_USB_DP_PU_PIN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_USB_DP_PU_PIN\~ 0x00000004u}}
\par
{\bkmkstart AAAAAAABXL}
{\bkmkend AAAAAAABXL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Data+ pull-up pin mask \par
}}
{\xe \v LDD_USB_DT_CONFIGURATION\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_USB_DT_CONFIGURATION}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_USB_DT_CONFIGURATION\~ 0x02u}}
\par
{\bkmkstart AAAAAAABXM}
{\bkmkend AAAAAAABXM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Configuration descriptor \par
}}
{\xe \v LDD_USB_DT_DEBUG\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_USB_DT_DEBUG}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_USB_DT_DEBUG\~ 0x0Au}}
\par
{\bkmkstart AAAAAAABXN}
{\bkmkend AAAAAAABXN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Debug descriptor \par
}}
{\xe \v LDD_USB_DT_DEVICE\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_USB_DT_DEVICE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_USB_DT_DEVICE\~ 0x01u}}
\par
{\bkmkstart AAAAAAABXO}
{\bkmkend AAAAAAABXO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Device descriptor \par
}}
{\xe \v LDD_USB_DT_DEVICE_QUALIFIER\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_USB_DT_DEVICE_QUALIFIER}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_USB_DT_DEVICE_QUALIFIER\~ 0x06u}}
\par
{\bkmkstart AAAAAAABXP}
{\bkmkend AAAAAAABXP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Device qualifier descriptor \par
}}
{\xe \v LDD_USB_DT_ENDPOINT\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_USB_DT_ENDPOINT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_USB_DT_ENDPOINT\~ 0x05u}}
\par
{\bkmkstart AAAAAAABXQ}
{\bkmkend AAAAAAABXQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Endpoint descriptor \par
}}
{\xe \v LDD_USB_DT_INTERFACE\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_USB_DT_INTERFACE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_USB_DT_INTERFACE\~ 0x04u}}
\par
{\bkmkstart AAAAAAABXR}
{\bkmkend AAAAAAABXR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Interface descriptor \par
}}
{\xe \v LDD_USB_DT_INTERFACE_ASSOCIATION\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_USB_DT_INTERFACE_ASSOCIATION}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_USB_DT_INTERFACE_ASSOCIATION\~ 0x0Bu}}
\par
{\bkmkstart AAAAAAABXS}
{\bkmkend AAAAAAABXS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Interface association descriptor \par
}}
{\xe \v LDD_USB_DT_INTERFACE_POWER\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_USB_DT_INTERFACE_POWER}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_USB_DT_INTERFACE_POWER\~ 0x08u}}
\par
{\bkmkstart AAAAAAABXT}
{\bkmkend AAAAAAABXT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Interface-level power management descriptor \par
}}
{\xe \v LDD_USB_DT_OTG\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_USB_DT_OTG}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_USB_DT_OTG\~ 0x09u}}
\par
{\bkmkstart AAAAAAABXU}
{\bkmkend AAAAAAABXU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
OTG descriptor \par
}}
{\xe \v LDD_USB_DT_OTHER_SPEED_CONFIGURATION\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_USB_DT_OTHER_SPEED_CONFIGURATION}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_USB_DT_OTHER_SPEED_CONFIGURATION\~ 0x07u}}
\par
{\bkmkstart AAAAAAABXV}
{\bkmkend AAAAAAABXV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Other speed configuration descriptor \par
}}
{\xe \v LDD_USB_DT_STRING\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_USB_DT_STRING}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_USB_DT_STRING\~ 0x03u}}
\par
{\bkmkstart AAAAAAABXW}
{\bkmkend AAAAAAABXW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
String descriptor \par
}}
{\xe \v LDD_USB_FEATURE_DEV_REMOTE_WAKEUP\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_USB_FEATURE_DEV_REMOTE_WAKEUP}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_USB_FEATURE_DEV_REMOTE_WAKEUP\~ 0x01u}}
\par
{\bkmkstart AAAAAAABXX}
{\bkmkend AAAAAAABXX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Remote Wake-up feature selector \par
}}
{\xe \v LDD_USB_FEATURE_DEV_TEST_MODE\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_USB_FEATURE_DEV_TEST_MODE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_USB_FEATURE_DEV_TEST_MODE\~ 0x02u}}
\par
{\bkmkstart AAAAAAABXY}
{\bkmkend AAAAAAABXY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Test mode feature selector \par
}}
{\xe \v LDD_USB_FEATURE_EP_HALT\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_USB_FEATURE_EP_HALT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_USB_FEATURE_EP_HALT\~ 0x00u}}
\par
{\bkmkstart AAAAAAABXZ}
{\bkmkend AAAAAAABXZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Endpoint HALT feature selector \par
}}
{\xe \v LDD_USB_HOST_VBUS_ENABLE_PIN\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_USB_HOST_VBUS_ENABLE_PIN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_USB_HOST_VBUS_ENABLE_PIN\~ 0x00000080u}}
\par
{\bkmkstart AAAAAAABYA}
{\bkmkend AAAAAAABYA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
VBUS enable pin mask \par
}}
{\xe \v LDD_USB_HOST_VBUS_OVERCURRENT_PIN\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_USB_HOST_VBUS_OVERCURRENT_PIN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_USB_HOST_VBUS_OVERCURRENT_PIN\~ 0x00000100u}}
\par
{\bkmkstart AAAAAAABYB}
{\bkmkend AAAAAAABYB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
VBUS overcurrent pin mask \par
}}
{\xe \v LDD_USB_ID_EP0_IN\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_USB_ID_EP0_IN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_USB_ID_EP0_IN\~ 0x80u}}
\par
{\bkmkstart AAAAAAABYC}
{\bkmkend AAAAAAABYC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
EP0 IN component ID \par
}}
{\xe \v LDD_USB_ID_EP0_OUT\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_USB_ID_EP0_OUT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_USB_ID_EP0_OUT\~ 0x00u}}
\par
{\bkmkstart AAAAAAABYD}
{\bkmkend AAAAAAABYD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
EP0 OUT component ID \par
}}
{\xe \v LDD_USB_ID_EP10_IN\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_USB_ID_EP10_IN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_USB_ID_EP10_IN\~ 0x8Au}}
\par
{\bkmkstart AAAAAAABYE}
{\bkmkend AAAAAAABYE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
EP10 IN component ID \par
}}
{\xe \v LDD_USB_ID_EP10_OUT\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_USB_ID_EP10_OUT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_USB_ID_EP10_OUT\~ 0x0Au}}
\par
{\bkmkstart AAAAAAABYF}
{\bkmkend AAAAAAABYF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
EP10 OUT component ID \par
}}
{\xe \v LDD_USB_ID_EP11_IN\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_USB_ID_EP11_IN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_USB_ID_EP11_IN\~ 0x8Bu}}
\par
{\bkmkstart AAAAAAABYG}
{\bkmkend AAAAAAABYG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
EP11 IN component ID \par
}}
{\xe \v LDD_USB_ID_EP11_OUT\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_USB_ID_EP11_OUT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_USB_ID_EP11_OUT\~ 0x0Bu}}
\par
{\bkmkstart AAAAAAABYH}
{\bkmkend AAAAAAABYH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
EP11 OUT component ID \par
}}
{\xe \v LDD_USB_ID_EP12_IN\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_USB_ID_EP12_IN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_USB_ID_EP12_IN\~ 0x8Cu}}
\par
{\bkmkstart AAAAAAABYI}
{\bkmkend AAAAAAABYI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
EP12 IN component ID \par
}}
{\xe \v LDD_USB_ID_EP12_OUT\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_USB_ID_EP12_OUT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_USB_ID_EP12_OUT\~ 0x0Cu}}
\par
{\bkmkstart AAAAAAABYJ}
{\bkmkend AAAAAAABYJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
EP12 OUT component ID \par
}}
{\xe \v LDD_USB_ID_EP13_IN\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_USB_ID_EP13_IN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_USB_ID_EP13_IN\~ 0x8Du}}
\par
{\bkmkstart AAAAAAABYK}
{\bkmkend AAAAAAABYK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
EP13 IN component ID \par
}}
{\xe \v LDD_USB_ID_EP13_OUT\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_USB_ID_EP13_OUT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_USB_ID_EP13_OUT\~ 0x0Du}}
\par
{\bkmkstart AAAAAAABYL}
{\bkmkend AAAAAAABYL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
EP13 OUT component ID \par
}}
{\xe \v LDD_USB_ID_EP14_IN\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_USB_ID_EP14_IN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_USB_ID_EP14_IN\~ 0x8Eu}}
\par
{\bkmkstart AAAAAAABYM}
{\bkmkend AAAAAAABYM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
EP14 IN component ID \par
}}
{\xe \v LDD_USB_ID_EP14_OUT\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_USB_ID_EP14_OUT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_USB_ID_EP14_OUT\~ 0x0Eu}}
\par
{\bkmkstart AAAAAAABYN}
{\bkmkend AAAAAAABYN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
EP14 OUT component ID \par
}}
{\xe \v LDD_USB_ID_EP15_IN\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_USB_ID_EP15_IN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_USB_ID_EP15_IN\~ 0x8Fu}}
\par
{\bkmkstart AAAAAAABYO}
{\bkmkend AAAAAAABYO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
EP15 IN component ID \par
}}
{\xe \v LDD_USB_ID_EP15_OUT\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_USB_ID_EP15_OUT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_USB_ID_EP15_OUT\~ 0x0Fu}}
\par
{\bkmkstart AAAAAAABYP}
{\bkmkend AAAAAAABYP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
EP15 OUT component ID \par
}}
{\xe \v LDD_USB_ID_EP1_IN\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_USB_ID_EP1_IN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_USB_ID_EP1_IN\~ 0x81u}}
\par
{\bkmkstart AAAAAAABYQ}
{\bkmkend AAAAAAABYQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
EP1 IN component ID \par
}}
{\xe \v LDD_USB_ID_EP1_OUT\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_USB_ID_EP1_OUT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_USB_ID_EP1_OUT\~ 0x01u}}
\par
{\bkmkstart AAAAAAABYR}
{\bkmkend AAAAAAABYR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
EP1 OUT component ID \par
}}
{\xe \v LDD_USB_ID_EP2_IN\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_USB_ID_EP2_IN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_USB_ID_EP2_IN\~ 0x82u}}
\par
{\bkmkstart AAAAAAABYS}
{\bkmkend AAAAAAABYS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
EP2 IN component ID \par
}}
{\xe \v LDD_USB_ID_EP2_OUT\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_USB_ID_EP2_OUT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_USB_ID_EP2_OUT\~ 0x02u}}
\par
{\bkmkstart AAAAAAABYT}
{\bkmkend AAAAAAABYT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
EP2 OUT component ID \par
}}
{\xe \v LDD_USB_ID_EP3_IN\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_USB_ID_EP3_IN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_USB_ID_EP3_IN\~ 0x83u}}
\par
{\bkmkstart AAAAAAABYU}
{\bkmkend AAAAAAABYU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
EP3 IN component ID \par
}}
{\xe \v LDD_USB_ID_EP3_OUT\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_USB_ID_EP3_OUT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_USB_ID_EP3_OUT\~ 0x03u}}
\par
{\bkmkstart AAAAAAABYV}
{\bkmkend AAAAAAABYV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
EP3 OUT component ID \par
}}
{\xe \v LDD_USB_ID_EP4_IN\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_USB_ID_EP4_IN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_USB_ID_EP4_IN\~ 0x84u}}
\par
{\bkmkstart AAAAAAABYW}
{\bkmkend AAAAAAABYW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
EP4 IN component ID \par
}}
{\xe \v LDD_USB_ID_EP4_OUT\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_USB_ID_EP4_OUT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_USB_ID_EP4_OUT\~ 0x04u}}
\par
{\bkmkstart AAAAAAABYX}
{\bkmkend AAAAAAABYX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
EP4 OUT component ID \par
}}
{\xe \v LDD_USB_ID_EP5_IN\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_USB_ID_EP5_IN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_USB_ID_EP5_IN\~ 0x85u}}
\par
{\bkmkstart AAAAAAABYY}
{\bkmkend AAAAAAABYY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
EP5 IN component ID \par
}}
{\xe \v LDD_USB_ID_EP5_OUT\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_USB_ID_EP5_OUT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_USB_ID_EP5_OUT\~ 0x05u}}
\par
{\bkmkstart AAAAAAABYZ}
{\bkmkend AAAAAAABYZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
EP5 OUT component ID \par
}}
{\xe \v LDD_USB_ID_EP6_IN\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_USB_ID_EP6_IN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_USB_ID_EP6_IN\~ 0x86u}}
\par
{\bkmkstart AAAAAAABZA}
{\bkmkend AAAAAAABZA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
EP6 IN component ID \par
}}
{\xe \v LDD_USB_ID_EP6_OUT\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_USB_ID_EP6_OUT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_USB_ID_EP6_OUT\~ 0x06u}}
\par
{\bkmkstart AAAAAAABZB}
{\bkmkend AAAAAAABZB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
EP6 OUT component ID \par
}}
{\xe \v LDD_USB_ID_EP7_IN\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_USB_ID_EP7_IN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_USB_ID_EP7_IN\~ 0x87u}}
\par
{\bkmkstart AAAAAAABZC}
{\bkmkend AAAAAAABZC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
EP7 IN component ID \par
}}
{\xe \v LDD_USB_ID_EP7_OUT\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_USB_ID_EP7_OUT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_USB_ID_EP7_OUT\~ 0x07u}}
\par
{\bkmkstart AAAAAAABZD}
{\bkmkend AAAAAAABZD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
EP7 OUT component ID \par
}}
{\xe \v LDD_USB_ID_EP8_IN\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_USB_ID_EP8_IN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_USB_ID_EP8_IN\~ 0x88u}}
\par
{\bkmkstart AAAAAAABZE}
{\bkmkend AAAAAAABZE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
EP8 IN component ID \par
}}
{\xe \v LDD_USB_ID_EP8_OUT\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_USB_ID_EP8_OUT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_USB_ID_EP8_OUT\~ 0x08u}}
\par
{\bkmkstart AAAAAAABZF}
{\bkmkend AAAAAAABZF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
EP8 OUT component ID \par
}}
{\xe \v LDD_USB_ID_EP9_IN\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_USB_ID_EP9_IN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_USB_ID_EP9_IN\~ 0x89u}}
\par
{\bkmkstart AAAAAAABZG}
{\bkmkend AAAAAAABZG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
EP9 IN component ID \par
}}
{\xe \v LDD_USB_ID_EP9_OUT\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_USB_ID_EP9_OUT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_USB_ID_EP9_OUT\~ 0x09u}}
\par
{\bkmkstart AAAAAAABZH}
{\bkmkend AAAAAAABZH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
EP9 OUT component ID \par
}}
{\xe \v LDD_USB_ID_EP_MASK\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_USB_ID_EP_MASK}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_USB_ID_EP_MASK\~ 0x8Fu}}
\par
{\bkmkstart AAAAAAABZI}
{\bkmkend AAAAAAABZI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
EP15 IN component ID \par
}}
{\xe \v LDD_USB_ON_DEVICE_1_MS_TIMER\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_USB_ON_DEVICE_1_MS_TIMER}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_USB_ON_DEVICE_1_MS_TIMER\~ 0x00000040u}}
\par
{\bkmkstart AAAAAAABZJ}
{\bkmkend AAAAAAABZJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
OnDevice1msTimer event mask \par
}}
{\xe \v LDD_USB_ON_DEVICE_1MS_TIMER\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_USB_ON_DEVICE_1MS_TIMER}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_USB_ON_DEVICE_1MS_TIMER\~ 0x00000040u}}
\par
{\bkmkstart AAAAAAABZK}
{\bkmkend AAAAAAABZK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
OnDevice1msTimer event mask \par
}}
{\xe \v LDD_USB_ON_DEVICE_ERROR\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_USB_ON_DEVICE_ERROR}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_USB_ON_DEVICE_ERROR\~ 0x00000080u}}
\par
{\bkmkstart AAAAAAABZL}
{\bkmkend AAAAAAABZL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
OnDeviceError event mask \par
}}
{\xe \v LDD_USB_ON_DEVICE_RESET\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_USB_ON_DEVICE_RESET}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_USB_ON_DEVICE_RESET\~ 0x00000001u}}
\par
{\bkmkstart AAAAAAABZM}
{\bkmkend AAAAAAABZM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
OnDeviceReset event mask \par
}}
{\xe \v LDD_USB_ON_DEVICE_RESUME\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_USB_ON_DEVICE_RESUME}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_USB_ON_DEVICE_RESUME\~ 0x00000008u}}
\par
{\bkmkstart AAAAAAABZN}
{\bkmkend AAAAAAABZN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
OnDeviceResume event mask \par
}}
{\xe \v LDD_USB_ON_DEVICE_SETUP_PACKET\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_USB_ON_DEVICE_SETUP_PACKET}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_USB_ON_DEVICE_SETUP_PACKET\~ 0x00000010u}}
\par
{\bkmkstart AAAAAAABZO}
{\bkmkend AAAAAAABZO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
OnDeviceSetupPacket event mask \par
}}
{\xe \v LDD_USB_ON_DEVICE_SOF\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_USB_ON_DEVICE_SOF}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_USB_ON_DEVICE_SOF\~ 0x00000020u}}
\par
{\bkmkstart AAAAAAABZP}
{\bkmkend AAAAAAABZP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
OnDeviceSof event mask \par
}}
{\xe \v LDD_USB_ON_DEVICE_SPEED_DETECT\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_USB_ON_DEVICE_SPEED_DETECT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_USB_ON_DEVICE_SPEED_DETECT\~ 0x00000002u}}
\par
{\bkmkstart AAAAAAABZQ}
{\bkmkend AAAAAAABZQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
OnDeviceSpeedDetect event mask \par
}}
{\xe \v LDD_USB_ON_DEVICE_SUSPEND\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_USB_ON_DEVICE_SUSPEND}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_USB_ON_DEVICE_SUSPEND\~ 0x00000004u}}
\par
{\bkmkstart AAAAAAABZR}
{\bkmkend AAAAAAABZR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
OnDeviceSuspend event mask \par
}}
{\xe \v LDD_USB_ON_HOST_1_MS_TIMER\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_USB_ON_HOST_1_MS_TIMER}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_USB_ON_HOST_1_MS_TIMER\~ 0x00000800u}}
\par
{\bkmkstart AAAAAAABZS}
{\bkmkend AAAAAAABZS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
1 ms timer event mask \par
}}
{\xe \v LDD_USB_ON_HOST_1MS_TIMER\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_USB_ON_HOST_1MS_TIMER}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_USB_ON_HOST_1MS_TIMER\~ 0x00000800u}}
\par
{\bkmkstart AAAAAAABZT}
{\bkmkend AAAAAAABZT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
1 ms timer event mask \par
}}
{\xe \v LDD_USB_ON_HOST_DEVICE_DEATTACH\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_USB_ON_HOST_DEVICE_DEATTACH}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_USB_ON_HOST_DEVICE_DEATTACH\~ 0x00000100u}}
\par
{\bkmkstart AAAAAAABZU}
{\bkmkend AAAAAAABZU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
OnHostDeviceAttach event mask \par
}}
{\xe \v LDD_USB_ON_HOST_ERROR\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_USB_ON_HOST_ERROR}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_USB_ON_HOST_ERROR\~ 0x00001000u}}
\par
{\bkmkstart AAAAAAABZV}
{\bkmkend AAAAAAABZV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
OnHostError event mask \par
}}
{\xe \v LDD_USB_ON_HOST_RESET_RECOVERY\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_USB_ON_HOST_RESET_RECOVERY}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_USB_ON_HOST_RESET_RECOVERY\~ 0x00000200u}}
\par
{\bkmkstart AAAAAAABZW}
{\bkmkend AAAAAAABZW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
OnHostResetRecovery event mask \par
}}
{\xe \v LDD_USB_ON_HOST_RESUME_RECOVERY\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_USB_ON_HOST_RESUME_RECOVERY}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_USB_ON_HOST_RESUME_RECOVERY\~ 0x00000400u}}
\par
{\bkmkstart AAAAAAABZX}
{\bkmkend AAAAAAABZX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
OnHostResumeRecovery event mask \par
}}
{\xe \v LDD_USB_ON_OTG_DEVICE\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_USB_ON_OTG_DEVICE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_USB_ON_OTG_DEVICE\~ 0x00002000u}}
\par
{\bkmkstart AAAAAAABZY}
{\bkmkend AAAAAAABZY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
OnOtgDevice event mask \par
}}
{\xe \v LDD_USB_ON_OTG_HOST\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_USB_ON_OTG_HOST}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_USB_ON_OTG_HOST\~ 0x00004000u}}
\par
{\bkmkstart AAAAAAABZZ}
{\bkmkend AAAAAAABZZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
OnOtgHost event mask \par
}}
{\xe \v LDD_USB_ON_OTG_STATE_CHANGE\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_USB_ON_OTG_STATE_CHANGE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_USB_ON_OTG_STATE_CHANGE\~ 0x00008000u}}
\par
{\bkmkstart AAAAAAACAA}
{\bkmkend AAAAAAACAA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
OnOtgStageChange event mask \par
}}
{\xe \v LDD_USB_ON_SIGNAL_CHANGE\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_USB_ON_SIGNAL_CHANGE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_USB_ON_SIGNAL_CHANGE\~ 0x00010000u}}
\par
{\bkmkstart AAAAAAACAB}
{\bkmkend AAAAAAACAB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
OnSignalChange event mask \par
}}
{\xe \v LDD_USB_OTG_B_SESSION_END_PIN\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_USB_OTG_B_SESSION_END_PIN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_USB_OTG_B_SESSION_END_PIN\~ 0x00004000u}}
\par
{\bkmkstart AAAAAAACAC}
{\bkmkend AAAAAAACAC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
B SESSION end pin mask \par
}}
{\xe \v LDD_USB_OTG_ID_PIN\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_USB_OTG_ID_PIN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_USB_OTG_ID_PIN\~ 0x00000200u}}
\par
{\bkmkstart AAAAAAACAD}
{\bkmkend AAAAAAACAD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
ID pin mask \par
}}
{\xe \v LDD_USB_OTG_SESSION_VALID_PIN\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_USB_OTG_SESSION_VALID_PIN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_USB_OTG_SESSION_VALID_PIN\~ 0x00000800u}}
\par
{\bkmkstart AAAAAAACAE}
{\bkmkend AAAAAAACAE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
SESSION valid pin mask \par
}}
{\xe \v LDD_USB_OTG_VBUS_CHARGE_PIN\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_USB_OTG_VBUS_CHARGE_PIN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_USB_OTG_VBUS_CHARGE_PIN\~ 0x00010000u}}
\par
{\bkmkstart AAAAAAACAF}
{\bkmkend AAAAAAACAF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
VBUS charge pin mask \par
}}
{\xe \v LDD_USB_OTG_VBUS_DISCHARGE_PIN\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_USB_OTG_VBUS_DISCHARGE_PIN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_USB_OTG_VBUS_DISCHARGE_PIN\~ 0x00020000u}}
\par
{\bkmkstart AAAAAAACAG}
{\bkmkend AAAAAAACAG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
VBUS discharge pin mask \par
}}
{\xe \v LDD_USB_OTG_VBUS_ENABLE_PIN\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_USB_OTG_VBUS_ENABLE_PIN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_USB_OTG_VBUS_ENABLE_PIN\~ 0x00008000u}}
\par
{\bkmkstart AAAAAAACAH}
{\bkmkend AAAAAAACAH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
VBUS drive pin mask \par
}}
{\xe \v LDD_USB_OTG_VBUS_VALID_PIN\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_USB_OTG_VBUS_VALID_PIN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_USB_OTG_VBUS_VALID_PIN\~ 0x00000400u}}
\par
{\bkmkstart AAAAAAACAI}
{\bkmkend AAAAAAACAI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
VBUS valid pin mask \par
}}
{\xe \v LDD_USB_PID_ACK\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_USB_PID_ACK}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_USB_PID_ACK\~ 0x02u}}
\par
{\bkmkstart AAAAAAACAJ}
{\bkmkend AAAAAAACAJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
ACK \par
}}
{\xe \v LDD_USB_PID_DATA0\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_USB_PID_DATA0}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_USB_PID_DATA0\~ 0x03u}}
\par
{\bkmkstart AAAAAAACAK}
{\bkmkend AAAAAAACAK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
DATA0 \par
}}
{\xe \v LDD_USB_PID_DATA1\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_USB_PID_DATA1}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_USB_PID_DATA1\~ 0x0Bu}}
\par
{\bkmkstart AAAAAAACAL}
{\bkmkend AAAAAAACAL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
DATA1 \par
}}
{\xe \v LDD_USB_PID_DATA2\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_USB_PID_DATA2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_USB_PID_DATA2\~ 0x07u}}
\par
{\bkmkstart AAAAAAACAM}
{\bkmkend AAAAAAACAM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
DATA2 \par
}}
{\xe \v LDD_USB_PID_ERR\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_USB_PID_ERR}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_USB_PID_ERR\~ 0x0Cu}}
\par
{\bkmkstart AAAAAAACAN}
{\bkmkend AAAAAAACAN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
ERR \par
}}
{\xe \v LDD_USB_PID_IN\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_USB_PID_IN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_USB_PID_IN\~ 0x09u}}
\par
{\bkmkstart AAAAAAACAO}
{\bkmkend AAAAAAACAO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
IN \par
}}
{\xe \v LDD_USB_PID_MDATA\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_USB_PID_MDATA}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_USB_PID_MDATA\~ 0x0Fu}}
\par
{\bkmkstart AAAAAAACAP}
{\bkmkend AAAAAAACAP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
MDATA \par
}}
{\xe \v LDD_USB_PID_NACK\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_USB_PID_NACK}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_USB_PID_NACK\~ 0x0Au}}
\par
{\bkmkstart AAAAAAACAQ}
{\bkmkend AAAAAAACAQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
NACK \par
}}
{\xe \v LDD_USB_PID_NYET\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_USB_PID_NYET}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_USB_PID_NYET\~ 0x06u}}
\par
{\bkmkstart AAAAAAACAR}
{\bkmkend AAAAAAACAR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
NYET \par
}}
{\xe \v LDD_USB_PID_OUT\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_USB_PID_OUT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_USB_PID_OUT\~ 0x01u}}
\par
{\bkmkstart AAAAAAACAS}
{\bkmkend AAAAAAACAS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
OUT \par
}}
{\xe \v LDD_USB_PID_PING\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_USB_PID_PING}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_USB_PID_PING\~ 0x04u}}
\par
{\bkmkstart AAAAAAACAT}
{\bkmkend AAAAAAACAT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
PING \par
}}
{\xe \v LDD_USB_PID_PRE\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_USB_PID_PRE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_USB_PID_PRE\~ 0x0Cu}}
\par
{\bkmkstart AAAAAAACAU}
{\bkmkend AAAAAAACAU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
PRE \par
}}
{\xe \v LDD_USB_PID_SETUP\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_USB_PID_SETUP}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_USB_PID_SETUP\~ 0x0Du}}
\par
{\bkmkstart AAAAAAACAV}
{\bkmkend AAAAAAACAV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
SETUP \par
}}
{\xe \v LDD_USB_PID_SOF\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_USB_PID_SOF}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_USB_PID_SOF\~ 0x05u}}
\par
{\bkmkstart AAAAAAACAW}
{\bkmkend AAAAAAACAW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
SOF \par
}}
{\xe \v LDD_USB_PID_SPLIT\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_USB_PID_SPLIT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_USB_PID_SPLIT\~ 0x08u}}
\par
{\bkmkstart AAAAAAACAX}
{\bkmkend AAAAAAACAX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
SPLIT \par
}}
{\xe \v LDD_USB_PID_STALL\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_USB_PID_STALL}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_USB_PID_STALL\~ 0x0Eu}}
\par
{\bkmkstart AAAAAAACAY}
{\bkmkend AAAAAAACAY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
STALL \par
}}
{\xe \v LDD_USB_REQ_CLEAR_FEATURE\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_USB_REQ_CLEAR_FEATURE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_USB_REQ_CLEAR_FEATURE\~ 0x01u}}
\par
{\bkmkstart AAAAAAACAZ}
{\bkmkend AAAAAAACAZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
CLEAR_FEATURE request code \par
}}
{\xe \v LDD_USB_REQ_GET_CONFIGURATION\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_USB_REQ_GET_CONFIGURATION}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_USB_REQ_GET_CONFIGURATION\~ 0x08u}}
\par
{\bkmkstart AAAAAAACBA}
{\bkmkend AAAAAAACBA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
GET_CONFIGURATION request code \par
}}
{\xe \v LDD_USB_REQ_GET_DESCRIPTOR\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_USB_REQ_GET_DESCRIPTOR}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_USB_REQ_GET_DESCRIPTOR\~ 0x06u}}
\par
{\bkmkstart AAAAAAACBB}
{\bkmkend AAAAAAACBB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
GET_DESCRIPTOR request code \par
}}
{\xe \v LDD_USB_REQ_GET_INTERFACE\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_USB_REQ_GET_INTERFACE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_USB_REQ_GET_INTERFACE\~ 0x0Au}}
\par
{\bkmkstart AAAAAAACBC}
{\bkmkend AAAAAAACBC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
GET_INTERFACE request code \par
}}
{\xe \v LDD_USB_REQ_GET_STATE\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_USB_REQ_GET_STATE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_USB_REQ_GET_STATE\~ 0x04u}}
\par
{\bkmkstart AAAAAAACBD}
{\bkmkend AAAAAAACBD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
GET_STATE request code (for Hub Class only) \par
}}
{\xe \v LDD_USB_REQ_GET_STATUS\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_USB_REQ_GET_STATUS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_USB_REQ_GET_STATUS\~ 0x00u}}
\par
{\bkmkstart AAAAAAACBE}
{\bkmkend AAAAAAACBE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
GET_STATUS request code \par
}}
{\xe \v LDD_USB_REQ_RECP_DEVICE\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_USB_REQ_RECP_DEVICE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_USB_REQ_RECP_DEVICE\~ 0x00u}}
\par
{\bkmkstart AAAAAAACBF}
{\bkmkend AAAAAAACBF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Recipient = Device \par
}}
{\xe \v LDD_USB_REQ_RECP_ENDPOINT\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_USB_REQ_RECP_ENDPOINT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_USB_REQ_RECP_ENDPOINT\~ 0x02u}}
\par
{\bkmkstart AAAAAAACBG}
{\bkmkend AAAAAAACBG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Recipient = Endpoint \par
}}
{\xe \v LDD_USB_REQ_RECP_INTERFACE\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_USB_REQ_RECP_INTERFACE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_USB_REQ_RECP_INTERFACE\~ 0x01u}}
\par
{\bkmkstart AAAAAAACBH}
{\bkmkend AAAAAAACBH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Recipient = Interface \par
}}
{\xe \v LDD_USB_REQ_RECP_MASK\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_USB_REQ_RECP_MASK}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_USB_REQ_RECP_MASK\~ 0x03u}}
\par
{\bkmkstart AAAAAAACBI}
{\bkmkend AAAAAAACBI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Bit mask for recipient \par
}}
{\xe \v LDD_USB_REQ_RECP_OTHER\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_USB_REQ_RECP_OTHER}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_USB_REQ_RECP_OTHER\~ 0x03u}}
\par
{\bkmkstart AAAAAAACBJ}
{\bkmkend AAAAAAACBJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Recipient = Other \par
}}
{\xe \v LDD_USB_REQ_SET_ADDRESS\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_USB_REQ_SET_ADDRESS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_USB_REQ_SET_ADDRESS\~ 0x05u}}
\par
{\bkmkstart AAAAAAACBK}
{\bkmkend AAAAAAACBK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
SET_ADDRESS request code \par
}}
{\xe \v LDD_USB_REQ_SET_CONFIGURATION\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_USB_REQ_SET_CONFIGURATION}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_USB_REQ_SET_CONFIGURATION\~ 0x09u}}
\par
{\bkmkstart AAAAAAACBL}
{\bkmkend AAAAAAACBL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
SET_CONFIGURATION request code \par
}}
{\xe \v LDD_USB_REQ_SET_DESCRIPTOR\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_USB_REQ_SET_DESCRIPTOR}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_USB_REQ_SET_DESCRIPTOR\~ 0x07u}}
\par
{\bkmkstart AAAAAAACBM}
{\bkmkend AAAAAAACBM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
SET_DESCRIPTOR request code, this request is not supported \par
}}
{\xe \v LDD_USB_REQ_SET_FEATURE\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_USB_REQ_SET_FEATURE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_USB_REQ_SET_FEATURE\~ 0x03u}}
\par
{\bkmkstart AAAAAAACBN}
{\bkmkend AAAAAAACBN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
SET_FEATURE request code \par
}}
{\xe \v LDD_USB_REQ_SET_INTERFACE\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_USB_REQ_SET_INTERFACE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_USB_REQ_SET_INTERFACE\~ 0x0Bu}}
\par
{\bkmkstart AAAAAAACBO}
{\bkmkend AAAAAAACBO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
SET_INTERFACE request code \par
}}
{\xe \v LDD_USB_REQ_SYNCH_FRAME\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_USB_REQ_SYNCH_FRAME}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_USB_REQ_SYNCH_FRAME\~ 0x0Cu}}
\par
{\bkmkstart AAAAAAACBP}
{\bkmkend AAAAAAACBP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
SYNCH_FRAME request code \par
}}
{\xe \v LDD_USB_REQ_TYPE_CLASS\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_USB_REQ_TYPE_CLASS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_USB_REQ_TYPE_CLASS\~ 0x20u}}
\par
{\bkmkstart AAAAAAACBQ}
{\bkmkend AAAAAAACBQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Class request \par
}}
{\xe \v LDD_USB_REQ_TYPE_MASK\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_USB_REQ_TYPE_MASK}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_USB_REQ_TYPE_MASK\~ 0x60u}}
\par
{\bkmkstart AAAAAAACBR}
{\bkmkend AAAAAAACBR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Bit mask for request type (bmRequestType) \par
}}
{\xe \v LDD_USB_REQ_TYPE_STANDARD\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_USB_REQ_TYPE_STANDARD}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_USB_REQ_TYPE_STANDARD\~ 0x00u}}
\par
{\bkmkstart AAAAAAACBS}
{\bkmkend AAAAAAACBS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Following USB constants and types are for test purpose only Standard request \par
}}
{\xe \v LDD_USB_REQ_TYPE_VENDOR\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_USB_REQ_TYPE_VENDOR}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_USB_REQ_TYPE_VENDOR\~ 0x40u}}
\par
{\bkmkstart AAAAAAACBT}
{\bkmkend AAAAAAACBT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Vendor request \par
}}
{\xe \v LDD_USB_STD_REQ_CLR_DEV_FEATURE\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_USB_STD_REQ_CLR_DEV_FEATURE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_USB_STD_REQ_CLR_DEV_FEATURE\~ 0x0100u}}
\par
{\bkmkstart AAAAAAACBU}
{\bkmkend AAAAAAACBU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
CLEAR_DEVICE_FEATURE bmRequestType and bRequest word \par
}}
{\xe \v LDD_USB_STD_REQ_CLR_EP_FEATURE\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_USB_STD_REQ_CLR_EP_FEATURE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_USB_STD_REQ_CLR_EP_FEATURE\~ 0x0102u}}
\par
{\bkmkstart AAAAAAACBV}
{\bkmkend AAAAAAACBV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
CLEAR_ENDPOINT_FEATURE bmRequestType and bRequest word \par
}}
{\xe \v LDD_USB_STD_REQ_CLR_INT_FEATURE\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_USB_STD_REQ_CLR_INT_FEATURE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_USB_STD_REQ_CLR_INT_FEATURE\~ 0x0101u}}
\par
{\bkmkstart AAAAAAACBW}
{\bkmkend AAAAAAACBW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
CLEAR_INTERFACE_FEATURE bmRequestType and bRequest word \par
}}
{\xe \v LDD_USB_STD_REQ_GET_CONFIGURATION\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_USB_STD_REQ_GET_CONFIGURATION}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_USB_STD_REQ_GET_CONFIGURATION\~ 0x0880u}}
\par
{\bkmkstart AAAAAAACBX}
{\bkmkend AAAAAAACBX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
GET_DEVICE_CONFIGURATION bmRequestType and bRequest word \par
}}
{\xe \v LDD_USB_STD_REQ_GET_DESCRIPTOR\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_USB_STD_REQ_GET_DESCRIPTOR}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_USB_STD_REQ_GET_DESCRIPTOR\~ 0x0680u}}
\par
{\bkmkstart AAAAAAACBY}
{\bkmkend AAAAAAACBY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
GET_DESCRIPTOR bmRequestType and bRequest word \par
}}
{\xe \v LDD_USB_STD_REQ_GET_DEV_STATUS\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_USB_STD_REQ_GET_DEV_STATUS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_USB_STD_REQ_GET_DEV_STATUS\~ 0x0080u}}
\par
{\bkmkstart AAAAAAACBZ}
{\bkmkend AAAAAAACBZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
GET_DEVICE_STATUS bmRequestType and bRequest word \par
}}
{\xe \v LDD_USB_STD_REQ_GET_EP_STATUS\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_USB_STD_REQ_GET_EP_STATUS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_USB_STD_REQ_GET_EP_STATUS\~ 0x0082u}}
\par
{\bkmkstart AAAAAAACCA}
{\bkmkend AAAAAAACCA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
GET_ENDPOINT_STATUS bmRequestType and bRequest word \par
}}
{\xe \v LDD_USB_STD_REQ_GET_INT_STATUS\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_USB_STD_REQ_GET_INT_STATUS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_USB_STD_REQ_GET_INT_STATUS\~ 0x0081u}}
\par
{\bkmkstart AAAAAAACCB}
{\bkmkend AAAAAAACCB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
GET_INTERFACE_STATUS bmRequestType and bRequest word \par
}}
{\xe \v LDD_USB_STD_REQ_GET_INTERFACE\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_USB_STD_REQ_GET_INTERFACE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_USB_STD_REQ_GET_INTERFACE\~ 0x0A81u}}
\par
{\bkmkstart AAAAAAACCC}
{\bkmkend AAAAAAACCC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
GET_DEVICE_INTERFACE bmRequestType and bRequest word \par
}}
{\xe \v LDD_USB_STD_REQ_SET_ADDRESS\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_USB_STD_REQ_SET_ADDRESS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_USB_STD_REQ_SET_ADDRESS\~ 0x0500u}}
\par
{\bkmkstart AAAAAAACCD}
{\bkmkend AAAAAAACCD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
SET_DEVICE_ADDRESS bmRequestType and bRequest word \par
}}
{\xe \v LDD_USB_STD_REQ_SET_CONFIGURATION\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_USB_STD_REQ_SET_CONFIGURATION}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_USB_STD_REQ_SET_CONFIGURATION\~ 0x0900u}}
\par
{\bkmkstart AAAAAAACCE}
{\bkmkend AAAAAAACCE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
SET_DEVICE_CONFIGURATION bmRequestType and bRequest word \par
}}
{\xe \v LDD_USB_STD_REQ_SET_DESCRIPTOR\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_USB_STD_REQ_SET_DESCRIPTOR}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_USB_STD_REQ_SET_DESCRIPTOR\~ 0x0700u}}
\par
{\bkmkstart AAAAAAACCF}
{\bkmkend AAAAAAACCF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
SET_DESCRIPTOR bmRequestType and bRequest word \par
}}
{\xe \v LDD_USB_STD_REQ_SET_DEV_FEATURE\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_USB_STD_REQ_SET_DEV_FEATURE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_USB_STD_REQ_SET_DEV_FEATURE\~ 0x0300u}}
\par
{\bkmkstart AAAAAAACCG}
{\bkmkend AAAAAAACCG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
SET_DEVICE_FEATURE bmRequestType and bRequest word \par
}}
{\xe \v LDD_USB_STD_REQ_SET_EP_FEATURE\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_USB_STD_REQ_SET_EP_FEATURE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_USB_STD_REQ_SET_EP_FEATURE\~ 0x0302u}}
\par
{\bkmkstart AAAAAAACCH}
{\bkmkend AAAAAAACCH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
ENDPOINT_ bmRequestType and bRequest word \par
}}
{\xe \v LDD_USB_STD_REQ_SET_INT_FEATURE\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_USB_STD_REQ_SET_INT_FEATURE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_USB_STD_REQ_SET_INT_FEATURE\~ 0x0301u}}
\par
{\bkmkstart AAAAAAACCI}
{\bkmkend AAAAAAACCI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
SET_INTERFACE_FEATURE bmRequestType and bRequest word \par
}}
{\xe \v LDD_USB_STD_REQ_SET_INTERFACE\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_USB_STD_REQ_SET_INTERFACE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_USB_STD_REQ_SET_INTERFACE\~ 0x0B01u}}
\par
{\bkmkstart AAAAAAACCJ}
{\bkmkend AAAAAAACCJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
SET_DEVICE_INTERFACE bmRequestType and bRequest word \par
}}
{\xe \v LDD_USB_STD_REQ_SYNCH_FRAME\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_USB_STD_REQ_SYNCH_FRAME}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_USB_STD_REQ_SYNCH_FRAME\~ 0x0C12u}}
\par
{\bkmkstart AAAAAAACCK}
{\bkmkend AAAAAAACCK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
SYNCH_DEVICE_FRAME bmRequestType and bRequest code \par
}}
{\xe \v LDD_USB_ULPI_CLK_PIN\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_USB_ULPI_CLK_PIN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_USB_ULPI_CLK_PIN\~ 0x00080000u}}
\par
{\bkmkstart AAAAAAACCL}
{\bkmkend AAAAAAACCL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
ULPI_CLK pin mask \par
}}
{\xe \v LDD_USB_ULPI_DATA_0_PIN\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_USB_ULPI_DATA_0_PIN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_USB_ULPI_DATA_0_PIN\~ 0x00800000u}}
\par
{\bkmkstart AAAAAAACCM}
{\bkmkend AAAAAAACCM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
ULPI_DATA_0 pin mask \par
}}
{\xe \v LDD_USB_ULPI_DATA_1_PIN\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_USB_ULPI_DATA_1_PIN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_USB_ULPI_DATA_1_PIN\~ 0x01000000u}}
\par
{\bkmkstart AAAAAAACCN}
{\bkmkend AAAAAAACCN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
ULPI_DATA_1 pin mask \par
}}
{\xe \v LDD_USB_ULPI_DATA_2_PIN\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_USB_ULPI_DATA_2_PIN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_USB_ULPI_DATA_2_PIN\~ 0x02000000u}}
\par
{\bkmkstart AAAAAAACCO}
{\bkmkend AAAAAAACCO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
ULPI_DATA_2 pin mask \par
}}
{\xe \v LDD_USB_ULPI_DATA_3_PIN\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_USB_ULPI_DATA_3_PIN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_USB_ULPI_DATA_3_PIN\~ 0x04000000u}}
\par
{\bkmkstart AAAAAAACCP}
{\bkmkend AAAAAAACCP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
ULPI_DATA_3 pin mask \par
}}
{\xe \v LDD_USB_ULPI_DATA_4_PIN\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_USB_ULPI_DATA_4_PIN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_USB_ULPI_DATA_4_PIN\~ 0x08000000u}}
\par
{\bkmkstart AAAAAAACCQ}
{\bkmkend AAAAAAACCQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
ULPI_DATA_4 pin mask \par
}}
{\xe \v LDD_USB_ULPI_DATA_5_PIN\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_USB_ULPI_DATA_5_PIN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_USB_ULPI_DATA_5_PIN\~ 0x10000000u}}
\par
{\bkmkstart AAAAAAACCR}
{\bkmkend AAAAAAACCR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
ULPI_DATA_5 pin mask \par
}}
{\xe \v LDD_USB_ULPI_DATA_6_PIN\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_USB_ULPI_DATA_6_PIN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_USB_ULPI_DATA_6_PIN\~ 0x20000000u}}
\par
{\bkmkstart AAAAAAACCS}
{\bkmkend AAAAAAACCS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
ULPI_DATA_6 pin mask \par
}}
{\xe \v LDD_USB_ULPI_DATA_7_PIN\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_USB_ULPI_DATA_7_PIN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_USB_ULPI_DATA_7_PIN\~ 0x40000000u}}
\par
{\bkmkstart AAAAAAACCT}
{\bkmkend AAAAAAACCT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
ULPI_DATA_7 pin mask \par
}}
{\xe \v LDD_USB_ULPI_DIR_PIN\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_USB_ULPI_DIR_PIN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_USB_ULPI_DIR_PIN\~ 0x00100000u}}
\par
{\bkmkstart AAAAAAACCU}
{\bkmkend AAAAAAACCU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
ULPI_DIR pin mask \par
}}
{\xe \v LDD_USB_ULPI_NXT_PIN\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_USB_ULPI_NXT_PIN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_USB_ULPI_NXT_PIN\~ 0x00200000u}}
\par
{\bkmkstart AAAAAAACCV}
{\bkmkend AAAAAAACCV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
ULPI_NXT pin mask \par
}}
{\xe \v LDD_USB_ULPI_STP_PIN\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_USB_ULPI_STP_PIN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LDD_USB_ULPI_STP_PIN\~ 0x00400000u}}
\par
{\bkmkstart AAAAAAACCW}
{\bkmkend AAAAAAACCW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
ULPI_STOP pin mask \par
}}
{\xe \v PE_DEBUGHALT\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:PE_DEBUGHALT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define PE_DEBUGHALT()}}
\par
{\bkmkstart AAAAAAACCX}
{\bkmkend AAAAAAACCX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Value:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid /*lint -save  -e586 -e950 Disable MISRA rule (2.1,1.1) checking. */\\\par
  __asm( "BKPT 255") \\\par
  /*lint -restore Enable MISRA rule (2.1,1.1) checking. */\par
}
}
{\xe \v PE_LDD_DRIVER_BUSY\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:PE_LDD_DRIVER_BUSY}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define PE_LDD_DRIVER_BUSY\~ 0x04U}}
\par
{\bkmkstart AAAAAAACCY}
{\bkmkend AAAAAAACCY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
LDD driver is busy \par
}}
{\xe \v PE_LDD_DRIVER_DISABLED_BY_USER\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:PE_LDD_DRIVER_DISABLED_BY_USER}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define PE_LDD_DRIVER_DISABLED_BY_USER\~ 0x02U}}
\par
{\bkmkstart AAAAAAACCZ}
{\bkmkend AAAAAAACCZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
LDD driver is disabled by the user \par
}}
{\xe \v PE_LDD_DRIVER_DISABLED_IN_CLOCK_CONFIGURATION\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:PE_LDD_DRIVER_DISABLED_IN_CLOCK_CONFIGURATION}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define PE_LDD_DRIVER_DISABLED_IN_CLOCK_CONFIGURATION\~ 0x01U}}
\par
{\bkmkstart AAAAAAACDA}
{\bkmkend AAAAAAACDA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
LDD driver is disabled in the selected clock configuration \par
}}
{\xe \v PE_LDD_GetDeviceStructure\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:PE_LDD_GetDeviceStructure}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define PE_LDD_GetDeviceStructure( ComponentIndex)\~ ({\b PE_LDD_DeviceDataList}[ComponentIndex])}}
\par
{\bkmkstart AAAAAAACDB}
{\bkmkend AAAAAAACDB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Macro to get the component device structure \par
}}
{\xe \v PE_LDD_RegisterDeviceStructure\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:PE_LDD_RegisterDeviceStructure}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define PE_LDD_RegisterDeviceStructure( ComponentIndex,  DeviceStructure)\~ ({\b PE_LDD_DeviceDataList}[ComponentIndex] = DeviceStructure)}}
\par
{\bkmkstart AAAAAAACDC}
{\bkmkend AAAAAAACDC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Macro to register component device structure \par
}}
{\xe \v PE_LDD_UnregisterDeviceStructure\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:PE_LDD_UnregisterDeviceStructure}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define PE_LDD_UnregisterDeviceStructure( ComponentIndex)\~ ({\b PE_LDD_DeviceDataList}[ComponentIndex] = NULL)}}
\par
{\bkmkstart AAAAAAACDD}
{\bkmkend AAAAAAACDD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Macro to unregister component device structure \par
}}
{\xe \v PE_LDD_VERSION\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:PE_LDD_VERSION}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define PE_LDD_VERSION\~ 0x0100U}}
\par
{\bkmkstart AAAAAAACDE}
{\bkmkend AAAAAAACDE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Logical Device Driver API version \par
}}
{\xe \v PE_NOP\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:PE_NOP}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define PE_NOP()}}
\par
{\bkmkstart AAAAAAACDF}
{\bkmkend AAAAAAACDF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Value:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid /*lint -save  -e586 -e950 Disable MISRA rule (2.1,1.1) checking. */\\\par
  __asm( "NOP") \\\par
  /*lint -restore Enable MISRA rule (2.1,1.1) checking. */\par
}
}
{\xe \v PE_WFI\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:PE_WFI}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define PE_WFI()}}
\par
{\bkmkstart AAAAAAACDG}
{\bkmkend AAAAAAACDG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Value:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid /*lint -save  -e586 -e950 Disable MISRA rule (2.1,1.1) checking. */\\\par
  __asm("WFI") \\\par
  /*lint -restore Enable MISRA rule (2.1,1.1) checking. */\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Typedef Documentation\par
\pard\plain 
{\xe \v LDD_ADC_TErrorMask\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_ADC_TErrorMask}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef uint32_t {\b LDD_ADC_TErrorMask}}}
\par
{\bkmkstart AAAAAAACDH}
{\bkmkend AAAAAAACDH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
ADC error type \par
}}
{\xe \v LDD_AnalogComp_TOutputValue\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_AnalogComp_TOutputValue}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef uint8_t {\b LDD_AnalogComp_TOutputValue}}}
\par
{\bkmkstart AAAAAAACDI}
{\bkmkend AAAAAAACDI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Type specifying comparator output value \par
}}
{\xe \v LDD_CAN_TAccMask\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_CAN_TAccMask}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef uint32_t {\b LDD_CAN_TAccMask}}}
\par
{\bkmkstart AAAAAAACDJ}
{\bkmkend AAAAAAACDJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Type specifying the acceptance mask variable. \par
}}
{\xe \v LDD_CAN_TBufferMask\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_CAN_TBufferMask}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef uint16_t {\b LDD_CAN_TBufferMask}}}
\par
{\bkmkstart AAAAAAACDK}
{\bkmkend AAAAAAACDK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Type specifying the message buffer mask variable. \par
}}
{\xe \v LDD_CAN_TErrorCounter\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_CAN_TErrorCounter}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef uint8_t {\b LDD_CAN_TErrorCounter}}}
\par
{\bkmkstart AAAAAAACDL}
{\bkmkend AAAAAAACDL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Type specifying the error counter variable. \par
}}
{\xe \v LDD_CAN_TErrorMask\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_CAN_TErrorMask}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef uint32_t {\b LDD_CAN_TErrorMask}}}
\par
{\bkmkstart AAAAAAACDM}
{\bkmkend AAAAAAACDM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Type specifying the error mask variable. \par
}}
{\xe \v LDD_CAN_TMBIndex\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_CAN_TMBIndex}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef uint8_t {\b LDD_CAN_TMBIndex}}}
\par
{\bkmkstart AAAAAAACDN}
{\bkmkend AAAAAAACDN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
CAN message buffer index \par
}}
{\xe \v LDD_CAN_TMessageID\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_CAN_TMessageID}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef uint32_t {\b LDD_CAN_TMessageID}}}
\par
{\bkmkstart AAAAAAACDO}
{\bkmkend AAAAAAACDO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Type specifying the ID mask variable. \par
}}
{\xe \v LDD_DAC_TArrayLength\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_DAC_TArrayLength}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef uint32_t {\b LDD_DAC_TArrayLength}}}
\par
{\bkmkstart AAAAAAACDP}
{\bkmkend AAAAAAACDP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Array length type \par
}}
{\xe \v LDD_DAC_TData\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_DAC_TData}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef uint32_t {\b LDD_DAC_TData}}}
\par
{\bkmkstart AAAAAAACDQ}
{\bkmkend AAAAAAACDQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The DAC data variable type \par
}}
{\xe \v LDD_DAC_TDataPtr\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_DAC_TDataPtr}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef void* {\b LDD_DAC_TDataPtr}}}
\par
{\bkmkstart AAAAAAACDR}
{\bkmkend AAAAAAACDR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Type specifying the pointer to the DAC data variable \par
}}
{\xe \v LDD_DAC_TErrorMask\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_DAC_TErrorMask}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef uint32_t {\b LDD_DAC_TErrorMask}}}
\par
{\bkmkstart AAAAAAACDS}
{\bkmkend AAAAAAACDS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Error mask \par
}}
{\xe \v LDD_DMA_TAddress\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_DMA_TAddress}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef uint32_t {\b LDD_DMA_TAddress}}}
\par
{\bkmkstart AAAAAAACDT}
{\bkmkend AAAAAAACDT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Type specifying the address parameter used by the DMA component's methods. \par
}}
{\xe \v LDD_DMA_TAddressOffset\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_DMA_TAddressOffset}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef int32_t {\b LDD_DMA_TAddressOffset}}}
\par
{\bkmkstart AAAAAAACDU}
{\bkmkend AAAAAAACDU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Type specifying the address signed offset parameter used by the DMA component's methods. \par
}}
{\xe \v LDD_DMA_TAfterRequest\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_DMA_TAfterRequest}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef uint8_t {\b LDD_DMA_TAfterRequest}}}
\par
{\bkmkstart AAAAAAACDV}
{\bkmkend AAAAAAACDV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Type specifying the operation executed after request service is completed. \par
}}
{\xe \v LDD_DMA_TAfterTransfer\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_DMA_TAfterTransfer}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef uint8_t {\b LDD_DMA_TAfterTransfer}}}
\par
{\bkmkstart AAAAAAACDW}
{\bkmkend AAAAAAACDW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Type specifying the operation executed after transfer service is completed. \par
}}
{\xe \v LDD_DMA_TBandwidthControl\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_DMA_TBandwidthControl}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef uint8_t {\b LDD_DMA_TBandwidthControl}}}
\par
{\bkmkstart AAAAAAACDX}
{\bkmkend AAAAAAACDX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Type specifying the bandwidth control. See the DMA_PDD header file for detail description of allowed values. \par
}}
{\xe \v LDD_DMA_TByteCount\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_DMA_TByteCount}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef uint32_t {\b LDD_DMA_TByteCount}}}
\par
{\bkmkstart AAAAAAACDY}
{\bkmkend AAAAAAACDY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Type specifying the byte count/minor loop count parameter used by the DMA component's methods. \par
}}
{\xe \v LDD_DMA_TChannelMask\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_DMA_TChannelMask}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef uint16_t {\b LDD_DMA_TChannelMask}}}
\par
{\bkmkstart AAAAAAACDZ}
{\bkmkend AAAAAAACDZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Type specifying the DMA channel mask. For possible values see channel mask constants. \par
}}
{\xe \v LDD_DMA_TChannelNumber\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_DMA_TChannelNumber}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef uint8_t {\b LDD_DMA_TChannelNumber}}}
\par
{\bkmkstart AAAAAAACEA}
{\bkmkend AAAAAAACEA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Type specifying the DMA channel number. See the MCU manual for detail description of allowed values. \par
}}
{\xe \v LDD_DMA_TChannelPriority\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_DMA_TChannelPriority}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef uint8_t {\b LDD_DMA_TChannelPriority}}}
\par
{\bkmkstart AAAAAAACEB}
{\bkmkend AAAAAAACEB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Type specifying the DMA channel priority number. See the MCU manual for detail description of allowed values. \par
}}
{\xe \v LDD_DMA_TErrorFlags\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_DMA_TErrorFlags}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef uint32_t {\b LDD_DMA_TErrorFlags}}}
\par
{\bkmkstart AAAAAAACEC}
{\bkmkend AAAAAAACEC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
DMA controller error flags. See the DMA_LDD component's header file for detail description of allowed values. \par
}}
{\xe \v LDD_DMA_TModuloSize\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_DMA_TModuloSize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef uint8_t {\b LDD_DMA_TModuloSize}}}
\par
{\bkmkstart AAAAAAACED}
{\bkmkend AAAAAAACED}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Type specifying the modulo size parameter used by the DMA component's methods. This value power of two represents size of used circular buffer (0U - buffer disabled). See the MCU manual for detail description of allowed values. \par
}}
{\xe \v LDD_DMA_TOuterLoopCount\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_DMA_TOuterLoopCount}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef uint8_t {\b LDD_DMA_TOuterLoopCount}}}
\par
{\bkmkstart AAAAAAACEE}
{\bkmkend AAAAAAACEE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Type specifying the transfer outer/major loop count. \par
}}
{\xe \v LDD_DMA_TRecordNumber\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_DMA_TRecordNumber}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef uint8_t {\b LDD_DMA_TRecordNumber}}}
\par
{\bkmkstart AAAAAAACEF}
{\bkmkend AAAAAAACEF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Type specifying the DMA descriptor record number. \par
}}
{\xe \v LDD_DMA_TTransferDescriptorPtr\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_DMA_TTransferDescriptorPtr}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef {\b LDD_DMA_TTransferDescriptor}* {\b LDD_DMA_TTransferDescriptorPtr}}}
\par
{\bkmkstart AAAAAAACEG}
{\bkmkend AAAAAAACEG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Type specifying address of the DMA Transfer descriptor structure. \par
}}
{\xe \v LDD_DMA_TTransferSize\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_DMA_TTransferSize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef uint8_t {\b LDD_DMA_TTransferSize}}}
\par
{\bkmkstart AAAAAAACEH}
{\bkmkend AAAAAAACEH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Type specifying the transfer size parameter used by the DMA component's methods. See the DMA_PDD header file for detail description of allowed values. \par
}}
{\xe \v LDD_DMA_TTriggerSource\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_DMA_TTriggerSource}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef uint8_t {\b LDD_DMA_TTriggerSource}}}
\par
{\bkmkstart AAAAAAACEI}
{\bkmkend AAAAAAACEI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Type specifying the trigger source signal number. See the MCU manual for detail description of allowed values. \par
}}
{\xe \v LDD_ETH_TBufferDescPtr\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_ETH_TBufferDescPtr}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef {\b LDD_ETH_TBufferDesc}* {\b LDD_ETH_TBufferDescPtr}}}
\par
{\bkmkstart AAAAAAACEJ}
{\bkmkend AAAAAAACEJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Frame buffer descriptor pointer type \par
}}
{\xe \v LDD_ETH_TMACAddress\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_ETH_TMACAddress}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef uint8_t LDD_ETH_TMACAddress[6]}}
\par
{\bkmkstart AAAAAAACEK}
{\bkmkend AAAAAAACEK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Ethernet MAC address \par
}}
{\xe \v LDD_FLASH_TAddress\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_FLASH_TAddress}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef uint32_t {\b LDD_FLASH_TAddress}}}
\par
{\bkmkstart AAAAAAACEL}
{\bkmkend AAAAAAACEL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Type specifying the Address parameter used by the FLASH component's methods \par
}}
{\xe \v LDD_FLASH_TDataSize\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_FLASH_TDataSize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef uint32_t {\b LDD_FLASH_TDataSize}}}
\par
{\bkmkstart AAAAAAACEM}
{\bkmkend AAAAAAACEM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Type specifying the Size parameter used by the FLASH component's methods \par
}}
{\xe \v LDD_FLASH_TErasableUnitSize\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_FLASH_TErasableUnitSize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef uint16_t {\b LDD_FLASH_TErasableUnitSize}}}
\par
{\bkmkstart AAAAAAACEN}
{\bkmkend AAAAAAACEN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Type specifying the Size output parameter of the GetErasableUnitSize method (pointer to a variable of this type is passed to the method) \par
}}
{\xe \v LDD_FLASH_TErrorFlags\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_FLASH_TErrorFlags}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef uint8_t {\b LDD_FLASH_TErrorFlags}}}
\par
{\bkmkstart AAAAAAACEO}
{\bkmkend AAAAAAACEO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Type specifying FLASH component's error flags bit field \par
}}
{\xe \v LDD_GPIO_TBitField\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_GPIO_TBitField}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef uint32_t {\b LDD_GPIO_TBitField}}}
\par
{\bkmkstart AAAAAAACEP}
{\bkmkend AAAAAAACEP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Abstract type specifying the bit field within the port. \par
}}
{\xe \v LDD_I2C_TAddr\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_I2C_TAddr}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef uint16_t {\b LDD_I2C_TAddr}}}
\par
{\bkmkstart AAAAAAACEQ}
{\bkmkend AAAAAAACEQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Type specifying the address variable \par
}}
{\xe \v LDD_I2C_TErrorMask\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_I2C_TErrorMask}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef uint16_t {\b LDD_I2C_TErrorMask}}}
\par
{\bkmkstart AAAAAAACER}
{\bkmkend AAAAAAACER}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Type specifying the error mask type. \par
}}
{\xe \v LDD_I2C_TMode\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_I2C_TMode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef bool {\b LDD_I2C_TMode}}}
\par
{\bkmkstart AAAAAAACES}
{\bkmkend AAAAAAACES}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Type specifynng the Actual operating mode \par
}}
{\xe \v LDD_I2C_TSize\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_I2C_TSize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef uint16_t {\b LDD_I2C_TSize}}}
\par
{\bkmkstart AAAAAAACET}
{\bkmkend AAAAAAACET}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Type specifying the length of the data or buffer. \par
}}
{\xe \v LDD_NFC_TTargetID\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_NFC_TTargetID}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef uint32_t {\b LDD_NFC_TTargetID}}}
\par
{\bkmkstart AAAAAAACEU}
{\bkmkend AAAAAAACEU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
NFC target ID type \par
}}
{\xe \v LDD_PPG_Tfloat\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_PPG_Tfloat}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef float {\b LDD_PPG_Tfloat}}}
\par
{\bkmkstart AAAAAAACEV}
{\bkmkend AAAAAAACEV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Float type \par
}}
{\xe \v LDD_RealTime_Tfloat\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_RealTime_Tfloat}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef float {\b LDD_RealTime_Tfloat}}}
\par
{\bkmkstart AAAAAAACEW}
{\bkmkend AAAAAAACEW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Float type \par
}}
{\xe \v LDD_SegLCD_TFaultValue\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_SegLCD_TFaultValue}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef uint8_t {\b LDD_SegLCD_TFaultValue}}}
\par
{\bkmkstart AAAAAAACEX}
{\bkmkend AAAAAAACEX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Type specifying the frontplane/backplane segment variable \par
}}
{\xe \v LDD_SegLCD_TFrontplaneData\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_SegLCD_TFrontplaneData}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef uint8_t {\b LDD_SegLCD_TFrontplaneData}}}
\par
{\bkmkstart AAAAAAACEY}
{\bkmkend AAAAAAACEY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Type specifying the frontplane/backplane segment variable \par
}}
{\xe \v LDD_SegLCD_TPinIndex\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_SegLCD_TPinIndex}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef uint8_t {\b LDD_SegLCD_TPinIndex}}}
\par
{\bkmkstart AAAAAAACEZ}
{\bkmkend AAAAAAACEZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Type specifying the segment LCD pin index variable \par
}}
{\xe \v LDD_SERIAL_TBaudMode\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_SERIAL_TBaudMode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef uint8_t {\b LDD_SERIAL_TBaudMode}}}
\par
{\bkmkstart AAAAAAACFA}
{\bkmkend AAAAAAACFA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Type specifying the baud mode. \par
}}
{\xe \v LDD_SERIAL_TDataWidth\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_SERIAL_TDataWidth}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef uint8_t {\b LDD_SERIAL_TDataWidth}}}
\par
{\bkmkstart AAAAAAACFB}
{\bkmkend AAAAAAACFB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Bit length type. The number of bits transmitted by one character. \par
}}
{\xe \v LDD_SERIAL_TError\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_SERIAL_TError}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef uint32_t {\b LDD_SERIAL_TError}}}
\par
{\bkmkstart AAAAAAACFC}
{\bkmkend AAAAAAACFC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Serial communication error type \par
}}
{\xe \v LDD_SERIAL_TSize\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_SERIAL_TSize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef uint16_t {\b LDD_SERIAL_TSize}}}
\par
{\bkmkstart AAAAAAACFD}
{\bkmkend AAAAAAACFD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Type specifying the length of the data or buffer. \par
}}
{\xe \v LDD_SPIMASTER_TError\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_SPIMASTER_TError}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef uint32_t {\b LDD_SPIMASTER_TError}}}
\par
{\bkmkstart AAAAAAACFE}
{\bkmkend AAAAAAACFE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Communication error type \par
}}
{\xe \v LDD_SPISLAVE_TError\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_SPISLAVE_TError}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef uint32_t {\b LDD_SPISLAVE_TError}}}
\par
{\bkmkstart AAAAAAACFF}
{\bkmkend AAAAAAACFF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Communication error type \par
}}
{\xe \v LDD_SSI_TComStatus\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_SSI_TComStatus}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef uint32_t {\b LDD_SSI_TComStatus}}}
\par
{\bkmkstart AAAAAAACFG}
{\bkmkend AAAAAAACFG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Communication status type \par
}}
{\xe \v LDD_SSI_TError\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_SSI_TError}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef uint32_t {\b LDD_SSI_TError}}}
\par
{\bkmkstart AAAAAAACFH}
{\bkmkend AAAAAAACFH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Communication error type \par
}}
{\xe \v LDD_SSI_TSectionMask\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_SSI_TSectionMask}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef uint8_t {\b LDD_SSI_TSectionMask}}}
\par
{\bkmkstart AAAAAAACFI}
{\bkmkend AAAAAAACFI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Device section type \par
}}
{\xe \v LDD_TCallback\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_TCallback}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef void(*  LDD_TCallback)({\b LDD_TCallbackParam} *CallbackParam)}}
\par
{\bkmkstart AAAAAAACFJ}
{\bkmkend AAAAAAACFJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Callback type used for definition of callback functions. \par
}}
{\xe \v LDD_TCallbackParam\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_TCallbackParam}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef void {\b LDD_TCallbackParam}}}
\par
{\bkmkstart AAAAAAACFK}
{\bkmkend AAAAAAACFK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Pointer to this type specifies the user data to be passed as a callback parameter. \par
}}
{\xe \v LDD_TClockConfiguration\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_TClockConfiguration}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef uint8_t {\b LDD_TClockConfiguration}}}
\par
{\bkmkstart AAAAAAACFL}
{\bkmkend AAAAAAACFL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
CPU clock configuration type. \par
}}
{\xe \v LDD_TData\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_TData}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef void {\b LDD_TData}}}
\par
{\bkmkstart AAAAAAACFM}
{\bkmkend AAAAAAACFM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
General pointer to data. \par
}}
{\xe \v LDD_TDeviceData\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_TDeviceData}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef void {\b LDD_TDeviceData}}}
\par
{\bkmkstart AAAAAAACFN}
{\bkmkend AAAAAAACFN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Pointer to private device structure managed and used by HAL components. \par
}}
{\xe \v LDD_TDeviceDataPtr\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_TDeviceDataPtr}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef void* {\b LDD_TDeviceDataPtr}}}
\par
{\bkmkstart AAAAAAACFO}
{\bkmkend AAAAAAACFO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Obsolete type for backward compatibility. \par
}}
{\xe \v LDD_TDriverState\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_TDriverState}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef uint16_t {\b LDD_TDriverState}}}
\par
{\bkmkstart AAAAAAACFP}
{\bkmkend AAAAAAACFP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Driver state type. \par
}}
{\xe \v LDD_TError\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_TError}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef uint16_t {\b LDD_TError}}}
\par
{\bkmkstart AAAAAAACFQ}
{\bkmkend AAAAAAACFQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Error type. \par
}}
{\xe \v LDD_TEventMask\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_TEventMask}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef uint32_t {\b LDD_TEventMask}}}
\par
{\bkmkstart AAAAAAACFR}
{\bkmkend AAAAAAACFR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Event mask type. \par
}}
{\xe \v LDD_TimerUnit_Tfloat\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_TimerUnit_Tfloat}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef float {\b LDD_TimerUnit_Tfloat}}}
\par
{\bkmkstart AAAAAAACFS}
{\bkmkend AAAAAAACFS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Float type \par
}}
{\xe \v LDD_TPinMask\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_TPinMask}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef uint32_t {\b LDD_TPinMask}}}
\par
{\bkmkstart AAAAAAACFT}
{\bkmkend AAAAAAACFT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Pin mask type. \par
}}
{\xe \v LDD_TUserData\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_TUserData}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef void {\b LDD_TUserData}}}
\par
{\bkmkstart AAAAAAACFU}
{\bkmkend AAAAAAACFU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Pointer to this type specifies the user or RTOS specific data will be passed as an event or callback parameter. \par
}}
{\xe \v LDD_USB_Device_TTD\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_USB_Device_TTD}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef struct {\b LDD_USB_Device_TTD_Struct}  {\b LDD_USB_Device_TTD}}}
\par
{\bkmkstart AAAAAAACFV}
{\bkmkend AAAAAAACFV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Device transfer descriptor structure \par
}}
{\xe \v LDD_USB_Device_TTD_Head\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_USB_Device_TTD_Head}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef struct {\b LDD_USB_Device_TTD_Head_Struct}  {\b LDD_USB_Device_TTD_Head}}}
\par
{\bkmkstart AAAAAAACFW}
{\bkmkend AAAAAAACFW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Device transfer descriptor structure - head part \par
}}
{\xe \v LDD_USB_Device_TTransferDoneCalback\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_USB_Device_TTransferDoneCalback}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef void( LDD_USB_Device_TTransferDoneCalback)({\b LDD_TDeviceData} *DevDataPtr, struct {\b LDD_USB_Device_TTD_Struct} *TrParamPtr)}}
\par
{\bkmkstart AAAAAAACFX}
{\bkmkend AAAAAAACFX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Device transfer done callback prototype \par
}}
{\xe \v LDD_USB_Host_TPipeDescr\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_USB_Host_TPipeDescr}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef struct {\b LDD_USB_Host_TPipeDescr_Struct}  {\b LDD_USB_Host_TPipeDescr}}}
\par
{\bkmkstart AAAAAAACFY}
{\bkmkend AAAAAAACFY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
USB host pipe descriptor structure \par
}}
{\xe \v LDD_USB_Host_TPipeHandle\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_USB_Host_TPipeHandle}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef void {\b LDD_USB_Host_TPipeHandle}}}
\par
{\bkmkstart AAAAAAACFZ}
{\bkmkend AAAAAAACFZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
USB host handle prototypes Pipe handle prototype \par
}}
{\xe \v LDD_USB_Host_TTD\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_USB_Host_TTD}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef struct {\b LDD_USB_Host_TTD_Struct}  {\b LDD_USB_Host_TTD}}}
\par
{\bkmkstart AAAAAAACGA}
{\bkmkend AAAAAAACGA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
USB host transfer descriptor structure \par
}}
{\xe \v LDD_USB_Host_TTransferDoneCalback\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_USB_Host_TTransferDoneCalback}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef void( LDD_USB_Host_TTransferDoneCalback)({\b LDD_TDeviceData} *DevDataPtr,{\b LDD_TData} *BufferPtr,uint16_t BufferSize,uint8_t *ParamPtr,{\b LDD_USB_TTransferState} Status)}}
\par
{\bkmkstart AAAAAAACGB}
{\bkmkend AAAAAAACGB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
USB host transfer done callback prototype \par
}}
{\xe \v LDD_USB_Host_TTransferHandle\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_USB_Host_TTransferHandle}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef void {\b LDD_USB_Host_TTransferHandle}}}
\par
{\bkmkstart AAAAAAACGC}
{\bkmkend AAAAAAACGC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Transfer handle prototype \par
}}
{\xe \v LDD_USB_TDevDescriptor\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_USB_TDevDescriptor}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef struct {\b LDD_USB_TDevDescriptor_Struct}  {\b LDD_USB_TDevDescriptor}}}
\par
{\bkmkstart AAAAAAACGD}
{\bkmkend AAAAAAACGD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Standard device descriptor structure, uint16_t items must be in little-endian format \par
}}
{\xe \v LDD_USB_TDeviceFeatureRequest\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_USB_TDeviceFeatureRequest}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef struct {\b LDD_USB_TDeviceFeatureRequest_Struct}  {\b LDD_USB_TDeviceFeatureRequest}}}
\par
{\bkmkstart AAAAAAACGE}
{\bkmkend AAAAAAACGE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Clear/Set device request structure \par
}}
{\xe \v LDD_USB_TEndpointFeatureRequest\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_USB_TEndpointFeatureRequest}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef struct {\b LDD_USB_TEndpointFeatureRequest_Struct}  {\b LDD_USB_TEndpointFeatureRequest}}}
\par
{\bkmkstart AAAAAAACGF}
{\bkmkend AAAAAAACGF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Clear/Set endpoint feature request structure \par
}}
{\xe \v LDD_USB_TEndpointStatusRequest\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_USB_TEndpointStatusRequest}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef struct {\b LDD_USB_TEndpointStatusRequest_Struct}  {\b LDD_USB_TEndpointStatusRequest}}}
\par
{\bkmkstart AAAAAAACGG}
{\bkmkend AAAAAAACGG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get endpoint status request structure \par
}}
{\xe \v LDD_USB_TEpDescriptor\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_USB_TEpDescriptor}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef struct {\b LDD_USB_TEpDescriptor_Struct}  {\b LDD_USB_TEpDescriptor}}}
\par
{\bkmkstart AAAAAAACGH}
{\bkmkend AAAAAAACGH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Endpoint descriptor structure, uint16_t items must be in little-endian format \par
}}
{\xe \v LDD_USB_TGetDecriptorRequest\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_USB_TGetDecriptorRequest}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef struct {\b LDD_USB_TGetDecriptorRequest_Struct}  {\b LDD_USB_TGetDecriptorRequest}}}
\par
{\bkmkstart AAAAAAACGI}
{\bkmkend AAAAAAACGI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get decriptor request structure \par
}}
{\xe \v LDD_USB_TGetInterfaceRequest\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_USB_TGetInterfaceRequest}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef struct {\b LDD_USB_TGetInterfaceRequest_Struct}  {\b LDD_USB_TGetInterfaceRequest}}}
\par
{\bkmkstart AAAAAAACGJ}
{\bkmkend AAAAAAACGJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get interface request structure \par
}}
{\xe \v LDD_USB_TInterfaceFeatureRequest\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_USB_TInterfaceFeatureRequest}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef struct {\b LDD_USB_TInterfaceFeatureRequest_Struct}  {\b LDD_USB_TInterfaceFeatureRequest}}}
\par
{\bkmkstart AAAAAAACGK}
{\bkmkend AAAAAAACGK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Clear/Set interface request structure \par
}}
{\xe \v LDD_USB_TSDP\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_USB_TSDP}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef struct {\b LDD_USB_TSDP_Struct}  {\b LDD_USB_TSDP}}}
\par
{\bkmkstart AAAAAAACGL}
{\bkmkend AAAAAAACGL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Setup data packet structure, uint16_t items must be in little-endian format \par
}}
{\xe \v LDD_USB_TSetAddressRequest\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_USB_TSetAddressRequest}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef struct {\b LDD_USB_TSetAddressRequest_Struct}  {\b LDD_USB_TSetAddressRequest}}}
\par
{\bkmkstart AAAAAAACGM}
{\bkmkend AAAAAAACGM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set address request structure \par
}}
{\xe \v LDD_USB_TSetConfigRequest\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_USB_TSetConfigRequest}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef struct {\b LDD_USB_TSetConfigRequest_Struct}  {\b LDD_USB_TSetConfigRequest}}}
\par
{\bkmkstart AAAAAAACGN}
{\bkmkend AAAAAAACGN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set address request structure \par
}}
{\xe \v LDD_USB_TSetInterfaceRequest\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_USB_TSetInterfaceRequest}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef struct {\b LDD_USB_TSetInterfaceRequest_Struct}  {\b LDD_USB_TSetInterfaceRequest}}}
\par
{\bkmkstart AAAAAAACGO}
{\bkmkend AAAAAAACGO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set interface request structure \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Enumeration Type Documentation\par
\pard\plain 
{\xe \v LDD_ADC_TCompareMode\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_ADC_TCompareMode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b LDD_ADC_TCompareMode}}}
\par
{\bkmkstart AAAAAAACGP}
{\bkmkend AAAAAAACGP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Type specifying the ADC compare mode \par
}{{{\b Enumerator}}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\xe \v LDD_ADC_LESS_THAN\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_ADC_LESS_THAN}
{\b {\i LDD_ADC_LESS_THAN{\bkmkstart AAAAAAACGQ}
{\bkmkend AAAAAAACGQ}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Compare true if the result is less than the Low compare value \par
}{\xe \v LDD_ADC_GREATER_THAN_OR_EQUAL\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_ADC_GREATER_THAN_OR_EQUAL}
{\b {\i LDD_ADC_GREATER_THAN_OR_EQUAL{\bkmkstart AAAAAAACGR}
{\bkmkend AAAAAAACGR}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Compare true if the result is greater than or equal to Low compare value \par
}{\xe \v LDD_ADC_INSIDE_RANGE_INCLUSIVE\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_ADC_INSIDE_RANGE_INCLUSIVE}
{\b {\i LDD_ADC_INSIDE_RANGE_INCLUSIVE{\bkmkstart AAAAAAACGS}
{\bkmkend AAAAAAACGS}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Compare true if the result is greater than or equal to Low compare value and the result is less than or equal to High compare value \par
}{\xe \v LDD_ADC_INSIDE_RANGE_NOT_INCLUSIVE\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_ADC_INSIDE_RANGE_NOT_INCLUSIVE}
{\b {\i LDD_ADC_INSIDE_RANGE_NOT_INCLUSIVE{\bkmkstart AAAAAAACGT}
{\bkmkend AAAAAAACGT}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Compare true if the result is greater than Low compare value and the result is less than High compare value \par
}{\xe \v LDD_ADC_OUTSIDE_RANGE_INCLUSIVE\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_ADC_OUTSIDE_RANGE_INCLUSIVE}
{\b {\i LDD_ADC_OUTSIDE_RANGE_INCLUSIVE{\bkmkstart AAAAAAACGU}
{\bkmkend AAAAAAACGU}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Compare true if the result is less than or equal to Low compare value or the result is greater than or equal to High compare value \par
}{\xe \v LDD_ADC_OUTSIDE_RANGE_NOT_INCLUSIVE\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_ADC_OUTSIDE_RANGE_NOT_INCLUSIVE}
{\b {\i LDD_ADC_OUTSIDE_RANGE_NOT_INCLUSIVE{\bkmkstart AAAAAAACGV}
{\bkmkend AAAAAAACGV}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Compare true if the result is less than Low compare value or the result is greater than High compare value \par
}}}
{\xe \v LDD_AnalogComp_TComparatorInput\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_AnalogComp_TComparatorInput}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b LDD_AnalogComp_TComparatorInput}}}
\par
{\bkmkstart AAAAAAACGW}
{\bkmkend AAAAAAACGW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Type specifying comparator input number \par
}{{{\b Enumerator}}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\xe \v LDD_ANALOGCOMP_INPUT_0\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_ANALOGCOMP_INPUT_0}
{\b {\i LDD_ANALOGCOMP_INPUT_0{\bkmkstart AAAAAAACGX}
{\bkmkend AAAAAAACGX}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Analog input 0 selected \par
}{\xe \v LDD_ANALOGCOMP_INPUT_1\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_ANALOGCOMP_INPUT_1}
{\b {\i LDD_ANALOGCOMP_INPUT_1{\bkmkstart AAAAAAACGY}
{\bkmkend AAAAAAACGY}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Analog input 1 selected \par
}{\xe \v LDD_ANALOGCOMP_INPUT_2\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_ANALOGCOMP_INPUT_2}
{\b {\i LDD_ANALOGCOMP_INPUT_2{\bkmkstart AAAAAAACGZ}
{\bkmkend AAAAAAACGZ}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Analog input 2 selected \par
}{\xe \v LDD_ANALOGCOMP_INPUT_3\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_ANALOGCOMP_INPUT_3}
{\b {\i LDD_ANALOGCOMP_INPUT_3{\bkmkstart AAAAAAACHA}
{\bkmkend AAAAAAACHA}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Analog input 3 selected \par
}{\xe \v LDD_ANALOGCOMP_INPUT_4\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_ANALOGCOMP_INPUT_4}
{\b {\i LDD_ANALOGCOMP_INPUT_4{\bkmkstart AAAAAAACHB}
{\bkmkend AAAAAAACHB}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Analog input 4 selected \par
}{\xe \v LDD_ANALOGCOMP_INPUT_5\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_ANALOGCOMP_INPUT_5}
{\b {\i LDD_ANALOGCOMP_INPUT_5{\bkmkstart AAAAAAACHC}
{\bkmkend AAAAAAACHC}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Analog input 5 selected \par
}{\xe \v LDD_ANALOGCOMP_INPUT_6\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_ANALOGCOMP_INPUT_6}
{\b {\i LDD_ANALOGCOMP_INPUT_6{\bkmkstart AAAAAAACHD}
{\bkmkend AAAAAAACHD}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Analog input 6 selected \par
}{\xe \v LDD_ANALOGCOMP_INPUT_7\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_ANALOGCOMP_INPUT_7}
{\b {\i LDD_ANALOGCOMP_INPUT_7{\bkmkstart AAAAAAACHE}
{\bkmkend AAAAAAACHE}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Analog input 7 selected \par
}{\xe \v LDD_ANALOGCOMP_INPUT_DISABLED\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_ANALOGCOMP_INPUT_DISABLED}
{\b {\i LDD_ANALOGCOMP_INPUT_DISABLED{\bkmkstart AAAAAAACHF}
{\bkmkend AAAAAAACHF}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Analog input disabled \par
}}}
{\xe \v LDD_AnalogComp_TComparatorMode\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_AnalogComp_TComparatorMode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b LDD_AnalogComp_TComparatorMode}}}
\par
{\bkmkstart AAAAAAACHG}
{\bkmkend AAAAAAACHG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Type specifying requested comparator mode \par
}{{{\b Enumerator}}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\xe \v LDD_ANALOGCOMP_RISING_EDGE_MODE\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_ANALOGCOMP_RISING_EDGE_MODE}
{\b {\i LDD_ANALOGCOMP_RISING_EDGE_MODE{\bkmkstart AAAAAAACHH}
{\bkmkend AAAAAAACHH}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Rising edge detection \par
}{\xe \v LDD_ANALOGCOMP_FALLING_EDGE_MODE\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_ANALOGCOMP_FALLING_EDGE_MODE}
{\b {\i LDD_ANALOGCOMP_FALLING_EDGE_MODE{\bkmkstart AAAAAAACHI}
{\bkmkend AAAAAAACHI}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Falling edge detection \par
}{\xe \v LDD_ANALOGCOMP_BOTH_EDGES_MODE\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_ANALOGCOMP_BOTH_EDGES_MODE}
{\b {\i LDD_ANALOGCOMP_BOTH_EDGES_MODE{\bkmkstart AAAAAAACHJ}
{\bkmkend AAAAAAACHJ}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Both edges detection \par
}}}
{\xe \v LDD_AnalogComp_TCompareStatus\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_AnalogComp_TCompareStatus}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b LDD_AnalogComp_TCompareStatus}}}
\par
{\bkmkstart AAAAAAACHK}
{\bkmkend AAAAAAACHK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Type specifying current comparator output status \par
}{{{\b Enumerator}}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\xe \v LDD_ANALOGCOMP_NO_EDGE\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_ANALOGCOMP_NO_EDGE}
{\b {\i LDD_ANALOGCOMP_NO_EDGE{\bkmkstart AAAAAAACHL}
{\bkmkend AAAAAAACHL}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
No edge detected on output \par
}{\xe \v LDD_ANALOGCOMP_FALLING_EDGE\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_ANALOGCOMP_FALLING_EDGE}
{\b {\i LDD_ANALOGCOMP_FALLING_EDGE{\bkmkstart AAAAAAACHM}
{\bkmkend AAAAAAACHM}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Falling edge detected on output \par
}{\xe \v LDD_ANALOGCOMP_RISING_EDGE\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_ANALOGCOMP_RISING_EDGE}
{\b {\i LDD_ANALOGCOMP_RISING_EDGE{\bkmkstart AAAAAAACHN}
{\bkmkend AAAAAAACHN}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Rising edge detected on output \par
}{\xe \v LDD_ANALOGCOMP_BOTH_EDGES\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_ANALOGCOMP_BOTH_EDGES}
{\b {\i LDD_ANALOGCOMP_BOTH_EDGES{\bkmkstart AAAAAAACHO}
{\bkmkend AAAAAAACHO}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Both edges detected on output \par
}}}
{\xe \v LDD_CAN_TFrameType\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_CAN_TFrameType}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b LDD_CAN_TFrameType}}}
\par
{\bkmkstart AAAAAAACHP}
{\bkmkend AAAAAAACHP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Type specifying the CAN frame type. \par
}{{{\b Enumerator}}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\xe \v LDD_CAN_DATA_FRAME\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_CAN_DATA_FRAME}
{\b {\i LDD_CAN_DATA_FRAME{\bkmkstart AAAAAAACHQ}
{\bkmkend AAAAAAACHQ}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Data frame type received or transmitted \par
}{\xe \v LDD_CAN_REMOTE_FRAME\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_CAN_REMOTE_FRAME}
{\b {\i LDD_CAN_REMOTE_FRAME{\bkmkstart AAAAAAACHR}
{\bkmkend AAAAAAACHR}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Remote frame type \par
}{\xe \v LDD_CAN_RESPONSE_FRAME\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_CAN_RESPONSE_FRAME}
{\b {\i LDD_CAN_RESPONSE_FRAME{\bkmkstart AAAAAAACHS}
{\bkmkend AAAAAAACHS}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Response frame type - Tx buffer send data after receiving remote frame with the same ID \par
}}}
{\xe \v LDD_CAN_TRxBufferState\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_CAN_TRxBufferState}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b LDD_CAN_TRxBufferState}}}
\par
{\bkmkstart AAAAAAACHT}
{\bkmkend AAAAAAACHT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Type specifying the CAN frame type. \par
}}
{\xe \v LDD_CRC_TCRCStandard\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_CRC_TCRCStandard}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b LDD_CRC_TCRCStandard}}}
\par
{\bkmkstart AAAAAAACHU}
{\bkmkend AAAAAAACHU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
CRC standard \par
}{{{\b Enumerator}}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\xe \v LDD_CRC_16\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_CRC_16}
{\b {\i LDD_CRC_16{\bkmkstart AAAAAAACHV}
{\bkmkend AAAAAAACHV}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
CRC16 standard \par
}{\xe \v LDD_CRC_CCITT\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_CRC_CCITT}
{\b {\i LDD_CRC_CCITT{\bkmkstart AAAAAAACHW}
{\bkmkend AAAAAAACHW}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
CCITT standard \par
}{\xe \v LDD_CRC_MODBUS_16\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_CRC_MODBUS_16}
{\b {\i LDD_CRC_MODBUS_16{\bkmkstart AAAAAAACHX}
{\bkmkend AAAAAAACHX}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
MODBUS16 standard \par
}{\xe \v LDD_CRC_KERMIT\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_CRC_KERMIT}
{\b {\i LDD_CRC_KERMIT{\bkmkstart AAAAAAACHY}
{\bkmkend AAAAAAACHY}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
KERMIT standard \par
}{\xe \v LDD_CRC_DNP\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_CRC_DNP}
{\b {\i LDD_CRC_DNP{\bkmkstart AAAAAAACHZ}
{\bkmkend AAAAAAACHZ}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
DNP standard \par
}{\xe \v LDD_CRC_32\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_CRC_32}
{\b {\i LDD_CRC_32{\bkmkstart AAAAAAACIA}
{\bkmkend AAAAAAACIA}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
CRC32 standard \par
}{\xe \v LDD_CRC_USER\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_CRC_USER}
{\b {\i LDD_CRC_USER{\bkmkstart AAAAAAACIB}
{\bkmkend AAAAAAACIB}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
User defined type \par
}}}
{\xe \v LDD_CRC_TTransposeType\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_CRC_TTransposeType}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b LDD_CRC_TTransposeType}}}
\par
{\bkmkstart AAAAAAACIC}
{\bkmkend AAAAAAACIC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Transpose type \par
}{{{\b Enumerator}}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\xe \v LDD_CRC_NO_TRANSPOSE\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_CRC_NO_TRANSPOSE}
{\b {\i LDD_CRC_NO_TRANSPOSE{\bkmkstart AAAAAAACID}
{\bkmkend AAAAAAACID}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
No transposition \par
}{\xe \v LDD_CRC_BITS\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_CRC_BITS}
{\b {\i LDD_CRC_BITS{\bkmkstart AAAAAAACIE}
{\bkmkend AAAAAAACIE}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Bits are transposed \par
}{\xe \v LDD_CRC_BITS_AND_BYTES\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_CRC_BITS_AND_BYTES}
{\b {\i LDD_CRC_BITS_AND_BYTES{\bkmkstart AAAAAAACIF}
{\bkmkend AAAAAAACIF}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Bits and bytes are transposed \par
}{\xe \v LDD_CRC_BYTES\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_CRC_BYTES}
{\b {\i LDD_CRC_BYTES{\bkmkstart AAAAAAACIG}
{\bkmkend AAAAAAACIG}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Bytes are transposed \par
}}}
{\xe \v LDD_DAC_TBufferMode\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_DAC_TBufferMode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b LDD_DAC_TBufferMode}}}
\par
{\bkmkstart AAAAAAACIH}
{\bkmkend AAAAAAACIH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Type specifying the DAC buffer work mode \par
}{{{\b Enumerator}}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\xe \v LDD_DAC_BUFFER_NORMAL_MODE\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_DAC_BUFFER_NORMAL_MODE}
{\b {\i LDD_DAC_BUFFER_NORMAL_MODE{\bkmkstart AAAAAAACII}
{\bkmkend AAAAAAACII}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Normal (cyclic) mode \par
}{\xe \v LDD_DAC_BUFFER_SWING_MODE\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_DAC_BUFFER_SWING_MODE}
{\b {\i LDD_DAC_BUFFER_SWING_MODE{\bkmkstart AAAAAAACIJ}
{\bkmkend AAAAAAACIJ}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Swing mode \par
}{\xe \v LDD_DAC_BUFFER_SCAN_MODE\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_DAC_BUFFER_SCAN_MODE}
{\b {\i LDD_DAC_BUFFER_SCAN_MODE{\bkmkstart AAAAAAACIK}
{\bkmkend AAAAAAACIK}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
One-time scan mode \par
}}}
{\xe \v LDD_DAC_TBufferWatermark\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_DAC_TBufferWatermark}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b LDD_DAC_TBufferWatermark}}}
\par
{\bkmkstart AAAAAAACIL}
{\bkmkend AAAAAAACIL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Type specifying the DAC buffer watermark levels \par
}}
{\xe \v LDD_DMA_TChannelLinkingMode\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_DMA_TChannelLinkingMode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b LDD_DMA_TChannelLinkingMode}}}
\par
{\bkmkstart AAAAAAACIM}
{\bkmkend AAAAAAACIM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Type specifying the DMA channel linking mode. \par
}{{{\b Enumerator}}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\xe \v LDD_DMA_LINKING_DISABLED\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_DMA_LINKING_DISABLED}
{\b {\i LDD_DMA_LINKING_DISABLED{\bkmkstart AAAAAAACIN}
{\bkmkend AAAAAAACIN}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
No linking. \par
}{\xe \v LDD_DMA_CYCLE_STEAL_AND_TRANSFER_COMPLETE_LINKING\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_DMA_CYCLE_STEAL_AND_TRANSFER_COMPLETE_LINKING}
{\b {\i LDD_DMA_CYCLE_STEAL_AND_TRANSFER_COMPLETE_LINKING{\bkmkstart AAAAAAACIO}
{\bkmkend AAAAAAACIO}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Channel linked after each particular read-write operation and after transfer byte count reaches zero. \par
}{\xe \v LDD_DMA_CYCLE_STEAL_LINKING\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_DMA_CYCLE_STEAL_LINKING}
{\b {\i LDD_DMA_CYCLE_STEAL_LINKING{\bkmkstart AAAAAAACIP}
{\bkmkend AAAAAAACIP}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Channel linked after each particular read-write operation. \par
}{\xe \v LDD_DMA_TRANSFER_COMPLETE_LINKING\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_DMA_TRANSFER_COMPLETE_LINKING}
{\b {\i LDD_DMA_TRANSFER_COMPLETE_LINKING{\bkmkstart AAAAAAACIQ}
{\bkmkend AAAAAAACIQ}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Channel linked after transfer byte count reaches zero. \par
}}}
{\xe \v LDD_DMA_TChannelStatus\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_DMA_TChannelStatus}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b LDD_DMA_TChannelStatus}}}
\par
{\bkmkstart AAAAAAACIR}
{\bkmkend AAAAAAACIR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Type specifying a DMA channel status. \par
}{{{\b Enumerator}}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\xe \v LDD_DMA_IDLE\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_DMA_IDLE}
{\b {\i LDD_DMA_IDLE{\bkmkstart AAAAAAACIS}
{\bkmkend AAAAAAACIS}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Channel is idle, no request is serviced nor transfer completed. \par
}{\xe \v LDD_DMA_BUSY\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_DMA_BUSY}
{\b {\i LDD_DMA_BUSY{\bkmkstart AAAAAAACIT}
{\bkmkend AAAAAAACIT}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Channel is active, request is serviced. \par
}{\xe \v LDD_DMA_DONE\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_DMA_DONE}
{\b {\i LDD_DMA_DONE{\bkmkstart AAAAAAACIU}
{\bkmkend AAAAAAACIU}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Transfer is completed, waiting to start of next transfer. \par
}{\xe \v LDD_DMA_ERROR\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_DMA_ERROR}
{\b {\i LDD_DMA_ERROR{\bkmkstart AAAAAAACIV}
{\bkmkend AAAAAAACIV}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Error detected. \par
}}}
{\xe \v LDD_DMA_TTransferMode\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_DMA_TTransferMode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b LDD_DMA_TTransferMode}}}
\par
{\bkmkstart AAAAAAACIW}
{\bkmkend AAAAAAACIW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Type specifying the DMA transfer mode. \par
}{{{\b Enumerator}}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\xe \v LDD_DMA_CYCLE_STEAL_TRANSFERS\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_DMA_CYCLE_STEAL_TRANSFERS}
{\b {\i LDD_DMA_CYCLE_STEAL_TRANSFERS{\bkmkstart AAAAAAACIX}
{\bkmkend AAAAAAACIX}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Only single read/write transfer is done per one service request. \par
}{\xe \v LDD_DMA_SINGLE_TRANSFER\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_DMA_SINGLE_TRANSFER}
{\b {\i LDD_DMA_SINGLE_TRANSFER{\bkmkstart AAAAAAACIY}
{\bkmkend AAAAAAACIY}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Transfer of all bytes defined by Data size is done after single service request. \par
}{\xe \v LDD_DMA_NESTED_TRANSFERS\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_DMA_NESTED_TRANSFERS}
{\b {\i LDD_DMA_NESTED_TRANSFERS{\bkmkstart AAAAAAACIZ}
{\bkmkend AAAAAAACIZ}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sequence of transfers triggered by service requests. One request transfers number of bytes defined by Byte count value. \par
}}}
{\xe \v LDD_DMA_TTransferState\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_DMA_TTransferState}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b LDD_DMA_TTransferState}}}
\par
{\bkmkstart AAAAAAACJA}
{\bkmkend AAAAAAACJA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Type specifying a DMA transfer state. \par
}{{{\b Enumerator}}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\xe \v LDD_DMA_TRANSFER_IDLE\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_DMA_TRANSFER_IDLE}
{\b {\i LDD_DMA_TRANSFER_IDLE{\bkmkstart AAAAAAACJB}
{\bkmkend AAAAAAACJB}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Channel is idle, no request is serviced nor transfer completed. \par
}{\xe \v LDD_DMA_TRANSFER_BUSY\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_DMA_TRANSFER_BUSY}
{\b {\i LDD_DMA_TRANSFER_BUSY{\bkmkstart AAAAAAACJC}
{\bkmkend AAAAAAACJC}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Channel is active, request is serviced. \par
}{\xe \v LDD_DMA_TRANSFER_ERROR\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_DMA_TRANSFER_ERROR}
{\b {\i LDD_DMA_TRANSFER_ERROR{\bkmkstart AAAAAAACJD}
{\bkmkend AAAAAAACJD}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Error detected. \par
}}}
{\xe \v LDD_DMA_TTriggerType\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_DMA_TTriggerType}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b LDD_DMA_TTriggerType}}}
\par
{\bkmkstart AAAAAAACJE}
{\bkmkend AAAAAAACJE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Type specifying the DMA trigger source type. \par
}{{{\b Enumerator}}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\xe \v LDD_DMA_SW_TRIGGER\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_DMA_SW_TRIGGER}
{\b {\i LDD_DMA_SW_TRIGGER{\bkmkstart AAAAAAACJF}
{\bkmkend AAAAAAACJF}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Explicit software trigger. \par
}{\xe \v LDD_DMA_HW_TRIGGER\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_DMA_HW_TRIGGER}
{\b {\i LDD_DMA_HW_TRIGGER{\bkmkstart AAAAAAACJG}
{\bkmkend AAAAAAACJG}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Peripheral device trigger. \par
}{\xe \v LDD_DMA_ALWAYS_ENABLED_TRIGGER\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_DMA_ALWAYS_ENABLED_TRIGGER}
{\b {\i LDD_DMA_ALWAYS_ENABLED_TRIGGER{\bkmkstart AAAAAAACJH}
{\bkmkend AAAAAAACJH}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Always enabled trigger. \par
}}}
{\xe \v LDD_ETH_TDuplexMode\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_ETH_TDuplexMode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b LDD_ETH_TDuplexMode}}}
\par
{\bkmkstart AAAAAAACJI}
{\bkmkend AAAAAAACJI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Ethernet duplex mode \par
}{{{\b Enumerator}}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\xe \v LDD_ETH_FULL_DUPLEX\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_ETH_FULL_DUPLEX}
{\b {\i LDD_ETH_FULL_DUPLEX{\bkmkstart AAAAAAACJJ}
{\bkmkend AAAAAAACJJ}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Full duplex mode \par
}{\xe \v LDD_ETH_HALF_DUPLEX\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_ETH_HALF_DUPLEX}
{\b {\i LDD_ETH_HALF_DUPLEX{\bkmkstart AAAAAAACJK}
{\bkmkend AAAAAAACJK}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Half duplex mode \par
}}}
{\xe \v LDD_ETH_TFilterMode\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_ETH_TFilterMode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b LDD_ETH_TFilterMode}}}
\par
{\bkmkstart AAAAAAACJL}
{\bkmkend AAAAAAACJL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Ethernet address filter mode options \par
}{{{\b Enumerator}}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\xe \v LDD_ETH_PROMISC\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_ETH_PROMISC}
{\b {\i LDD_ETH_PROMISC{\bkmkstart AAAAAAACJM}
{\bkmkend AAAAAAACJM}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Promiscuous mode \par
}{\xe \v LDD_ETH_REJECT_BC\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_ETH_REJECT_BC}
{\b {\i LDD_ETH_REJECT_BC{\bkmkstart AAAAAAACJN}
{\bkmkend AAAAAAACJN}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Reject broadcast frames \par
}{\xe \v LDD_ETH_ACCEPT_BC\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_ETH_ACCEPT_BC}
{\b {\i LDD_ETH_ACCEPT_BC{\bkmkstart AAAAAAACJO}
{\bkmkend AAAAAAACJO}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Accept broadcast frames \par
}}}
{\xe \v LDD_ETH_TSleepMode\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_ETH_TSleepMode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b LDD_ETH_TSleepMode}}}
\par
{\bkmkstart AAAAAAACJP}
{\bkmkend AAAAAAACJP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Ethernet sleep mode options \par
}{{{\b Enumerator}}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\xe \v LDD_ETH_ENABLED\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_ETH_ENABLED}
{\b {\i LDD_ETH_ENABLED{\bkmkstart AAAAAAACJQ}
{\bkmkend AAAAAAACJQ}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sleep mode enabled \par
}{\xe \v LDD_ETH_ENABLED_WITH_WAKEUP\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_ETH_ENABLED_WITH_WAKEUP}
{\b {\i LDD_ETH_ENABLED_WITH_WAKEUP{\bkmkstart AAAAAAACJR}
{\bkmkend AAAAAAACJR}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sleep mode enabled, waiting for wake-up \par
}{\xe \v LDD_ETH_DISABLED\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_ETH_DISABLED}
{\b {\i LDD_ETH_DISABLED{\bkmkstart AAAAAAACJS}
{\bkmkend AAAAAAACJS}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sleep mode disabled \par
}}}
{\xe \v LDD_FLASH_TCommand\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_FLASH_TCommand}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b LDD_FLASH_TCommand}}}
\par
{\bkmkstart AAAAAAACJT}
{\bkmkend AAAAAAACJT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Type specifying HW commands for a flash device \par
}{{{\b Enumerator}}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\xe \v LDD_FLASH_READ_1S_BLOCK\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_FLASH_READ_1S_BLOCK}
{\b {\i LDD_FLASH_READ_1S_BLOCK{\bkmkstart AAAAAAACJU}
{\bkmkend AAAAAAACJU}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Checks if an entire program flash or data flash logical block has been erased to the specified margin level \par
}{\xe \v LDD_FLASH_READ_1S_SECTION\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_FLASH_READ_1S_SECTION}
{\b {\i LDD_FLASH_READ_1S_SECTION{\bkmkstart AAAAAAACJV}
{\bkmkend AAAAAAACJV}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Checks if a section of program flash or data flash memory is erased to the specified read margin level \par
}{\xe \v LDD_FLASH_WRITE_BYTE\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_FLASH_WRITE_BYTE}
{\b {\i LDD_FLASH_WRITE_BYTE{\bkmkstart AAAAAAACJW}
{\bkmkend AAAAAAACJW}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Program byte \par
}{\xe \v LDD_FLASH_WRITE_WORD\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_FLASH_WRITE_WORD}
{\b {\i LDD_FLASH_WRITE_WORD{\bkmkstart AAAAAAACJX}
{\bkmkend AAAAAAACJX}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Program word \par
}{\xe \v LDD_FLASH_WRITE_LONG_WORD\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_FLASH_WRITE_LONG_WORD}
{\b {\i LDD_FLASH_WRITE_LONG_WORD{\bkmkstart AAAAAAACJY}
{\bkmkend AAAAAAACJY}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Program long word \par
}{\xe \v LDD_FLASH_WRITE_PHRASE\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_FLASH_WRITE_PHRASE}
{\b {\i LDD_FLASH_WRITE_PHRASE{\bkmkstart AAAAAAACJZ}
{\bkmkend AAAAAAACJZ}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Program phrase \par
}{\xe \v LDD_FLASH_ERASE_FLASH_BLOCK\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_FLASH_ERASE_FLASH_BLOCK}
{\b {\i LDD_FLASH_ERASE_FLASH_BLOCK{\bkmkstart AAAAAAACKA}
{\bkmkend AAAAAAACKA}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Erase flash memory block \par
}{\xe \v LDD_FLASH_ERASE_SECTOR\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_FLASH_ERASE_SECTOR}
{\b {\i LDD_FLASH_ERASE_SECTOR{\bkmkstart AAAAAAACKB}
{\bkmkend AAAAAAACKB}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Erase sector \par
}{\xe \v LDD_FLASH_ERASE_ALL_FLASH_BLOCKS\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_FLASH_ERASE_ALL_FLASH_BLOCKS}
{\b {\i LDD_FLASH_ERASE_ALL_FLASH_BLOCKS{\bkmkstart AAAAAAACKC}
{\bkmkend AAAAAAACKC}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Erase all flash memory blocks \par
}}}
{\xe \v LDD_FLASH_TOperationStatus\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_FLASH_TOperationStatus}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b LDD_FLASH_TOperationStatus}}}
\par
{\bkmkstart AAAAAAACKD}
{\bkmkend AAAAAAACKD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Type specifying possible FLASH component operation states \par
}{{{\b Enumerator}}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\xe \v LDD_FLASH_FAILED\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_FLASH_FAILED}
{\b {\i LDD_FLASH_FAILED{\bkmkstart AAAAAAACKE}
{\bkmkend AAAAAAACKE}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Operation has failed \par
}{\xe \v LDD_FLASH_STOP\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_FLASH_STOP}
{\b {\i LDD_FLASH_STOP{\bkmkstart AAAAAAACKF}
{\bkmkend AAAAAAACKF}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The operation has been stopped \par
}{\xe \v LDD_FLASH_IDLE\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_FLASH_IDLE}
{\b {\i LDD_FLASH_IDLE{\bkmkstart AAAAAAACKG}
{\bkmkend AAAAAAACKG}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
No operation in progress \par
}{\xe \v LDD_FLASH_STOP_REQ\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_FLASH_STOP_REQ}
{\b {\i LDD_FLASH_STOP_REQ{\bkmkstart AAAAAAACKH}
{\bkmkend AAAAAAACKH}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The operation is in the STOP request mode \par
}{\xe \v LDD_FLASH_START\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_FLASH_START}
{\b {\i LDD_FLASH_START{\bkmkstart AAAAAAACKI}
{\bkmkend AAAAAAACKI}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Start of the operation, no operation steps have been done yet \par
}{\xe \v LDD_FLASH_RUNNING\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_FLASH_RUNNING}
{\b {\i LDD_FLASH_RUNNING{\bkmkstart AAAAAAACKJ}
{\bkmkend AAAAAAACKJ}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Operation is in progress \par
}}}
{\xe \v LDD_FLASH_TOperationType\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_FLASH_TOperationType}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b LDD_FLASH_TOperationType}}}
\par
{\bkmkstart AAAAAAACKK}
{\bkmkend AAAAAAACKK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Type specifying possible FLASH component operation types \par
}{{{\b Enumerator}}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\xe \v LDD_FLASH_NO_OPERATION\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_FLASH_NO_OPERATION}
{\b {\i LDD_FLASH_NO_OPERATION{\bkmkstart AAAAAAACKL}
{\bkmkend AAAAAAACKL}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
No operation - initial state \par
}{\xe \v LDD_FLASH_READ\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_FLASH_READ}
{\b {\i LDD_FLASH_READ{\bkmkstart AAAAAAACKM}
{\bkmkend AAAAAAACKM}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Read operation \par
}{\xe \v LDD_FLASH_WRITE\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_FLASH_WRITE}
{\b {\i LDD_FLASH_WRITE{\bkmkstart AAAAAAACKN}
{\bkmkend AAAAAAACKN}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Write operation \par
}{\xe \v LDD_FLASH_ERASE\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_FLASH_ERASE}
{\b {\i LDD_FLASH_ERASE{\bkmkstart AAAAAAACKO}
{\bkmkend AAAAAAACKO}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Erase operation \par
}{\xe \v LDD_FLASH_ERASE_BLOCK\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_FLASH_ERASE_BLOCK}
{\b {\i LDD_FLASH_ERASE_BLOCK{\bkmkstart AAAAAAACKP}
{\bkmkend AAAAAAACKP}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Erase block operation \par
}{\xe \v LDD_FLASH_VERIFY_ERASED_BLOCK\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_FLASH_VERIFY_ERASED_BLOCK}
{\b {\i LDD_FLASH_VERIFY_ERASED_BLOCK{\bkmkstart AAAAAAACKQ}
{\bkmkend AAAAAAACKQ}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Verify erased block operation \par
}}}
{\xe \v LDD_GPIO_TEventCondition\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_GPIO_TEventCondition}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b LDD_GPIO_TEventCondition}}}
\par
{\bkmkstart AAAAAAACKR}
{\bkmkend AAAAAAACKR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Defines condition when event is invoked. \par
}{{{\b Enumerator}}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\xe \v LDD_GPIO_DISABLED\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_GPIO_DISABLED}
{\b {\i LDD_GPIO_DISABLED{\bkmkstart AAAAAAACKS}
{\bkmkend AAAAAAACKS}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Event doesn't invoke \par
}{\xe \v LDD_GPIO_LOW\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_GPIO_LOW}
{\b {\i LDD_GPIO_LOW{\bkmkstart AAAAAAACKT}
{\bkmkend AAAAAAACKT}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Event when logic zero \par
}{\xe \v LDD_GPIO_HIGH\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_GPIO_HIGH}
{\b {\i LDD_GPIO_HIGH{\bkmkstart AAAAAAACKU}
{\bkmkend AAAAAAACKU}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Event when logic one \par
}{\xe \v LDD_GPIO_RISING\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_GPIO_RISING}
{\b {\i LDD_GPIO_RISING{\bkmkstart AAAAAAACKV}
{\bkmkend AAAAAAACKV}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Event on rising edge \par
}{\xe \v LDD_GPIO_FALLING\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_GPIO_FALLING}
{\b {\i LDD_GPIO_FALLING{\bkmkstart AAAAAAACKW}
{\bkmkend AAAAAAACKW}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Event on falling edge \par
}{\xe \v LDD_GPIO_BOTH\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_GPIO_BOTH}
{\b {\i LDD_GPIO_BOTH{\bkmkstart AAAAAAACKX}
{\bkmkend AAAAAAACKX}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Event on rising and falling edge \par
}}}
{\xe \v LDD_I2C_TAckType\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_I2C_TAckType}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b LDD_I2C_TAckType}}}
\par
{\bkmkstart AAAAAAACKY}
{\bkmkend AAAAAAACKY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Type specifying the I2C byte acknowledge response. \par
}{{{\b Enumerator}}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\xe \v LDD_I2C_ACK_BYTE\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_I2C_ACK_BYTE}
{\b {\i LDD_I2C_ACK_BYTE{\bkmkstart AAAAAAACKZ}
{\bkmkend AAAAAAACKZ}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Byte acknowledged \par
}{\xe \v LDD_I2C_NACK_BYTE\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_I2C_NACK_BYTE}
{\b {\i LDD_I2C_NACK_BYTE{\bkmkstart AAAAAAACLA}
{\bkmkend AAAAAAACLA}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Byte not acknowledged \par
}}}
{\xe \v LDD_I2C_TAddrType\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_I2C_TAddrType}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b LDD_I2C_TAddrType}}}
\par
{\bkmkstart AAAAAAACLB}
{\bkmkend AAAAAAACLB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Type specifying the address type \par
}{{{\b Enumerator}}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\xe \v LDD_I2C_ADDRTYPE_7BITS\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_I2C_ADDRTYPE_7BITS}
{\b {\i LDD_I2C_ADDRTYPE_7BITS{\bkmkstart AAAAAAACLC}
{\bkmkend AAAAAAACLC}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
7 bits address \par
}{\xe \v LDD_I2C_ADDRTYPE_10BITS\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_I2C_ADDRTYPE_10BITS}
{\b {\i LDD_I2C_ADDRTYPE_10BITS{\bkmkstart AAAAAAACLD}
{\bkmkend AAAAAAACLD}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
10 bits address \par
}{\xe \v LDD_I2C_ADDRTYPE_GENERAL_CALL\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_I2C_ADDRTYPE_GENERAL_CALL}
{\b {\i LDD_I2C_ADDRTYPE_GENERAL_CALL{\bkmkstart AAAAAAACLE}
{\bkmkend AAAAAAACLE}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
General call address \par
}}}
{\xe \v LDD_I2C_TBusState\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_I2C_TBusState}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b LDD_I2C_TBusState}}}
\par
{\bkmkstart AAAAAAACLF}
{\bkmkend AAAAAAACLF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Type specifying the I2C state of BUS. \par
}{{{\b Enumerator}}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\xe \v LDD_I2C_BUSY\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_I2C_BUSY}
{\b {\i LDD_I2C_BUSY{\bkmkstart AAAAAAACLG}
{\bkmkend AAAAAAACLG}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The bus is busy \par
}{\xe \v LDD_I2C_IDLE\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_I2C_IDLE}
{\b {\i LDD_I2C_IDLE{\bkmkstart AAAAAAACLH}
{\bkmkend AAAAAAACLH}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The bus is idle \par
}}}
{\xe \v LDD_I2C_TSendStop\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_I2C_TSendStop}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b LDD_I2C_TSendStop}}}
\par
{\bkmkstart AAAAAAACLI}
{\bkmkend AAAAAAACLI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Type specifying generate the stop condition \par
}{{{\b Enumerator}}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\xe \v LDD_I2C_NO_SEND_STOP\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_I2C_NO_SEND_STOP}
{\b {\i LDD_I2C_NO_SEND_STOP{\bkmkstart AAAAAAACLJ}
{\bkmkend AAAAAAACLJ}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Do not send stop signal \par
}{\xe \v LDD_I2C_SEND_STOP\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_I2C_SEND_STOP}
{\b {\i LDD_I2C_SEND_STOP{\bkmkstart AAAAAAACLK}
{\bkmkend AAAAAAACLK}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Send stop signal \par
}}}
{\xe \v LDD_LCDC_CursorOperation\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_LCDC_CursorOperation}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b LDD_LCDC_CursorOperation}}}
\par
{\bkmkstart AAAAAAACLL}
{\bkmkend AAAAAAACLL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Cursor type \par
}{{{\b Enumerator}}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\xe \v LDD_LCDC_DISABLED\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_LCDC_DISABLED}
{\b {\i LDD_LCDC_DISABLED{\bkmkstart AAAAAAACLM}
{\bkmkend AAAAAAACLM}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Cursor disabled \par
}{\xe \v LDD_LCDC_ALWAYS_1\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_LCDC_ALWAYS_1}
{\b {\i LDD_LCDC_ALWAYS_1{\bkmkstart AAAAAAACLN}
{\bkmkend AAAAAAACLN}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Cursor 1''s, monochrome display only. \par
}{\xe \v LDD_LCDC_ALWAYS_0\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_LCDC_ALWAYS_0}
{\b {\i LDD_LCDC_ALWAYS_0{\bkmkstart AAAAAAACLO}
{\bkmkend AAAAAAACLO}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Cursor 0''s, monochrome display only. \par
}{\xe \v LDD_LCDC_COLOR\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_LCDC_COLOR}
{\b {\i LDD_LCDC_COLOR{\bkmkstart AAAAAAACLP}
{\bkmkend AAAAAAACLP}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Defined cursor color, color display only. \par
}{\xe \v LDD_LCDC_INVERTED\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_LCDC_INVERTED}
{\b {\i LDD_LCDC_INVERTED{\bkmkstart AAAAAAACLQ}
{\bkmkend AAAAAAACLQ}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Inverted background, monochrome display only. \par
}{\xe \v LDD_LCDC_INVERTED_COLOR\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_LCDC_INVERTED_COLOR}
{\b {\i LDD_LCDC_INVERTED_COLOR{\bkmkstart AAAAAAACLR}
{\bkmkend AAAAAAACLR}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Inverted cursor color, color display only. \par
}{\xe \v LDD_LCDC_AND\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_LCDC_AND}
{\b {\i LDD_LCDC_AND{\bkmkstart AAAAAAACLS}
{\bkmkend AAAAAAACLS}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Cursor color AND backgroun, color display only. \par
}{\xe \v LDD_LCDC_OR\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_LCDC_OR}
{\b {\i LDD_LCDC_OR{\bkmkstart AAAAAAACLT}
{\bkmkend AAAAAAACLT}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Cursor color OR backgroun, color display only. \par
}}}
{\xe \v LDD_LCDC_TPlaneID\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_LCDC_TPlaneID}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b LDD_LCDC_TPlaneID}}}
\par
{\bkmkstart AAAAAAACLU}
{\bkmkend AAAAAAACLU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Plane identification \par
}{{{\b Enumerator}}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\xe \v LDD_LCDC_PLANE_COMMON\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_LCDC_PLANE_COMMON}
{\b {\i LDD_LCDC_PLANE_COMMON{\bkmkstart AAAAAAACLV}
{\bkmkend AAAAAAACLV}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Common for all planes \par
}{\xe \v LDD_LCDC_PLANE_0\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_LCDC_PLANE_0}
{\b {\i LDD_LCDC_PLANE_0{\bkmkstart AAAAAAACLW}
{\bkmkend AAAAAAACLW}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Plane (layer) 0 \par
}{\xe \v LDD_LCDC_PLANE_1\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_LCDC_PLANE_1}
{\b {\i LDD_LCDC_PLANE_1{\bkmkstart AAAAAAACLX}
{\bkmkend AAAAAAACLX}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Plane (layer) 1 \par
}}}
{\xe \v LDD_NFC_TeCmd\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_NFC_TeCmd}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b LDD_NFC_TeCmd}}}
\par
{\bkmkstart AAAAAAACLY}
{\bkmkend AAAAAAACLY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
NCF command codes \par
}}
{\xe \v LDD_RNG_TSleepMode\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_RNG_TSleepMode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b LDD_RNG_TSleepMode}}}
\par
{\bkmkstart AAAAAAACLZ}
{\bkmkend AAAAAAACLZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
RNGA sleep mode \par
}{{{\b Enumerator}}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\xe \v LDD_RNG_SLEEP_ENABLED\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_RNG_SLEEP_ENABLED}
{\b {\i LDD_RNG_SLEEP_ENABLED{\bkmkstart AAAAAAACMA}
{\bkmkend AAAAAAACMA}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
RNGA is in sleep mode \par
}{\xe \v LDD_RNG_SLEEP_DISABLED\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_RNG_SLEEP_DISABLED}
{\b {\i LDD_RNG_SLEEP_DISABLED{\bkmkstart AAAAAAACMB}
{\bkmkend AAAAAAACMB}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
RNGA is running \par
}}}
{\xe \v LDD_SDHC_TCardType\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_SDHC_TCardType}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b LDD_SDHC_TCardType}}}
\par
{\bkmkstart AAAAAAACMC}
{\bkmkend AAAAAAACMC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Card types \par
}{{{\b Enumerator}}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\xe \v LDD_SDHC_SD\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_SDHC_SD}
{\b {\i LDD_SDHC_SD{\bkmkstart AAAAAAACMD}
{\bkmkend AAAAAAACMD}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Secure Digital memory card \par
}{\xe \v LDD_SDHC_SDIO\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_SDHC_SDIO}
{\b {\i LDD_SDHC_SDIO{\bkmkstart AAAAAAACME}
{\bkmkend AAAAAAACME}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Secure Digital IO card \par
}{\xe \v LDD_SDHC_SDCOMBO\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_SDHC_SDCOMBO}
{\b {\i LDD_SDHC_SDCOMBO{\bkmkstart AAAAAAACMF}
{\bkmkend AAAAAAACMF}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Combined Secure Digital memory and IO card \par
}{\xe \v LDD_SDHC_MMC\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_SDHC_MMC}
{\b {\i LDD_SDHC_MMC{\bkmkstart AAAAAAACMG}
{\bkmkend AAAAAAACMG}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
MultiMediaCard memory card \par
}{\xe \v LDD_SDHC_CE_ATA\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_SDHC_CE_ATA}
{\b {\i LDD_SDHC_CE_ATA{\bkmkstart AAAAAAACMH}
{\bkmkend AAAAAAACMH}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Consumer Electronics ATA card \par
}}}
{\xe \v LDD_SDHC_TError\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_SDHC_TError}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b LDD_SDHC_TError}}}
\par
{\bkmkstart AAAAAAACMI}
{\bkmkend AAAAAAACMI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Operation completion error codes \par
}{{{\b Enumerator}}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\xe \v LDD_SDHC_ERR_OK\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_SDHC_ERR_OK}
{\b {\i LDD_SDHC_ERR_OK{\bkmkstart AAAAAAACMJ}
{\bkmkend AAAAAAACMJ}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
No error \par
}{\xe \v LDD_SDHC_ERR_DMA\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_SDHC_ERR_DMA}
{\b {\i LDD_SDHC_ERR_DMA{\bkmkstart AAAAAAACMK}
{\bkmkend AAAAAAACMK}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
DMA or block size error \par
}{\xe \v LDD_SDHC_ERR_NOT_SUPPORTED\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_SDHC_ERR_NOT_SUPPORTED}
{\b {\i LDD_SDHC_ERR_NOT_SUPPORTED{\bkmkstart AAAAAAACML}
{\bkmkend AAAAAAACML}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Initiated operation is not supported by the card (supported operations are contained in the card information structure) \par
}{\xe \v LDD_SDHC_ERR_TIMEOUT\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_SDHC_ERR_TIMEOUT}
{\b {\i LDD_SDHC_ERR_TIMEOUT{\bkmkstart AAAAAAACMM}
{\bkmkend AAAAAAACMM}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Command or data timeout \par
}{\xe \v LDD_SDHC_ERR_COMMAND_CRC\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_SDHC_ERR_COMMAND_CRC}
{\b {\i LDD_SDHC_ERR_COMMAND_CRC{\bkmkstart AAAAAAACMN}
{\bkmkend AAAAAAACMN}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Command CRC check failed \par
}{\xe \v LDD_SDHC_ERR_DATA_CRC\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_SDHC_ERR_DATA_CRC}
{\b {\i LDD_SDHC_ERR_DATA_CRC{\bkmkstart AAAAAAACMO}
{\bkmkend AAAAAAACMO}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Data CRC check failed \par
}{\xe \v LDD_SDHC_ERR_ADDRESS_OUT_OF_RANGE\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_SDHC_ERR_ADDRESS_OUT_OF_RANGE}
{\b {\i LDD_SDHC_ERR_ADDRESS_OUT_OF_RANGE{\bkmkstart AAAAAAACMP}
{\bkmkend AAAAAAACMP}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The card address is beyond the card capacity \par
}{\xe \v LDD_SDHC_ERR_ADDRESS_MISALIGN\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_SDHC_ERR_ADDRESS_MISALIGN}
{\b {\i LDD_SDHC_ERR_ADDRESS_MISALIGN{\bkmkstart AAAAAAACMQ}
{\bkmkend AAAAAAACMQ}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The card address does not align with physical blocks of the card \par
}{\xe \v LDD_SDHC_ERR_BLOCK_LEN_ERROR\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_SDHC_ERR_BLOCK_LEN_ERROR}
{\b {\i LDD_SDHC_ERR_BLOCK_LEN_ERROR{\bkmkstart AAAAAAACMR}
{\bkmkend AAAAAAACMR}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Block length exceeds the maximum value for the card \par
}{\xe \v LDD_SDHC_ERR_WP_VIOLATION\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_SDHC_ERR_WP_VIOLATION}
{\b {\i LDD_SDHC_ERR_WP_VIOLATION{\bkmkstart AAAAAAACMS}
{\bkmkend AAAAAAACMS}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Attempt to program a write protected block \par
}{\xe \v LDD_SDHC_ERR_CARD_IS_LOCKED\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_SDHC_ERR_CARD_IS_LOCKED}
{\b {\i LDD_SDHC_ERR_CARD_IS_LOCKED{\bkmkstart AAAAAAACMT}
{\bkmkend AAAAAAACMT}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The card is locked by the host \par
}{\xe \v LDD_SDHC_ERR_WP_ERASE_SKIP\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_SDHC_ERR_WP_ERASE_SKIP}
{\b {\i LDD_SDHC_ERR_WP_ERASE_SKIP{\bkmkstart AAAAAAACMU}
{\bkmkend AAAAAAACMU}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Only partial address space was erased due to existing write protected blocks \par
}{\xe \v LDD_SDHC_ERR_INTERNAL_FAILURE\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_SDHC_ERR_INTERNAL_FAILURE}
{\b {\i LDD_SDHC_ERR_INTERNAL_FAILURE{\bkmkstart AAAAAAACMV}
{\bkmkend AAAAAAACMV}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Internal component error \par
}{\xe \v LDD_SDHC_ERR_CARD_FAILURE\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_SDHC_ERR_CARD_FAILURE}
{\b {\i LDD_SDHC_ERR_CARD_FAILURE{\bkmkstart AAAAAAACMW}
{\bkmkend AAAAAAACMW}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The card was unable to complete the operation \par
}}}
{\xe \v LDD_SDHC_TStatus\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_SDHC_TStatus}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b LDD_SDHC_TStatus}}}
\par
{\bkmkstart AAAAAAACMX}
{\bkmkend AAAAAAACMX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Component states \par
}{{{\b Enumerator}}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\xe \v LDD_SDHC_DISABLED\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_SDHC_DISABLED}
{\b {\i LDD_SDHC_DISABLED{\bkmkstart AAAAAAACMY}
{\bkmkend AAAAAAACMY}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Disabled \par
}{\xe \v LDD_SDHC_RESET\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_SDHC_RESET}
{\b {\i LDD_SDHC_RESET{\bkmkstart AAAAAAACMZ}
{\bkmkend AAAAAAACMZ}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Resetting card \par
}{\xe \v LDD_SDHC_IDLE\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_SDHC_IDLE}
{\b {\i LDD_SDHC_IDLE{\bkmkstart AAAAAAACNA}
{\bkmkend AAAAAAACNA}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Idling \par
}{\xe \v LDD_SDHC_VOLTAGE_VALIDATION\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_SDHC_VOLTAGE_VALIDATION}
{\b {\i LDD_SDHC_VOLTAGE_VALIDATION{\bkmkstart AAAAAAACNB}
{\bkmkend AAAAAAACNB}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Validating voltage \par
}{\xe \v LDD_SDHC_CARD_REGISTRATION\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_SDHC_CARD_REGISTRATION}
{\b {\i LDD_SDHC_CARD_REGISTRATION{\bkmkstart AAAAAAACNC}
{\bkmkend AAAAAAACNC}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Registrating card \par
}{\xe \v LDD_SDHC_CARD_SELECTION\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_SDHC_CARD_SELECTION}
{\b {\i LDD_SDHC_CARD_SELECTION{\bkmkstart AAAAAAACND}
{\bkmkend AAAAAAACND}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Selecting card \par
}{\xe \v LDD_SDHC_CARD_INFO_RETRIEVAL\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_SDHC_CARD_INFO_RETRIEVAL}
{\b {\i LDD_SDHC_CARD_INFO_RETRIEVAL{\bkmkstart AAAAAAACNE}
{\bkmkend AAAAAAACNE}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Retrieving card info \par
}{\xe \v LDD_SDHC_TRANSFER\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_SDHC_TRANSFER}
{\b {\i LDD_SDHC_TRANSFER{\bkmkstart AAAAAAACNF}
{\bkmkend AAAAAAACNF}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Transferring data \par
}{\xe \v LDD_SDHC_ERASION\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_SDHC_ERASION}
{\b {\i LDD_SDHC_ERASION{\bkmkstart AAAAAAACNG}
{\bkmkend AAAAAAACNG}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Erasing blocks \par
}{\xe \v LDD_SDHC_IO_REG_TRANSFER\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_SDHC_IO_REG_TRANSFER}
{\b {\i LDD_SDHC_IO_REG_TRANSFER{\bkmkstart AAAAAAACNH}
{\bkmkend AAAAAAACNH}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Transferring IO registers \par
}{\xe \v LDD_SDHC_DATA_WIDTH_SELECTION\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_SDHC_DATA_WIDTH_SELECTION}
{\b {\i LDD_SDHC_DATA_WIDTH_SELECTION{\bkmkstart AAAAAAACNI}
{\bkmkend AAAAAAACNI}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Selecting data width \par
}{\xe \v LDD_SDHC_BUS_CLOCK_SELECTION\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_SDHC_BUS_CLOCK_SELECTION}
{\b {\i LDD_SDHC_BUS_CLOCK_SELECTION{\bkmkstart AAAAAAACNJ}
{\bkmkend AAAAAAACNJ}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Selecting bus clock \par
}{\xe \v LDD_SDHC_WRITE_PROTECTION_SETUP\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_SDHC_WRITE_PROTECTION_SETUP}
{\b {\i LDD_SDHC_WRITE_PROTECTION_SETUP{\bkmkstart AAAAAAACNK}
{\bkmkend AAAAAAACNK}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Setting up write protection \par
}{\xe \v LDD_SDHC_WRITE_PROTECTION_RETRIEVAL\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_SDHC_WRITE_PROTECTION_RETRIEVAL}
{\b {\i LDD_SDHC_WRITE_PROTECTION_RETRIEVAL{\bkmkstart AAAAAAACNL}
{\bkmkend AAAAAAACNL}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Retrieving write protection configuration \par
}}}
{\xe \v LDD_SDHC_TTransferOperation\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_SDHC_TTransferOperation}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b LDD_SDHC_TTransferOperation}}}
\par
{\bkmkstart AAAAAAACNM}
{\bkmkend AAAAAAACNM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Transfer operations \par
}{{{\b Enumerator}}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\xe \v LDD_SDHC_READ\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_SDHC_READ}
{\b {\i LDD_SDHC_READ{\bkmkstart AAAAAAACNN}
{\bkmkend AAAAAAACNN}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Read operation \par
}{\xe \v LDD_SDHC_WRITE\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_SDHC_WRITE}
{\b {\i LDD_SDHC_WRITE{\bkmkstart AAAAAAACNO}
{\bkmkend AAAAAAACNO}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Write operation \par
}}}
{\xe \v LDD_SDHC_TVoltage\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_SDHC_TVoltage}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b LDD_SDHC_TVoltage}}}
\par
{\bkmkstart AAAAAAACNP}
{\bkmkend AAAAAAACNP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Voltage options \par
}{{{\b Enumerator}}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\xe \v LDD_SDHC_LOW_VOLTAGE\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_SDHC_LOW_VOLTAGE}
{\b {\i LDD_SDHC_LOW_VOLTAGE{\bkmkstart AAAAAAACNQ}
{\bkmkend AAAAAAACNQ}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Low voltage \par
}{\xe \v LDD_SDHC_HIGH_VOLTAGE\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_SDHC_HIGH_VOLTAGE}
{\b {\i LDD_SDHC_HIGH_VOLTAGE{\bkmkstart AAAAAAACNR}
{\bkmkend AAAAAAACNR}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
High voltage \par
}}}
{\xe \v LDD_SDHC_TWriteProtectType\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_SDHC_TWriteProtectType}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b LDD_SDHC_TWriteProtectType}}}
\par
{\bkmkstart AAAAAAACNS}
{\bkmkend AAAAAAACNS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Write protection types \par
}{{{\b Enumerator}}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\xe \v LDD_SDHC_GROUP\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_SDHC_GROUP}
{\b {\i LDD_SDHC_GROUP{\bkmkstart AAAAAAACNT}
{\bkmkend AAAAAAACNT}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Write protection by groups \par
}{\xe \v LDD_SDHC_CARD\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_SDHC_CARD}
{\b {\i LDD_SDHC_CARD{\bkmkstart AAAAAAACNU}
{\bkmkend AAAAAAACNU}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Whole card write protection \par
}}}
{\xe \v LDD_SegLCD_TBlinking\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_SegLCD_TBlinking}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b LDD_SegLCD_TBlinking}}}
\par
{\bkmkstart AAAAAAACNV}
{\bkmkend AAAAAAACNV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Types specifying the segment LCD blinking. \par
}{{{\b Enumerator}}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\xe \v LDD_SEGLCD_BLINK_OFF\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_SEGLCD_BLINK_OFF}
{\b {\i LDD_SEGLCD_BLINK_OFF{\bkmkstart AAAAAAACNW}
{\bkmkend AAAAAAACNW}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Disables display blinking \par
}{\xe \v LDD_SEGLCD_BLINK_ALL\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_SEGLCD_BLINK_ALL}
{\b {\i LDD_SEGLCD_BLINK_ALL{\bkmkstart AAAAAAACNX}
{\bkmkend AAAAAAACNX}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Display blank during the blink period \par
}{\xe \v LDD_SEGLCD_BLINK_ALL_ALTERNATE\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_SEGLCD_BLINK_ALL_ALTERNATE}
{\b {\i LDD_SEGLCD_BLINK_ALL_ALTERNATE{\bkmkstart AAAAAAACNY}
{\bkmkend AAAAAAACNY}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Blinking between alternate backplane \par
}}}
{\xe \v LDD_SegLCD_TPinType\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_SegLCD_TPinType}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b LDD_SegLCD_TPinType}}}
\par
{\bkmkstart AAAAAAACNZ}
{\bkmkend AAAAAAACNZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Segment LCD pin type (frontplane/backplane) \par
}{{{\b Enumerator}}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\xe \v LDD_SEGLCD_BACKPLANE_PIN\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_SEGLCD_BACKPLANE_PIN}
{\b {\i LDD_SEGLCD_BACKPLANE_PIN{\bkmkstart AAAAAAACOA}
{\bkmkend AAAAAAACOA}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Backplane pin \par
}{\xe \v LDD_SEGLCD_FRONTPLANE_PIN\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_SEGLCD_FRONTPLANE_PIN}
{\b {\i LDD_SEGLCD_FRONTPLANE_PIN{\bkmkstart AAAAAAACOB}
{\bkmkend AAAAAAACOB}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Frontplane pin \par
}}}
{\xe \v LDD_SegLCD_TSetBlank\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_SegLCD_TSetBlank}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b LDD_SegLCD_TSetBlank}}}
\par
{\bkmkstart AAAAAAACOC}
{\bkmkend AAAAAAACOC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Segment LCD blank state type. \par
}{{{\b Enumerator}}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\xe \v LDD_SEGLCD_BLANK_STATE\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_SEGLCD_BLANK_STATE}
{\b {\i LDD_SEGLCD_BLANK_STATE{\bkmkstart AAAAAAACOD}
{\bkmkend AAAAAAACOD}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Blank display mode \par
}{\xe \v LDD_SEGLCD_NORMAL_STATE\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_SEGLCD_NORMAL_STATE}
{\b {\i LDD_SEGLCD_NORMAL_STATE{\bkmkstart AAAAAAACOE}
{\bkmkend AAAAAAACOE}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Normal display mode \par
}{\xe \v LDD_SEGLCD_ALTERNATE_STATE\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_SEGLCD_ALTERNATE_STATE}
{\b {\i LDD_SEGLCD_ALTERNATE_STATE{\bkmkstart AAAAAAACOF}
{\bkmkend AAAAAAACOF}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Alternate display mode \par
}}}
{\xe \v LDD_SERIAL_TLoopMode\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_SERIAL_TLoopMode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b LDD_SERIAL_TLoopMode}}}
\par
{\bkmkstart AAAAAAACOG}
{\bkmkend AAAAAAACOG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Type specifying the loop mode operation. \par
}{{{\b Enumerator}}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\xe \v LOOPMODE_UNDEF\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LOOPMODE_UNDEF}
{\b {\i LOOPMODE_UNDEF{\bkmkstart AAAAAAACOH}
{\bkmkend AAAAAAACOH}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Undefined loop mode \par
}{\xe \v LOOPMODE_NORMAL\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LOOPMODE_NORMAL}
{\b {\i LOOPMODE_NORMAL{\bkmkstart AAAAAAACOI}
{\bkmkend AAAAAAACOI}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Normal operation \par
}{\xe \v LOOPMODE_AUTO_ECHO\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LOOPMODE_AUTO_ECHO}
{\b {\i LOOPMODE_AUTO_ECHO{\bkmkstart AAAAAAACOJ}
{\bkmkend AAAAAAACOJ}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Auto echo mode \par
}{\xe \v LOOPMODE_LOCAL_LOOPBACK\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LOOPMODE_LOCAL_LOOPBACK}
{\b {\i LOOPMODE_LOCAL_LOOPBACK{\bkmkstart AAAAAAACOK}
{\bkmkend AAAAAAACOK}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Local loopback mode \par
}{\xe \v LOOPMODE_REMOTE_LOOPBACK\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LOOPMODE_REMOTE_LOOPBACK}
{\b {\i LOOPMODE_REMOTE_LOOPBACK{\bkmkstart AAAAAAACOL}
{\bkmkend AAAAAAACOL}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Remote loopback mode \par
}}}
{\xe \v LDD_SERIAL_TParity\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_SERIAL_TParity}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b LDD_SERIAL_TParity}}}
\par
{\bkmkstart AAAAAAACOM}
{\bkmkend AAAAAAACOM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Type specifying the parity. \par
}{{{\b Enumerator}}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\xe \v LDD_SERIAL_PARITY_UNDEF\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_SERIAL_PARITY_UNDEF}
{\b {\i LDD_SERIAL_PARITY_UNDEF{\bkmkstart AAAAAAACON}
{\bkmkend AAAAAAACON}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Undefined parity \par
}{\xe \v LDD_SERIAL_PARITY_NONE\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_SERIAL_PARITY_NONE}
{\b {\i LDD_SERIAL_PARITY_NONE{\bkmkstart AAAAAAACOO}
{\bkmkend AAAAAAACOO}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Parity none \par
}{\xe \v LDD_SERIAL_PARITY_ODD\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_SERIAL_PARITY_ODD}
{\b {\i LDD_SERIAL_PARITY_ODD{\bkmkstart AAAAAAACOP}
{\bkmkend AAAAAAACOP}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Parity odd \par
}{\xe \v LDD_SERIAL_PARITY_EVEN\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_SERIAL_PARITY_EVEN}
{\b {\i LDD_SERIAL_PARITY_EVEN{\bkmkstart AAAAAAACOQ}
{\bkmkend AAAAAAACOQ}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Parity even \par
}{\xe \v LDD_SERIAL_PARITY_MARK\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_SERIAL_PARITY_MARK}
{\b {\i LDD_SERIAL_PARITY_MARK{\bkmkstart AAAAAAACOR}
{\bkmkend AAAAAAACOR}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Parity mark \par
}{\xe \v LDD_SERIAL_PARITY_SPACE\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_SERIAL_PARITY_SPACE}
{\b {\i LDD_SERIAL_PARITY_SPACE{\bkmkstart AAAAAAACOS}
{\bkmkend AAAAAAACOS}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Parity space \par
}}}
{\xe \v LDD_SERIAL_TStopBitLen\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_SERIAL_TStopBitLen}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b LDD_SERIAL_TStopBitLen}}}
\par
{\bkmkstart AAAAAAACOT}
{\bkmkend AAAAAAACOT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Type specifying the stop bit length. \par
}{{{\b Enumerator}}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\xe \v LDD_SERIAL_STOP_BIT_LEN_UNDEF\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_SERIAL_STOP_BIT_LEN_UNDEF}
{\b {\i LDD_SERIAL_STOP_BIT_LEN_UNDEF{\bkmkstart AAAAAAACOU}
{\bkmkend AAAAAAACOU}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Undefined bit length \par
}{\xe \v LDD_SERIAL_STOP_BIT_LEN_1\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_SERIAL_STOP_BIT_LEN_1}
{\b {\i LDD_SERIAL_STOP_BIT_LEN_1{\bkmkstart AAAAAAACOV}
{\bkmkend AAAAAAACOV}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
1 bit length \par
}{\xe \v LDD_SERIAL_STOP_BIT_LEN_1_5\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_SERIAL_STOP_BIT_LEN_1_5}
{\b {\i LDD_SERIAL_STOP_BIT_LEN_1_5{\bkmkstart AAAAAAACOW}
{\bkmkend AAAAAAACOW}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
1.5 bit length \par
}{\xe \v LDD_SERIAL_STOP_BIT_LEN_2\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_SERIAL_STOP_BIT_LEN_2}
{\b {\i LDD_SERIAL_STOP_BIT_LEN_2{\bkmkstart AAAAAAACOX}
{\bkmkend AAAAAAACOX}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
2 bit length \par
}}}
{\xe \v LDD_SSI_TAC97CommandType\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_SSI_TAC97CommandType}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b LDD_SSI_TAC97CommandType}}}
\par
{\bkmkstart AAAAAAACOY}
{\bkmkend AAAAAAACOY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Command type \par
}}
{\xe \v LDD_TDriverOperationMode\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_TDriverOperationMode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b LDD_TDriverOperationMode}}}
\par
{\bkmkstart AAAAAAACOZ}
{\bkmkend AAAAAAACOZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Driver operation mode type. \par
}}
{\xe \v LDD_TimerUnit_TCounterDirection\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_TimerUnit_TCounterDirection}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b LDD_TimerUnit_TCounterDirection}}}
\par
{\bkmkstart AAAAAAACPA}
{\bkmkend AAAAAAACPA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Direction of counting \par
}{{{\b Enumerator}}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\xe \v DIR_UP\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:DIR_UP}
{\b {\i DIR_UP{\bkmkstart AAAAAAACPB}
{\bkmkend AAAAAAACPB}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
UP \par
}{\xe \v DIR_DOWN\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:DIR_DOWN}
{\b {\i DIR_DOWN{\bkmkstart AAAAAAACPC}
{\bkmkend AAAAAAACPC}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
DOWN \par
}}}
{\xe \v LDD_TimerUnit_TEdge\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_TimerUnit_TEdge}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b LDD_TimerUnit_TEdge}}}
\par
{\bkmkstart AAAAAAACPD}
{\bkmkend AAAAAAACPD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Input edge type \par
}{{{\b Enumerator}}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\xe \v EDGE_NONE\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:EDGE_NONE}
{\b {\i EDGE_NONE{\bkmkstart AAAAAAACPE}
{\bkmkend AAAAAAACPE}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
NONE \par
}{\xe \v EDGE_RISING\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:EDGE_RISING}
{\b {\i EDGE_RISING{\bkmkstart AAAAAAACPF}
{\bkmkend AAAAAAACPF}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
RISING \par
}{\xe \v EDGE_FALLING\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:EDGE_FALLING}
{\b {\i EDGE_FALLING{\bkmkstart AAAAAAACPG}
{\bkmkend AAAAAAACPG}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
FALLING \par
}{\xe \v EDGE_BOTH\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:EDGE_BOTH}
{\b {\i EDGE_BOTH{\bkmkstart AAAAAAACPH}
{\bkmkend AAAAAAACPH}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
BOTH \par
}}}
{\xe \v LDD_TimerUnit_TOutAction\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_TimerUnit_TOutAction}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b LDD_TimerUnit_TOutAction}}}
\par
{\bkmkstart AAAAAAACPI}
{\bkmkend AAAAAAACPI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Output action type (flip-flop action on overrun or compare match) \par
}{{{\b Enumerator}}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\xe \v OUTPUT_NONE\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:OUTPUT_NONE}
{\b {\i OUTPUT_NONE{\bkmkstart AAAAAAACPJ}
{\bkmkend AAAAAAACPJ}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
NONE \par
}{\xe \v OUTPUT_TOGGLE\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:OUTPUT_TOGGLE}
{\b {\i OUTPUT_TOGGLE{\bkmkstart AAAAAAACPK}
{\bkmkend AAAAAAACPK}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
TOGGLE \par
}{\xe \v OUTPUT_CLEAR\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:OUTPUT_CLEAR}
{\b {\i OUTPUT_CLEAR{\bkmkstart AAAAAAACPL}
{\bkmkend AAAAAAACPL}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
CLEAR \par
}{\xe \v OUTPUT_SET\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:OUTPUT_SET}
{\b {\i OUTPUT_SET{\bkmkstart AAAAAAACPM}
{\bkmkend AAAAAAACPM}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
SET \par
}}}
{\xe \v LDD_USB_Device_TState\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_USB_Device_TState}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b LDD_USB_Device_TState}}}
\par
{\bkmkstart AAAAAAACPN}
{\bkmkend AAAAAAACPN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
USB device states symbolic names \par
}{{{\b Enumerator}}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\xe \v LDD_USB_DEVICE_DISABLED\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_USB_DEVICE_DISABLED}
{\b {\i LDD_USB_DEVICE_DISABLED{\bkmkstart AAAAAAACPO}
{\bkmkend AAAAAAACPO}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Device mode is disabled (by the user or by the clock configuration) \par
}{\xe \v LDD_USB_DEVICE_DISABLED_BY_OTG\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_USB_DEVICE_DISABLED_BY_OTG}
{\b {\i LDD_USB_DEVICE_DISABLED_BY_OTG{\bkmkstart AAAAAAACPP}
{\bkmkend AAAAAAACPP}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Device mode is disabled by the OTG driver \par
}{\xe \v LDD_USB_DEVICE_VBUS_OFF\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_USB_DEVICE_VBUS_OFF}
{\b {\i LDD_USB_DEVICE_VBUS_OFF{\bkmkstart AAAAAAACPQ}
{\bkmkend AAAAAAACPQ}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
No VBUS is detected \par
}{\xe \v LDD_USB_DEVICE_VBUS_ON\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_USB_DEVICE_VBUS_ON}
{\b {\i LDD_USB_DEVICE_VBUS_ON{\bkmkstart AAAAAAACPR}
{\bkmkend AAAAAAACPR}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
VBUS is detected \par
}{\xe \v LDD_USB_DEVICE_ENABLED\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_USB_DEVICE_ENABLED}
{\b {\i LDD_USB_DEVICE_ENABLED{\bkmkstart AAAAAAACPS}
{\bkmkend AAAAAAACPS}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Device is enabled - reset by the host \par
}{\xe \v LDD_USB_DEVICE_SUSPENDED\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_USB_DEVICE_SUSPENDED}
{\b {\i LDD_USB_DEVICE_SUSPENDED{\bkmkstart AAAAAAACPT}
{\bkmkend AAAAAAACPT}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Device is suspended - Bus is idle more then 3 ms \par
}{\xe \v LDD_USB_DEVICE_SUSPENDED_RESUME_READY\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_USB_DEVICE_SUSPENDED_RESUME_READY}
{\b {\i LDD_USB_DEVICE_SUSPENDED_RESUME_READY{\bkmkstart AAAAAAACPU}
{\bkmkend AAAAAAACPU}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Device can generate resume signaling - Bus is idle more then 5 ms. \par
}{\xe \v LDD_USB_DEVICE_RESUME_PENDING\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_USB_DEVICE_RESUME_PENDING}
{\b {\i LDD_USB_DEVICE_RESUME_PENDING{\bkmkstart AAAAAAACPV}
{\bkmkend AAAAAAACPV}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Device generates resume signaling \par
}}}
{\xe \v LDD_USB_Host_TPortControlCmd\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_USB_Host_TPortControlCmd}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b LDD_USB_Host_TPortControlCmd}}}
\par
{\bkmkstart AAAAAAACPW}
{\bkmkend AAAAAAACPW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
USB host port control commands symbolic names \par
}{{{\b Enumerator}}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\xe \v LDD_USB_HOST_PORT_CMD_POWER_ON\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_USB_HOST_PORT_CMD_POWER_ON}
{\b {\i LDD_USB_HOST_PORT_CMD_POWER_ON{\bkmkstart AAAAAAACPX}
{\bkmkend AAAAAAACPX}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Power-on the bus \par
}{\xe \v LDD_USB_HOST_PORT_CMD_POWER_OFF\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_USB_HOST_PORT_CMD_POWER_OFF}
{\b {\i LDD_USB_HOST_PORT_CMD_POWER_OFF{\bkmkstart AAAAAAACPY}
{\bkmkend AAAAAAACPY}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Power-off the bus \par
}{\xe \v LDD_USB_HOST_PORT_CMD_RESET\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_USB_HOST_PORT_CMD_RESET}
{\b {\i LDD_USB_HOST_PORT_CMD_RESET{\bkmkstart AAAAAAACPZ}
{\bkmkend AAAAAAACPZ}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Perform the bus reset signaling and call event after the reset recovery interval elapse \par
}{\xe \v LDD_USB_HOST_PORT_CMD_RESUME\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_USB_HOST_PORT_CMD_RESUME}
{\b {\i LDD_USB_HOST_PORT_CMD_RESUME{\bkmkstart AAAAAAACQA}
{\bkmkend AAAAAAACQA}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Perform the bus resume signaling and call event after the resume recovery interval elapse \par
}{\xe \v LDD_USB_HOST_PORT_CMD_SUSPEND\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_USB_HOST_PORT_CMD_SUSPEND}
{\b {\i LDD_USB_HOST_PORT_CMD_SUSPEND{\bkmkstart AAAAAAACQB}
{\bkmkend AAAAAAACQB}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Suspend the bus and transceiver \par
}{\xe \v LDD_USB_HOST_PORT_CMD_DISABLE\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_USB_HOST_PORT_CMD_DISABLE}
{\b {\i LDD_USB_HOST_PORT_CMD_DISABLE{\bkmkstart AAAAAAACQC}
{\bkmkend AAAAAAACQC}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Disable the port \par
}}}
{\xe \v LDD_USB_Host_TState\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_USB_Host_TState}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b LDD_USB_Host_TState}}}
\par
{\bkmkstart AAAAAAACQD}
{\bkmkend AAAAAAACQD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
USB host mode states symbolic names \par
}{{{\b Enumerator}}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\xe \v LDD_USB_HOST_DISABLED\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_USB_HOST_DISABLED}
{\b {\i LDD_USB_HOST_DISABLED{\bkmkstart AAAAAAACQE}
{\bkmkend AAAAAAACQE}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Host mode is disabled (by the user or by the clock configuration) \par
}{\xe \v LDD_USB_HOST_DISABLED_BY_OTG\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_USB_HOST_DISABLED_BY_OTG}
{\b {\i LDD_USB_HOST_DISABLED_BY_OTG{\bkmkstart AAAAAAACQF}
{\bkmkend AAAAAAACQF}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Host mode is disabled by the OTG driver \par
}{\xe \v LDD_USB_HOST_PORT_POWERED_OFF\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_USB_HOST_PORT_POWERED_OFF}
{\b {\i LDD_USB_HOST_PORT_POWERED_OFF{\bkmkstart AAAAAAACQG}
{\bkmkend AAAAAAACQG}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Port is powered-off \par
}{\xe \v LDD_USB_HOST_PORT_DISCONNECTED\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_USB_HOST_PORT_DISCONNECTED}
{\b {\i LDD_USB_HOST_PORT_DISCONNECTED{\bkmkstart AAAAAAACQH}
{\bkmkend AAAAAAACQH}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
No device is connected \par
}{\xe \v LDD_USB_HOST_PORT_DISABLED\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_USB_HOST_PORT_DISABLED}
{\b {\i LDD_USB_HOST_PORT_DISABLED{\bkmkstart AAAAAAACQI}
{\bkmkend AAAAAAACQI}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Device is connected to the port \par
}{\xe \v LDD_USB_HOST_PORT_RESETING\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_USB_HOST_PORT_RESETING}
{\b {\i LDD_USB_HOST_PORT_RESETING{\bkmkstart AAAAAAACQJ}
{\bkmkend AAAAAAACQJ}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Port generates reset signaling \par
}{\xe \v LDD_USB_HOST_PORT_RESET_RECOVERING\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_USB_HOST_PORT_RESET_RECOVERING}
{\b {\i LDD_USB_HOST_PORT_RESET_RECOVERING{\bkmkstart AAAAAAACQK}
{\bkmkend AAAAAAACQK}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Port waits 10 ms for reset recovery \par
}{\xe \v LDD_USB_HOST_PORT_ENABLED\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_USB_HOST_PORT_ENABLED}
{\b {\i LDD_USB_HOST_PORT_ENABLED{\bkmkstart AAAAAAACQL}
{\bkmkend AAAAAAACQL}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Device is connected, reset and ready to use \par
}{\xe \v LDD_USB_HOST_PORT_SUSPENDED\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_USB_HOST_PORT_SUSPENDED}
{\b {\i LDD_USB_HOST_PORT_SUSPENDED{\bkmkstart AAAAAAACQM}
{\bkmkend AAAAAAACQM}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Port is suspended \par
}{\xe \v LDD_USB_HOST_PORT_RESUME_READY\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_USB_HOST_PORT_RESUME_READY}
{\b {\i LDD_USB_HOST_PORT_RESUME_READY{\bkmkstart AAAAAAACQN}
{\bkmkend AAAAAAACQN}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Port is ready to generate resume signaling \par
}{\xe \v LDD_USB_HOST_PORT_RESUMING\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_USB_HOST_PORT_RESUMING}
{\b {\i LDD_USB_HOST_PORT_RESUMING{\bkmkstart AAAAAAACQO}
{\bkmkend AAAAAAACQO}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Port generates resume signaling \par
}{\xe \v LDD_USB_HOST_PORT_RESUME_RECOVERING\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_USB_HOST_PORT_RESUME_RECOVERING}
{\b {\i LDD_USB_HOST_PORT_RESUME_RECOVERING{\bkmkstart AAAAAAACQP}
{\bkmkend AAAAAAACQP}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Port waits 10 ms for resume recovery \par
}}}
{\xe \v LDD_USB_Otg_TCmd\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_USB_Otg_TCmd}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b LDD_USB_Otg_TCmd}}}
\par
{\bkmkstart AAAAAAACQQ}
{\bkmkend AAAAAAACQQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
USB Otg commands symbolic names \par
}{{{\b Enumerator}}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\xe \v LDD_USB_OTG_CMD_SET_A_BUS_REQUEST\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_USB_OTG_CMD_SET_A_BUS_REQUEST}
{\b {\i LDD_USB_OTG_CMD_SET_A_BUS_REQUEST{\bkmkstart AAAAAAACQR}
{\bkmkend AAAAAAACQR}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A-device application wants to use the bus \par
}{\xe \v LDD_USB_OTG_CMD_CLR_A_BUS_REQUEST\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_USB_OTG_CMD_CLR_A_BUS_REQUEST}
{\b {\i LDD_USB_OTG_CMD_CLR_A_BUS_REQUEST{\bkmkstart AAAAAAACQS}
{\bkmkend AAAAAAACQS}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A-device application doesn't want to use the bus \par
}{\xe \v LDD_USB_OTG_CMD_SET_B_BUS_REQUEST\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_USB_OTG_CMD_SET_B_BUS_REQUEST}
{\b {\i LDD_USB_OTG_CMD_SET_B_BUS_REQUEST{\bkmkstart AAAAAAACQT}
{\bkmkend AAAAAAACQT}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
B-device application wants to use the bus \par
}{\xe \v LDD_USB_OTG_CMD_CLR_B_BUS_REQUEST\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_USB_OTG_CMD_CLR_B_BUS_REQUEST}
{\b {\i LDD_USB_OTG_CMD_CLR_B_BUS_REQUEST{\bkmkstart AAAAAAACQU}
{\bkmkend AAAAAAACQU}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
B-device application doesn't want to use the bus \par
}{\xe \v LDD_USB_OTG_CMD_SET_A_BUS_DROP\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_USB_OTG_CMD_SET_A_BUS_DROP}
{\b {\i LDD_USB_OTG_CMD_SET_A_BUS_DROP{\bkmkstart AAAAAAACQV}
{\bkmkend AAAAAAACQV}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A-device application needs to power down the bus \par
}{\xe \v LDD_USB_OTG_CMD_CLR_A_BUS_DROP\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_USB_OTG_CMD_CLR_A_BUS_DROP}
{\b {\i LDD_USB_OTG_CMD_CLR_A_BUS_DROP{\bkmkstart AAAAAAACQW}
{\bkmkend AAAAAAACQW}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A-device application doesn't need to power down the bus \par
}{\xe \v LDD_USB_OTG_CMD_SET_A_SUSPEND_REQUEST\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_USB_OTG_CMD_SET_A_SUSPEND_REQUEST}
{\b {\i LDD_USB_OTG_CMD_SET_A_SUSPEND_REQUEST{\bkmkstart AAAAAAACQX}
{\bkmkend AAAAAAACQX}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A-device application wants to suspend the bus \par
}{\xe \v LDD_USB_OTG_CMD_CLR_A_SUSPEND_REQUEST\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_USB_OTG_CMD_CLR_A_SUSPEND_REQUEST}
{\b {\i LDD_USB_OTG_CMD_CLR_A_SUSPEND_REQUEST{\bkmkstart AAAAAAACQY}
{\bkmkend AAAAAAACQY}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A-device application doesn't want to suspend the bus \par
}{\xe \v LDD_USB_OTG_CMD_SET_A_SET_B_HNP_EN_REQUEST\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_USB_OTG_CMD_SET_A_SET_B_HNP_EN_REQUEST}
{\b {\i LDD_USB_OTG_CMD_SET_A_SET_B_HNP_EN_REQUEST{\bkmkstart AAAAAAACQZ}
{\bkmkend AAAAAAACQZ}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A-device sets HNP enabled feature on B-device \par
}{\xe \v LDD_USB_OTG_CMD_CLR_A_SET_B_HNP_EN_REQUEST\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_USB_OTG_CMD_CLR_A_SET_B_HNP_EN_REQUEST}
{\b {\i LDD_USB_OTG_CMD_CLR_A_SET_B_HNP_EN_REQUEST{\bkmkstart AAAAAAACRA}
{\bkmkend AAAAAAACRA}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A-device clears HNP enabled feature on B-device \par
}{\xe \v LDD_USB_OTG_CMD_SET_B_HNP_EN_REQUEST\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_USB_OTG_CMD_SET_B_HNP_EN_REQUEST}
{\b {\i LDD_USB_OTG_CMD_SET_B_HNP_EN_REQUEST{\bkmkstart AAAAAAACRB}
{\bkmkend AAAAAAACRB}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Enable B-device HNP \par
}{\xe \v LDD_USB_OTG_CMD_CLR_B_HNP_EN_REQUEST\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_USB_OTG_CMD_CLR_B_HNP_EN_REQUEST}
{\b {\i LDD_USB_OTG_CMD_CLR_B_HNP_EN_REQUEST{\bkmkstart AAAAAAACRC}
{\bkmkend AAAAAAACRC}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Disable B-device HNP \par
}}}
{\xe \v LDD_USB_Otg_TState\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_USB_Otg_TState}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b LDD_USB_Otg_TState}}}
\par
{\bkmkstart AAAAAAACRD}
{\bkmkend AAAAAAACRD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
USB otg mode states symbolic names \par
}{{{\b Enumerator}}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\xe \v LDD_USB_OTG_DISABLED\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_USB_OTG_DISABLED}
{\b {\i LDD_USB_OTG_DISABLED{\bkmkstart AAAAAAACRE}
{\bkmkend AAAAAAACRE}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
OTG device is in DISABLED state \par
}{\xe \v LDD_USB_OTG_ENABLED\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_USB_OTG_ENABLED}
{\b {\i LDD_USB_OTG_ENABLED{\bkmkstart AAAAAAACRF}
{\bkmkend AAAAAAACRF}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
OTG device is in ENABLED_PENDING state \par
}{\xe \v LDD_USB_OTG_A_IDLE\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_USB_OTG_A_IDLE}
{\b {\i LDD_USB_OTG_A_IDLE{\bkmkstart AAAAAAACRG}
{\bkmkend AAAAAAACRG}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
OTG device is in A_IDLE state \par
}{\xe \v LDD_USB_OTG_A_WAIT_VRISE\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_USB_OTG_A_WAIT_VRISE}
{\b {\i LDD_USB_OTG_A_WAIT_VRISE{\bkmkstart AAAAAAACRH}
{\bkmkend AAAAAAACRH}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
OTG device is in A_WAIT_VRISE state \par
}{\xe \v LDD_USB_OTG_A_WAIT_VFALL\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_USB_OTG_A_WAIT_VFALL}
{\b {\i LDD_USB_OTG_A_WAIT_VFALL{\bkmkstart AAAAAAACRI}
{\bkmkend AAAAAAACRI}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
OTG device is in A_WAIT_VFALL state \par
}{\xe \v LDD_USB_OTG_A_WAIT_BCON\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_USB_OTG_A_WAIT_BCON}
{\b {\i LDD_USB_OTG_A_WAIT_BCON{\bkmkstart AAAAAAACRJ}
{\bkmkend AAAAAAACRJ}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
OTG device is in A_WAIT_BCON state \par
}{\xe \v LDD_USB_OTG_A_VBUS_ERROR\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_USB_OTG_A_VBUS_ERROR}
{\b {\i LDD_USB_OTG_A_VBUS_ERROR{\bkmkstart AAAAAAACRK}
{\bkmkend AAAAAAACRK}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
OTG device is in A_VBUS_ERROR state \par
}{\xe \v LDD_USB_OTG_A_SUSPEND\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_USB_OTG_A_SUSPEND}
{\b {\i LDD_USB_OTG_A_SUSPEND{\bkmkstart AAAAAAACRL}
{\bkmkend AAAAAAACRL}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
OTG device is in A_SUSPEND state \par
}{\xe \v LDD_USB_OTG_B_IDLE\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_USB_OTG_B_IDLE}
{\b {\i LDD_USB_OTG_B_IDLE{\bkmkstart AAAAAAACRM}
{\bkmkend AAAAAAACRM}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
OTG device is in B_IDLE state \par
}{\xe \v LDD_USB_OTG_B_SRP_INIT\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_USB_OTG_B_SRP_INIT}
{\b {\i LDD_USB_OTG_B_SRP_INIT{\bkmkstart AAAAAAACRN}
{\bkmkend AAAAAAACRN}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
OTG device is in B_SRP_INIT state \par
}{\xe \v LDD_USB_OTG_B_WAIT_ACON\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_USB_OTG_B_WAIT_ACON}
{\b {\i LDD_USB_OTG_B_WAIT_ACON{\bkmkstart AAAAAAACRO}
{\bkmkend AAAAAAACRO}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
OTG device is in B_WAIT_ACON state \par
}{\xe \v LDD_USB_OTG_A_HOST\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_USB_OTG_A_HOST}
{\b {\i LDD_USB_OTG_A_HOST{\bkmkstart AAAAAAACRP}
{\bkmkend AAAAAAACRP}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
OTG device is in A_HOST state \par
}{\xe \v LDD_USB_OTG_A_PERIPHERAL\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_USB_OTG_A_PERIPHERAL}
{\b {\i LDD_USB_OTG_A_PERIPHERAL{\bkmkstart AAAAAAACRQ}
{\bkmkend AAAAAAACRQ}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
OTG device is in A_PERIPHERAL state \par
}{\xe \v LDD_USB_OTG_B_HOST\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_USB_OTG_B_HOST}
{\b {\i LDD_USB_OTG_B_HOST{\bkmkstart AAAAAAACRR}
{\bkmkend AAAAAAACRR}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
OTG device is in B_HOST state \par
}{\xe \v LDD_USB_OTG_B_PERIPHERAL\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_USB_OTG_B_PERIPHERAL}
{\b {\i LDD_USB_OTG_B_PERIPHERAL{\bkmkstart AAAAAAACRS}
{\bkmkend AAAAAAACRS}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
OTG device is in B_PERIPHERAL state \par
}}}
{\xe \v LDD_USB_TBusSpeed\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_USB_TBusSpeed}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b LDD_USB_TBusSpeed}}}
\par
{\bkmkstart AAAAAAACRT}
{\bkmkend AAAAAAACRT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Device speed symbolic names \par
}{{{\b Enumerator}}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\xe \v LDD_USB_LOW_SPEED\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_USB_LOW_SPEED}
{\b {\i LDD_USB_LOW_SPEED{\bkmkstart AAAAAAACRU}
{\bkmkend AAAAAAACRU}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Low-speed - 6 Mb/s mode \par
}{\xe \v LDD_USB_FULL_SPEED\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_USB_FULL_SPEED}
{\b {\i LDD_USB_FULL_SPEED{\bkmkstart AAAAAAACRV}
{\bkmkend AAAAAAACRV}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Full-speed - 12 Mb/s mode \par
}{\xe \v LDD_USB_HIGH_SPEED\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_USB_HIGH_SPEED}
{\b {\i LDD_USB_HIGH_SPEED{\bkmkstart AAAAAAACRW}
{\bkmkend AAAAAAACRW}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
High-speed - 480 Mb/s mode \par
}{\xe \v LDD_USB_SPEED_UNKNOWN\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_USB_SPEED_UNKNOWN}
{\b {\i LDD_USB_SPEED_UNKNOWN{\bkmkstart AAAAAAACRX}
{\bkmkend AAAAAAACRX}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Unkown speed mode \par
}}}
{\xe \v LDD_USB_TTransferState\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_USB_TTransferState}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b LDD_USB_TTransferState}}}
\par
{\bkmkstart AAAAAAACRY}
{\bkmkend AAAAAAACRY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Transfer state symbolic names \par
}{{{\b Enumerator}}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\xe \v LDD_USB_TRANSFER_NONE\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_USB_TRANSFER_NONE}
{\b {\i LDD_USB_TRANSFER_NONE{\bkmkstart AAAAAAACRZ}
{\bkmkend AAAAAAACRZ}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Default valeu for new TD \par
}{\xe \v LDD_USB_TRANSFER_DONE\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_USB_TRANSFER_DONE}
{\b {\i LDD_USB_TRANSFER_DONE{\bkmkstart AAAAAAACSA}
{\bkmkend AAAAAAACSA}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Transfer done \par
}{\xe \v LDD_USB_TRANSFER_ERROR_CANCELLED\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_USB_TRANSFER_ERROR_CANCELLED}
{\b {\i LDD_USB_TRANSFER_ERROR_CANCELLED{\bkmkstart AAAAAAACSB}
{\bkmkend AAAAAAACSB}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Transfer cancelled by the user \par
}{\xe \v LDD_USB_TRANSFER_ERROR_STALLED\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_USB_TRANSFER_ERROR_STALLED}
{\b {\i LDD_USB_TRANSFER_ERROR_STALLED{\bkmkstart AAAAAAACSC}
{\bkmkend AAAAAAACSC}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Transfer stalled \par
}{\xe \v LDD_USB_TRANSFER_ERROR_BUS_TIMEOUT\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_USB_TRANSFER_ERROR_BUS_TIMEOUT}
{\b {\i LDD_USB_TRANSFER_ERROR_BUS_TIMEOUT{\bkmkstart AAAAAAACSD}
{\bkmkend AAAAAAACSD}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Bus timeute detected \par
}{\xe \v LDD_USB_TRANSFER_ERROR_DATA\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_USB_TRANSFER_ERROR_DATA}
{\b {\i LDD_USB_TRANSFER_ERROR_DATA{\bkmkstart AAAAAAACSE}
{\bkmkend AAAAAAACSE}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Data error deteceted \par
}{\xe \v LDD_USB_TRANSFER_ERROR_PID\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_USB_TRANSFER_ERROR_PID}
{\b {\i LDD_USB_TRANSFER_ERROR_PID{\bkmkstart AAAAAAACSF}
{\bkmkend AAAAAAACSF}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
PID error deteceted \par
}{\xe \v LDD_USB_TRANSFER_ERROR_EOF\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_USB_TRANSFER_ERROR_EOF}
{\b {\i LDD_USB_TRANSFER_ERROR_EOF{\bkmkstart AAAAAAACSG}
{\bkmkend AAAAAAACSG}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
EOF error deteceted \par
}{\xe \v LDD_USB_TRANSFER_ERROR_CRC16\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_USB_TRANSFER_ERROR_CRC16}
{\b {\i LDD_USB_TRANSFER_ERROR_CRC16{\bkmkstart AAAAAAACSH}
{\bkmkend AAAAAAACSH}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
CRC16 error deteceted \par
}{\xe \v LDD_USB_TRANSFER_ERROR_DFN8\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_USB_TRANSFER_ERROR_DFN8}
{\b {\i LDD_USB_TRANSFER_ERROR_DFN8{\bkmkstart AAAAAAACSI}
{\bkmkend AAAAAAACSI}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
DFN8 error deteceted \par
}{\xe \v LDD_USB_TRANSFER_ERROR_DMA\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_USB_TRANSFER_ERROR_DMA}
{\b {\i LDD_USB_TRANSFER_ERROR_DMA{\bkmkstart AAAAAAACSJ}
{\bkmkend AAAAAAACSJ}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
DMA error deteceted \par
}{\xe \v LDD_USB_TRANSFER_ERROR_BTS\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_USB_TRANSFER_ERROR_BTS}
{\b {\i LDD_USB_TRANSFER_ERROR_BTS{\bkmkstart AAAAAAACSK}
{\bkmkend AAAAAAACSK}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
BTS error deteceted \par
}{\xe \v LDD_USB_TRANSFER_ERROR\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_USB_TRANSFER_ERROR}
{\b {\i LDD_USB_TRANSFER_ERROR{\bkmkstart AAAAAAACSL}
{\bkmkend AAAAAAACSL}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Transfer error deteceted \par
}{\xe \v LDD_USB_TRANSFER_QUEUED\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_USB_TRANSFER_QUEUED}
{\b {\i LDD_USB_TRANSFER_QUEUED{\bkmkstart AAAAAAACSM}
{\bkmkend AAAAAAACSM}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Transfer queued \par
}{\xe \v LDD_USB_TRANSFER_PENDING\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_USB_TRANSFER_PENDING}
{\b {\i LDD_USB_TRANSFER_PENDING{\bkmkstart AAAAAAACSN}
{\bkmkend AAAAAAACSN}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Transfer in proggress \par
}}}
{\xe \v LDD_USB_TTransferType\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_USB_TTransferType}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b LDD_USB_TTransferType}}}
\par
{\bkmkstart AAAAAAACSO}
{\bkmkend AAAAAAACSO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Transfer type symbolic names \par
}{{{\b Enumerator}}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\xe \v LDD_USB_CONTROL\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_USB_CONTROL}
{\b {\i LDD_USB_CONTROL{\bkmkstart AAAAAAACSP}
{\bkmkend AAAAAAACSP}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Conrol transfer type \par
}{\xe \v LDD_USB_ISOCHRONOUS\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_USB_ISOCHRONOUS}
{\b {\i LDD_USB_ISOCHRONOUS{\bkmkstart AAAAAAACSQ}
{\bkmkend AAAAAAACSQ}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Isochronous transfer type \par
}{\xe \v LDD_USB_BULK\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_USB_BULK}
{\b {\i LDD_USB_BULK{\bkmkstart AAAAAAACSR}
{\bkmkend AAAAAAACSR}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Bulk transfer type \par
}{\xe \v LDD_USB_INTERRUPT\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:LDD_USB_INTERRUPT}
{\b {\i LDD_USB_INTERRUPT{\bkmkstart AAAAAAACSS}
{\bkmkend AAAAAAACSS}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Interrupt transfer type \par
}}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v PE_FillMemory\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:PE_FillMemory}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void PE_FillMemory (register void * {\i SourceAddressPtr}, register uint8_t {\i c}, register uint32_t {\i len})}}
\par
{\bkmkstart AAAAAAACST}
{\bkmkend AAAAAAACST}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Fills a memory area block by a specified value. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i SourceAddressPtr} \cell }{- Source address pointer. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i c} \cell }{- A value used to fill a memory block. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i len} \cell }{- Length of a memory block to fill. \cell }
{\row }
}
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variable Documentation\par
\pard\plain 
{\xe \v PE_LDD_DeviceDataList\:PE_Types module documentation}
{\xe \v PE_Types module documentation\:PE_LDD_DeviceDataList}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LDD_TDeviceData}* PE_LDD_DeviceDataList[]}}
\par
{\bkmkstart AAAAAAACSU}
{\bkmkend AAAAAAACSU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Array of LDD component device structures \par
}}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
PIR module documentation\par \pard\plain 
{\tc\tcl2 \v PIR module documentation}
{\xe \v PIR module documentation}
{\bkmkstart AAAAAAACSV}
{\bkmkend AAAAAAACSV}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macros\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b PIR_GetVal}()\~ ({\b ExtIntLdd4_GetVal}({\b ExtIntLdd4_DeviceData})){\bkmkstart AAAAAAAALM}
{\bkmkend AAAAAAAALM}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b PIR_SetEdge}(Edge)\~ ((byte){\b ExtIntLdd4_SetEdge}({\b ExtIntLdd4_DeviceData}, (Edge))){\bkmkstart AAAAAAAALN}
{\bkmkend AAAAAAAALN}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b ExtIntLdd4_OnInterrupt} ({\b LDD_TUserData} *UserDataPtr){\bkmkstart AAAAAAAALK}
{\bkmkend AAAAAAAALK}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
PIR2 module documentation\par \pard\plain 
{\tc\tcl2 \v PIR2 module documentation}
{\xe \v PIR2 module documentation}
{\bkmkstart AAAAAAACSW}
{\bkmkend AAAAAAACSW}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macros\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b PIR2_GetVal}()\~ ({\b BitIoLdd9_GetVal}({\b BitIoLdd9_DeviceData})){\bkmkstart AAAAAAAALQ}
{\bkmkend AAAAAAAALQ}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RealTimeLdd1 module documentation\par \pard\plain 
{\tc\tcl2 \v RealTimeLdd1 module documentation}
{\xe \v RealTimeLdd1 module documentation}
{\bkmkstart AAAAAAACSX}
{\bkmkend AAAAAAACSX}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Structures\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b RealTimeLdd1_TDeviceData}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macros\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b RealTimeLdd1_PRPH_BASE_ADDRESS}\~ 0x40038000U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b RealTimeLdd1_DeviceData}\~ (({\b LDD_TDeviceData} *){\b PE_LDD_GetDeviceStructure}(PE_LDD_COMPONENT_RealTimeLdd1_ID))\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b RealTimeLdd1_Init_METHOD_ENABLED}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b RealTimeLdd1_Reset_METHOD_ENABLED}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b RealTimeLdd1_GetTimeUS_METHOD_ENABLED}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b RealTimeLdd1_GetTimeMS_METHOD_ENABLED}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b RealTimeLdd1_GetTimeSec_METHOD_ENABLED}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Typedefs\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

typedef {\b RealTimeLdd1_TDeviceData} * {\b RealTimeLdd1_TDeviceDataPtr}{\bkmkstart AAAAAAAALS}
{\bkmkend AAAAAAAALS}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LDD_TDeviceData} * {\b RealTimeLdd1_Init} ({\b LDD_TUserData} *UserDataPtr)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Initializes the device. Allocates memory for the device data structure, allocates interrupt vectors and sets interrupt priority, sets pin routing, sets timing, etc. If the property ["Enable in init. code"] is set to "yes" value then the device is also enabled (see the description of the [Enable] method). In this case the [Enable] method is not necessary and needn't to be generated. This method can be called only once. Before the second call of Init the [Deinit] must be called first. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LDD_TError} {\b RealTimeLdd1_Reset} ({\b LDD_TDeviceData} *DeviceDataPtr)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This method resets software counter. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LDD_TError} {\b RealTimeLdd1_GetTimeUS} ({\b LDD_TDeviceData} *DeviceDataPtr, uint16_t *TimePtr)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This method returns the time (as a 16-bit unsigned integer) in microseconds since the last Reset method call. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LDD_TError} {\b RealTimeLdd1_GetTimeMS} ({\b LDD_TDeviceData} *DeviceDataPtr, uint16_t *TimePtr)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This method returns the time (as a 16-bit unsigned integer) in milliseconds since the last Reset method call. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LDD_TError} {\b RealTimeLdd1_GetTimeSec} ({\b LDD_TDeviceData} *DeviceDataPtr, uint16_t *TimePtr)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This method returns the time (as a 16-bit unsigned integer) in seconds since the last Reset method call. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b TU3_OnCounterRestart} ({\b LDD_TUserData} *UserDataPtr){\bkmkstart AAAAAAAALT}
{\bkmkend AAAAAAAALT}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macro Definition Documentation\par
\pard\plain 
{\xe \v RealTimeLdd1_DeviceData\:RealTimeLdd1 module documentation}
{\xe \v RealTimeLdd1 module documentation\:RealTimeLdd1_DeviceData}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define RealTimeLdd1_DeviceData\~ (({\b LDD_TDeviceData} *){\b PE_LDD_GetDeviceStructure}(PE_LDD_COMPONENT_RealTimeLdd1_ID))}}
\par
{\bkmkstart AAAAAAACSY}
{\bkmkend AAAAAAACSY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Device data structure pointer used when auto initialization property is enabled. This constant can be passed as a first parameter to all component's methods. \par
}}
{\xe \v RealTimeLdd1_GetTimeMS_METHOD_ENABLED\:RealTimeLdd1 module documentation}
{\xe \v RealTimeLdd1 module documentation\:RealTimeLdd1_GetTimeMS_METHOD_ENABLED}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define RealTimeLdd1_GetTimeMS_METHOD_ENABLED}}
\par
{\bkmkstart AAAAAAACSZ}
{\bkmkend AAAAAAACSZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
GetTimeMS method of the component RealTimeLdd1 is enabled (generated) \par
}}
{\xe \v RealTimeLdd1_GetTimeSec_METHOD_ENABLED\:RealTimeLdd1 module documentation}
{\xe \v RealTimeLdd1 module documentation\:RealTimeLdd1_GetTimeSec_METHOD_ENABLED}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define RealTimeLdd1_GetTimeSec_METHOD_ENABLED}}
\par
{\bkmkstart AAAAAAACTA}
{\bkmkend AAAAAAACTA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
GetTimeSec method of the component RealTimeLdd1 is enabled (generated) \par
}}
{\xe \v RealTimeLdd1_GetTimeUS_METHOD_ENABLED\:RealTimeLdd1 module documentation}
{\xe \v RealTimeLdd1 module documentation\:RealTimeLdd1_GetTimeUS_METHOD_ENABLED}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define RealTimeLdd1_GetTimeUS_METHOD_ENABLED}}
\par
{\bkmkstart AAAAAAACTB}
{\bkmkend AAAAAAACTB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
GetTimeUS method of the component RealTimeLdd1 is enabled (generated) \par
}}
{\xe \v RealTimeLdd1_Init_METHOD_ENABLED\:RealTimeLdd1 module documentation}
{\xe \v RealTimeLdd1 module documentation\:RealTimeLdd1_Init_METHOD_ENABLED}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define RealTimeLdd1_Init_METHOD_ENABLED}}
\par
{\bkmkstart AAAAAAACTC}
{\bkmkend AAAAAAACTC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Init method of the component RealTimeLdd1 is enabled (generated) \par
}}
{\xe \v RealTimeLdd1_PRPH_BASE_ADDRESS\:RealTimeLdd1 module documentation}
{\xe \v RealTimeLdd1 module documentation\:RealTimeLdd1_PRPH_BASE_ADDRESS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define RealTimeLdd1_PRPH_BASE_ADDRESS\~ 0x40038000U}}
\par
{\bkmkstart AAAAAAACTD}
{\bkmkend AAAAAAACTD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Peripheral base address of a device allocated by the component. This constant can be used directly in PDD macros. \par
}}
{\xe \v RealTimeLdd1_Reset_METHOD_ENABLED\:RealTimeLdd1 module documentation}
{\xe \v RealTimeLdd1 module documentation\:RealTimeLdd1_Reset_METHOD_ENABLED}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define RealTimeLdd1_Reset_METHOD_ENABLED}}
\par
{\bkmkstart AAAAAAACTE}
{\bkmkend AAAAAAACTE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Reset method of the component RealTimeLdd1 is enabled (generated) \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v RealTimeLdd1_GetTimeMS\:RealTimeLdd1 module documentation}
{\xe \v RealTimeLdd1 module documentation\:RealTimeLdd1_GetTimeMS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LDD_TError} RealTimeLdd1_GetTimeMS ({\b LDD_TDeviceData} * {\i DeviceDataPtr}, uint16_t * {\i TimePtr})}}
\par
{\bkmkstart AAAAAAACTF}
{\bkmkend AAAAAAACTF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This method returns the time (as a 16-bit unsigned integer) in milliseconds since the last Reset method call. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i DeviceDataPtr} \cell }{- Device data structure pointer returned by [Init] method. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i TimePtr} \cell }{- A pointer to the returned 16-bit value in milliseconds \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {
\par
\pard\plain \s82\fi-360\li1080\widctlpar\jclisttab\tx1080{\*\pn \pnlvlbody\ilvl0\ls3\pnrnot0\pndec }\ls3\adjustright \fs20\cgrid 
Error code, possible codes: ERR_OK - OK ERR_SPEED - This device does not work in the active clock configuration ERR_OVERFLOW - Software counter overflow ERR_MATH - Overflow during evaluation \par}
}}}
{\xe \v RealTimeLdd1_GetTimeSec\:RealTimeLdd1 module documentation}
{\xe \v RealTimeLdd1 module documentation\:RealTimeLdd1_GetTimeSec}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LDD_TError} RealTimeLdd1_GetTimeSec ({\b LDD_TDeviceData} * {\i DeviceDataPtr}, uint16_t * {\i TimePtr})}}
\par
{\bkmkstart AAAAAAACTG}
{\bkmkend AAAAAAACTG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This method returns the time (as a 16-bit unsigned integer) in seconds since the last Reset method call. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i DeviceDataPtr} \cell }{- Device data structure pointer returned by [Init] method. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i TimePtr} \cell }{- A pointer to the returned 16-bit value in seconds \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {
\par
\pard\plain \s82\fi-360\li1080\widctlpar\jclisttab\tx1080{\*\pn \pnlvlbody\ilvl0\ls3\pnrnot0\pndec }\ls3\adjustright \fs20\cgrid 
Error code, possible codes: ERR_OK - OK ERR_SPEED - This device does not work in the active speed mode ERR_OVERFLOW - Software counter overflow ERR_MATH - Overflow during evaluation \par}
}}}
{\xe \v RealTimeLdd1_GetTimeUS\:RealTimeLdd1 module documentation}
{\xe \v RealTimeLdd1 module documentation\:RealTimeLdd1_GetTimeUS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LDD_TError} RealTimeLdd1_GetTimeUS ({\b LDD_TDeviceData} * {\i DeviceDataPtr}, uint16_t * {\i TimePtr})}}
\par
{\bkmkstart AAAAAAACTH}
{\bkmkend AAAAAAACTH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This method returns the time (as a 16-bit unsigned integer) in microseconds since the last Reset method call. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i DeviceDataPtr} \cell }{- Device data structure pointer returned by [Init] method. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i TimePtr} \cell }{- A pointer to the returned 16-bit value in microseconds \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {
\par
\pard\plain \s82\fi-360\li1080\widctlpar\jclisttab\tx1080{\*\pn \pnlvlbody\ilvl0\ls3\pnrnot0\pndec }\ls3\adjustright \fs20\cgrid 
Error code, possible codes: ERR_OK - OK ERR_SPEED - This device does not work in the active clock configuration ERR_OVERFLOW - Software counter overflow ERR_MATH - Overflow during evaluation \par}
}}}
{\xe \v RealTimeLdd1_Init\:RealTimeLdd1 module documentation}
{\xe \v RealTimeLdd1 module documentation\:RealTimeLdd1_Init}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LDD_TDeviceData} * RealTimeLdd1_Init ({\b LDD_TUserData} * {\i UserDataPtr})}}
\par
{\bkmkstart AAAAAAACTI}
{\bkmkend AAAAAAACTI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Initializes the device. Allocates memory for the device data structure, allocates interrupt vectors and sets interrupt priority, sets pin routing, sets timing, etc. If the property ["Enable in init. code"] is set to "yes" value then the device is also enabled (see the description of the [Enable] method). In this case the [Enable] method is not necessary and needn't to be generated. This method can be called only once. Before the second call of Init the [Deinit] must be called first. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i UserDataPtr} \cell }{- Pointer to the user or RTOS specific data. This pointer will be passed as an event or callback parameter. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {
\par
\pard\plain \s82\fi-360\li1080\widctlpar\jclisttab\tx1080{\*\pn \pnlvlbody\ilvl0\ls3\pnrnot0\pndec }\ls3\adjustright \fs20\cgrid 
Pointer to the dynamically allocated private structure or NULL if there was an error. \par}
}}}
{\xe \v RealTimeLdd1_Reset\:RealTimeLdd1 module documentation}
{\xe \v RealTimeLdd1 module documentation\:RealTimeLdd1_Reset}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LDD_TError} RealTimeLdd1_Reset ({\b LDD_TDeviceData} * {\i DeviceDataPtr})}}
\par
{\bkmkstart AAAAAAACTJ}
{\bkmkend AAAAAAACTJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This method resets software counter. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i DeviceDataPtr} \cell }{- Device data structure pointer returned by [Init] method. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {
\par
\pard\plain \s82\fi-360\li1080\widctlpar\jclisttab\tx1080{\*\pn \pnlvlbody\ilvl0\ls3\pnrnot0\pndec }\ls3\adjustright \fs20\cgrid 
Error code, possible codes: ERR_OK - OK ERR_SPEED - This device does not work in the active clock configuration \par}
}}}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RealTimeLdd2 module documentation\par \pard\plain 
{\tc\tcl2 \v RealTimeLdd2 module documentation}
{\xe \v RealTimeLdd2 module documentation}
{\bkmkstart AAAAAAACTK}
{\bkmkend AAAAAAACTK}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Structures\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b RealTimeLdd2_TDeviceData}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macros\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b RealTimeLdd2_PRPH_BASE_ADDRESS}\~ 0x4003A000U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b RealTimeLdd2_DeviceData}\~ (({\b LDD_TDeviceData} *){\b PE_LDD_GetDeviceStructure}(PE_LDD_COMPONENT_RealTimeLdd2_ID))\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b RealTimeLdd2_Init_METHOD_ENABLED}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b RealTimeLdd2_Reset_METHOD_ENABLED}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b RealTimeLdd2_GetTimeUS_METHOD_ENABLED}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b RealTimeLdd2_GetTimeMS_METHOD_ENABLED}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b RealTimeLdd2_GetTimeSec_METHOD_ENABLED}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Typedefs\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

typedef {\b RealTimeLdd2_TDeviceData} * {\b RealTimeLdd2_TDeviceDataPtr}{\bkmkstart AAAAAAAALW}
{\bkmkend AAAAAAAALW}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LDD_TDeviceData} * {\b RealTimeLdd2_Init} ({\b LDD_TUserData} *UserDataPtr)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Initializes the device. Allocates memory for the device data structure, allocates interrupt vectors and sets interrupt priority, sets pin routing, sets timing, etc. If the property ["Enable in init. code"] is set to "yes" value then the device is also enabled (see the description of the [Enable] method). In this case the [Enable] method is not necessary and needn't to be generated. This method can be called only once. Before the second call of Init the [Deinit] must be called first. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LDD_TError} {\b RealTimeLdd2_Reset} ({\b LDD_TDeviceData} *DeviceDataPtr)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This method resets software counter. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LDD_TError} {\b RealTimeLdd2_GetTimeUS} ({\b LDD_TDeviceData} *DeviceDataPtr, uint16_t *TimePtr)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This method returns the time (as a 16-bit unsigned integer) in microseconds since the last Reset method call. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LDD_TError} {\b RealTimeLdd2_GetTimeMS} ({\b LDD_TDeviceData} *DeviceDataPtr, uint16_t *TimePtr)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This method returns the time (as a 16-bit unsigned integer) in milliseconds since the last Reset method call. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LDD_TError} {\b RealTimeLdd2_GetTimeSec} ({\b LDD_TDeviceData} *DeviceDataPtr, uint16_t *TimePtr)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This method returns the time (as a 16-bit unsigned integer) in seconds since the last Reset method call. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b TU4_OnCounterRestart} ({\b LDD_TUserData} *UserDataPtr){\bkmkstart AAAAAAAALX}
{\bkmkend AAAAAAAALX}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macro Definition Documentation\par
\pard\plain 
{\xe \v RealTimeLdd2_DeviceData\:RealTimeLdd2 module documentation}
{\xe \v RealTimeLdd2 module documentation\:RealTimeLdd2_DeviceData}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define RealTimeLdd2_DeviceData\~ (({\b LDD_TDeviceData} *){\b PE_LDD_GetDeviceStructure}(PE_LDD_COMPONENT_RealTimeLdd2_ID))}}
\par
{\bkmkstart AAAAAAACTL}
{\bkmkend AAAAAAACTL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Device data structure pointer used when auto initialization property is enabled. This constant can be passed as a first parameter to all component's methods. \par
}}
{\xe \v RealTimeLdd2_GetTimeMS_METHOD_ENABLED\:RealTimeLdd2 module documentation}
{\xe \v RealTimeLdd2 module documentation\:RealTimeLdd2_GetTimeMS_METHOD_ENABLED}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define RealTimeLdd2_GetTimeMS_METHOD_ENABLED}}
\par
{\bkmkstart AAAAAAACTM}
{\bkmkend AAAAAAACTM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
GetTimeMS method of the component RealTimeLdd2 is enabled (generated) \par
}}
{\xe \v RealTimeLdd2_GetTimeSec_METHOD_ENABLED\:RealTimeLdd2 module documentation}
{\xe \v RealTimeLdd2 module documentation\:RealTimeLdd2_GetTimeSec_METHOD_ENABLED}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define RealTimeLdd2_GetTimeSec_METHOD_ENABLED}}
\par
{\bkmkstart AAAAAAACTN}
{\bkmkend AAAAAAACTN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
GetTimeSec method of the component RealTimeLdd2 is enabled (generated) \par
}}
{\xe \v RealTimeLdd2_GetTimeUS_METHOD_ENABLED\:RealTimeLdd2 module documentation}
{\xe \v RealTimeLdd2 module documentation\:RealTimeLdd2_GetTimeUS_METHOD_ENABLED}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define RealTimeLdd2_GetTimeUS_METHOD_ENABLED}}
\par
{\bkmkstart AAAAAAACTO}
{\bkmkend AAAAAAACTO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
GetTimeUS method of the component RealTimeLdd2 is enabled (generated) \par
}}
{\xe \v RealTimeLdd2_Init_METHOD_ENABLED\:RealTimeLdd2 module documentation}
{\xe \v RealTimeLdd2 module documentation\:RealTimeLdd2_Init_METHOD_ENABLED}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define RealTimeLdd2_Init_METHOD_ENABLED}}
\par
{\bkmkstart AAAAAAACTP}
{\bkmkend AAAAAAACTP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Init method of the component RealTimeLdd2 is enabled (generated) \par
}}
{\xe \v RealTimeLdd2_PRPH_BASE_ADDRESS\:RealTimeLdd2 module documentation}
{\xe \v RealTimeLdd2 module documentation\:RealTimeLdd2_PRPH_BASE_ADDRESS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define RealTimeLdd2_PRPH_BASE_ADDRESS\~ 0x4003A000U}}
\par
{\bkmkstart AAAAAAACTQ}
{\bkmkend AAAAAAACTQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Peripheral base address of a device allocated by the component. This constant can be used directly in PDD macros. \par
}}
{\xe \v RealTimeLdd2_Reset_METHOD_ENABLED\:RealTimeLdd2 module documentation}
{\xe \v RealTimeLdd2 module documentation\:RealTimeLdd2_Reset_METHOD_ENABLED}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define RealTimeLdd2_Reset_METHOD_ENABLED}}
\par
{\bkmkstart AAAAAAACTR}
{\bkmkend AAAAAAACTR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Reset method of the component RealTimeLdd2 is enabled (generated) \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v RealTimeLdd2_GetTimeMS\:RealTimeLdd2 module documentation}
{\xe \v RealTimeLdd2 module documentation\:RealTimeLdd2_GetTimeMS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LDD_TError} RealTimeLdd2_GetTimeMS ({\b LDD_TDeviceData} * {\i DeviceDataPtr}, uint16_t * {\i TimePtr})}}
\par
{\bkmkstart AAAAAAACTS}
{\bkmkend AAAAAAACTS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This method returns the time (as a 16-bit unsigned integer) in milliseconds since the last Reset method call. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i DeviceDataPtr} \cell }{- Device data structure pointer returned by [Init] method. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i TimePtr} \cell }{- A pointer to the returned 16-bit value in milliseconds \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {
\par
\pard\plain \s82\fi-360\li1080\widctlpar\jclisttab\tx1080{\*\pn \pnlvlbody\ilvl0\ls3\pnrnot0\pndec }\ls3\adjustright \fs20\cgrid 
Error code, possible codes: ERR_OK - OK ERR_SPEED - This device does not work in the active clock configuration ERR_OVERFLOW - Software counter overflow ERR_MATH - Overflow during evaluation \par}
}}}
{\xe \v RealTimeLdd2_GetTimeSec\:RealTimeLdd2 module documentation}
{\xe \v RealTimeLdd2 module documentation\:RealTimeLdd2_GetTimeSec}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LDD_TError} RealTimeLdd2_GetTimeSec ({\b LDD_TDeviceData} * {\i DeviceDataPtr}, uint16_t * {\i TimePtr})}}
\par
{\bkmkstart AAAAAAACTT}
{\bkmkend AAAAAAACTT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This method returns the time (as a 16-bit unsigned integer) in seconds since the last Reset method call. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i DeviceDataPtr} \cell }{- Device data structure pointer returned by [Init] method. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i TimePtr} \cell }{- A pointer to the returned 16-bit value in seconds \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {
\par
\pard\plain \s82\fi-360\li1080\widctlpar\jclisttab\tx1080{\*\pn \pnlvlbody\ilvl0\ls3\pnrnot0\pndec }\ls3\adjustright \fs20\cgrid 
Error code, possible codes: ERR_OK - OK ERR_SPEED - This device does not work in the active speed mode ERR_OVERFLOW - Software counter overflow ERR_MATH - Overflow during evaluation \par}
}}}
{\xe \v RealTimeLdd2_GetTimeUS\:RealTimeLdd2 module documentation}
{\xe \v RealTimeLdd2 module documentation\:RealTimeLdd2_GetTimeUS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LDD_TError} RealTimeLdd2_GetTimeUS ({\b LDD_TDeviceData} * {\i DeviceDataPtr}, uint16_t * {\i TimePtr})}}
\par
{\bkmkstart AAAAAAACTU}
{\bkmkend AAAAAAACTU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This method returns the time (as a 16-bit unsigned integer) in microseconds since the last Reset method call. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i DeviceDataPtr} \cell }{- Device data structure pointer returned by [Init] method. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i TimePtr} \cell }{- A pointer to the returned 16-bit value in microseconds \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {
\par
\pard\plain \s82\fi-360\li1080\widctlpar\jclisttab\tx1080{\*\pn \pnlvlbody\ilvl0\ls3\pnrnot0\pndec }\ls3\adjustright \fs20\cgrid 
Error code, possible codes: ERR_OK - OK ERR_SPEED - This device does not work in the active clock configuration ERR_OVERFLOW - Software counter overflow ERR_MATH - Overflow during evaluation \par}
}}}
{\xe \v RealTimeLdd2_Init\:RealTimeLdd2 module documentation}
{\xe \v RealTimeLdd2 module documentation\:RealTimeLdd2_Init}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LDD_TDeviceData} * RealTimeLdd2_Init ({\b LDD_TUserData} * {\i UserDataPtr})}}
\par
{\bkmkstart AAAAAAACTV}
{\bkmkend AAAAAAACTV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Initializes the device. Allocates memory for the device data structure, allocates interrupt vectors and sets interrupt priority, sets pin routing, sets timing, etc. If the property ["Enable in init. code"] is set to "yes" value then the device is also enabled (see the description of the [Enable] method). In this case the [Enable] method is not necessary and needn't to be generated. This method can be called only once. Before the second call of Init the [Deinit] must be called first. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i UserDataPtr} \cell }{- Pointer to the user or RTOS specific data. This pointer will be passed as an event or callback parameter. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {
\par
\pard\plain \s82\fi-360\li1080\widctlpar\jclisttab\tx1080{\*\pn \pnlvlbody\ilvl0\ls3\pnrnot0\pndec }\ls3\adjustright \fs20\cgrid 
Pointer to the dynamically allocated private structure or NULL if there was an error. \par}
}}}
{\xe \v RealTimeLdd2_Reset\:RealTimeLdd2 module documentation}
{\xe \v RealTimeLdd2 module documentation\:RealTimeLdd2_Reset}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LDD_TError} RealTimeLdd2_Reset ({\b LDD_TDeviceData} * {\i DeviceDataPtr})}}
\par
{\bkmkstart AAAAAAACTW}
{\bkmkend AAAAAAACTW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This method resets software counter. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i DeviceDataPtr} \cell }{- Device data structure pointer returned by [Init] method. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {
\par
\pard\plain \s82\fi-360\li1080\widctlpar\jclisttab\tx1080{\*\pn \pnlvlbody\ilvl0\ls3\pnrnot0\pndec }\ls3\adjustright \fs20\cgrid 
Error code, possible codes: ERR_OK - OK ERR_SPEED - This device does not work in the active clock configuration \par}
}}}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RTC1 module documentation\par \pard\plain 
{\tc\tcl2 \v RTC1 module documentation}
{\xe \v RTC1 module documentation}
{\bkmkstart AAAAAAACTX}
{\bkmkend AAAAAAACTX}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Structures\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b RTC1_TDeviceData}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macros\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b RTC1_INTERRUPT_MODE}{\bkmkstart AAAAAAAAME}
{\bkmkend AAAAAAAAME}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b RTC1_PRPH_BASE_ADDRESS}\~ 0x4003D000U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b RTC1_DeviceData}\~ (({\b LDD_TDeviceData} *){\b PE_LDD_GetDeviceStructure}(PE_LDD_COMPONENT_RTC1_ID))\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b RTC1_Init_METHOD_ENABLED}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b RTC1_Enable_METHOD_ENABLED}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b RTC1_GetTime_METHOD_ENABLED}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b RTC1_SetTime_METHOD_ENABLED}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b RTC1_OnSecond_EVENT_ENABLED}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Typedefs\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

typedef struct {\b RTC1_TDeviceData} * {\b RTC1_TDeviceDataPtr}{\bkmkstart AAAAAAAAMA}
{\bkmkend AAAAAAAAMA}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LDD_TDeviceData} * {\b RTC1_Init} ({\b LDD_TUserData} *UserDataPtr, bool SoftInit)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Initializes the device. There are two modes of initialization. 1) RTC device is NOT battery backed up. (SoftInit = FALSE) All registers (interrupts, counters, clock routing \'85) that influence RTC behavior are initialized. Note: This initialization mode doesn't preserve time and date settings. 2) RTC device IS battery backed up. (SoftInit = TRUE). Only registers that are not backed up are initialized (Interrupt priority \'85). RTC device is running, time and date a preserved, RTC interrupts (events) are preserved too. Allocates memory for the device data structure. This method can be called only once. Before the second call of Init() the Deinit() must be called first. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LDD_TError} {\b RTC1_Enable} ({\b LDD_TDeviceData} *DeviceDataPtr)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Enables the real-time clock module (Typically sets the module enable bit). All other HW settings are preserved. RTC module can be disabled by the [Disable] method and reinitialized by the [Init] method. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b RTC1_GetTime} ({\b LDD_TDeviceData} *DeviceDataPtr, {\b LDD_RTC_TTime} *TimePtr)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Returns actual time and date. Note: Fields not supported by HW are calculated in software. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LDD_TError} {\b RTC1_SetTime} ({\b LDD_TDeviceData} *DeviceDataPtr, {\b LDD_RTC_TTime} *TimePtr)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets new time and date. Note: All {\b LDD_RTC_TTime} structure members must be correctly filled in. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b PE_ISR} (RTC1_Interrupt){\bkmkstart AAAAAAAAMB}
{\bkmkend AAAAAAAAMB}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b PE_ISR} (RTC1_SecondsInterrupt){\bkmkstart AAAAAAAAMC}
{\bkmkend AAAAAAAAMC}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macro Definition Documentation\par
\pard\plain 
{\xe \v RTC1_DeviceData\:RTC1 module documentation}
{\xe \v RTC1 module documentation\:RTC1_DeviceData}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define RTC1_DeviceData\~ (({\b LDD_TDeviceData} *){\b PE_LDD_GetDeviceStructure}(PE_LDD_COMPONENT_RTC1_ID))}}
\par
{\bkmkstart AAAAAAACTY}
{\bkmkend AAAAAAACTY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Device data structure pointer used when auto initialization property is enabled. This constant can be passed as a first parameter to all component's methods. \par
}}
{\xe \v RTC1_Enable_METHOD_ENABLED\:RTC1 module documentation}
{\xe \v RTC1 module documentation\:RTC1_Enable_METHOD_ENABLED}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define RTC1_Enable_METHOD_ENABLED}}
\par
{\bkmkstart AAAAAAACTZ}
{\bkmkend AAAAAAACTZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Enable method of the component RTC1 is enabled (generated) \par
}}
{\xe \v RTC1_GetTime_METHOD_ENABLED\:RTC1 module documentation}
{\xe \v RTC1 module documentation\:RTC1_GetTime_METHOD_ENABLED}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define RTC1_GetTime_METHOD_ENABLED}}
\par
{\bkmkstart AAAAAAACUA}
{\bkmkend AAAAAAACUA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
GetTime method of the component RTC1 is enabled (generated) \par
}}
{\xe \v RTC1_Init_METHOD_ENABLED\:RTC1 module documentation}
{\xe \v RTC1 module documentation\:RTC1_Init_METHOD_ENABLED}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define RTC1_Init_METHOD_ENABLED}}
\par
{\bkmkstart AAAAAAACUB}
{\bkmkend AAAAAAACUB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Init method of the component RTC1 is enabled (generated) \par
}}
{\xe \v RTC1_OnSecond_EVENT_ENABLED\:RTC1 module documentation}
{\xe \v RTC1 module documentation\:RTC1_OnSecond_EVENT_ENABLED}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define RTC1_OnSecond_EVENT_ENABLED}}
\par
{\bkmkstart AAAAAAACUC}
{\bkmkend AAAAAAACUC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
OnSecond event of the component RTC1 is enabled (generated) \par
}}
{\xe \v RTC1_PRPH_BASE_ADDRESS\:RTC1 module documentation}
{\xe \v RTC1 module documentation\:RTC1_PRPH_BASE_ADDRESS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define RTC1_PRPH_BASE_ADDRESS\~ 0x4003D000U}}
\par
{\bkmkstart AAAAAAACUD}
{\bkmkend AAAAAAACUD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Peripheral base address of a device allocated by the component. This constant can be used directly in PDD macros. \par
}}
{\xe \v RTC1_SetTime_METHOD_ENABLED\:RTC1 module documentation}
{\xe \v RTC1 module documentation\:RTC1_SetTime_METHOD_ENABLED}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define RTC1_SetTime_METHOD_ENABLED}}
\par
{\bkmkstart AAAAAAACUE}
{\bkmkend AAAAAAACUE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
SetTime method of the component RTC1 is enabled (generated) \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v RTC1_Enable\:RTC1 module documentation}
{\xe \v RTC1 module documentation\:RTC1_Enable}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LDD_TError} RTC1_Enable ({\b LDD_TDeviceData} * {\i DeviceDataPtr})}}
\par
{\bkmkstart AAAAAAACUF}
{\bkmkend AAAAAAACUF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Enables the real-time clock module (Typically sets the module enable bit). All other HW settings are preserved. RTC module can be disabled by the [Disable] method and reinitialized by the [Init] method. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i DeviceDataPtr} \cell }{- Pointer to device data structure pointer returned by [Init] method. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {
\par
\pard\plain \s82\fi-360\li1080\widctlpar\jclisttab\tx1080{\*\pn \pnlvlbody\ilvl0\ls3\pnrnot0\pndec }\ls3\adjustright \fs20\cgrid 
Error code, possible codes: ERR_OK - OK \par}
}}}
{\xe \v RTC1_GetTime\:RTC1 module documentation}
{\xe \v RTC1 module documentation\:RTC1_GetTime}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void RTC1_GetTime ({\b LDD_TDeviceData} * {\i DeviceDataPtr}, {\b LDD_RTC_TTime} * {\i TimePtr})}}
\par
{\bkmkstart AAAAAAACUG}
{\bkmkend AAAAAAACUG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Returns actual time and date. Note: Fields not supported by HW are calculated in software. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i DeviceDataPtr} \cell }{- Pointer to device data structure pointer returned by [Init] method. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i TimePtr} \cell }{- Pointer to the time structure to fill with current time. \cell }
{\row }
}
}}
{\xe \v RTC1_Init\:RTC1 module documentation}
{\xe \v RTC1 module documentation\:RTC1_Init}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LDD_TDeviceData} * RTC1_Init ({\b LDD_TUserData} * {\i UserDataPtr}, bool {\i SoftInit})}}
\par
{\bkmkstart AAAAAAACUH}
{\bkmkend AAAAAAACUH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Initializes the device. There are two modes of initialization. 1) RTC device is NOT battery backed up. (SoftInit = FALSE) All registers (interrupts, counters, clock routing \'85) that influence RTC behavior are initialized. Note: This initialization mode doesn't preserve time and date settings. 2) RTC device IS battery backed up. (SoftInit = TRUE). Only registers that are not backed up are initialized (Interrupt priority \'85). RTC device is running, time and date a preserved, RTC interrupts (events) are preserved too. Allocates memory for the device data structure. This method can be called only once. Before the second call of Init() the Deinit() must be called first. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i UserDataPtr} \cell }{- Pointer to the user or RTOS specific data. This pointer will be passed as an event or callback parameter. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i SoftInit} \cell }{- If set to "[true]" only registers that are not battery backup are initialized (E.g. Interrupt priority in interrupt controller \'85 ) If set to "[false]" all registers are initialized. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {
\par
\pard\plain \s82\fi-360\li1080\widctlpar\jclisttab\tx1080{\*\pn \pnlvlbody\ilvl0\ls3\pnrnot0\pndec }\ls3\adjustright \fs20\cgrid 
Pointer to the dynamically allocated private structure or NULL if there was an error. \par}
}}}
{\xe \v RTC1_SetTime\:RTC1 module documentation}
{\xe \v RTC1 module documentation\:RTC1_SetTime}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LDD_TError} RTC1_SetTime ({\b LDD_TDeviceData} * {\i DeviceDataPtr}, {\b LDD_RTC_TTime} * {\i TimePtr})}}
\par
{\bkmkstart AAAAAAACUI}
{\bkmkend AAAAAAACUI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets new time and date. Note: All {\b LDD_RTC_TTime} structure members must be correctly filled in. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i DeviceDataPtr} \cell }{- Pointer to device data structure pointer returned by [Init] method. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i TimePtr} \cell }{- Pointer to the time structure with new time to set. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {
\par
\pard\plain \s82\fi-360\li1080\widctlpar\jclisttab\tx1080{\*\pn \pnlvlbody\ilvl0\ls3\pnrnot0\pndec }\ls3\adjustright \fs20\cgrid 
Error code, possible codes:{
\par
\pard\plain \s83\fi-360\li1440\widctlpar\jclisttab\tx1440{\*\pn \pnlvlbody\ilvl0\ls4\pnrnot0\pndec }\ls4\adjustright \fs20\cgrid 
ERR_OK - OK.\par
\pard\plain \s83\fi-360\li1440\widctlpar\jclisttab\tx1440{\*\pn \pnlvlbody\ilvl0\ls4\pnrnot0\pndec }\ls4\adjustright \fs20\cgrid 
ERR_DISABLED - Component is disabled.\par
\pard\plain \s83\fi-360\li1440\widctlpar\jclisttab\tx1440{\*\pn \pnlvlbody\ilvl0\ls4\pnrnot0\pndec }\ls4\adjustright \fs20\cgrid 
ERR_SPEED - Component does not work in the active clock configuration.\par
\pard\plain \s83\fi-360\li1440\widctlpar\jclisttab\tx1440{\*\pn \pnlvlbody\ilvl0\ls4\pnrnot0\pndec }\ls4\adjustright \fs20\cgrid 
ERR_RANGE - Parameter out of range. \par}
\par}
}}}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
SM1 module documentation\par \pard\plain 
{\tc\tcl2 \v SM1 module documentation}
{\xe \v SM1 module documentation}
{\bkmkstart AAAAAAACUJ}
{\bkmkend AAAAAAACUJ}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Structures\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b SM1_TDeviceData}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macros\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b AVAILABLE_EVENTS_MASK}\~ ({\b LDD_SPIMASTER_ON_BLOCK_RECEIVED} | {\b LDD_SPIMASTER_ON_BLOCK_SENT}){\bkmkstart AAAAAAAAMG}
{\bkmkend AAAAAAAAMG}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b SM1_AVAILABLE_PIN_MASK}\~ ({\b LDD_SPIMASTER_OUTPUT_PIN} | {\b LDD_SPIMASTER_CLK_PIN}){\bkmkstart AAAAAAAAMH}
{\bkmkend AAAAAAAAMH}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b SM1_PRPH_BASE_ADDRESS}\~ 0x40076000U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b SM1_DeviceData}\~ (({\b LDD_TDeviceData} *){\b PE_LDD_GetDeviceStructure}(PE_LDD_COMPONENT_SM1_ID))\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b SM1_Init_METHOD_ENABLED}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b SM1_SendBlock_METHOD_ENABLED}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b SM1_ReceiveBlock_METHOD_ENABLED}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b SM1_OnBlockSent_EVENT_ENABLED}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b SM1_OnBlockReceived_EVENT_ENABLED}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b SM1_CHIP_SELECT_COUNT}\~ 0U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b SM1_CONFIGURATION_COUNT}\~ 1U\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Typedefs\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

typedef {\b SM1_TDeviceData} * {\b SM1_TDeviceDataPtr}{\bkmkstart AAAAAAAAMI}
{\bkmkend AAAAAAAAMI}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LDD_TDeviceData} * {\b SM1_Init} ({\b LDD_TUserData} *UserDataPtr)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Initializes the device. Allocates memory for the device data structure, allocates interrupt vectors and sets interrupt priority, sets pin routing, sets timing, etc. If the "Enable in init. code" is set to "yes" value then the device is also enabled(see the description of the Enable() method). In this case the Enable() method is not necessary and needn't to be generated. This method can be called only once. Before the second call of Init() the Deinit() must be called first. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LDD_TError} {\b SM1_ReceiveBlock} ({\b LDD_TDeviceData} *DeviceDataPtr, {\b LDD_TData} *BufferPtr, uint16_t Size)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This method specifies the number of data to receive. The method returns ERR_BUSY until the specified number of characters is received. The method <CancelBlockReception> can be used to cancel a running receive operation. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LDD_TError} {\b SM1_SendBlock} ({\b LDD_TDeviceData} *DeviceDataPtr, {\b LDD_TData} *BufferPtr, uint16_t Size)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This method sends a block of characters. The method returns ERR_BUSY when the previous block transmission is not completed. The method <CancelBlockTransmission> can be used to cancel a transmit operation. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b PE_ISR} (SM1_Interrupt){\bkmkstart AAAAAAAAMJ}
{\bkmkend AAAAAAAAMJ}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macro Definition Documentation\par
\pard\plain 
{\xe \v SM1_CHIP_SELECT_COUNT\:SM1 module documentation}
{\xe \v SM1 module documentation\:SM1_CHIP_SELECT_COUNT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define SM1_CHIP_SELECT_COUNT\~ 0U}}
\par
{\bkmkstart AAAAAAACUK}
{\bkmkend AAAAAAACUK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Number of chip selects \par
}}
{\xe \v SM1_CONFIGURATION_COUNT\:SM1 module documentation}
{\xe \v SM1 module documentation\:SM1_CONFIGURATION_COUNT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define SM1_CONFIGURATION_COUNT\~ 1U}}
\par
{\bkmkstart AAAAAAACUL}
{\bkmkend AAAAAAACUL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Number of predefined configurations \par
}}
{\xe \v SM1_DeviceData\:SM1 module documentation}
{\xe \v SM1 module documentation\:SM1_DeviceData}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define SM1_DeviceData\~ (({\b LDD_TDeviceData} *){\b PE_LDD_GetDeviceStructure}(PE_LDD_COMPONENT_SM1_ID))}}
\par
{\bkmkstart AAAAAAACUM}
{\bkmkend AAAAAAACUM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Device data structure pointer used when auto initialization property is enabled. This constant can be passed as a first parameter to all component's methods. \par
}}
{\xe \v SM1_Init_METHOD_ENABLED\:SM1 module documentation}
{\xe \v SM1 module documentation\:SM1_Init_METHOD_ENABLED}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define SM1_Init_METHOD_ENABLED}}
\par
{\bkmkstart AAAAAAACUN}
{\bkmkend AAAAAAACUN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Init method of the component SM1 is enabled (generated) \par
}}
{\xe \v SM1_OnBlockReceived_EVENT_ENABLED\:SM1 module documentation}
{\xe \v SM1 module documentation\:SM1_OnBlockReceived_EVENT_ENABLED}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define SM1_OnBlockReceived_EVENT_ENABLED}}
\par
{\bkmkstart AAAAAAACUO}
{\bkmkend AAAAAAACUO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
OnBlockReceived event of the component SM1 is enabled (generated) \par
}}
{\xe \v SM1_OnBlockSent_EVENT_ENABLED\:SM1 module documentation}
{\xe \v SM1 module documentation\:SM1_OnBlockSent_EVENT_ENABLED}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define SM1_OnBlockSent_EVENT_ENABLED}}
\par
{\bkmkstart AAAAAAACUP}
{\bkmkend AAAAAAACUP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
OnBlockSent event of the component SM1 is enabled (generated) \par
}}
{\xe \v SM1_PRPH_BASE_ADDRESS\:SM1 module documentation}
{\xe \v SM1 module documentation\:SM1_PRPH_BASE_ADDRESS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define SM1_PRPH_BASE_ADDRESS\~ 0x40076000U}}
\par
{\bkmkstart AAAAAAACUQ}
{\bkmkend AAAAAAACUQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Peripheral base address of a device allocated by the component. This constant can be used directly in PDD macros. \par
}}
{\xe \v SM1_ReceiveBlock_METHOD_ENABLED\:SM1 module documentation}
{\xe \v SM1 module documentation\:SM1_ReceiveBlock_METHOD_ENABLED}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define SM1_ReceiveBlock_METHOD_ENABLED}}
\par
{\bkmkstart AAAAAAACUR}
{\bkmkend AAAAAAACUR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
ReceiveBlock method of the component SM1 is enabled (generated) \par
}}
{\xe \v SM1_SendBlock_METHOD_ENABLED\:SM1 module documentation}
{\xe \v SM1 module documentation\:SM1_SendBlock_METHOD_ENABLED}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define SM1_SendBlock_METHOD_ENABLED}}
\par
{\bkmkstart AAAAAAACUS}
{\bkmkend AAAAAAACUS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
SendBlock method of the component SM1 is enabled (generated) \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v SM1_Init\:SM1 module documentation}
{\xe \v SM1 module documentation\:SM1_Init}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LDD_TDeviceData} * SM1_Init ({\b LDD_TUserData} * {\i UserDataPtr})}}
\par
{\bkmkstart AAAAAAACUT}
{\bkmkend AAAAAAACUT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Initializes the device. Allocates memory for the device data structure, allocates interrupt vectors and sets interrupt priority, sets pin routing, sets timing, etc. If the "Enable in init. code" is set to "yes" value then the device is also enabled(see the description of the Enable() method). In this case the Enable() method is not necessary and needn't to be generated. This method can be called only once. Before the second call of Init() the Deinit() must be called first. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i UserDataPtr} \cell }{- Pointer to the user or RTOS specific data. This pointer will be passed as an event or callback parameter. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {
\par
\pard\plain \s82\fi-360\li1080\widctlpar\jclisttab\tx1080{\*\pn \pnlvlbody\ilvl0\ls3\pnrnot0\pndec }\ls3\adjustright \fs20\cgrid 
Device data structure pointer. \par}
}}}
{\xe \v SM1_ReceiveBlock\:SM1 module documentation}
{\xe \v SM1 module documentation\:SM1_ReceiveBlock}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LDD_TError} SM1_ReceiveBlock ({\b LDD_TDeviceData} * {\i DeviceDataPtr}, {\b LDD_TData} * {\i BufferPtr}, uint16_t {\i Size})}}
\par
{\bkmkstart AAAAAAACUU}
{\bkmkend AAAAAAACUU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This method specifies the number of data to receive. The method returns ERR_BUSY until the specified number of characters is received. The method <CancelBlockReception> can be used to cancel a running receive operation. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i DeviceDataPtr} \cell }{- Device data structure pointer returned by <Init> method. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i BufferPtr} \cell }{- Pointer to A buffer where received characters will be stored. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i Size} \cell }{- Size of the block \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {
\par
\pard\plain \s82\fi-360\li1080\widctlpar\jclisttab\tx1080{\*\pn \pnlvlbody\ilvl0\ls3\pnrnot0\pndec }\ls3\adjustright \fs20\cgrid 
Error code, possible codes: ERR_OK - OK ERR_SPEED - This device does not work in the active clock configuration ERR_DISABLED - Component is disabled ERR_BUSY - The previous receive request is pending \par}
}}}
{\xe \v SM1_SendBlock\:SM1 module documentation}
{\xe \v SM1 module documentation\:SM1_SendBlock}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LDD_TError} SM1_SendBlock ({\b LDD_TDeviceData} * {\i DeviceDataPtr}, {\b LDD_TData} * {\i BufferPtr}, uint16_t {\i Size})}}
\par
{\bkmkstart AAAAAAACUV}
{\bkmkend AAAAAAACUV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This method sends a block of characters. The method returns ERR_BUSY when the previous block transmission is not completed. The method <CancelBlockTransmission> can be used to cancel a transmit operation. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i DeviceDataPtr} \cell }{- Device data structure pointer returned by <Init> method. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i BufferPtr} \cell }{- Pointer to the block of data to send. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i Size} \cell }{- Number of characters in the buffer. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {
\par
\pard\plain \s82\fi-360\li1080\widctlpar\jclisttab\tx1080{\*\pn \pnlvlbody\ilvl0\ls3\pnrnot0\pndec }\ls3\adjustright \fs20\cgrid 
Error code, possible codes: ERR_OK - OK ERR_SPEED - This device does not work in the active clock configuration ERR_DISABLED - Component is disabled ERR_BUSY - The previous transmit request is pending \par}
}}}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
TI1 module documentation\par \pard\plain 
{\tc\tcl2 \v TI1 module documentation}
{\xe \v TI1 module documentation}
{\bkmkstart AAAAAAACUW}
{\bkmkend AAAAAAACUW}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b TimerIntLdd1_OnInterrupt} ({\b LDD_TUserData} *UserDataPtr){\bkmkstart AAAAAAAAMM}
{\bkmkend AAAAAAAAMM}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Timer module documentation\par \pard\plain 
{\tc\tcl2 \v Timer module documentation}
{\xe \v Timer module documentation}
{\bkmkstart AAAAAAACUX}
{\bkmkend AAAAAAACUX}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macros\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b Timer_Reset}()\~ ({\b RealTimeLdd1_Reset}({\b RealTimeLdd1_DeviceData}))\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This method clears the counter. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b Timer_GetTimeUS}(Time)\~ ({\b RealTimeLdd1_GetTimeUS}({\b RealTimeLdd1_DeviceData}, (uint16_t *)Time)){\bkmkstart AAAAAAAAMQ}
{\bkmkend AAAAAAAAMQ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b Timer_GetTimeMS}(Time)\~ ({\b RealTimeLdd1_GetTimeMS}({\b RealTimeLdd1_DeviceData}, (uint16_t *)Time)){\bkmkstart AAAAAAAAMR}
{\bkmkend AAAAAAAAMR}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b Timer_GetTimeSec}(Time)\~ ({\b RealTimeLdd1_GetTimeSec}({\b RealTimeLdd1_DeviceData}, (uint16_t *)Time)){\bkmkstart AAAAAAAAMS}
{\bkmkend AAAAAAAAMS}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macro Definition Documentation\par
\pard\plain 
{\xe \v Timer_Reset\:Timer module documentation}
{\xe \v Timer module documentation\:Timer_Reset}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define Timer_Reset()\~ ({\b RealTimeLdd1_Reset}({\b RealTimeLdd1_DeviceData}))}}
\par
{\bkmkstart AAAAAAACUY}
{\bkmkend AAAAAAACUY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This method clears the counter. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {
\par
\pard\plain \s82\fi-360\li1080\widctlpar\jclisttab\tx1080{\*\pn \pnlvlbody\ilvl0\ls3\pnrnot0\pndec }\ls3\adjustright \fs20\cgrid 
Error code, possible codes: ERR_OK - OK ERR_SPEED - This device does not work in the active speed mode \par}
}}}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Timer_Buzzer module documentation\par \pard\plain 
{\tc\tcl2 \v Timer_Buzzer module documentation}
{\xe \v Timer_Buzzer module documentation}
{\bkmkstart AAAAAAACUZ}
{\bkmkend AAAAAAACUZ}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macros\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b Timer_Buzzer_Reset}()\~ ({\b RealTimeLdd2_Reset}({\b RealTimeLdd2_DeviceData}))\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This method clears the counter. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b Timer_Buzzer_GetTimeUS}(Time)\~ ({\b RealTimeLdd2_GetTimeUS}({\b RealTimeLdd2_DeviceData}, (uint16_t *)Time)){\bkmkstart AAAAAAAAMV}
{\bkmkend AAAAAAAAMV}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b Timer_Buzzer_GetTimeMS}(Time)\~ ({\b RealTimeLdd2_GetTimeMS}({\b RealTimeLdd2_DeviceData}, (uint16_t *)Time)){\bkmkstart AAAAAAAAMW}
{\bkmkend AAAAAAAAMW}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b Timer_Buzzer_GetTimeSec}(Time)\~ ({\b RealTimeLdd2_GetTimeSec}({\b RealTimeLdd2_DeviceData}, (uint16_t *)Time)){\bkmkstart AAAAAAAAMX}
{\bkmkend AAAAAAAAMX}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macro Definition Documentation\par
\pard\plain 
{\xe \v Timer_Buzzer_Reset\:Timer_Buzzer module documentation}
{\xe \v Timer_Buzzer module documentation\:Timer_Buzzer_Reset}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define Timer_Buzzer_Reset()\~ ({\b RealTimeLdd2_Reset}({\b RealTimeLdd2_DeviceData}))}}
\par
{\bkmkstart AAAAAAACVA}
{\bkmkend AAAAAAACVA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This method clears the counter. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {
\par
\pard\plain \s82\fi-360\li1080\widctlpar\jclisttab\tx1080{\*\pn \pnlvlbody\ilvl0\ls3\pnrnot0\pndec }\ls3\adjustright \fs20\cgrid 
Error code, possible codes: ERR_OK - OK ERR_SPEED - This device does not work in the active speed mode \par}
}}}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
TimerIntLdd1 module documentation\par \pard\plain 
{\tc\tcl2 \v TimerIntLdd1 module documentation}
{\xe \v TimerIntLdd1 module documentation}
{\bkmkstart AAAAAAACVB}
{\bkmkend AAAAAAACVB}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Structures\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b TimerIntLdd1_TDeviceData}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macros\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b AVAILABLE_EVENTS_MASK}\~ ({\b LDD_TEventMask})({\b LDD_TIMERINT_ON_INTERRUPT}){\bkmkstart AAAAAAAAMZ}
{\bkmkend AAAAAAAAMZ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b TimerIntLdd1_PRPH_BASE_ADDRESS}\~ 0x40040000U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b TimerIntLdd1_DeviceData}\~ (({\b LDD_TDeviceData} *){\b PE_LDD_GetDeviceStructure}(PE_LDD_COMPONENT_TimerIntLdd1_ID))\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b TimerIntLdd1_Init_METHOD_ENABLED}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b TimerIntLdd1_OnInterrupt_EVENT_ENABLED}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Typedefs\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

typedef {\b TimerIntLdd1_TDeviceData} * {\b TimerIntLdd1_TDeviceDataPtr}{\bkmkstart AAAAAAAANA}
{\bkmkend AAAAAAAANA}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LDD_TDeviceData} * {\b TimerIntLdd1_Init} ({\b LDD_TUserData} *UserDataPtr)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Initializes the device. Allocates memory for the device data structure, allocates interrupt vectors and sets interrupt priority, sets pin routing, sets timing, etc. If the property ["Enable in init. code"] is set to "yes" value then the device is also enabled (see the description of the [Enable] method). In this case the [Enable] method is not necessary and needn't to be generated. This method can be called only once. Before the second call of Init the [Deinit] must be called first. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b TU1_OnCounterRestart} ({\b LDD_TUserData} *UserDataPtr){\bkmkstart AAAAAAAANB}
{\bkmkend AAAAAAAANB}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macro Definition Documentation\par
\pard\plain 
{\xe \v TimerIntLdd1_DeviceData\:TimerIntLdd1 module documentation}
{\xe \v TimerIntLdd1 module documentation\:TimerIntLdd1_DeviceData}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define TimerIntLdd1_DeviceData\~ (({\b LDD_TDeviceData} *){\b PE_LDD_GetDeviceStructure}(PE_LDD_COMPONENT_TimerIntLdd1_ID))}}
\par
{\bkmkstart AAAAAAACVC}
{\bkmkend AAAAAAACVC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Device data structure pointer used when auto initialization property is enabled. This constant can be passed as a first parameter to all component's methods. \par
}}
{\xe \v TimerIntLdd1_Init_METHOD_ENABLED\:TimerIntLdd1 module documentation}
{\xe \v TimerIntLdd1 module documentation\:TimerIntLdd1_Init_METHOD_ENABLED}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define TimerIntLdd1_Init_METHOD_ENABLED}}
\par
{\bkmkstart AAAAAAACVD}
{\bkmkend AAAAAAACVD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Init method of the component TimerIntLdd1 is enabled (generated) \par
}}
{\xe \v TimerIntLdd1_OnInterrupt_EVENT_ENABLED\:TimerIntLdd1 module documentation}
{\xe \v TimerIntLdd1 module documentation\:TimerIntLdd1_OnInterrupt_EVENT_ENABLED}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define TimerIntLdd1_OnInterrupt_EVENT_ENABLED}}
\par
{\bkmkstart AAAAAAACVE}
{\bkmkend AAAAAAACVE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
OnInterrupt event of the component TimerIntLdd1 is enabled (generated) \par
}}
{\xe \v TimerIntLdd1_PRPH_BASE_ADDRESS\:TimerIntLdd1 module documentation}
{\xe \v TimerIntLdd1 module documentation\:TimerIntLdd1_PRPH_BASE_ADDRESS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define TimerIntLdd1_PRPH_BASE_ADDRESS\~ 0x40040000U}}
\par
{\bkmkstart AAAAAAACVF}
{\bkmkend AAAAAAACVF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Peripheral base address of a device allocated by the component. This constant can be used directly in PDD macros. \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v TimerIntLdd1_Init\:TimerIntLdd1 module documentation}
{\xe \v TimerIntLdd1 module documentation\:TimerIntLdd1_Init}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LDD_TDeviceData} * TimerIntLdd1_Init ({\b LDD_TUserData} * {\i UserDataPtr})}}
\par
{\bkmkstart AAAAAAACVG}
{\bkmkend AAAAAAACVG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Initializes the device. Allocates memory for the device data structure, allocates interrupt vectors and sets interrupt priority, sets pin routing, sets timing, etc. If the property ["Enable in init. code"] is set to "yes" value then the device is also enabled (see the description of the [Enable] method). In this case the [Enable] method is not necessary and needn't to be generated. This method can be called only once. Before the second call of Init the [Deinit] must be called first. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i UserDataPtr} \cell }{- Pointer to the user or RTOS specific data. This pointer will be passed as an event or callback parameter. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {
\par
\pard\plain \s82\fi-360\li1080\widctlpar\jclisttab\tx1080{\*\pn \pnlvlbody\ilvl0\ls3\pnrnot0\pndec }\ls3\adjustright \fs20\cgrid 
Pointer to the dynamically allocated private structure or NULL if there was an error. \par}
}}}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
TU1 module documentation\par \pard\plain 
{\tc\tcl2 \v TU1 module documentation}
{\xe \v TU1 module documentation}
{\bkmkstart AAAAAAACVH}
{\bkmkend AAAAAAACVH}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Structures\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b TU1_TDeviceData}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macros\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b AVAILABLE_EVENTS_MASK}\~ ({\b LDD_TEventMask})({\b LDD_TIMERUNIT_ON_COUNTER_RESTART}){\bkmkstart AAAAAAAANE}
{\bkmkend AAAAAAAANE}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b __BWUserType_TU1_TValueType}{\bkmkstart AAAAAAAANI}
{\bkmkend AAAAAAAANI}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b TU1_CNT_INP_FREQ_U_0}\~ 0x00UL    /* Counter input frequency in Hz */{\bkmkstart AAAAAAAANJ}
{\bkmkend AAAAAAAANJ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b TU1_CNT_INP_FREQ_R_0}\~ 0.5F      /* Counter input frequency in Hz */{\bkmkstart AAAAAAAANK}
{\bkmkend AAAAAAAANK}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b TU1_CNT_INP_FREQ_COUNT}\~ 0U      /* Count of predefined counter input frequencies */{\bkmkstart AAAAAAAANL}
{\bkmkend AAAAAAAANL}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b TU1_PERIOD_TICKS}\~ 0x01UL      /* Initialization value of period in 'counter ticks' */{\bkmkstart AAAAAAAANM}
{\bkmkend AAAAAAAANM}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b TU1_NUMBER_OF_CHANNELS}\~ 0x00U   /* Count of predefined channels */{\bkmkstart AAAAAAAANN}
{\bkmkend AAAAAAAANN}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b TU1_COUNTER_WIDTH}\~ 0x10U       /* Counter width in bits  */{\bkmkstart AAAAAAAANO}
{\bkmkend AAAAAAAANO}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b TU1_COUNTER_DIR}\~ {\b DIR_UP}      /* Direction of counting */{\bkmkstart AAAAAAAANP}
{\bkmkend AAAAAAAANP}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b TU1_PRPH_BASE_ADDRESS}\~ 0x40040000U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b TU1_Init_METHOD_ENABLED}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b TU1_OnCounterRestart_EVENT_ENABLED}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Typedefs\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

typedef {\b TU1_TDeviceData} * {\b TU1_TDeviceDataPtr}{\bkmkstart AAAAAAAANF}
{\bkmkend AAAAAAAANF}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

typedef uint16_t {\b TU1_TValueType}{\bkmkstart AAAAAAAANQ}
{\bkmkend AAAAAAAANQ}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LDD_TDeviceData} * {\b TU1_Init} ({\b LDD_TUserData} *UserDataPtr)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Initializes the device. Allocates memory for the device data structure, allocates interrupt vectors and sets interrupt priority, sets pin routing, sets timing, etc. If the property ["Enable in init. code"] is set to "yes" value then the device is also enabled (see the description of the [Enable] method). In this case the [Enable] method is not necessary and needn't to be generated. This method can be called only once. Before the second call of Init the [Deinit] must be called first. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b PE_ISR} (TU1_Interrupt){\bkmkstart AAAAAAAANG}
{\bkmkend AAAAAAAANG}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macro Definition Documentation\par
\pard\plain 
{\xe \v TU1_Init_METHOD_ENABLED\:TU1 module documentation}
{\xe \v TU1 module documentation\:TU1_Init_METHOD_ENABLED}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define TU1_Init_METHOD_ENABLED}}
\par
{\bkmkstart AAAAAAACVI}
{\bkmkend AAAAAAACVI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Init method of the component TU1 is enabled (generated) \par
}}
{\xe \v TU1_OnCounterRestart_EVENT_ENABLED\:TU1 module documentation}
{\xe \v TU1 module documentation\:TU1_OnCounterRestart_EVENT_ENABLED}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define TU1_OnCounterRestart_EVENT_ENABLED}}
\par
{\bkmkstart AAAAAAACVJ}
{\bkmkend AAAAAAACVJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
OnCounterRestart event of the component TU1 is enabled (generated) \par
}}
{\xe \v TU1_PRPH_BASE_ADDRESS\:TU1 module documentation}
{\xe \v TU1 module documentation\:TU1_PRPH_BASE_ADDRESS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define TU1_PRPH_BASE_ADDRESS\~ 0x40040000U}}
\par
{\bkmkstart AAAAAAACVK}
{\bkmkend AAAAAAACVK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Peripheral base address of a device allocated by the component. This constant can be used directly in PDD macros. \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v TU1_Init\:TU1 module documentation}
{\xe \v TU1 module documentation\:TU1_Init}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LDD_TDeviceData} * TU1_Init ({\b LDD_TUserData} * {\i UserDataPtr})}}
\par
{\bkmkstart AAAAAAACVL}
{\bkmkend AAAAAAACVL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Initializes the device. Allocates memory for the device data structure, allocates interrupt vectors and sets interrupt priority, sets pin routing, sets timing, etc. If the property ["Enable in init. code"] is set to "yes" value then the device is also enabled (see the description of the [Enable] method). In this case the [Enable] method is not necessary and needn't to be generated. This method can be called only once. Before the second call of Init the [Deinit] must be called first. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i UserDataPtr} \cell }{- Pointer to the user or RTOS specific data. This pointer will be passed as an event or callback parameter. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {
\par
\pard\plain \s82\fi-360\li1080\widctlpar\jclisttab\tx1080{\*\pn \pnlvlbody\ilvl0\ls3\pnrnot0\pndec }\ls3\adjustright \fs20\cgrid 
Pointer to the dynamically allocated private structure or NULL if there was an error. \par}
}}}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
TU3 module documentation\par \pard\plain 
{\tc\tcl2 \v TU3 module documentation}
{\xe \v TU3 module documentation}
{\bkmkstart AAAAAAACVM}
{\bkmkend AAAAAAACVM}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Structures\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b TU3_TDeviceData}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macros\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b AVAILABLE_EVENTS_MASK}\~ ({\b LDD_TEventMask})({\b LDD_TIMERUNIT_ON_COUNTER_RESTART}){\bkmkstart AAAAAAAANS}
{\bkmkend AAAAAAAANS}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b __BWUserType_TU3_TValueType}{\bkmkstart AAAAAAAANW}
{\bkmkend AAAAAAAANW}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b TU3_CNT_INP_FREQ_U_0}\~ 0x000A0000UL /* Counter input frequency in Hz */{\bkmkstart AAAAAAAANX}
{\bkmkend AAAAAAAANX}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b TU3_CNT_INP_FREQ_R_0}\~ 655359.9597346841F /* Counter input frequency in Hz */{\bkmkstart AAAAAAAANY}
{\bkmkend AAAAAAAANY}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b TU3_CNT_INP_FREQ_COUNT}\~ 0U      /* Count of predefined counter input frequencies */{\bkmkstart AAAAAAAANZ}
{\bkmkend AAAAAAAANZ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b TU3_PERIOD_TICKS}\~ 0x00010000UL /* Initialization value of period in 'counter ticks' */{\bkmkstart AAAAAAAAOA}
{\bkmkend AAAAAAAAOA}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b TU3_NUMBER_OF_CHANNELS}\~ 0x00U   /* Count of predefined channels */{\bkmkstart AAAAAAAAOB}
{\bkmkend AAAAAAAAOB}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b TU3_COUNTER_WIDTH}\~ 0x10U       /* Counter width in bits  */{\bkmkstart AAAAAAAAOC}
{\bkmkend AAAAAAAAOC}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b TU3_COUNTER_DIR}\~ {\b DIR_UP}      /* Direction of counting */{\bkmkstart AAAAAAAAOD}
{\bkmkend AAAAAAAAOD}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b TU3_PRPH_BASE_ADDRESS}\~ 0x40038000U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b TU3_Init_METHOD_ENABLED}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b TU3_ResetCounter_METHOD_ENABLED}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b TU3_OnCounterRestart_EVENT_ENABLED}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Typedefs\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

typedef {\b TU3_TDeviceData} * {\b TU3_TDeviceDataPtr}{\bkmkstart AAAAAAAANT}
{\bkmkend AAAAAAAANT}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

typedef uint16_t {\b TU3_TValueType}{\bkmkstart AAAAAAAAOE}
{\bkmkend AAAAAAAAOE}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LDD_TDeviceData} * {\b TU3_Init} ({\b LDD_TUserData} *UserDataPtr)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Initializes the device. Allocates memory for the device data structure, allocates interrupt vectors and sets interrupt priority, sets pin routing, sets timing, etc. If the property ["Enable in init. code"] is set to "yes" value then the device is also enabled (see the description of the [Enable] method). In this case the [Enable] method is not necessary and needn't to be generated. This method can be called only once. Before the second call of Init the [Deinit] must be called first. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LDD_TError} {\b TU3_ResetCounter} ({\b LDD_TDeviceData} *DeviceDataPtr)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Resets counter. If counter is counting up then it is set to zero. If counter is counting down then counter is updated to the reload value. The method is not available if HW doesn't allow resetting of the counter. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b PE_ISR} (TU3_Interrupt){\bkmkstart AAAAAAAANU}
{\bkmkend AAAAAAAANU}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macro Definition Documentation\par
\pard\plain 
{\xe \v TU3_Init_METHOD_ENABLED\:TU3 module documentation}
{\xe \v TU3 module documentation\:TU3_Init_METHOD_ENABLED}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define TU3_Init_METHOD_ENABLED}}
\par
{\bkmkstart AAAAAAACVN}
{\bkmkend AAAAAAACVN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Init method of the component TU3 is enabled (generated) \par
}}
{\xe \v TU3_OnCounterRestart_EVENT_ENABLED\:TU3 module documentation}
{\xe \v TU3 module documentation\:TU3_OnCounterRestart_EVENT_ENABLED}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define TU3_OnCounterRestart_EVENT_ENABLED}}
\par
{\bkmkstart AAAAAAACVO}
{\bkmkend AAAAAAACVO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
OnCounterRestart event of the component TU3 is enabled (generated) \par
}}
{\xe \v TU3_PRPH_BASE_ADDRESS\:TU3 module documentation}
{\xe \v TU3 module documentation\:TU3_PRPH_BASE_ADDRESS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define TU3_PRPH_BASE_ADDRESS\~ 0x40038000U}}
\par
{\bkmkstart AAAAAAACVP}
{\bkmkend AAAAAAACVP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Peripheral base address of a device allocated by the component. This constant can be used directly in PDD macros. \par
}}
{\xe \v TU3_ResetCounter_METHOD_ENABLED\:TU3 module documentation}
{\xe \v TU3 module documentation\:TU3_ResetCounter_METHOD_ENABLED}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define TU3_ResetCounter_METHOD_ENABLED}}
\par
{\bkmkstart AAAAAAACVQ}
{\bkmkend AAAAAAACVQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
ResetCounter method of the component TU3 is enabled (generated) \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v TU3_Init\:TU3 module documentation}
{\xe \v TU3 module documentation\:TU3_Init}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LDD_TDeviceData} * TU3_Init ({\b LDD_TUserData} * {\i UserDataPtr})}}
\par
{\bkmkstart AAAAAAACVR}
{\bkmkend AAAAAAACVR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Initializes the device. Allocates memory for the device data structure, allocates interrupt vectors and sets interrupt priority, sets pin routing, sets timing, etc. If the property ["Enable in init. code"] is set to "yes" value then the device is also enabled (see the description of the [Enable] method). In this case the [Enable] method is not necessary and needn't to be generated. This method can be called only once. Before the second call of Init the [Deinit] must be called first. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i UserDataPtr} \cell }{- Pointer to the user or RTOS specific data. This pointer will be passed as an event or callback parameter. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {
\par
\pard\plain \s82\fi-360\li1080\widctlpar\jclisttab\tx1080{\*\pn \pnlvlbody\ilvl0\ls3\pnrnot0\pndec }\ls3\adjustright \fs20\cgrid 
Pointer to the dynamically allocated private structure or NULL if there was an error. \par}
}}}
{\xe \v TU3_ResetCounter\:TU3 module documentation}
{\xe \v TU3 module documentation\:TU3_ResetCounter}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LDD_TError} TU3_ResetCounter ({\b LDD_TDeviceData} * {\i DeviceDataPtr})}}
\par
{\bkmkstart AAAAAAACVS}
{\bkmkend AAAAAAACVS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Resets counter. If counter is counting up then it is set to zero. If counter is counting down then counter is updated to the reload value. The method is not available if HW doesn't allow resetting of the counter. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i DeviceDataPtr} \cell }{- Device data structure pointer returned by [Init] method. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {
\par
\pard\plain \s82\fi-360\li1080\widctlpar\jclisttab\tx1080{\*\pn \pnlvlbody\ilvl0\ls3\pnrnot0\pndec }\ls3\adjustright \fs20\cgrid 
Error code, possible codes: ERR_OK - OK ERR_SPEED - The component does not work in the active clock configuration \par}
}}}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
TU4 module documentation\par \pard\plain 
{\tc\tcl2 \v TU4 module documentation}
{\xe \v TU4 module documentation}
{\bkmkstart AAAAAAACVT}
{\bkmkend AAAAAAACVT}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Structures\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b TU4_TDeviceData}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macros\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b AVAILABLE_EVENTS_MASK}\~ ({\b LDD_TEventMask})({\b LDD_TIMERUNIT_ON_COUNTER_RESTART}){\bkmkstart AAAAAAAAOG}
{\bkmkend AAAAAAAAOG}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b __BWUserType_TU4_TValueType}{\bkmkstart AAAAAAAAOK}
{\bkmkend AAAAAAAAOK}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b TU4_CNT_INP_FREQ_U_0}\~ 0x000A0000UL /* Counter input frequency in Hz */{\bkmkstart AAAAAAAAOL}
{\bkmkend AAAAAAAAOL}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b TU4_CNT_INP_FREQ_R_0}\~ 655359.9597346841F /* Counter input frequency in Hz */{\bkmkstart AAAAAAAAOM}
{\bkmkend AAAAAAAAOM}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b TU4_CNT_INP_FREQ_COUNT}\~ 0U      /* Count of predefined counter input frequencies */{\bkmkstart AAAAAAAAON}
{\bkmkend AAAAAAAAON}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b TU4_PERIOD_TICKS}\~ 0x00010000UL /* Initialization value of period in 'counter ticks' */{\bkmkstart AAAAAAAAOO}
{\bkmkend AAAAAAAAOO}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b TU4_NUMBER_OF_CHANNELS}\~ 0x00U   /* Count of predefined channels */{\bkmkstart AAAAAAAAOP}
{\bkmkend AAAAAAAAOP}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b TU4_COUNTER_WIDTH}\~ 0x10U       /* Counter width in bits  */{\bkmkstart AAAAAAAAOQ}
{\bkmkend AAAAAAAAOQ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b TU4_COUNTER_DIR}\~ {\b DIR_UP}      /* Direction of counting */{\bkmkstart AAAAAAAAOR}
{\bkmkend AAAAAAAAOR}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b TU4_PRPH_BASE_ADDRESS}\~ 0x4003A000U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b TU4_Init_METHOD_ENABLED}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b TU4_ResetCounter_METHOD_ENABLED}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b TU4_OnCounterRestart_EVENT_ENABLED}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Typedefs\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

typedef {\b TU4_TDeviceData} * {\b TU4_TDeviceDataPtr}{\bkmkstart AAAAAAAAOH}
{\bkmkend AAAAAAAAOH}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

typedef uint16_t {\b TU4_TValueType}{\bkmkstart AAAAAAAAOS}
{\bkmkend AAAAAAAAOS}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LDD_TDeviceData} * {\b TU4_Init} ({\b LDD_TUserData} *UserDataPtr)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Initializes the device. Allocates memory for the device data structure, allocates interrupt vectors and sets interrupt priority, sets pin routing, sets timing, etc. If the property ["Enable in init. code"] is set to "yes" value then the device is also enabled (see the description of the [Enable] method). In this case the [Enable] method is not necessary and needn't to be generated. This method can be called only once. Before the second call of Init the [Deinit] must be called first. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LDD_TError} {\b TU4_ResetCounter} ({\b LDD_TDeviceData} *DeviceDataPtr)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Resets counter. If counter is counting up then it is set to zero. If counter is counting down then counter is updated to the reload value. The method is not available if HW doesn't allow resetting of the counter. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b PE_ISR} (TU4_Interrupt){\bkmkstart AAAAAAAAOI}
{\bkmkend AAAAAAAAOI}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macro Definition Documentation\par
\pard\plain 
{\xe \v TU4_Init_METHOD_ENABLED\:TU4 module documentation}
{\xe \v TU4 module documentation\:TU4_Init_METHOD_ENABLED}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define TU4_Init_METHOD_ENABLED}}
\par
{\bkmkstart AAAAAAACVU}
{\bkmkend AAAAAAACVU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Init method of the component TU4 is enabled (generated) \par
}}
{\xe \v TU4_OnCounterRestart_EVENT_ENABLED\:TU4 module documentation}
{\xe \v TU4 module documentation\:TU4_OnCounterRestart_EVENT_ENABLED}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define TU4_OnCounterRestart_EVENT_ENABLED}}
\par
{\bkmkstart AAAAAAACVV}
{\bkmkend AAAAAAACVV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
OnCounterRestart event of the component TU4 is enabled (generated) \par
}}
{\xe \v TU4_PRPH_BASE_ADDRESS\:TU4 module documentation}
{\xe \v TU4 module documentation\:TU4_PRPH_BASE_ADDRESS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define TU4_PRPH_BASE_ADDRESS\~ 0x4003A000U}}
\par
{\bkmkstart AAAAAAACVW}
{\bkmkend AAAAAAACVW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Peripheral base address of a device allocated by the component. This constant can be used directly in PDD macros. \par
}}
{\xe \v TU4_ResetCounter_METHOD_ENABLED\:TU4 module documentation}
{\xe \v TU4 module documentation\:TU4_ResetCounter_METHOD_ENABLED}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define TU4_ResetCounter_METHOD_ENABLED}}
\par
{\bkmkstart AAAAAAACVX}
{\bkmkend AAAAAAACVX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
ResetCounter method of the component TU4 is enabled (generated) \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v TU4_Init\:TU4 module documentation}
{\xe \v TU4 module documentation\:TU4_Init}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LDD_TDeviceData} * TU4_Init ({\b LDD_TUserData} * {\i UserDataPtr})}}
\par
{\bkmkstart AAAAAAACVY}
{\bkmkend AAAAAAACVY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Initializes the device. Allocates memory for the device data structure, allocates interrupt vectors and sets interrupt priority, sets pin routing, sets timing, etc. If the property ["Enable in init. code"] is set to "yes" value then the device is also enabled (see the description of the [Enable] method). In this case the [Enable] method is not necessary and needn't to be generated. This method can be called only once. Before the second call of Init the [Deinit] must be called first. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i UserDataPtr} \cell }{- Pointer to the user or RTOS specific data. This pointer will be passed as an event or callback parameter. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {
\par
\pard\plain \s82\fi-360\li1080\widctlpar\jclisttab\tx1080{\*\pn \pnlvlbody\ilvl0\ls3\pnrnot0\pndec }\ls3\adjustright \fs20\cgrid 
Pointer to the dynamically allocated private structure or NULL if there was an error. \par}
}}}
{\xe \v TU4_ResetCounter\:TU4 module documentation}
{\xe \v TU4 module documentation\:TU4_ResetCounter}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LDD_TError} TU4_ResetCounter ({\b LDD_TDeviceData} * {\i DeviceDataPtr})}}
\par
{\bkmkstart AAAAAAACVZ}
{\bkmkend AAAAAAACVZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Resets counter. If counter is counting up then it is set to zero. If counter is counting down then counter is updated to the reload value. The method is not available if HW doesn't allow resetting of the counter. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i DeviceDataPtr} \cell }{- Device data structure pointer returned by [Init] method. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {
\par
\pard\plain \s82\fi-360\li1080\widctlpar\jclisttab\tx1080{\*\pn \pnlvlbody\ilvl0\ls3\pnrnot0\pndec }\ls3\adjustright \fs20\cgrid 
Error code, possible codes: ERR_OK - OK ERR_SPEED - The component does not work in the active clock configuration \par}
}}}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
TU6 module documentation\par \pard\plain 
{\tc\tcl2 \v TU6 module documentation}
{\xe \v TU6 module documentation}
{\bkmkstart AAAAAAACWA}
{\bkmkend AAAAAAACWA}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Structures\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b TU6_TDeviceData}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macros\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b __BWUserType_TU6_TValueType}{\bkmkstart AAAAAAAAOW}
{\bkmkend AAAAAAAAOW}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b TU6_CNT_INP_FREQ_U_0}\~ 0x01400000UL /* Counter input frequency in Hz */{\bkmkstart AAAAAAAAOX}
{\bkmkend AAAAAAAAOX}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b TU6_CNT_INP_FREQ_R_0}\~ 20971395.017196544F /* Counter input frequency in Hz */{\bkmkstart AAAAAAAAOY}
{\bkmkend AAAAAAAAOY}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b TU6_CNT_INP_FREQ_COUNT}\~ 0U      /* Count of predefined counter input frequencies */{\bkmkstart AAAAAAAAOZ}
{\bkmkend AAAAAAAAOZ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b TU6_PERIOD_TICKS}\~ 0x00200000UL /* Initialization value of period in 'counter ticks' */{\bkmkstart AAAAAAAAPA}
{\bkmkend AAAAAAAAPA}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b TU6_NUMBER_OF_CHANNELS}\~ 0x00U   /* Count of predefined channels */{\bkmkstart AAAAAAAAPB}
{\bkmkend AAAAAAAAPB}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b TU6_COUNTER_WIDTH}\~ 0x20U       /* Counter width in bits  */{\bkmkstart AAAAAAAAPC}
{\bkmkend AAAAAAAAPC}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b TU6_COUNTER_DIR}\~ {\b DIR_DOWN}    /* Direction of counting */{\bkmkstart AAAAAAAAPD}
{\bkmkend AAAAAAAAPD}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b TU6_PRPH_BASE_ADDRESS}\~ 0x40037000U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b TU6_Init_METHOD_ENABLED}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b TU6_ResetCounter_METHOD_ENABLED}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Typedefs\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

typedef {\b TU6_TDeviceData} * {\b TU6_TDeviceDataPtr}{\bkmkstart AAAAAAAAOU}
{\bkmkend AAAAAAAAOU}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

typedef uint32_t {\b TU6_TValueType}{\bkmkstart AAAAAAAAPE}
{\bkmkend AAAAAAAAPE}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LDD_TDeviceData} * {\b TU6_Init} ({\b LDD_TUserData} *UserDataPtr)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Initializes the device. Allocates memory for the device data structure, allocates interrupt vectors and sets interrupt priority, sets pin routing, sets timing, etc. If the property ["Enable in init. code"] is set to "yes" value then the device is also enabled (see the description of the [Enable] method). In this case the [Enable] method is not necessary and needn't to be generated. This method can be called only once. Before the second call of Init the [Deinit] must be called first. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LDD_TError} {\b TU6_ResetCounter} ({\b LDD_TDeviceData} *DeviceDataPtr)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Resets counter. If counter is counting up then it is set to zero. If counter is counting down then counter is updated to the reload value. The method is not available if HW doesn't allow resetting of the counter. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macro Definition Documentation\par
\pard\plain 
{\xe \v TU6_Init_METHOD_ENABLED\:TU6 module documentation}
{\xe \v TU6 module documentation\:TU6_Init_METHOD_ENABLED}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define TU6_Init_METHOD_ENABLED}}
\par
{\bkmkstart AAAAAAACWB}
{\bkmkend AAAAAAACWB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Init method of the component TU6 is enabled (generated) \par
}}
{\xe \v TU6_PRPH_BASE_ADDRESS\:TU6 module documentation}
{\xe \v TU6 module documentation\:TU6_PRPH_BASE_ADDRESS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define TU6_PRPH_BASE_ADDRESS\~ 0x40037000U}}
\par
{\bkmkstart AAAAAAACWC}
{\bkmkend AAAAAAACWC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Peripheral base address of a device allocated by the component. This constant can be used directly in PDD macros. \par
}}
{\xe \v TU6_ResetCounter_METHOD_ENABLED\:TU6 module documentation}
{\xe \v TU6 module documentation\:TU6_ResetCounter_METHOD_ENABLED}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define TU6_ResetCounter_METHOD_ENABLED}}
\par
{\bkmkstart AAAAAAACWD}
{\bkmkend AAAAAAACWD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
ResetCounter method of the component TU6 is enabled (generated) \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v TU6_Init\:TU6 module documentation}
{\xe \v TU6 module documentation\:TU6_Init}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LDD_TDeviceData} * TU6_Init ({\b LDD_TUserData} * {\i UserDataPtr})}}
\par
{\bkmkstart AAAAAAACWE}
{\bkmkend AAAAAAACWE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Initializes the device. Allocates memory for the device data structure, allocates interrupt vectors and sets interrupt priority, sets pin routing, sets timing, etc. If the property ["Enable in init. code"] is set to "yes" value then the device is also enabled (see the description of the [Enable] method). In this case the [Enable] method is not necessary and needn't to be generated. This method can be called only once. Before the second call of Init the [Deinit] must be called first. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i UserDataPtr} \cell }{- Pointer to the user or RTOS specific data. This pointer will be passed as an event or callback parameter. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {
\par
\pard\plain \s82\fi-360\li1080\widctlpar\jclisttab\tx1080{\*\pn \pnlvlbody\ilvl0\ls3\pnrnot0\pndec }\ls3\adjustright \fs20\cgrid 
Pointer to the dynamically allocated private structure or NULL if there was an error. \par}
}}}
{\xe \v TU6_ResetCounter\:TU6 module documentation}
{\xe \v TU6 module documentation\:TU6_ResetCounter}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LDD_TError} TU6_ResetCounter ({\b LDD_TDeviceData} * {\i DeviceDataPtr})}}
\par
{\bkmkstart AAAAAAACWF}
{\bkmkend AAAAAAACWF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Resets counter. If counter is counting up then it is set to zero. If counter is counting down then counter is updated to the reload value. The method is not available if HW doesn't allow resetting of the counter. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i DeviceDataPtr} \cell }{- Device data structure pointer returned by [Init] method. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {
\par
\pard\plain \s82\fi-360\li1080\widctlpar\jclisttab\tx1080{\*\pn \pnlvlbody\ilvl0\ls3\pnrnot0\pndec }\ls3\adjustright \fs20\cgrid 
Error code, possible codes: ERR_OK - OK ERR_SPEED - The component does not work in the active clock configuration \par}
}}}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
UTIL1 module documentation\par \pard\plain 
{\tc\tcl2 \v UTIL1 module documentation}
{\xe \v UTIL1 module documentation}
{\bkmkstart AAAAAAACWG}
{\bkmkend AAAAAAACWG}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macros\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b UTIL1_strcmp}(str1, str2)\~ strcmp(str1, str2){\bkmkstart AAAAAAAAPI}
{\bkmkend AAAAAAAAPI}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b UTIL1_strncmp}(str1, str2, size)\~ strncmp(str1, str2, size){\bkmkstart AAAAAAAAPJ}
{\bkmkend AAAAAAAAPJ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b UTIL1_strlen}(str)\~ strlen(str){\bkmkstart AAAAAAAAPK}
{\bkmkend AAAAAAAAPK}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Enumerations\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b UTIL1_SeparatedNumberType} \{ {\b UTIL1_SEP_NUM_TYPE_UINT8}, 
{\b UTIL1_SEP_NUM_TYPE_UINT8_HEX_NO_PREFIX}
 \}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b UTIL1_strcpy} (uint8_t *dst, size_t dstSize, const unsigned char *src)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
copy the string src into dst. It performs the same task as strncpy, except }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b UTIL1_strcat} (uint8_t *dst, size_t dstSize, const unsigned char *src)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Concat the string src into dst. Always terminates the result string. Note: count is the size of dst INCLUDING zero byte. Precondition: src, dst != NULL. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

int16_t {\b UTIL1_strFind} (uint8_t *str, uint8_t *subStr){\bkmkstart AAAAAAAAPG}
{\bkmkend AAAAAAAAPG}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v UTIL1_strcat\:UTIL1 module documentation}
{\xe \v UTIL1 module documentation\:UTIL1_strcat}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void UTIL1_strcat (uint8_t * {\i dst}, size_t {\i dstSize}, const unsigned char * {\i src})}}
\par
{\bkmkstart AAAAAAACWH}
{\bkmkend AAAAAAACWH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Concat the string src into dst. Always terminates the result string. Note: count is the size of dst INCLUDING zero byte. Precondition: src, dst != NULL. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx1224
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx3061
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{in,out\cell }{{\i dst} \cell }{Start of string buffer, where to append the number string \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx1224
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx3061
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{in\cell }{{\i dstSize} \cell }{The size of the buffer, including the zero byte \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx1224
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx3061
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{in\cell }{{\i src} \cell }{The source string to add \cell }
{\row }
}
}}
{\xe \v UTIL1_strcpy\:UTIL1 module documentation}
{\xe \v UTIL1 module documentation\:UTIL1_strcpy}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void UTIL1_strcpy (uint8_t * {\i dst}, size_t {\i dstSize}, const unsigned char * {\i src})}}
\par
{\bkmkstart AAAAAAACWI}
{\bkmkend AAAAAAACWI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
copy the string src into dst. It performs the same task as strncpy, except }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
always terminates the result string.\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
does not zero out the remaining part in dst. Note: dstSize is the size of dst INCLUDING zero byte. Precondition: src, dst != NULL {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx1224
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx3061
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{in,out\cell }{{\i dst} \cell }{Start of string buffer, where to append the number string \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx1224
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx3061
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{in\cell }{{\i dstSize} \cell }{The size of the buffer, including the zero byte \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx1224
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx3061
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{in\cell }{{\i src} \cell }{The source string to copy \cell }
{\row }
}
\par}
}}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Vectors module documentation\par \pard\plain 
{\tc\tcl2 \v Vectors module documentation}
{\xe \v Vectors module documentation}
{\bkmkstart AAAAAAACWJ}
{\bkmkend AAAAAAACWJ}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b __thumb_startup} (void){\bkmkstart AAAAAAAAPM}
{\bkmkend AAAAAAAAPM}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b __attribute__} ((section(".vectortable"))) const{\bkmkstart AAAAAAAAPN}
{\bkmkend AAAAAAAAPN}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint32_t {\b __SP_INIT}{\bkmkstart AAAAAAAAPO}
{\bkmkend AAAAAAAAPO}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
WAIT1 module documentation\par \pard\plain 
{\tc\tcl2 \v WAIT1 module documentation}
{\xe \v WAIT1 module documentation}
{\bkmkstart AAAAAAACWK}
{\bkmkend AAAAAAACWK}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macros\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b WAIT1_INSTR_CLOCK_HZ}\~ CPU_CORE_CLK_HZ /* for Kinetis, use core clock as base for instruction execution */{\bkmkstart AAAAAAAAPX}
{\bkmkend AAAAAAAAPX}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b WAIT1_NofCyclesMs}(ms, hz)\~ ((ms)*((hz)/1000)) /* calculates the needed cycles based on bus clock frequency */{\bkmkstart AAAAAAAAPY}
{\bkmkend AAAAAAAAPY}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b WAIT1_NofCyclesUs}(us, hz)\~ ((us)*(((hz)/1000)/1000)) /* calculates the needed cycles based on bus clock frequency */{\bkmkstart AAAAAAAAPZ}
{\bkmkend AAAAAAAAPZ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b WAIT1_NofCyclesNs}(ns, hz)\~ (((ns)*(((hz)/1000)/1000))/1000) /* calculates the needed cycles based on bus clock frequency */{\bkmkstart AAAAAAAAQA}
{\bkmkend AAAAAAAAQA}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b WAIT1_WAIT_C}(cycles)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b WAIT1_Waitus}(us)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b WAIT1_Waitns}(ns)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b WAIT1_WaitOSms}(ms)\~ WAIT1_Waitms(ms) /* no RTOS used, so use normal wait */{\bkmkstart AAAAAAAAQB}
{\bkmkend AAAAAAAAQB}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b __attribute__} ((naked, no_instrument_function)){\bkmkstart AAAAAAAAPQ}
{\bkmkend AAAAAAAAPQ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b WAIT1_WaitCycles} (uint16_t cycles){\bkmkstart AAAAAAAAPR}
{\bkmkend AAAAAAAAPR}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b WAIT1_WaitLongCycles} (uint32_t cycles){\bkmkstart AAAAAAAAPS}
{\bkmkend AAAAAAAAPS}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b WAIT1_Waitms} (uint16_t ms){\bkmkstart AAAAAAAAPT}
{\bkmkend AAAAAAAAPT}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b WAIT1_Init} (void){\bkmkstart AAAAAAAAPU}
{\bkmkend AAAAAAAAPU}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b WAIT1_DeInit} (void){\bkmkstart AAAAAAAAPV}
{\bkmkend AAAAAAAAPV}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b WAIT1_Wait10Cycles} (void){\bkmkstart AAAAAAAAQC}
{\bkmkend AAAAAAAAQC}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b WAIT1_Wait100Cycles} (void){\bkmkstart AAAAAAAAQD}
{\bkmkend AAAAAAAAQD}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macro Definition Documentation\par
\pard\plain 
{\xe \v WAIT1_WAIT_C\:WAIT1 module documentation}
{\xe \v WAIT1 module documentation\:WAIT1_WAIT_C}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define WAIT1_WAIT_C( cycles)}}
\par
{\bkmkstart AAAAAAACWL}
{\bkmkend AAAAAAACWL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Value:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid ( (cycles)<=10 ? \\\par
          WAIT1_Wait10Cycles() \\\par
        : WAIT1_WaitCycles((uint16_t)cycles) \\\par
      )\par
}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
wait for some cycles \par
}}
{\xe \v WAIT1_Waitns\:WAIT1 module documentation}
{\xe \v WAIT1 module documentation\:WAIT1_Waitns}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define WAIT1_Waitns( ns)}}
\par
{\bkmkstart AAAAAAACWM}
{\bkmkend AAAAAAACWM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Value:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid /*lint -save -e(505,506,522) Constant value Boolean, Redundant left argument to comma. */\\\par
       (  ((WAIT1_NofCyclesNs((ns), WAIT1_INSTR_CLOCK_HZ)==0)||(ns)==0) ? \\\par
          (void)0 : \\\par
          WAIT1_Waitus((ns)/1000) \\\par
          , (WAIT1_NofCyclesNs((ns)%1000, WAIT1_INSTR_CLOCK_HZ)==0) ? \\\par
              (void)0 : \\\par
              WAIT1_WAIT_C(WAIT1_NofCyclesNs(((ns)%1000), WAIT1_INSTR_CLOCK_HZ)) \\\par
       /*lint -restore */\\\par
       )\par
}
}
{\xe \v WAIT1_Waitus\:WAIT1 module documentation}
{\xe \v WAIT1 module documentation\:WAIT1_Waitus}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define WAIT1_Waitus( us)}}
\par
{\bkmkstart AAAAAAACWN}
{\bkmkend AAAAAAACWN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Value:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid /*lint -save -e(505,506,522) Constant value Boolean, Redundant left argument to comma. */\\\par
       (  ((WAIT1_NofCyclesUs((us),WAIT1_INSTR_CLOCK_HZ)==0)||(us)==0) ? \\\par
          (void)0 : \\\par
          ( ((us)/1000)==0 ? (void)0 : WAIT1_Waitms((uint16_t)((us)/1000))) \\\par
          , (WAIT1_NofCyclesUs(((us)%1000), WAIT1_INSTR_CLOCK_HZ)==0) ? (void)0 : \\\par
            WAIT1_WAIT_C(WAIT1_NofCyclesUs(((us)%1000), WAIT1_INSTR_CLOCK_HZ)) \\\par
       /*lint -restore */\\\par
       )\par
}
}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
WAIT2 module documentation\par \pard\plain 
{\tc\tcl2 \v WAIT2 module documentation}
{\xe \v WAIT2 module documentation}
{\bkmkstart AAAAAAACWO}
{\bkmkend AAAAAAACWO}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macros\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b WAIT2_INSTR_CLOCK_HZ}\~ CPU_CORE_CLK_HZ /* for Kinetis, use core clock as base for instruction execution */{\bkmkstart AAAAAAAAQO}
{\bkmkend AAAAAAAAQO}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b WAIT2_NofCyclesMs}(ms, hz)\~ ((ms)*((hz)/1000)) /* calculates the needed cycles based on bus clock frequency */{\bkmkstart AAAAAAAAQP}
{\bkmkend AAAAAAAAQP}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b WAIT2_NofCyclesUs}(us, hz)\~ ((us)*(((hz)/1000)/1000)) /* calculates the needed cycles based on bus clock frequency */{\bkmkstart AAAAAAAAQQ}
{\bkmkend AAAAAAAAQQ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b WAIT2_NofCyclesNs}(ns, hz)\~ (((ns)*(((hz)/1000)/1000))/1000) /* calculates the needed cycles based on bus clock frequency */{\bkmkstart AAAAAAAAQR}
{\bkmkend AAAAAAAAQR}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b WAIT2_WAIT_C}(cycles)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b WAIT2_Waitus}(us)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b WAIT2_Waitns}(ns)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b WAIT2_WaitOSms}(ms)\~ WAIT2_Waitms(ms) /* no RTOS used, so use normal wait */{\bkmkstart AAAAAAAAQS}
{\bkmkend AAAAAAAAQS}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b __attribute__} ((naked, no_instrument_function)){\bkmkstart AAAAAAAAQH}
{\bkmkend AAAAAAAAQH}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b WAIT2_WaitCycles} (uint16_t cycles){\bkmkstart AAAAAAAAQI}
{\bkmkend AAAAAAAAQI}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b WAIT2_WaitLongCycles} (uint32_t cycles){\bkmkstart AAAAAAAAQJ}
{\bkmkend AAAAAAAAQJ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b WAIT2_Waitms} (uint16_t ms){\bkmkstart AAAAAAAAQK}
{\bkmkend AAAAAAAAQK}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b WAIT2_Init} (void){\bkmkstart AAAAAAAAQL}
{\bkmkend AAAAAAAAQL}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b WAIT2_DeInit} (void){\bkmkstart AAAAAAAAQM}
{\bkmkend AAAAAAAAQM}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b WAIT2_Wait10Cycles} (void){\bkmkstart AAAAAAAAQT}
{\bkmkend AAAAAAAAQT}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b WAIT2_Wait100Cycles} (void){\bkmkstart AAAAAAAAQU}
{\bkmkend AAAAAAAAQU}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macro Definition Documentation\par
\pard\plain 
{\xe \v WAIT2_WAIT_C\:WAIT2 module documentation}
{\xe \v WAIT2 module documentation\:WAIT2_WAIT_C}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define WAIT2_WAIT_C( cycles)}}
\par
{\bkmkstart AAAAAAACWP}
{\bkmkend AAAAAAACWP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Value:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid ( (cycles)<=10 ? \\\par
          WAIT2_Wait10Cycles() \\\par
        : WAIT2_WaitCycles((uint16_t)cycles) \\\par
      )\par
}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
wait for some cycles \par
}}
{\xe \v WAIT2_Waitns\:WAIT2 module documentation}
{\xe \v WAIT2 module documentation\:WAIT2_Waitns}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define WAIT2_Waitns( ns)}}
\par
{\bkmkstart AAAAAAACWQ}
{\bkmkend AAAAAAACWQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Value:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid /*lint -save -e(505,506,522) Constant value Boolean, Redundant left argument to comma. */\\\par
       (  ((WAIT2_NofCyclesNs((ns), WAIT2_INSTR_CLOCK_HZ)==0)||(ns)==0) ? \\\par
          (void)0 : \\\par
          WAIT2_Waitus((ns)/1000) \\\par
          , (WAIT2_NofCyclesNs((ns)%1000, WAIT2_INSTR_CLOCK_HZ)==0) ? \\\par
              (void)0 : \\\par
              WAIT2_WAIT_C(WAIT2_NofCyclesNs(((ns)%1000), WAIT2_INSTR_CLOCK_HZ)) \\\par
       /*lint -restore */\\\par
       )\par
}
}
{\xe \v WAIT2_Waitus\:WAIT2 module documentation}
{\xe \v WAIT2 module documentation\:WAIT2_Waitus}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define WAIT2_Waitus( us)}}
\par
{\bkmkstart AAAAAAACWR}
{\bkmkend AAAAAAACWR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Value:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid /*lint -save -e(505,506,522) Constant value Boolean, Redundant left argument to comma. */\\\par
       (  ((WAIT2_NofCyclesUs((us),WAIT2_INSTR_CLOCK_HZ)==0)||(us)==0) ? \\\par
          (void)0 : \\\par
          ( ((us)/1000)==0 ? (void)0 : WAIT2_Waitms((uint16_t)((us)/1000))) \\\par
          , (WAIT2_NofCyclesUs(((us)%1000), WAIT2_INSTR_CLOCK_HZ)==0) ? (void)0 : \\\par
            WAIT2_WAIT_C(WAIT2_NofCyclesUs(((us)%1000), WAIT2_INSTR_CLOCK_HZ)) \\\par
       /*lint -restore */\\\par
       )\par
}
}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Wifi module documentation\par \pard\plain 
{\tc\tcl2 \v Wifi module documentation}
{\xe \v Wifi module documentation}
{\bkmkstart AAAAAAACWS}
{\bkmkend AAAAAAACWS}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Structures\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
union {\b Wifi_TError}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macros\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b OVERRUN_ERR}\~ 0x01U         /* Overrun error flag bit    */{\bkmkstart AAAAAAAAQY}
{\bkmkend AAAAAAAAQY}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b FRAMING_ERR}\~ 0x02U         /* Framing error flag bit    */{\bkmkstart AAAAAAAAQZ}
{\bkmkend AAAAAAAAQZ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b PARITY_ERR}\~ 0x04U         /* Parity error flag bit     */{\bkmkstart AAAAAAAARA}
{\bkmkend AAAAAAAARA}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b CHAR_IN_RX}\~ 0x08U         /* Char is in RX buffer      */{\bkmkstart AAAAAAAARB}
{\bkmkend AAAAAAAARB}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b FULL_TX}\~ 0x10U         /* Full transmit buffer      */{\bkmkstart AAAAAAAARC}
{\bkmkend AAAAAAAARC}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b RUNINT_FROM_TX}\~ 0x20U         /* Interrupt is in progress  */{\bkmkstart AAAAAAAARD}
{\bkmkend AAAAAAAARD}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b FULL_RX}\~ 0x40U         /* Full receive buffer       */{\bkmkstart AAAAAAAARE}
{\bkmkend AAAAAAAARE}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b NOISE_ERR}\~ 0x80U         /* Noise error flag bit      */{\bkmkstart AAAAAAAARF}
{\bkmkend AAAAAAAARF}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b IDLE_ERR}\~ 0x0100U       /* Idle character flag bit   */{\bkmkstart AAAAAAAARG}
{\bkmkend AAAAAAAARG}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b BREAK_ERR}\~ 0x0200U       /* Break detect              */{\bkmkstart AAAAAAAARH}
{\bkmkend AAAAAAAARH}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b COMMON_ERR}\~ 0x0800U       /* Common error of RX       */{\bkmkstart AAAAAAAARI}
{\bkmkend AAAAAAAARI}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b ON_ERROR}\~ 0x01U{\bkmkstart AAAAAAAARJ}
{\bkmkend AAAAAAAARJ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b ON_FULL_RX}\~ 0x02U{\bkmkstart AAAAAAAARK}
{\bkmkend AAAAAAAARK}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b ON_RX_CHAR}\~ 0x04U{\bkmkstart AAAAAAAARL}
{\bkmkend AAAAAAAARL}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b ON_FREE_TX}\~ 0x01U{\bkmkstart AAAAAAAARM}
{\bkmkend AAAAAAAARM}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b ON_TX_CHAR}\~ 0x02U{\bkmkstart AAAAAAAARN}
{\bkmkend AAAAAAAARN}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b __BWUserType_Wifi_TError}{\bkmkstart AAAAAAAASD}
{\bkmkend AAAAAAAASD}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b __BWUserType_Wifi_TComData}{\bkmkstart AAAAAAAASE}
{\bkmkend AAAAAAAASE}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b Wifi_INP_BUF_SIZE}\~ 0x0100U     /* Length of the RX buffer */{\bkmkstart AAAAAAAASF}
{\bkmkend AAAAAAAASF}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b Wifi_OUT_BUF_SIZE}\~ 0x0100U     /* Length of the TX buffer */{\bkmkstart AAAAAAAASG}
{\bkmkend AAAAAAAASG}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Typedefs\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

typedef byte {\b Wifi_TComData}{\bkmkstart AAAAAAAASH}
{\bkmkend AAAAAAAASH}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

byte {\b Wifi_RecvChar} (Wifi_TComData *Chr){\bkmkstart AAAAAAAARO}
{\bkmkend AAAAAAAARO}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

byte {\b Wifi_SendChar} (Wifi_TComData Chr){\bkmkstart AAAAAAAARP}
{\bkmkend AAAAAAAARP}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

byte {\b Wifi_RecvBlock} (Wifi_TComData *Ptr, word Size, word *Rcv){\bkmkstart AAAAAAAARQ}
{\bkmkend AAAAAAAARQ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

byte {\b Wifi_SendBlock} (Wifi_TComData *Ptr, word Size, word *Snd){\bkmkstart AAAAAAAARR}
{\bkmkend AAAAAAAARR}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

byte {\b Wifi_ClearRxBuf} (void){\bkmkstart AAAAAAAARS}
{\bkmkend AAAAAAAARS}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

byte {\b Wifi_ClearTxBuf} (void){\bkmkstart AAAAAAAART}
{\bkmkend AAAAAAAART}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

word {\b Wifi_GetCharsInRxBuf} (void){\bkmkstart AAAAAAAARU}
{\bkmkend AAAAAAAARU}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

word {\b Wifi_GetCharsInTxBuf} (void){\bkmkstart AAAAAAAARV}
{\bkmkend AAAAAAAARV}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b Wifi_Init} (void){\bkmkstart AAAAAAAARW}
{\bkmkend AAAAAAAARW}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b ASerialLdd2_OnBlockReceived} ({\b LDD_TUserData} *UserDataPtr){\bkmkstart AAAAAAAARX}
{\bkmkend AAAAAAAARX}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b ASerialLdd2_OnBlockSent} ({\b LDD_TUserData} *UserDataPtr){\bkmkstart AAAAAAAARY}
{\bkmkend AAAAAAAARY}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b ASerialLdd2_OnError} ({\b LDD_TUserData} *UserDataPtr){\bkmkstart AAAAAAAARZ}
{\bkmkend AAAAAAAARZ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b ASerialLdd2_OnBreak} ({\b LDD_TUserData} *UserDataPtr){\bkmkstart AAAAAAAASA}
{\bkmkend AAAAAAAASA}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b LDD_TDeviceData} * {\b ASerialLdd2_DeviceDataPtr}{\bkmkstart AAAAAAAASB}
{\bkmkend AAAAAAAASB}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}
\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
Data Structure Documentation{\tc \v Data Structure Documentation}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
ASerialLdd1_TDeviceData Struct Reference\par \pard\plain 
{\tc\tcl2 \v ASerialLdd1_TDeviceData}
{\xe \v ASerialLdd1_TDeviceData}
{\bkmkstart AAAAAAACWT}
{\bkmkend AAAAAAACWT}
\par
{
{\f2 #include <ASerialLdd1.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint16_t {\b SerFlag}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LDD_SERIAL_TError} {\b ErrFlag}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint16_t {\b InpRecvDataNum}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t * {\b InpDataPtr}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint16_t {\b InpDataNumReq}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint16_t {\b OutSentDataNum}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t * {\b OutDataPtr}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint16_t {\b OutDataNumReq}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LDD_TUserData} * {\b UserDataPtr}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Device data structure type \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Field Documentation\par
\pard\plain 
{\xe \v ErrFlag\:ASerialLdd1_TDeviceData}
{\xe \v ASerialLdd1_TDeviceData\:ErrFlag}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LDD_SERIAL_TError} ASerialLdd1_TDeviceData::ErrFlag}}
\par
{\bkmkstart AAAAAAACWU}
{\bkmkend AAAAAAACWU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Error flags mirror of SerFlag \par
}}
{\xe \v InpDataNumReq\:ASerialLdd1_TDeviceData}
{\xe \v ASerialLdd1_TDeviceData\:InpDataNumReq}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint16_t ASerialLdd1_TDeviceData::InpDataNumReq}}
\par
{\bkmkstart AAAAAAACWV}
{\bkmkend AAAAAAACWV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The counter of characters to receive by ReceiveBlock() \par
}}
{\xe \v InpDataPtr\:ASerialLdd1_TDeviceData}
{\xe \v ASerialLdd1_TDeviceData\:InpDataPtr}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t* ASerialLdd1_TDeviceData::InpDataPtr}}
\par
{\bkmkstart AAAAAAACWW}
{\bkmkend AAAAAAACWW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The buffer pointer for received characters \par
}}
{\xe \v InpRecvDataNum\:ASerialLdd1_TDeviceData}
{\xe \v ASerialLdd1_TDeviceData\:InpRecvDataNum}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint16_t ASerialLdd1_TDeviceData::InpRecvDataNum}}
\par
{\bkmkstart AAAAAAACWX}
{\bkmkend AAAAAAACWX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The counter of received characters \par
}}
{\xe \v OutDataNumReq\:ASerialLdd1_TDeviceData}
{\xe \v ASerialLdd1_TDeviceData\:OutDataNumReq}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint16_t ASerialLdd1_TDeviceData::OutDataNumReq}}
\par
{\bkmkstart AAAAAAACWY}
{\bkmkend AAAAAAACWY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The counter of characters to be send by SendBlock() \par
}}
{\xe \v OutDataPtr\:ASerialLdd1_TDeviceData}
{\xe \v ASerialLdd1_TDeviceData\:OutDataPtr}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t* ASerialLdd1_TDeviceData::OutDataPtr}}
\par
{\bkmkstart AAAAAAACWZ}
{\bkmkend AAAAAAACWZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The buffer pointer for data to be transmitted \par
}}
{\xe \v OutSentDataNum\:ASerialLdd1_TDeviceData}
{\xe \v ASerialLdd1_TDeviceData\:OutSentDataNum}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint16_t ASerialLdd1_TDeviceData::OutSentDataNum}}
\par
{\bkmkstart AAAAAAACXA}
{\bkmkend AAAAAAACXA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The counter of sent characters \par
}}
{\xe \v SerFlag\:ASerialLdd1_TDeviceData}
{\xe \v ASerialLdd1_TDeviceData\:SerFlag}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint16_t ASerialLdd1_TDeviceData::SerFlag}}
\par
{\bkmkstart AAAAAAACXB}
{\bkmkend AAAAAAACXB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Flags for serial communication \par
}}
{\xe \v UserDataPtr\:ASerialLdd1_TDeviceData}
{\xe \v ASerialLdd1_TDeviceData\:UserDataPtr}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LDD_TUserData}* ASerialLdd1_TDeviceData::UserDataPtr}}
\par
{\bkmkstart AAAAAAACXC}
{\bkmkend AAAAAAACXC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Pointer to user data \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/{\b ASerialLdd1.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
ASerialLdd2_TDeviceData Struct Reference\par \pard\plain 
{\tc\tcl2 \v ASerialLdd2_TDeviceData}
{\xe \v ASerialLdd2_TDeviceData}
{\bkmkstart AAAAAAACXD}
{\bkmkend AAAAAAACXD}
\par
{
{\f2 #include <ASerialLdd2.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint16_t {\b SerFlag}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LDD_SERIAL_TError} {\b ErrFlag}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint16_t {\b InpRecvDataNum}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t * {\b InpDataPtr}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint16_t {\b InpDataNumReq}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint16_t {\b OutSentDataNum}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t * {\b OutDataPtr}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint16_t {\b OutDataNumReq}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LDD_TUserData} * {\b UserDataPtr}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Device data structure type \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Field Documentation\par
\pard\plain 
{\xe \v ErrFlag\:ASerialLdd2_TDeviceData}
{\xe \v ASerialLdd2_TDeviceData\:ErrFlag}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LDD_SERIAL_TError} ASerialLdd2_TDeviceData::ErrFlag}}
\par
{\bkmkstart AAAAAAACXE}
{\bkmkend AAAAAAACXE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Error flags mirror of SerFlag \par
}}
{\xe \v InpDataNumReq\:ASerialLdd2_TDeviceData}
{\xe \v ASerialLdd2_TDeviceData\:InpDataNumReq}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint16_t ASerialLdd2_TDeviceData::InpDataNumReq}}
\par
{\bkmkstart AAAAAAACXF}
{\bkmkend AAAAAAACXF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The counter of characters to receive by ReceiveBlock() \par
}}
{\xe \v InpDataPtr\:ASerialLdd2_TDeviceData}
{\xe \v ASerialLdd2_TDeviceData\:InpDataPtr}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t* ASerialLdd2_TDeviceData::InpDataPtr}}
\par
{\bkmkstart AAAAAAACXG}
{\bkmkend AAAAAAACXG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The buffer pointer for received characters \par
}}
{\xe \v InpRecvDataNum\:ASerialLdd2_TDeviceData}
{\xe \v ASerialLdd2_TDeviceData\:InpRecvDataNum}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint16_t ASerialLdd2_TDeviceData::InpRecvDataNum}}
\par
{\bkmkstart AAAAAAACXH}
{\bkmkend AAAAAAACXH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The counter of received characters \par
}}
{\xe \v OutDataNumReq\:ASerialLdd2_TDeviceData}
{\xe \v ASerialLdd2_TDeviceData\:OutDataNumReq}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint16_t ASerialLdd2_TDeviceData::OutDataNumReq}}
\par
{\bkmkstart AAAAAAACXI}
{\bkmkend AAAAAAACXI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The counter of characters to be send by SendBlock() \par
}}
{\xe \v OutDataPtr\:ASerialLdd2_TDeviceData}
{\xe \v ASerialLdd2_TDeviceData\:OutDataPtr}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t* ASerialLdd2_TDeviceData::OutDataPtr}}
\par
{\bkmkstart AAAAAAACXJ}
{\bkmkend AAAAAAACXJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The buffer pointer for data to be transmitted \par
}}
{\xe \v OutSentDataNum\:ASerialLdd2_TDeviceData}
{\xe \v ASerialLdd2_TDeviceData\:OutSentDataNum}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint16_t ASerialLdd2_TDeviceData::OutSentDataNum}}
\par
{\bkmkstart AAAAAAACXK}
{\bkmkend AAAAAAACXK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The counter of sent characters \par
}}
{\xe \v SerFlag\:ASerialLdd2_TDeviceData}
{\xe \v ASerialLdd2_TDeviceData\:SerFlag}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint16_t ASerialLdd2_TDeviceData::SerFlag}}
\par
{\bkmkstart AAAAAAACXL}
{\bkmkend AAAAAAACXL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Flags for serial communication \par
}}
{\xe \v UserDataPtr\:ASerialLdd2_TDeviceData}
{\xe \v ASerialLdd2_TDeviceData\:UserDataPtr}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LDD_TUserData}* ASerialLdd2_TDeviceData::UserDataPtr}}
\par
{\bkmkstart AAAAAAACXM}
{\bkmkend AAAAAAACXM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Pointer to user data \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/{\b ASerialLdd2.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
BitIoLdd7_TDeviceData Struct Reference\par \pard\plain 
{\tc\tcl2 \v BitIoLdd7_TDeviceData}
{\xe \v BitIoLdd7_TDeviceData}
{\bkmkstart AAAAAAACXN}
{\bkmkend AAAAAAACXN}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b LDD_TUserData} * {\b UserDataPtr}{\bkmkstart AAAAAAACXO}
{\bkmkend AAAAAAACXO}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/{\b BitIoLdd7.c}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
BitIoLdd8_TDeviceData Struct Reference\par \pard\plain 
{\tc\tcl2 \v BitIoLdd8_TDeviceData}
{\xe \v BitIoLdd8_TDeviceData}
{\bkmkstart AAAAAAACXP}
{\bkmkend AAAAAAACXP}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b LDD_TUserData} * {\b UserDataPtr}{\bkmkstart AAAAAAACXQ}
{\bkmkend AAAAAAACXQ}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/{\b BitIoLdd8.c}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
BitIoLdd9_TDeviceData Struct Reference\par \pard\plain 
{\tc\tcl2 \v BitIoLdd9_TDeviceData}
{\xe \v BitIoLdd9_TDeviceData}
{\bkmkstart AAAAAAACXR}
{\bkmkend AAAAAAACXR}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b LDD_TUserData} * {\b UserDataPtr}{\bkmkstart AAAAAAACXS}
{\bkmkend AAAAAAACXS}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/{\b BitIoLdd9.c}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CI2C1_TDeviceData Struct Reference\par \pard\plain 
{\tc\tcl2 \v CI2C1_TDeviceData}
{\xe \v CI2C1_TDeviceData}
{\bkmkstart AAAAAAACXT}
{\bkmkend AAAAAAACXT}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint8_t {\b SerFlag}{\bkmkstart AAAAAAACXU}
{\bkmkend AAAAAAACXU}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b LDD_I2C_TSendStop} {\b SendStop}{\bkmkstart AAAAAAACXV}
{\bkmkend AAAAAAACXV}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint8_t {\b SlaveAddr}{\bkmkstart AAAAAAACXW}
{\bkmkend AAAAAAACXW}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint8_t {\b SlaveAddrHigh}{\bkmkstart AAAAAAACXX}
{\bkmkend AAAAAAACXX}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b LDD_I2C_TSize} {\b InpLenM}{\bkmkstart AAAAAAACXY}
{\bkmkend AAAAAAACXY}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint8_t * {\b InpPtrM}{\bkmkstart AAAAAAACXZ}
{\bkmkend AAAAAAACXZ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b LDD_I2C_TSize} {\b OutLenM}{\bkmkstart AAAAAAACYA}
{\bkmkend AAAAAAACYA}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint8_t * {\b OutPtrM}{\bkmkstart AAAAAAACYB}
{\bkmkend AAAAAAACYB}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b LDD_TUserData} * {\b UserData}{\bkmkstart AAAAAAACYC}
{\bkmkend AAAAAAACYC}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/{\b CI2C1.c}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
ExtIntLdd4_TDeviceData Struct Reference\par \pard\plain 
{\tc\tcl2 \v ExtIntLdd4_TDeviceData}
{\xe \v ExtIntLdd4_TDeviceData}
{\bkmkstart AAAAAAACYD}
{\bkmkend AAAAAAACYD}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b LDD_TUserData} * {\b UserData}{\bkmkstart AAAAAAACYE}
{\bkmkend AAAAAAACYE}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/{\b ExtIntLdd4.c}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
GI2C1_TDataState Struct Reference\par \pard\plain 
{\tc\tcl2 \v GI2C1_TDataState}
{\xe \v GI2C1_TDataState}
{\bkmkstart AAAAAAACYF}
{\bkmkend AAAAAAACYF}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

volatile bool {\b dataReceivedFlg}{\bkmkstart AAAAAAACYG}
{\bkmkend AAAAAAACYG}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

volatile bool {\b dataTransmittedFlg}{\bkmkstart AAAAAAACYH}
{\bkmkend AAAAAAACYH}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b LDD_TDeviceData} * {\b handle}{\bkmkstart AAAAAAACYI}
{\bkmkend AAAAAAACYI}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/{\b GI2C1.c}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
LDD_ADC_TPinMask Struct Reference\par \pard\plain 
{\tc\tcl2 \v LDD_ADC_TPinMask}
{\xe \v LDD_ADC_TPinMask}
{\bkmkstart AAAAAAACYJ}
{\bkmkend AAAAAAACYJ}
\par
{
{\f2 #include <PE_Types.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint32_t {\b Channel0_31PinMask}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint32_t {\b Channel32_63PinMask}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint16_t {\b TriggerPinMask}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\b VoltRefPinMask}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Structure pins for pin connection method \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Field Documentation\par
\pard\plain 
{\xe \v Channel0_31PinMask\:LDD_ADC_TPinMask}
{\xe \v LDD_ADC_TPinMask\:Channel0_31PinMask}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint32_t LDD_ADC_TPinMask::Channel0_31PinMask}}
\par
{\bkmkstart AAAAAAACYK}
{\bkmkend AAAAAAACYK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Channel pin mask for channels 0 through 31 \par
}}
{\xe \v Channel32_63PinMask\:LDD_ADC_TPinMask}
{\xe \v LDD_ADC_TPinMask\:Channel32_63PinMask}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint32_t LDD_ADC_TPinMask::Channel32_63PinMask}}
\par
{\bkmkstart AAAAAAACYL}
{\bkmkend AAAAAAACYL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Channel pin mask for channels 32 through 63 \par
}}
{\xe \v TriggerPinMask\:LDD_ADC_TPinMask}
{\xe \v LDD_ADC_TPinMask\:TriggerPinMask}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint16_t LDD_ADC_TPinMask::TriggerPinMask}}
\par
{\bkmkstart AAAAAAACYM}
{\bkmkend AAAAAAACYM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Trigger pin mask \par
}}
{\xe \v VoltRefPinMask\:LDD_ADC_TPinMask}
{\xe \v LDD_ADC_TPinMask\:VoltRefPinMask}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t LDD_ADC_TPinMask::VoltRefPinMask}}
\par
{\bkmkstart AAAAAAACYN}
{\bkmkend AAAAAAACYN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Voltage reference pin mask \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/{\b PE_Types.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
LDD_ADC_TSample Struct Reference\par \pard\plain 
{\tc\tcl2 \v LDD_ADC_TSample}
{\xe \v LDD_ADC_TSample}
{\bkmkstart AAAAAAACYO}
{\bkmkend AAAAAAACYO}
\par
{
{\f2 #include <PE_Types.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\b ChannelIdx}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Structure used to describing one sample \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Field Documentation\par
\pard\plain 
{\xe \v ChannelIdx\:LDD_ADC_TSample}
{\xe \v LDD_ADC_TSample\:ChannelIdx}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t LDD_ADC_TSample::ChannelIdx}}
\par
{\bkmkstart AAAAAAACYP}
{\bkmkend AAAAAAACYP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Channel index \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/{\b PE_Types.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
LDD_CAN_TFrame Struct Reference\par \pard\plain 
{\tc\tcl2 \v LDD_CAN_TFrame}
{\xe \v LDD_CAN_TFrame}
{\bkmkstart AAAAAAACYQ}
{\bkmkend AAAAAAACYQ}
\par
{
{\f2 #include <PE_Types.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LDD_CAN_TMessageID} {\b MessageID}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LDD_CAN_TFrameType} {\b FrameType}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t * {\b Data}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\b Length}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint16_t {\b TimeStamp}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\b LocPriority}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Type specifying the CAN frame features. \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Field Documentation\par
\pard\plain 
{\xe \v Data\:LDD_CAN_TFrame}
{\xe \v LDD_CAN_TFrame\:Data}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t* LDD_CAN_TFrame::Data}}
\par
{\bkmkstart AAAAAAACYR}
{\bkmkend AAAAAAACYR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Message data buffer \par
}}
{\xe \v FrameType\:LDD_CAN_TFrame}
{\xe \v LDD_CAN_TFrame\:FrameType}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LDD_CAN_TFrameType} LDD_CAN_TFrame::FrameType}}
\par
{\bkmkstart AAAAAAACYS}
{\bkmkend AAAAAAACYS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Type of the frame DATA/REMOTE \par
}}
{\xe \v Length\:LDD_CAN_TFrame}
{\xe \v LDD_CAN_TFrame\:Length}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t LDD_CAN_TFrame::Length}}
\par
{\bkmkstart AAAAAAACYT}
{\bkmkend AAAAAAACYT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Message length \par
}}
{\xe \v LocPriority\:LDD_CAN_TFrame}
{\xe \v LDD_CAN_TFrame\:LocPriority}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t LDD_CAN_TFrame::LocPriority}}
\par
{\bkmkstart AAAAAAACYU}
{\bkmkend AAAAAAACYU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Local Priority Tx Buffers \par
}}
{\xe \v MessageID\:LDD_CAN_TFrame}
{\xe \v LDD_CAN_TFrame\:MessageID}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LDD_CAN_TMessageID} LDD_CAN_TFrame::MessageID}}
\par
{\bkmkstart AAAAAAACYV}
{\bkmkend AAAAAAACYV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Message ID \par
}}
{\xe \v TimeStamp\:LDD_CAN_TFrame}
{\xe \v LDD_CAN_TFrame\:TimeStamp}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint16_t LDD_CAN_TFrame::TimeStamp}}
\par
{\bkmkstart AAAAAAACYW}
{\bkmkend AAAAAAACYW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Message time stamp \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/{\b PE_Types.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
LDD_CAN_TStats Struct Reference\par \pard\plain 
{\tc\tcl2 \v LDD_CAN_TStats}
{\xe \v LDD_CAN_TStats}
{\bkmkstart AAAAAAACYX}
{\bkmkend AAAAAAACYX}
\par
{
{\f2 #include <PE_Types.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint32_t {\b TxFrames}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint32_t {\b TxWarnings}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint32_t {\b RxFrames}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint32_t {\b RxWarnings}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint32_t {\b BusOffs}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint32_t {\b Wakeups}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint32_t {\b Bit0Errors}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint32_t {\b Bit1Errors}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint32_t {\b AckErrors}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint32_t {\b CrcErrors}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint32_t {\b FormErrors}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint32_t {\b BitStuffErrors}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint32_t {\b Errors}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Type specifying the CAN communication statistics. \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Field Documentation\par
\pard\plain 
{\xe \v AckErrors\:LDD_CAN_TStats}
{\xe \v LDD_CAN_TStats\:AckErrors}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint32_t LDD_CAN_TStats::AckErrors}}
\par
{\bkmkstart AAAAAAACYY}
{\bkmkend AAAAAAACYY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
ACK error counter \par
}}
{\xe \v Bit0Errors\:LDD_CAN_TStats}
{\xe \v LDD_CAN_TStats\:Bit0Errors}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint32_t LDD_CAN_TStats::Bit0Errors}}
\par
{\bkmkstart AAAAAAACYZ}
{\bkmkend AAAAAAACYZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Bit0 error counter \par
}}
{\xe \v Bit1Errors\:LDD_CAN_TStats}
{\xe \v LDD_CAN_TStats\:Bit1Errors}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint32_t LDD_CAN_TStats::Bit1Errors}}
\par
{\bkmkstart AAAAAAACZA}
{\bkmkend AAAAAAACZA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Bit1 error counter \par
}}
{\xe \v BitStuffErrors\:LDD_CAN_TStats}
{\xe \v LDD_CAN_TStats\:BitStuffErrors}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint32_t LDD_CAN_TStats::BitStuffErrors}}
\par
{\bkmkstart AAAAAAACZB}
{\bkmkend AAAAAAACZB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Bit stuff error counter \par
}}
{\xe \v BusOffs\:LDD_CAN_TStats}
{\xe \v LDD_CAN_TStats\:BusOffs}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint32_t LDD_CAN_TStats::BusOffs}}
\par
{\bkmkstart AAAAAAACZC}
{\bkmkend AAAAAAACZC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Bus off counter \par
}}
{\xe \v CrcErrors\:LDD_CAN_TStats}
{\xe \v LDD_CAN_TStats\:CrcErrors}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint32_t LDD_CAN_TStats::CrcErrors}}
\par
{\bkmkstart AAAAAAACZD}
{\bkmkend AAAAAAACZD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
CRC error counter \par
}}
{\xe \v Errors\:LDD_CAN_TStats}
{\xe \v LDD_CAN_TStats\:Errors}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint32_t LDD_CAN_TStats::Errors}}
\par
{\bkmkstart AAAAAAACZE}
{\bkmkend AAAAAAACZE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Error counter \par
}}
{\xe \v FormErrors\:LDD_CAN_TStats}
{\xe \v LDD_CAN_TStats\:FormErrors}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint32_t LDD_CAN_TStats::FormErrors}}
\par
{\bkmkstart AAAAAAACZF}
{\bkmkend AAAAAAACZF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Message form error counter \par
}}
{\xe \v RxFrames\:LDD_CAN_TStats}
{\xe \v LDD_CAN_TStats\:RxFrames}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint32_t LDD_CAN_TStats::RxFrames}}
\par
{\bkmkstart AAAAAAACZG}
{\bkmkend AAAAAAACZG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Received frame counter \par
}}
{\xe \v RxWarnings\:LDD_CAN_TStats}
{\xe \v LDD_CAN_TStats\:RxWarnings}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint32_t LDD_CAN_TStats::RxWarnings}}
\par
{\bkmkstart AAAAAAACZH}
{\bkmkend AAAAAAACZH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Reception warning counter \par
}}
{\xe \v TxFrames\:LDD_CAN_TStats}
{\xe \v LDD_CAN_TStats\:TxFrames}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint32_t LDD_CAN_TStats::TxFrames}}
\par
{\bkmkstart AAAAAAACZI}
{\bkmkend AAAAAAACZI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Transmitted frame counter \par
}}
{\xe \v TxWarnings\:LDD_CAN_TStats}
{\xe \v LDD_CAN_TStats\:TxWarnings}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint32_t LDD_CAN_TStats::TxWarnings}}
\par
{\bkmkstart AAAAAAACZJ}
{\bkmkend AAAAAAACZJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Transmission warning counter \par
}}
{\xe \v Wakeups\:LDD_CAN_TStats}
{\xe \v LDD_CAN_TStats\:Wakeups}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint32_t LDD_CAN_TStats::Wakeups}}
\par
{\bkmkstart AAAAAAACZK}
{\bkmkend AAAAAAACZK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Wakeup counter \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/{\b PE_Types.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
LDD_CRC_TUserCRCStandard Struct Reference\par \pard\plain 
{\tc\tcl2 \v LDD_CRC_TUserCRCStandard}
{\xe \v LDD_CRC_TUserCRCStandard}
{\bkmkstart AAAAAAACZL}
{\bkmkend AAAAAAACZL}
\par
{
{\f2 #include <PE_Types.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b Width32bit}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b ResultXORed}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint16_t {\b SeedLow}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint16_t {\b SeedHigh}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint16_t {\b PolyLow}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint16_t {\b PolyHigh}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LDD_CRC_TTransposeType} {\b InputTransposeMode}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LDD_CRC_TTransposeType} {\b OutputTransposeMode}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
User CRC standard \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Field Documentation\par
\pard\plain 
{\xe \v InputTransposeMode\:LDD_CRC_TUserCRCStandard}
{\xe \v LDD_CRC_TUserCRCStandard\:InputTransposeMode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LDD_CRC_TTransposeType} LDD_CRC_TUserCRCStandard::InputTransposeMode}}
\par
{\bkmkstart AAAAAAACZM}
{\bkmkend AAAAAAACZM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Input transpose type \par
}}
{\xe \v OutputTransposeMode\:LDD_CRC_TUserCRCStandard}
{\xe \v LDD_CRC_TUserCRCStandard\:OutputTransposeMode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LDD_CRC_TTransposeType} LDD_CRC_TUserCRCStandard::OutputTransposeMode}}
\par
{\bkmkstart AAAAAAACZN}
{\bkmkend AAAAAAACZN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Output transpose type \par
}}
{\xe \v PolyHigh\:LDD_CRC_TUserCRCStandard}
{\xe \v LDD_CRC_TUserCRCStandard\:PolyHigh}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint16_t LDD_CRC_TUserCRCStandard::PolyHigh}}
\par
{\bkmkstart AAAAAAACZO}
{\bkmkend AAAAAAACZO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Poly high value \par
}}
{\xe \v PolyLow\:LDD_CRC_TUserCRCStandard}
{\xe \v LDD_CRC_TUserCRCStandard\:PolyLow}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint16_t LDD_CRC_TUserCRCStandard::PolyLow}}
\par
{\bkmkstart AAAAAAACZP}
{\bkmkend AAAAAAACZP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Poly low value \par
}}
{\xe \v ResultXORed\:LDD_CRC_TUserCRCStandard}
{\xe \v LDD_CRC_TUserCRCStandard\:ResultXORed}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool LDD_CRC_TUserCRCStandard::ResultXORed}}
\par
{\bkmkstart AAAAAAACZQ}
{\bkmkend AAAAAAACZQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Result XORed? \par
}}
{\xe \v SeedHigh\:LDD_CRC_TUserCRCStandard}
{\xe \v LDD_CRC_TUserCRCStandard\:SeedHigh}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint16_t LDD_CRC_TUserCRCStandard::SeedHigh}}
\par
{\bkmkstart AAAAAAACZR}
{\bkmkend AAAAAAACZR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Seed high value \par
}}
{\xe \v SeedLow\:LDD_CRC_TUserCRCStandard}
{\xe \v LDD_CRC_TUserCRCStandard\:SeedLow}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint16_t LDD_CRC_TUserCRCStandard::SeedLow}}
\par
{\bkmkstart AAAAAAACZS}
{\bkmkend AAAAAAACZS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Seed low value \par
}}
{\xe \v Width32bit\:LDD_CRC_TUserCRCStandard}
{\xe \v LDD_CRC_TUserCRCStandard\:Width32bit}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool LDD_CRC_TUserCRCStandard::Width32bit}}
\par
{\bkmkstart AAAAAAACZT}
{\bkmkend AAAAAAACZT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
32bit CRC? \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/{\b PE_Types.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
LDD_DMA_TError Struct Reference\par \pard\plain 
{\tc\tcl2 \v LDD_DMA_TError}
{\xe \v LDD_DMA_TError}
{\bkmkstart AAAAAAACZU}
{\bkmkend AAAAAAACZU}
\par
{
{\f2 #include <PE_Types.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LDD_DMA_TChannelNumber} {\b ChannelNumber}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LDD_DMA_TErrorFlags} {\b ErrorFlags}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Type specifying the DMA error information structure. \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Field Documentation\par
\pard\plain 
{\xe \v ChannelNumber\:LDD_DMA_TError}
{\xe \v LDD_DMA_TError\:ChannelNumber}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LDD_DMA_TChannelNumber} LDD_DMA_TError::ChannelNumber}}
\par
{\bkmkstart AAAAAAACZV}
{\bkmkend AAAAAAACZV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Last error recorded channel number. \par
}}
{\xe \v ErrorFlags\:LDD_DMA_TError}
{\xe \v LDD_DMA_TError\:ErrorFlags}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LDD_DMA_TErrorFlags} LDD_DMA_TError::ErrorFlags}}
\par
{\bkmkstart AAAAAAACZW}
{\bkmkend AAAAAAACZW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Channel error flags. \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/{\b PE_Types.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
LDD_DMA_TTransferDescriptor Struct Reference\par \pard\plain 
{\tc\tcl2 \v LDD_DMA_TTransferDescriptor}
{\xe \v LDD_DMA_TTransferDescriptor}
{\bkmkstart AAAAAAACZX}
{\bkmkend AAAAAAACZX}
\par
{
{\f2 #include <PE_Types.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LDD_TUserData} * {\b UserDataPtr}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LDD_DMA_TAddress} {\b SourceAddress}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b SourceAddressIncrement}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LDD_DMA_TTransferSize} {\b SourceTransferSize}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LDD_DMA_TModuloSize} {\b SourceModuloSize}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LDD_DMA_TAddress} {\b DestinationAddress}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b DestinationAddressIncrement}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LDD_DMA_TTransferSize} {\b DestinationTransferSize}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LDD_DMA_TModuloSize} {\b DestinationModuloSize}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LDD_DMA_TTransferMode} {\b TransferMode}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LDD_DMA_TByteCount} {\b ByteCount}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b AutoAlign}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LDD_DMA_TChannelLinkingMode} {\b ChannelLinkingMode}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LDD_DMA_TChannelNumber} {\b InnerLoopLinkedChannel}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LDD_DMA_TChannelNumber} {\b OuterLoopLinkedChannel}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b ChannelAutoSelection}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LDD_DMA_TChannelNumber} {\b ChannelNumber}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LDD_DMA_TTriggerType} {\b TriggerType}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LDD_DMA_TTriggerSource} {\b TriggerSource}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b PeriodicTrigger}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b DisableAfterRequest}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b AsynchronousRequests}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b Interrupts}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b OnComplete}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b OnError}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void(* {\b OnCompleteEventPtr} )({\b LDD_TUserData} *{\b UserDataPtr})\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void(* {\b OnErrorEventPtr} )({\b LDD_TUserData} *{\b UserDataPtr})\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b ChannelEnabled}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Type specifying the DMA Transfer descriptor information structure. \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Field Documentation\par
\pard\plain 
{\xe \v AsynchronousRequests\:LDD_DMA_TTransferDescriptor}
{\xe \v LDD_DMA_TTransferDescriptor\:AsynchronousRequests}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool LDD_DMA_TTransferDescriptor::AsynchronousRequests}}
\par
{\bkmkstart AAAAAAACZY}
{\bkmkend AAAAAAACZY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
TRUE - Enables the channel to support asynchronous DREQs while the MCU is in Stop mode. \par
}}
{\xe \v AutoAlign\:LDD_DMA_TTransferDescriptor}
{\xe \v LDD_DMA_TTransferDescriptor\:AutoAlign}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool LDD_DMA_TTransferDescriptor::AutoAlign}}
\par
{\bkmkstart AAAAAAACZZ}
{\bkmkend AAAAAAACZZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
TRUE - Auto-align mode is enabled. Transfers are optimized based on the transfer address and size. \par
}}
{\xe \v ByteCount\:LDD_DMA_TTransferDescriptor}
{\xe \v LDD_DMA_TTransferDescriptor\:ByteCount}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LDD_DMA_TByteCount} LDD_DMA_TTransferDescriptor::ByteCount}}
\par
{\bkmkstart AAAAAAADAA}
{\bkmkend AAAAAAADAA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Size of data in bytes to be transferred in single transfer. \par
}}
{\xe \v ChannelAutoSelection\:LDD_DMA_TTransferDescriptor}
{\xe \v LDD_DMA_TTransferDescriptor\:ChannelAutoSelection}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool LDD_DMA_TTransferDescriptor::ChannelAutoSelection}}
\par
{\bkmkstart AAAAAAADAB}
{\bkmkend AAAAAAADAB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
TRUE - DMA channel autoselection engine is used. FALSE - DMA fixed channel is used. \par
}}
{\xe \v ChannelEnabled\:LDD_DMA_TTransferDescriptor}
{\xe \v LDD_DMA_TTransferDescriptor\:ChannelEnabled}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool LDD_DMA_TTransferDescriptor::ChannelEnabled}}
\par
{\bkmkstart AAAAAAADAC}
{\bkmkend AAAAAAADAC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
TRUE - DMA channel is allocated and used by DMATransfer component. \par
}}
{\xe \v ChannelLinkingMode\:LDD_DMA_TTransferDescriptor}
{\xe \v LDD_DMA_TTransferDescriptor\:ChannelLinkingMode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LDD_DMA_TChannelLinkingMode} LDD_DMA_TTransferDescriptor::ChannelLinkingMode}}
\par
{\bkmkstart AAAAAAADAD}
{\bkmkend AAAAAAADAD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Selects channel linking mode. For the description of allowed values see the LDD_DMA_TChannelLinkingMode type declaration. \par
}}
{\xe \v ChannelNumber\:LDD_DMA_TTransferDescriptor}
{\xe \v LDD_DMA_TTransferDescriptor\:ChannelNumber}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LDD_DMA_TChannelNumber} LDD_DMA_TTransferDescriptor::ChannelNumber}}
\par
{\bkmkstart AAAAAAADAE}
{\bkmkend AAAAAAADAE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
If ChannelAutoSelection is FALSE this item contains fixed channel number. If ChannelAutoSelection is TRUE then after allocation this item is filled by autoselected channel number. \par
}}
{\xe \v DestinationAddress\:LDD_DMA_TTransferDescriptor}
{\xe \v LDD_DMA_TTransferDescriptor\:DestinationAddress}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LDD_DMA_TAddress} LDD_DMA_TTransferDescriptor::DestinationAddress}}
\par
{\bkmkstart AAAAAAADAF}
{\bkmkend AAAAAAADAF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Address of a DMA transfer destination. \par
}}
{\xe \v DestinationAddressIncrement\:LDD_DMA_TTransferDescriptor}
{\xe \v LDD_DMA_TTransferDescriptor\:DestinationAddressIncrement}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool LDD_DMA_TTransferDescriptor::DestinationAddressIncrement}}
\par
{\bkmkstart AAAAAAADAG}
{\bkmkend AAAAAAADAG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
TRUE - destination address incremented after each elemental write operation. \par
}}
{\xe \v DestinationModuloSize\:LDD_DMA_TTransferDescriptor}
{\xe \v LDD_DMA_TTransferDescriptor\:DestinationModuloSize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LDD_DMA_TModuloSize} LDD_DMA_TTransferDescriptor::DestinationModuloSize}}
\par
{\bkmkstart AAAAAAADAH}
{\bkmkend AAAAAAADAH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destination address modulo size. For the description of allowed values see the LDD_DMA_TModuloSize type declaration. \par
}}
{\xe \v DestinationTransferSize\:LDD_DMA_TTransferDescriptor}
{\xe \v LDD_DMA_TTransferDescriptor\:DestinationTransferSize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LDD_DMA_TTransferSize} LDD_DMA_TTransferDescriptor::DestinationTransferSize}}
\par
{\bkmkstart AAAAAAADAI}
{\bkmkend AAAAAAADAI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destination data transfer size (size of a elemental write operation). See the DMA_PDD header file for detail description of allowed values. \par
}}
{\xe \v DisableAfterRequest\:LDD_DMA_TTransferDescriptor}
{\xe \v LDD_DMA_TTransferDescriptor\:DisableAfterRequest}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool LDD_DMA_TTransferDescriptor::DisableAfterRequest}}
\par
{\bkmkstart AAAAAAADAJ}
{\bkmkend AAAAAAADAJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
TRUE - DMA transfer request is automatically disabled after transfer complete. \par
}}
{\xe \v InnerLoopLinkedChannel\:LDD_DMA_TTransferDescriptor}
{\xe \v LDD_DMA_TTransferDescriptor\:InnerLoopLinkedChannel}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LDD_DMA_TChannelNumber} LDD_DMA_TTransferDescriptor::InnerLoopLinkedChannel}}
\par
{\bkmkstart AAAAAAADAK}
{\bkmkend AAAAAAADAK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Linked DMA channel number (used only if the ChannelLinkingMode item is set with LDD_DMA_CYCLE_STEAL_AND_TRANSFER_COMPLETE_LINKING or LDD_DMA_CYCLE_STEAL_LINKING). \par
}}
{\xe \v Interrupts\:LDD_DMA_TTransferDescriptor}
{\xe \v LDD_DMA_TTransferDescriptor\:Interrupts}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool LDD_DMA_TTransferDescriptor::Interrupts}}
\par
{\bkmkstart AAAAAAADAL}
{\bkmkend AAAAAAADAL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
TRUE - interrupts are requested. \par
}}
{\xe \v OnComplete\:LDD_DMA_TTransferDescriptor}
{\xe \v LDD_DMA_TTransferDescriptor\:OnComplete}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool LDD_DMA_TTransferDescriptor::OnComplete}}
\par
{\bkmkstart AAAAAAADAM}
{\bkmkend AAAAAAADAM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
TRUE - event is enabled during initialization. \par
}}
{\xe \v OnCompleteEventPtr\:LDD_DMA_TTransferDescriptor}
{\xe \v LDD_DMA_TTransferDescriptor\:OnCompleteEventPtr}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void(* LDD_DMA_TTransferDescriptor::OnCompleteEventPtr)({\b LDD_TUserData} *{\b UserDataPtr})}}
\par
{\bkmkstart AAAAAAADAN}
{\bkmkend AAAAAAADAN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Pointer to the OnComplete event, NULL if event is not used. \par
}}
{\xe \v OnError\:LDD_DMA_TTransferDescriptor}
{\xe \v LDD_DMA_TTransferDescriptor\:OnError}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool LDD_DMA_TTransferDescriptor::OnError}}
\par
{\bkmkstart AAAAAAADAO}
{\bkmkend AAAAAAADAO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
TRUE - event is enabled during initialization. \par
}}
{\xe \v OnErrorEventPtr\:LDD_DMA_TTransferDescriptor}
{\xe \v LDD_DMA_TTransferDescriptor\:OnErrorEventPtr}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void(* LDD_DMA_TTransferDescriptor::OnErrorEventPtr)({\b LDD_TUserData} *{\b UserDataPtr})}}
\par
{\bkmkstart AAAAAAADAP}
{\bkmkend AAAAAAADAP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Pointer to the OnError event, NULL if event is not used. \par
}}
{\xe \v OuterLoopLinkedChannel\:LDD_DMA_TTransferDescriptor}
{\xe \v LDD_DMA_TTransferDescriptor\:OuterLoopLinkedChannel}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LDD_DMA_TChannelNumber} LDD_DMA_TTransferDescriptor::OuterLoopLinkedChannel}}
\par
{\bkmkstart AAAAAAADAQ}
{\bkmkend AAAAAAADAQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Linked DMA channel number (used only if the ChannelLinkingMode item is set with LDD_DMA_CYCLE_STEAL_AND_TRANSFER_COMPLETE_LINKING or LDD_DMA_TRANSFER_COMPLETE_LINKING). \par
}}
{\xe \v PeriodicTrigger\:LDD_DMA_TTransferDescriptor}
{\xe \v LDD_DMA_TTransferDescriptor\:PeriodicTrigger}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool LDD_DMA_TTransferDescriptor::PeriodicTrigger}}
\par
{\bkmkstart AAAAAAADAR}
{\bkmkend AAAAAAADAR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
TRUE - periodic trigger is required, FALSE - periodic trigger is not required. \par
}}
{\xe \v SourceAddress\:LDD_DMA_TTransferDescriptor}
{\xe \v LDD_DMA_TTransferDescriptor\:SourceAddress}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LDD_DMA_TAddress} LDD_DMA_TTransferDescriptor::SourceAddress}}
\par
{\bkmkstart AAAAAAADAS}
{\bkmkend AAAAAAADAS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Address of a DMA transfer source data. \par
}}
{\xe \v SourceAddressIncrement\:LDD_DMA_TTransferDescriptor}
{\xe \v LDD_DMA_TTransferDescriptor\:SourceAddressIncrement}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool LDD_DMA_TTransferDescriptor::SourceAddressIncrement}}
\par
{\bkmkstart AAAAAAADAT}
{\bkmkend AAAAAAADAT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
TRUE - Source address incrementrf after each elemental read operation. \par
}}
{\xe \v SourceModuloSize\:LDD_DMA_TTransferDescriptor}
{\xe \v LDD_DMA_TTransferDescriptor\:SourceModuloSize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LDD_DMA_TModuloSize} LDD_DMA_TTransferDescriptor::SourceModuloSize}}
\par
{\bkmkstart AAAAAAADAU}
{\bkmkend AAAAAAADAU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Source address modulo size. For the description of allowed values see the LDD_DMA_TModuloSize type declaration. \par
}}
{\xe \v SourceTransferSize\:LDD_DMA_TTransferDescriptor}
{\xe \v LDD_DMA_TTransferDescriptor\:SourceTransferSize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LDD_DMA_TTransferSize} LDD_DMA_TTransferDescriptor::SourceTransferSize}}
\par
{\bkmkstart AAAAAAADAV}
{\bkmkend AAAAAAADAV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Source data transfer size (size of a elemental read operation). See the DMA_PDD header file for detail description of allowed values. \par
}}
{\xe \v TransferMode\:LDD_DMA_TTransferDescriptor}
{\xe \v LDD_DMA_TTransferDescriptor\:TransferMode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LDD_DMA_TTransferMode} LDD_DMA_TTransferDescriptor::TransferMode}}
\par
{\bkmkstart AAAAAAADAW}
{\bkmkend AAAAAAADAW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Selects DMA transfer mode. For the description of allowed values see the LDD_DMA_TTransferMode type declaration. \par
}}
{\xe \v TriggerSource\:LDD_DMA_TTransferDescriptor}
{\xe \v LDD_DMA_TTransferDescriptor\:TriggerSource}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LDD_DMA_TTriggerSource} LDD_DMA_TTransferDescriptor::TriggerSource}}
\par
{\bkmkstart AAAAAAADAX}
{\bkmkend AAAAAAADAX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Trigger source number. For the description of allowed values see the LDD_DMA_TBTriggerType declaration. \par
}}
{\xe \v TriggerType\:LDD_DMA_TTransferDescriptor}
{\xe \v LDD_DMA_TTransferDescriptor\:TriggerType}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LDD_DMA_TTriggerType} LDD_DMA_TTransferDescriptor::TriggerType}}
\par
{\bkmkstart AAAAAAADAY}
{\bkmkend AAAAAAADAY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
DMA transfer trigger type. For the description of allowed values see the LDD_DMA_TBTriggerType declaration. \par
}}
{\xe \v UserDataPtr\:LDD_DMA_TTransferDescriptor}
{\xe \v LDD_DMA_TTransferDescriptor\:UserDataPtr}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LDD_TUserData}* LDD_DMA_TTransferDescriptor::UserDataPtr}}
\par
{\bkmkstart AAAAAAADAZ}
{\bkmkend AAAAAAADAZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
User device data structure pointer to be returned by the DMA_LDD component's ISR to the dynamic callback of this transfer descriptor. \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/{\b PE_Types.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
LDD_ETH_TBufferDesc Struct Reference\par \pard\plain 
{\tc\tcl2 \v LDD_ETH_TBufferDesc}
{\xe \v LDD_ETH_TBufferDesc}
{\bkmkstart AAAAAAADBA}
{\bkmkend AAAAAAADBA}
\par
{
{\f2 #include <PE_Types.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t * {\b DataPtr}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint16_t {\b Size}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Ethernet frame buffer (fragment) descriptor \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Field Documentation\par
\pard\plain 
{\xe \v DataPtr\:LDD_ETH_TBufferDesc}
{\xe \v LDD_ETH_TBufferDesc\:DataPtr}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t* LDD_ETH_TBufferDesc::DataPtr}}
\par
{\bkmkstart AAAAAAADBB}
{\bkmkend AAAAAAADBB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Pointer to buffer data \par
}}
{\xe \v Size\:LDD_ETH_TBufferDesc}
{\xe \v LDD_ETH_TBufferDesc\:Size}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint16_t LDD_ETH_TBufferDesc::Size}}
\par
{\bkmkstart AAAAAAADBC}
{\bkmkend AAAAAAADBC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Buffer data size \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/{\b PE_Types.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
LDD_ETH_TStats Struct Reference\par \pard\plain 
{\tc\tcl2 \v LDD_ETH_TStats}
{\xe \v LDD_ETH_TStats}
{\bkmkstart AAAAAAADBD}
{\bkmkend AAAAAAADBD}
\par
{
{\f2 #include <PE_Types.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint32_t {\b TxRMONDropEvents}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint32_t {\b TxRMONOctets}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint32_t {\b TxRMONPackets}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint32_t {\b TxRMONBroadcastPackets}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint32_t {\b TxRMONMulticastPackets}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint32_t {\b TxRMONCRCAlignErrors}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint32_t {\b TxRMONUndersizePackets}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint32_t {\b TxRMONOversizePackets}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint32_t {\b TxRMONFragments}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint32_t {\b TxRMONJabbers}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint32_t {\b TxRMONCollisions}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint32_t {\b TxRMONPackets64Octets}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint32_t {\b TxRMONPackets65To127Octets}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint32_t {\b TxRMONPackets128To255Octets}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint32_t {\b TxRMONPackets256To511Octets}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint32_t {\b TxRMONPackets512To1023Octets}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint32_t {\b TxRMONPackets1024To2047Octets}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint32_t {\b TxRMONPacketsGreaterThan2048Octets}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint32_t {\b TxIEEEDrop}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint32_t {\b TxIEEEFrameOK}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint32_t {\b TxIEEESingleCollision}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint32_t {\b TxIEEEMultipleCollisions}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint32_t {\b TxIEEEDeferralDelay}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint32_t {\b TxIEEELateCollision}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint32_t {\b TxIEEEExcessiveCollision}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint32_t {\b TxIEEEFIFOUnderrun}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint32_t {\b TxIEEECarrierSenseError}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint32_t {\b TxIEEESQEError}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint32_t {\b TxIEEEPauseFrame}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint32_t {\b TxIEEEOctetsOK}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint32_t {\b RxRMONDropEvents}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint32_t {\b RxRMONOctets}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint32_t {\b RxRMONPackets}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint32_t {\b RxRMONBroadcastPackets}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint32_t {\b RxRMONMulticastPackets}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint32_t {\b RxRMONCRCAlignErrors}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint32_t {\b RxRMONUndersizePackets}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint32_t {\b RxRMONOversizePackets}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint32_t {\b RxRMONFragments}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint32_t {\b RxRMONJabbers}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint32_t {\b RxRMONPackets64Octets}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint32_t {\b RxRMONPackets65To127Octets}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint32_t {\b RxRMONPackets128To255Octets}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint32_t {\b RxRMONPackets256To511Octets}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint32_t {\b RxRMONPackets512To1023Octets}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint32_t {\b RxRMONPackets1024To2047Octets}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint32_t {\b RxRMONPacketsGreaterThan2048Octets}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint32_t {\b RxIEEEDrop}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint32_t {\b RxIEEEFrameOK}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint32_t {\b RxIEEECRCError}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint32_t {\b RxIEEEAlignmentError}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint32_t {\b RxIEEEFIFOOverflow}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint32_t {\b RxIEEEPauseFrame}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint32_t {\b RxIEEEOctetsOK}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Ethernet communication statistics \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Field Documentation\par
\pard\plain 
{\xe \v RxIEEEAlignmentError\:LDD_ETH_TStats}
{\xe \v LDD_ETH_TStats\:RxIEEEAlignmentError}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint32_t LDD_ETH_TStats::RxIEEEAlignmentError}}
\par
{\bkmkstart AAAAAAADBE}
{\bkmkend AAAAAAADBE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Frames received with alignment error \par
}}
{\xe \v RxIEEECRCError\:LDD_ETH_TStats}
{\xe \v LDD_ETH_TStats\:RxIEEECRCError}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint32_t LDD_ETH_TStats::RxIEEECRCError}}
\par
{\bkmkstart AAAAAAADBF}
{\bkmkend AAAAAAADBF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Frames received with CRC error \par
}}
{\xe \v RxIEEEDrop\:LDD_ETH_TStats}
{\xe \v LDD_ETH_TStats\:RxIEEEDrop}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint32_t LDD_ETH_TStats::RxIEEEDrop}}
\par
{\bkmkstart AAAAAAADBG}
{\bkmkend AAAAAAADBG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Count of frames not counted correctly \par
}}
{\xe \v RxIEEEFIFOOverflow\:LDD_ETH_TStats}
{\xe \v LDD_ETH_TStats\:RxIEEEFIFOOverflow}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint32_t LDD_ETH_TStats::RxIEEEFIFOOverflow}}
\par
{\bkmkstart AAAAAAADBH}
{\bkmkend AAAAAAADBH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Receive FIFO overflow count \par
}}
{\xe \v RxIEEEFrameOK\:LDD_ETH_TStats}
{\xe \v LDD_ETH_TStats\:RxIEEEFrameOK}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint32_t LDD_ETH_TStats::RxIEEEFrameOK}}
\par
{\bkmkstart AAAAAAADBI}
{\bkmkend AAAAAAADBI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Frames received OK \par
}}
{\xe \v RxIEEEOctetsOK\:LDD_ETH_TStats}
{\xe \v LDD_ETH_TStats\:RxIEEEOctetsOK}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint32_t LDD_ETH_TStats::RxIEEEOctetsOK}}
\par
{\bkmkstart AAAAAAADBJ}
{\bkmkend AAAAAAADBJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Octet count for frames received without error \par
}}
{\xe \v RxIEEEPauseFrame\:LDD_ETH_TStats}
{\xe \v LDD_ETH_TStats\:RxIEEEPauseFrame}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint32_t LDD_ETH_TStats::RxIEEEPauseFrame}}
\par
{\bkmkstart AAAAAAADBK}
{\bkmkend AAAAAAADBK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Flow control pause frames received \par
}}
{\xe \v RxRMONBroadcastPackets\:LDD_ETH_TStats}
{\xe \v LDD_ETH_TStats\:RxRMONBroadcastPackets}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint32_t LDD_ETH_TStats::RxRMONBroadcastPackets}}
\par
{\bkmkstart AAAAAAADBL}
{\bkmkend AAAAAAADBL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Received broadcast packets \par
}}
{\xe \v RxRMONCRCAlignErrors\:LDD_ETH_TStats}
{\xe \v LDD_ETH_TStats\:RxRMONCRCAlignErrors}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint32_t LDD_ETH_TStats::RxRMONCRCAlignErrors}}
\par
{\bkmkstart AAAAAAADBM}
{\bkmkend AAAAAAADBM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Received packets with CRC or alignment error \par
}}
{\xe \v RxRMONDropEvents\:LDD_ETH_TStats}
{\xe \v LDD_ETH_TStats\:RxRMONDropEvents}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint32_t LDD_ETH_TStats::RxRMONDropEvents}}
\par
{\bkmkstart AAAAAAADBN}
{\bkmkend AAAAAAADBN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Count of frames not counted correctly \par
}}
{\xe \v RxRMONFragments\:LDD_ETH_TStats}
{\xe \v LDD_ETH_TStats\:RxRMONFragments}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint32_t LDD_ETH_TStats::RxRMONFragments}}
\par
{\bkmkstart AAAAAAADBO}
{\bkmkend AAAAAAADBO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Received packets smaller than 64 bytes with bad CRC \par
}}
{\xe \v RxRMONJabbers\:LDD_ETH_TStats}
{\xe \v LDD_ETH_TStats\:RxRMONJabbers}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint32_t LDD_ETH_TStats::RxRMONJabbers}}
\par
{\bkmkstart AAAAAAADBP}
{\bkmkend AAAAAAADBP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Received packets greater than max. frame length with bad CRC \par
}}
{\xe \v RxRMONMulticastPackets\:LDD_ETH_TStats}
{\xe \v LDD_ETH_TStats\:RxRMONMulticastPackets}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint32_t LDD_ETH_TStats::RxRMONMulticastPackets}}
\par
{\bkmkstart AAAAAAADBQ}
{\bkmkend AAAAAAADBQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Received multicast packets \par
}}
{\xe \v RxRMONOctets\:LDD_ETH_TStats}
{\xe \v LDD_ETH_TStats\:RxRMONOctets}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint32_t LDD_ETH_TStats::RxRMONOctets}}
\par
{\bkmkstart AAAAAAADBR}
{\bkmkend AAAAAAADBR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Octet count for frames recieved without error \par
}}
{\xe \v RxRMONOversizePackets\:LDD_ETH_TStats}
{\xe \v LDD_ETH_TStats\:RxRMONOversizePackets}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint32_t LDD_ETH_TStats::RxRMONOversizePackets}}
\par
{\bkmkstart AAAAAAADBS}
{\bkmkend AAAAAAADBS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Received packets greater than max. frame length with good CRC \par
}}
{\xe \v RxRMONPackets\:LDD_ETH_TStats}
{\xe \v LDD_ETH_TStats\:RxRMONPackets}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint32_t LDD_ETH_TStats::RxRMONPackets}}
\par
{\bkmkstart AAAAAAADBT}
{\bkmkend AAAAAAADBT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Received packet count \par
}}
{\xe \v RxRMONPackets1024To2047Octets\:LDD_ETH_TStats}
{\xe \v LDD_ETH_TStats\:RxRMONPackets1024To2047Octets}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint32_t LDD_ETH_TStats::RxRMONPackets1024To2047Octets}}
\par
{\bkmkstart AAAAAAADBU}
{\bkmkend AAAAAAADBU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Received 1024 to 2047 byte packets \par
}}
{\xe \v RxRMONPackets128To255Octets\:LDD_ETH_TStats}
{\xe \v LDD_ETH_TStats\:RxRMONPackets128To255Octets}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint32_t LDD_ETH_TStats::RxRMONPackets128To255Octets}}
\par
{\bkmkstart AAAAAAADBV}
{\bkmkend AAAAAAADBV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Received 128 to 255 byte packets \par
}}
{\xe \v RxRMONPackets256To511Octets\:LDD_ETH_TStats}
{\xe \v LDD_ETH_TStats\:RxRMONPackets256To511Octets}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint32_t LDD_ETH_TStats::RxRMONPackets256To511Octets}}
\par
{\bkmkstart AAAAAAADBW}
{\bkmkend AAAAAAADBW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Received 256 to 511 byte packets \par
}}
{\xe \v RxRMONPackets512To1023Octets\:LDD_ETH_TStats}
{\xe \v LDD_ETH_TStats\:RxRMONPackets512To1023Octets}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint32_t LDD_ETH_TStats::RxRMONPackets512To1023Octets}}
\par
{\bkmkstart AAAAAAADBX}
{\bkmkend AAAAAAADBX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Received 512 to 1023 byte packets \par
}}
{\xe \v RxRMONPackets64Octets\:LDD_ETH_TStats}
{\xe \v LDD_ETH_TStats\:RxRMONPackets64Octets}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint32_t LDD_ETH_TStats::RxRMONPackets64Octets}}
\par
{\bkmkstart AAAAAAADBY}
{\bkmkend AAAAAAADBY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Received 64 byte packets \par
}}
{\xe \v RxRMONPackets65To127Octets\:LDD_ETH_TStats}
{\xe \v LDD_ETH_TStats\:RxRMONPackets65To127Octets}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint32_t LDD_ETH_TStats::RxRMONPackets65To127Octets}}
\par
{\bkmkstart AAAAAAADBZ}
{\bkmkend AAAAAAADBZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Received 65 to 127 byte packets \par
}}
{\xe \v RxRMONPacketsGreaterThan2048Octets\:LDD_ETH_TStats}
{\xe \v LDD_ETH_TStats\:RxRMONPacketsGreaterThan2048Octets}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint32_t LDD_ETH_TStats::RxRMONPacketsGreaterThan2048Octets}}
\par
{\bkmkstart AAAAAAADCA}
{\bkmkend AAAAAAADCA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Received packets greater than 2048 byte \par
}}
{\xe \v RxRMONUndersizePackets\:LDD_ETH_TStats}
{\xe \v LDD_ETH_TStats\:RxRMONUndersizePackets}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint32_t LDD_ETH_TStats::RxRMONUndersizePackets}}
\par
{\bkmkstart AAAAAAADCB}
{\bkmkend AAAAAAADCB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Received packets smaller than 64 bytes with good CRC \par
}}
{\xe \v TxIEEECarrierSenseError\:LDD_ETH_TStats}
{\xe \v LDD_ETH_TStats\:TxIEEECarrierSenseError}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint32_t LDD_ETH_TStats::TxIEEECarrierSenseError}}
\par
{\bkmkstart AAAAAAADCC}
{\bkmkend AAAAAAADCC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Frames transmitted with carrier sense error \par
}}
{\xe \v TxIEEEDeferralDelay\:LDD_ETH_TStats}
{\xe \v LDD_ETH_TStats\:TxIEEEDeferralDelay}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint32_t LDD_ETH_TStats::TxIEEEDeferralDelay}}
\par
{\bkmkstart AAAAAAADCD}
{\bkmkend AAAAAAADCD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Frames transmitted after deferral delay \par
}}
{\xe \v TxIEEEDrop\:LDD_ETH_TStats}
{\xe \v LDD_ETH_TStats\:TxIEEEDrop}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint32_t LDD_ETH_TStats::TxIEEEDrop}}
\par
{\bkmkstart AAAAAAADCE}
{\bkmkend AAAAAAADCE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Count of frames not counted correctly \par
}}
{\xe \v TxIEEEExcessiveCollision\:LDD_ETH_TStats}
{\xe \v LDD_ETH_TStats\:TxIEEEExcessiveCollision}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint32_t LDD_ETH_TStats::TxIEEEExcessiveCollision}}
\par
{\bkmkstart AAAAAAADCF}
{\bkmkend AAAAAAADCF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Frames transmitted with excessive collisions \par
}}
{\xe \v TxIEEEFIFOUnderrun\:LDD_ETH_TStats}
{\xe \v LDD_ETH_TStats\:TxIEEEFIFOUnderrun}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint32_t LDD_ETH_TStats::TxIEEEFIFOUnderrun}}
\par
{\bkmkstart AAAAAAADCG}
{\bkmkend AAAAAAADCG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Frames transmitted with transmit FIFO underrun \par
}}
{\xe \v TxIEEEFrameOK\:LDD_ETH_TStats}
{\xe \v LDD_ETH_TStats\:TxIEEEFrameOK}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint32_t LDD_ETH_TStats::TxIEEEFrameOK}}
\par
{\bkmkstart AAAAAAADCH}
{\bkmkend AAAAAAADCH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Frames transmitted OK \par
}}
{\xe \v TxIEEELateCollision\:LDD_ETH_TStats}
{\xe \v LDD_ETH_TStats\:TxIEEELateCollision}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint32_t LDD_ETH_TStats::TxIEEELateCollision}}
\par
{\bkmkstart AAAAAAADCI}
{\bkmkend AAAAAAADCI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Frames transmitted with late collision \par
}}
{\xe \v TxIEEEMultipleCollisions\:LDD_ETH_TStats}
{\xe \v LDD_ETH_TStats\:TxIEEEMultipleCollisions}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint32_t LDD_ETH_TStats::TxIEEEMultipleCollisions}}
\par
{\bkmkstart AAAAAAADCJ}
{\bkmkend AAAAAAADCJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Frames transmitted with multiple collisions \par
}}
{\xe \v TxIEEEOctetsOK\:LDD_ETH_TStats}
{\xe \v LDD_ETH_TStats\:TxIEEEOctetsOK}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint32_t LDD_ETH_TStats::TxIEEEOctetsOK}}
\par
{\bkmkstart AAAAAAADCK}
{\bkmkend AAAAAAADCK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Octet count for frames transmitted without error \par
}}
{\xe \v TxIEEEPauseFrame\:LDD_ETH_TStats}
{\xe \v LDD_ETH_TStats\:TxIEEEPauseFrame}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint32_t LDD_ETH_TStats::TxIEEEPauseFrame}}
\par
{\bkmkstart AAAAAAADCL}
{\bkmkend AAAAAAADCL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Flow control pause frames transmitted \par
}}
{\xe \v TxIEEESingleCollision\:LDD_ETH_TStats}
{\xe \v LDD_ETH_TStats\:TxIEEESingleCollision}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint32_t LDD_ETH_TStats::TxIEEESingleCollision}}
\par
{\bkmkstart AAAAAAADCM}
{\bkmkend AAAAAAADCM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Frames transmitted with single collision \par
}}
{\xe \v TxIEEESQEError\:LDD_ETH_TStats}
{\xe \v LDD_ETH_TStats\:TxIEEESQEError}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint32_t LDD_ETH_TStats::TxIEEESQEError}}
\par
{\bkmkstart AAAAAAADCN}
{\bkmkend AAAAAAADCN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Frames transmitted with SQE error \par
}}
{\xe \v TxRMONBroadcastPackets\:LDD_ETH_TStats}
{\xe \v LDD_ETH_TStats\:TxRMONBroadcastPackets}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint32_t LDD_ETH_TStats::TxRMONBroadcastPackets}}
\par
{\bkmkstart AAAAAAADCO}
{\bkmkend AAAAAAADCO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Transmitted broadcast packets \par
}}
{\xe \v TxRMONCollisions\:LDD_ETH_TStats}
{\xe \v LDD_ETH_TStats\:TxRMONCollisions}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint32_t LDD_ETH_TStats::TxRMONCollisions}}
\par
{\bkmkstart AAAAAAADCP}
{\bkmkend AAAAAAADCP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Transmit collision count \par
}}
{\xe \v TxRMONCRCAlignErrors\:LDD_ETH_TStats}
{\xe \v LDD_ETH_TStats\:TxRMONCRCAlignErrors}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint32_t LDD_ETH_TStats::TxRMONCRCAlignErrors}}
\par
{\bkmkstart AAAAAAADCQ}
{\bkmkend AAAAAAADCQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Transmitted packets with CRC or alignment error \par
}}
{\xe \v TxRMONDropEvents\:LDD_ETH_TStats}
{\xe \v LDD_ETH_TStats\:TxRMONDropEvents}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint32_t LDD_ETH_TStats::TxRMONDropEvents}}
\par
{\bkmkstart AAAAAAADCR}
{\bkmkend AAAAAAADCR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Count of frames not counted correctly \par
}}
{\xe \v TxRMONFragments\:LDD_ETH_TStats}
{\xe \v LDD_ETH_TStats\:TxRMONFragments}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint32_t LDD_ETH_TStats::TxRMONFragments}}
\par
{\bkmkstart AAAAAAADCS}
{\bkmkend AAAAAAADCS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Transmitted packets smaller than 64 bytes with bad CRC \par
}}
{\xe \v TxRMONJabbers\:LDD_ETH_TStats}
{\xe \v LDD_ETH_TStats\:TxRMONJabbers}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint32_t LDD_ETH_TStats::TxRMONJabbers}}
\par
{\bkmkstart AAAAAAADCT}
{\bkmkend AAAAAAADCT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Transmitted packets greater than max. frame length with bad CRC \par
}}
{\xe \v TxRMONMulticastPackets\:LDD_ETH_TStats}
{\xe \v LDD_ETH_TStats\:TxRMONMulticastPackets}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint32_t LDD_ETH_TStats::TxRMONMulticastPackets}}
\par
{\bkmkstart AAAAAAADCU}
{\bkmkend AAAAAAADCU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Transmitted multicast packets \par
}}
{\xe \v TxRMONOctets\:LDD_ETH_TStats}
{\xe \v LDD_ETH_TStats\:TxRMONOctets}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint32_t LDD_ETH_TStats::TxRMONOctets}}
\par
{\bkmkstart AAAAAAADCV}
{\bkmkend AAAAAAADCV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Octet count for frames transmitted without error \par
}}
{\xe \v TxRMONOversizePackets\:LDD_ETH_TStats}
{\xe \v LDD_ETH_TStats\:TxRMONOversizePackets}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint32_t LDD_ETH_TStats::TxRMONOversizePackets}}
\par
{\bkmkstart AAAAAAADCW}
{\bkmkend AAAAAAADCW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Transmitted packets greater than max. frame length with good CRC \par
}}
{\xe \v TxRMONPackets\:LDD_ETH_TStats}
{\xe \v LDD_ETH_TStats\:TxRMONPackets}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint32_t LDD_ETH_TStats::TxRMONPackets}}
\par
{\bkmkstart AAAAAAADCX}
{\bkmkend AAAAAAADCX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Transmitted packet count \par
}}
{\xe \v TxRMONPackets1024To2047Octets\:LDD_ETH_TStats}
{\xe \v LDD_ETH_TStats\:TxRMONPackets1024To2047Octets}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint32_t LDD_ETH_TStats::TxRMONPackets1024To2047Octets}}
\par
{\bkmkstart AAAAAAADCY}
{\bkmkend AAAAAAADCY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Transmitted 1024 to 2047 byte packets \par
}}
{\xe \v TxRMONPackets128To255Octets\:LDD_ETH_TStats}
{\xe \v LDD_ETH_TStats\:TxRMONPackets128To255Octets}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint32_t LDD_ETH_TStats::TxRMONPackets128To255Octets}}
\par
{\bkmkstart AAAAAAADCZ}
{\bkmkend AAAAAAADCZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Transmitted 128 to 255 byte packets \par
}}
{\xe \v TxRMONPackets256To511Octets\:LDD_ETH_TStats}
{\xe \v LDD_ETH_TStats\:TxRMONPackets256To511Octets}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint32_t LDD_ETH_TStats::TxRMONPackets256To511Octets}}
\par
{\bkmkstart AAAAAAADDA}
{\bkmkend AAAAAAADDA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Transmitted 256 to 511 byte packets \par
}}
{\xe \v TxRMONPackets512To1023Octets\:LDD_ETH_TStats}
{\xe \v LDD_ETH_TStats\:TxRMONPackets512To1023Octets}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint32_t LDD_ETH_TStats::TxRMONPackets512To1023Octets}}
\par
{\bkmkstart AAAAAAADDB}
{\bkmkend AAAAAAADDB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Transmitted 512 to 1023 byte packets \par
}}
{\xe \v TxRMONPackets64Octets\:LDD_ETH_TStats}
{\xe \v LDD_ETH_TStats\:TxRMONPackets64Octets}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint32_t LDD_ETH_TStats::TxRMONPackets64Octets}}
\par
{\bkmkstart AAAAAAADDC}
{\bkmkend AAAAAAADDC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Transmitted 64 byte packets \par
}}
{\xe \v TxRMONPackets65To127Octets\:LDD_ETH_TStats}
{\xe \v LDD_ETH_TStats\:TxRMONPackets65To127Octets}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint32_t LDD_ETH_TStats::TxRMONPackets65To127Octets}}
\par
{\bkmkstart AAAAAAADDD}
{\bkmkend AAAAAAADDD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Transmitted 65 to 127 byte packets \par
}}
{\xe \v TxRMONPacketsGreaterThan2048Octets\:LDD_ETH_TStats}
{\xe \v LDD_ETH_TStats\:TxRMONPacketsGreaterThan2048Octets}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint32_t LDD_ETH_TStats::TxRMONPacketsGreaterThan2048Octets}}
\par
{\bkmkstart AAAAAAADDE}
{\bkmkend AAAAAAADDE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Transmitted packets greater than 2048 byte \par
}}
{\xe \v TxRMONUndersizePackets\:LDD_ETH_TStats}
{\xe \v LDD_ETH_TStats\:TxRMONUndersizePackets}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint32_t LDD_ETH_TStats::TxRMONUndersizePackets}}
\par
{\bkmkstart AAAAAAADDF}
{\bkmkend AAAAAAADDF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Transmitted packets smaller than 64 bytes with good CRC \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/{\b PE_Types.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
LDD_FLASH_TErrorStatus Struct Reference\par \pard\plain 
{\tc\tcl2 \v LDD_FLASH_TErrorStatus}
{\xe \v LDD_FLASH_TErrorStatus}
{\bkmkstart AAAAAAADDG}
{\bkmkend AAAAAAADDG}
\par
{
{\f2 #include <PE_Types.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LDD_FLASH_TOperationType} {\b CurrentOperation}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LDD_FLASH_TCommand} {\b CurrentCommand}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LDD_FLASH_TErrorFlags} {\b CurrentErrorFlags}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LDD_FLASH_TAddress} {\b CurrentAddress}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LDD_TData} * {\b CurrentDataPtr}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LDD_FLASH_TDataSize} {\b CurrentDataSize}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Type specifying the FLASH component's rrror status information \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Field Documentation\par
\pard\plain 
{\xe \v CurrentAddress\:LDD_FLASH_TErrorStatus}
{\xe \v LDD_FLASH_TErrorStatus\:CurrentAddress}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LDD_FLASH_TAddress} LDD_FLASH_TErrorStatus::CurrentAddress}}
\par
{\bkmkstart AAAAAAADDH}
{\bkmkend AAAAAAADDH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Address of the flash memory location the error status is related to \par
}}
{\xe \v CurrentCommand\:LDD_FLASH_TErrorStatus}
{\xe \v LDD_FLASH_TErrorStatus\:CurrentCommand}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LDD_FLASH_TCommand} LDD_FLASH_TErrorStatus::CurrentCommand}}
\par
{\bkmkstart AAAAAAADDI}
{\bkmkend AAAAAAADDI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Last flash controller command \par
}}
{\xe \v CurrentDataPtr\:LDD_FLASH_TErrorStatus}
{\xe \v LDD_FLASH_TErrorStatus\:CurrentDataPtr}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LDD_TData}* LDD_FLASH_TErrorStatus::CurrentDataPtr}}
\par
{\bkmkstart AAAAAAADDJ}
{\bkmkend AAAAAAADDJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Pointer to current input data the error status is related to \par
}}
{\xe \v CurrentDataSize\:LDD_FLASH_TErrorStatus}
{\xe \v LDD_FLASH_TErrorStatus\:CurrentDataSize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LDD_FLASH_TDataSize} LDD_FLASH_TErrorStatus::CurrentDataSize}}
\par
{\bkmkstart AAAAAAADDK}
{\bkmkend AAAAAAADDK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Size of the current input data to be programmed or erased in bytes \par
}}
{\xe \v CurrentErrorFlags\:LDD_FLASH_TErrorStatus}
{\xe \v LDD_FLASH_TErrorStatus\:CurrentErrorFlags}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LDD_FLASH_TErrorFlags} LDD_FLASH_TErrorStatus::CurrentErrorFlags}}
\par
{\bkmkstart AAAAAAADDL}
{\bkmkend AAAAAAADDL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Bitfield with error flags. See FLASH2.h for details \par
}}
{\xe \v CurrentOperation\:LDD_FLASH_TErrorStatus}
{\xe \v LDD_FLASH_TErrorStatus\:CurrentOperation}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LDD_FLASH_TOperationType} LDD_FLASH_TErrorStatus::CurrentOperation}}
\par
{\bkmkstart AAAAAAADDM}
{\bkmkend AAAAAAADDM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Current operation \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/{\b PE_Types.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
LDD_I2C_TStats Struct Reference\par \pard\plain 
{\tc\tcl2 \v LDD_I2C_TStats}
{\xe \v LDD_I2C_TStats}
{\bkmkstart AAAAAAADDN}
{\bkmkend AAAAAAADDN}
\par
{
{\f2 #include <PE_Types.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint32_t {\b MasterSentChars}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint32_t {\b MasterReceivedChars}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint32_t {\b MasterNacks}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint32_t {\b ArbitLost}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint32_t {\b SlaveSentChars}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint32_t {\b SlaveReceivedChars}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint32_t {\b SlaveTxUnderrun}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint32_t {\b SlaveRxOverrun}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint32_t {\b SlaveGeneralCallAddr}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint32_t {\b SlaveSmBusCallAddr}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint32_t {\b SlaveSmBusAlertResponse}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint32_t {\b SCLLowTimeout}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint32_t {\b SDALowTimeout}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Communication statistics \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Field Documentation\par
\pard\plain 
{\xe \v ArbitLost\:LDD_I2C_TStats}
{\xe \v LDD_I2C_TStats\:ArbitLost}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint32_t LDD_I2C_TStats::ArbitLost}}
\par
{\bkmkstart AAAAAAADDO}
{\bkmkend AAAAAAADDO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Number of lost the bus arbitration. \par
}}
{\xe \v MasterNacks\:LDD_I2C_TStats}
{\xe \v LDD_I2C_TStats\:MasterNacks}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint32_t LDD_I2C_TStats::MasterNacks}}
\par
{\bkmkstart AAAAAAADDP}
{\bkmkend AAAAAAADDP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Number of no acknowledges. \par
}}
{\xe \v MasterReceivedChars\:LDD_I2C_TStats}
{\xe \v LDD_I2C_TStats\:MasterReceivedChars}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint32_t LDD_I2C_TStats::MasterReceivedChars}}
\par
{\bkmkstart AAAAAAADDQ}
{\bkmkend AAAAAAADDQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Number of master received characters. \par
}}
{\xe \v MasterSentChars\:LDD_I2C_TStats}
{\xe \v LDD_I2C_TStats\:MasterSentChars}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint32_t LDD_I2C_TStats::MasterSentChars}}
\par
{\bkmkstart AAAAAAADDR}
{\bkmkend AAAAAAADDR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Number of master transmitted characters. \par
}}
{\xe \v SCLLowTimeout\:LDD_I2C_TStats}
{\xe \v LDD_I2C_TStats\:SCLLowTimeout}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint32_t LDD_I2C_TStats::SCLLowTimeout}}
\par
{\bkmkstart AAAAAAADDS}
{\bkmkend AAAAAAADDS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Number of SCL low timeout occur. \par
}}
{\xe \v SDALowTimeout\:LDD_I2C_TStats}
{\xe \v LDD_I2C_TStats\:SDALowTimeout}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint32_t LDD_I2C_TStats::SDALowTimeout}}
\par
{\bkmkstart AAAAAAADDT}
{\bkmkend AAAAAAADDT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Number of SCL low timeout occur. \par
}}
{\xe \v SlaveGeneralCallAddr\:LDD_I2C_TStats}
{\xe \v LDD_I2C_TStats\:SlaveGeneralCallAddr}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint32_t LDD_I2C_TStats::SlaveGeneralCallAddr}}
\par
{\bkmkstart AAAAAAADDU}
{\bkmkend AAAAAAADDU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Number of a general call address. \par
}}
{\xe \v SlaveReceivedChars\:LDD_I2C_TStats}
{\xe \v LDD_I2C_TStats\:SlaveReceivedChars}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint32_t LDD_I2C_TStats::SlaveReceivedChars}}
\par
{\bkmkstart AAAAAAADDV}
{\bkmkend AAAAAAADDV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Number of slave received characters. \par
}}
{\xe \v SlaveRxOverrun\:LDD_I2C_TStats}
{\xe \v LDD_I2C_TStats\:SlaveRxOverrun}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint32_t LDD_I2C_TStats::SlaveRxOverrun}}
\par
{\bkmkstart AAAAAAADDW}
{\bkmkend AAAAAAADDW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Number of slave overrun. \par
}}
{\xe \v SlaveSentChars\:LDD_I2C_TStats}
{\xe \v LDD_I2C_TStats\:SlaveSentChars}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint32_t LDD_I2C_TStats::SlaveSentChars}}
\par
{\bkmkstart AAAAAAADDX}
{\bkmkend AAAAAAADDX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Number of slave transmitted characters. \par
}}
{\xe \v SlaveSmBusAlertResponse\:LDD_I2C_TStats}
{\xe \v LDD_I2C_TStats\:SlaveSmBusAlertResponse}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint32_t LDD_I2C_TStats::SlaveSmBusAlertResponse}}
\par
{\bkmkstart AAAAAAADDY}
{\bkmkend AAAAAAADDY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Number of slave SMBus alert response received. \par
}}
{\xe \v SlaveSmBusCallAddr\:LDD_I2C_TStats}
{\xe \v LDD_I2C_TStats\:SlaveSmBusCallAddr}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint32_t LDD_I2C_TStats::SlaveSmBusCallAddr}}
\par
{\bkmkstart AAAAAAADDZ}
{\bkmkend AAAAAAADDZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Number of a SMBus call address. \par
}}
{\xe \v SlaveTxUnderrun\:LDD_I2C_TStats}
{\xe \v LDD_I2C_TStats\:SlaveTxUnderrun}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint32_t LDD_I2C_TStats::SlaveTxUnderrun}}
\par
{\bkmkstart AAAAAAADEA}
{\bkmkend AAAAAAADEA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Number of slave underrun. \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/{\b PE_Types.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
LDD_LCDC_TBitmap Struct Reference\par \pard\plain 
{\tc\tcl2 \v LDD_LCDC_TBitmap}
{\xe \v LDD_LCDC_TBitmap}
{\bkmkstart AAAAAAADEB}
{\bkmkend AAAAAAADEB}
\par
{
{\f2 #include <PE_Types.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LDD_TData} * {\b Address}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint16_t {\b Width}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint16_t {\b Height}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint16_t {\b Format}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Bitmap description \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Field Documentation\par
\pard\plain 
{\xe \v Address\:LDD_LCDC_TBitmap}
{\xe \v LDD_LCDC_TBitmap\:Address}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LDD_TData}* LDD_LCDC_TBitmap::Address}}
\par
{\bkmkstart AAAAAAADEC}
{\bkmkend AAAAAAADEC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Bitmap starting address \par
}}
{\xe \v Format\:LDD_LCDC_TBitmap}
{\xe \v LDD_LCDC_TBitmap\:Format}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint16_t LDD_LCDC_TBitmap::Format}}
\par
{\bkmkstart AAAAAAADED}
{\bkmkend AAAAAAADED}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Bitmap format \par
}}
{\xe \v Height\:LDD_LCDC_TBitmap}
{\xe \v LDD_LCDC_TBitmap\:Height}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint16_t LDD_LCDC_TBitmap::Height}}
\par
{\bkmkstart AAAAAAADEE}
{\bkmkend AAAAAAADEE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Bitmap height \par
}}
{\xe \v Width\:LDD_LCDC_TBitmap}
{\xe \v LDD_LCDC_TBitmap\:Width}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint16_t LDD_LCDC_TBitmap::Width}}
\par
{\bkmkstart AAAAAAADEF}
{\bkmkend AAAAAAADEF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Bitmap width \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/{\b PE_Types.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
LDD_LCDC_TWindow Struct Reference\par \pard\plain 
{\tc\tcl2 \v LDD_LCDC_TWindow}
{\xe \v LDD_LCDC_TWindow}
{\bkmkstart AAAAAAADEG}
{\bkmkend AAAAAAADEG}
\par
{
{\f2 #include <PE_Types.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint16_t {\b X}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint16_t {\b Y}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint16_t {\b Width}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint16_t {\b Height}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Window description \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Field Documentation\par
\pard\plain 
{\xe \v Height\:LDD_LCDC_TWindow}
{\xe \v LDD_LCDC_TWindow\:Height}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint16_t LDD_LCDC_TWindow::Height}}
\par
{\bkmkstart AAAAAAADEH}
{\bkmkend AAAAAAADEH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Window height \par
}}
{\xe \v Width\:LDD_LCDC_TWindow}
{\xe \v LDD_LCDC_TWindow\:Width}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint16_t LDD_LCDC_TWindow::Width}}
\par
{\bkmkstart AAAAAAADEI}
{\bkmkend AAAAAAADEI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Window width \par
}}
{\xe \v X\:LDD_LCDC_TWindow}
{\xe \v LDD_LCDC_TWindow\:X}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint16_t LDD_LCDC_TWindow::X}}
\par
{\bkmkstart AAAAAAADEJ}
{\bkmkend AAAAAAADEJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Window position in bitmap - X \par
}}
{\xe \v Y\:LDD_LCDC_TWindow}
{\xe \v LDD_LCDC_TWindow\:Y}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint16_t LDD_LCDC_TWindow::Y}}
\par
{\bkmkstart AAAAAAADEK}
{\bkmkend AAAAAAADEK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Window position in bitmap - Y \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/{\b PE_Types.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
LDD_RTC_TTime Struct Reference\par \pard\plain 
{\tc\tcl2 \v LDD_RTC_TTime}
{\xe \v LDD_RTC_TTime}
{\bkmkstart AAAAAAADEL}
{\bkmkend AAAAAAADEL}
\par
{
{\f2 #include <PE_Types.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint32_t {\b Second}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint32_t {\b Minute}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint32_t {\b Hour}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint32_t {\b DayOfWeek}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint32_t {\b Day}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint32_t {\b Month}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint32_t {\b Year}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Structure used for time operation \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Field Documentation\par
\pard\plain 
{\xe \v Day\:LDD_RTC_TTime}
{\xe \v LDD_RTC_TTime\:Day}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint32_t LDD_RTC_TTime::Day}}
\par
{\bkmkstart AAAAAAADEM}
{\bkmkend AAAAAAADEM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
day (1 - 31) \par
}}
{\xe \v DayOfWeek\:LDD_RTC_TTime}
{\xe \v LDD_RTC_TTime\:DayOfWeek}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint32_t LDD_RTC_TTime::DayOfWeek}}
\par
{\bkmkstart AAAAAAADEN}
{\bkmkend AAAAAAADEN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
day of week (0-Sunday, .. 6-Saturday) \par
}}
{\xe \v Hour\:LDD_RTC_TTime}
{\xe \v LDD_RTC_TTime\:Hour}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint32_t LDD_RTC_TTime::Hour}}
\par
{\bkmkstart AAAAAAADEO}
{\bkmkend AAAAAAADEO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
hours (0 - 23) \par
}}
{\xe \v Minute\:LDD_RTC_TTime}
{\xe \v LDD_RTC_TTime\:Minute}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint32_t LDD_RTC_TTime::Minute}}
\par
{\bkmkstart AAAAAAADEP}
{\bkmkend AAAAAAADEP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
minutes (0 - 59) \par
}}
{\xe \v Month\:LDD_RTC_TTime}
{\xe \v LDD_RTC_TTime\:Month}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint32_t LDD_RTC_TTime::Month}}
\par
{\bkmkstart AAAAAAADEQ}
{\bkmkend AAAAAAADEQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
month (1 - 12) \par
}}
{\xe \v Second\:LDD_RTC_TTime}
{\xe \v LDD_RTC_TTime\:Second}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint32_t LDD_RTC_TTime::Second}}
\par
{\bkmkstart AAAAAAADER}
{\bkmkend AAAAAAADER}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
seconds (0 - 59) \par
}}
{\xe \v Year\:LDD_RTC_TTime}
{\xe \v LDD_RTC_TTime\:Year}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint32_t LDD_RTC_TTime::Year}}
\par
{\bkmkstart AAAAAAADES}
{\bkmkend AAAAAAADES}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
year \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/{\b PE_Types.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
LDD_SDHC_TBufferDesc Struct Reference\par \pard\plain 
{\tc\tcl2 \v LDD_SDHC_TBufferDesc}
{\xe \v LDD_SDHC_TBufferDesc}
{\bkmkstart AAAAAAADET}
{\bkmkend AAAAAAADET}
\par
{
{\f2 #include <PE_Types.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint16_t {\b Size}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t * {\b DataPtr}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Transfer buffer descriptor \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Field Documentation\par
\pard\plain 
{\xe \v DataPtr\:LDD_SDHC_TBufferDesc}
{\xe \v LDD_SDHC_TBufferDesc\:DataPtr}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t* LDD_SDHC_TBufferDesc::DataPtr}}
\par
{\bkmkstart AAAAAAADEU}
{\bkmkend AAAAAAADEU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Pointer to buffer data \par
}}
{\xe \v Size\:LDD_SDHC_TBufferDesc}
{\xe \v LDD_SDHC_TBufferDesc\:Size}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint16_t LDD_SDHC_TBufferDesc::Size}}
\par
{\bkmkstart AAAAAAADEV}
{\bkmkend AAAAAAADEV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Buffer data size \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/{\b PE_Types.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
LDD_SDHC_TCardAccess Struct Reference\par \pard\plain 
{\tc\tcl2 \v LDD_SDHC_TCardAccess}
{\xe \v LDD_SDHC_TCardAccess}
{\bkmkstart AAAAAAADEW}
{\bkmkend AAAAAAADEW}
\par
{
{\f2 #include <PE_Types.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint16_t {\b MaxBlockLength}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b MisalignBlock}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b PartialBlock}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Card access properties \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Field Documentation\par
\pard\plain 
{\xe \v MaxBlockLength\:LDD_SDHC_TCardAccess}
{\xe \v LDD_SDHC_TCardAccess\:MaxBlockLength}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint16_t LDD_SDHC_TCardAccess::MaxBlockLength}}
\par
{\bkmkstart AAAAAAADEX}
{\bkmkend AAAAAAADEX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Max. transferable block length \par
}}
{\xe \v MisalignBlock\:LDD_SDHC_TCardAccess}
{\xe \v LDD_SDHC_TCardAccess\:MisalignBlock}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool LDD_SDHC_TCardAccess::MisalignBlock}}
\par
{\bkmkstart AAAAAAADEY}
{\bkmkend AAAAAAADEY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Indicates if the data block can be spread over more than one physical block of the memory device \par
}}
{\xe \v PartialBlock\:LDD_SDHC_TCardAccess}
{\xe \v LDD_SDHC_TCardAccess\:PartialBlock}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool LDD_SDHC_TCardAccess::PartialBlock}}
\par
{\bkmkstart AAAAAAADEZ}
{\bkmkend AAAAAAADEZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Indicates whether partial block sizes can be used in block access \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/{\b PE_Types.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
LDD_SDHC_TCardCaps Struct Reference\par \pard\plain 
{\tc\tcl2 \v LDD_SDHC_TCardCaps}
{\xe \v LDD_SDHC_TCardCaps}
{\bkmkstart AAAAAAADFA}
{\bkmkend AAAAAAADFA}
\par
{
{\f2 #include <PE_Types.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\b DataWidths}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\b Operations}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b HighSpeed}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b HighCapacity}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b LowVoltage}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LDD_SDHC_TCardAccess} {\b Read}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LDD_SDHC_TCardAccess} {\b Write}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LDD_SDHC_TCardErase} {\b Erase}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LDD_SDHC_TCardWriteProtect} {\b WriteProtect}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Card capabilities \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Field Documentation\par
\pard\plain 
{\xe \v DataWidths\:LDD_SDHC_TCardCaps}
{\xe \v LDD_SDHC_TCardCaps\:DataWidths}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t LDD_SDHC_TCardCaps::DataWidths}}
\par
{\bkmkstart AAAAAAADFB}
{\bkmkend AAAAAAADFB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Bit mask of supported data bus widths \par
}}
{\xe \v Erase\:LDD_SDHC_TCardCaps}
{\xe \v LDD_SDHC_TCardCaps\:Erase}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LDD_SDHC_TCardErase} LDD_SDHC_TCardCaps::Erase}}
\par
{\bkmkstart AAAAAAADFC}
{\bkmkend AAAAAAADFC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Card data erasion capabilities \par
}}
{\xe \v HighCapacity\:LDD_SDHC_TCardCaps}
{\xe \v LDD_SDHC_TCardCaps\:HighCapacity}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool LDD_SDHC_TCardCaps::HighCapacity}}
\par
{\bkmkstart AAAAAAADFD}
{\bkmkend AAAAAAADFD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Indicates whether the card requires block addressing instead of byte addressing \par
}}
{\xe \v HighSpeed\:LDD_SDHC_TCardCaps}
{\xe \v LDD_SDHC_TCardCaps\:HighSpeed}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool LDD_SDHC_TCardCaps::HighSpeed}}
\par
{\bkmkstart AAAAAAADFE}
{\bkmkend AAAAAAADFE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Indicates whether the card supports high clock configuration (SD bus clock frequency higher than about 25MHz) \par
}}
{\xe \v LowVoltage\:LDD_SDHC_TCardCaps}
{\xe \v LDD_SDHC_TCardCaps\:LowVoltage}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool LDD_SDHC_TCardCaps::LowVoltage}}
\par
{\bkmkstart AAAAAAADFF}
{\bkmkend AAAAAAADFF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Indicates whether the card supports the host's low voltage range \par
}}
{\xe \v Operations\:LDD_SDHC_TCardCaps}
{\xe \v LDD_SDHC_TCardCaps\:Operations}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t LDD_SDHC_TCardCaps::Operations}}
\par
{\bkmkstart AAAAAAADFG}
{\bkmkend AAAAAAADFG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Bit mask of supported operations \par
}}
{\xe \v Read\:LDD_SDHC_TCardCaps}
{\xe \v LDD_SDHC_TCardCaps\:Read}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LDD_SDHC_TCardAccess} LDD_SDHC_TCardCaps::Read}}
\par
{\bkmkstart AAAAAAADFH}
{\bkmkend AAAAAAADFH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Card data read access capabilities \par
}}
{\xe \v Write\:LDD_SDHC_TCardCaps}
{\xe \v LDD_SDHC_TCardCaps\:Write}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LDD_SDHC_TCardAccess} LDD_SDHC_TCardCaps::Write}}
\par
{\bkmkstart AAAAAAADFI}
{\bkmkend AAAAAAADFI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Card data write access capabilities \par
}}
{\xe \v WriteProtect\:LDD_SDHC_TCardCaps}
{\xe \v LDD_SDHC_TCardCaps\:WriteProtect}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LDD_SDHC_TCardWriteProtect} LDD_SDHC_TCardCaps::WriteProtect}}
\par
{\bkmkstart AAAAAAADFJ}
{\bkmkend AAAAAAADFJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Write protection properties \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/{\b PE_Types.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
LDD_SDHC_TCardErase Struct Reference\par \pard\plain 
{\tc\tcl2 \v LDD_SDHC_TCardErase}
{\xe \v LDD_SDHC_TCardErase}
{\bkmkstart AAAAAAADFK}
{\bkmkend AAAAAAADFK}
\par
{
{\f2 #include <PE_Types.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint16_t {\b SectorSize}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\b Pattern}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Card erasion properties \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Field Documentation\par
\pard\plain 
{\xe \v Pattern\:LDD_SDHC_TCardErase}
{\xe \v LDD_SDHC_TCardErase\:Pattern}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t LDD_SDHC_TCardErase::Pattern}}
\par
{\bkmkstart AAAAAAADFL}
{\bkmkend AAAAAAADFL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Memory content after erase \par
}}
{\xe \v SectorSize\:LDD_SDHC_TCardErase}
{\xe \v LDD_SDHC_TCardErase\:SectorSize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint16_t LDD_SDHC_TCardErase::SectorSize}}
\par
{\bkmkstart AAAAAAADFM}
{\bkmkend AAAAAAADFM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The size of an erasable unit \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/{\b PE_Types.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
LDD_SDHC_TCardInfo Struct Reference\par \pard\plain 
{\tc\tcl2 \v LDD_SDHC_TCardInfo}
{\xe \v LDD_SDHC_TCardInfo}
{\bkmkstart AAAAAAADFN}
{\bkmkend AAAAAAADFN}
\par
{
{\f2 #include <PE_Types.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LDD_SDHC_TCardType} {\b Type}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint16_t {\b BlockLength}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint32_t {\b BlockCount}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LDD_SDHC_TCardCaps} {\b Caps}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Card features description \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Field Documentation\par
\pard\plain 
{\xe \v BlockCount\:LDD_SDHC_TCardInfo}
{\xe \v LDD_SDHC_TCardInfo\:BlockCount}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint32_t LDD_SDHC_TCardInfo::BlockCount}}
\par
{\bkmkstart AAAAAAADFO}
{\bkmkend AAAAAAADFO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Number of physical memory blocks \par
}}
{\xe \v BlockLength\:LDD_SDHC_TCardInfo}
{\xe \v LDD_SDHC_TCardInfo\:BlockLength}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint16_t LDD_SDHC_TCardInfo::BlockLength}}
\par
{\bkmkstart AAAAAAADFP}
{\bkmkend AAAAAAADFP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Physical memory block length \par
}}
{\xe \v Caps\:LDD_SDHC_TCardInfo}
{\xe \v LDD_SDHC_TCardInfo\:Caps}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LDD_SDHC_TCardCaps} LDD_SDHC_TCardInfo::Caps}}
\par
{\bkmkstart AAAAAAADFQ}
{\bkmkend AAAAAAADFQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Card capabilities \par
}}
{\xe \v Type\:LDD_SDHC_TCardInfo}
{\xe \v LDD_SDHC_TCardInfo\:Type}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LDD_SDHC_TCardType} LDD_SDHC_TCardInfo::Type}}
\par
{\bkmkstart AAAAAAADFR}
{\bkmkend AAAAAAADFR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Card type \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/{\b PE_Types.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
LDD_SDHC_TCardWriteProtect Struct Reference\par \pard\plain 
{\tc\tcl2 \v LDD_SDHC_TCardWriteProtect}
{\xe \v LDD_SDHC_TCardWriteProtect}
{\bkmkstart AAAAAAADFS}
{\bkmkend AAAAAAADFS}
\par
{
{\f2 #include <PE_Types.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint16_t {\b GroupSize}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b Permanent}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Card write protection properties \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Field Documentation\par
\pard\plain 
{\xe \v GroupSize\:LDD_SDHC_TCardWriteProtect}
{\xe \v LDD_SDHC_TCardWriteProtect\:GroupSize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint16_t LDD_SDHC_TCardWriteProtect::GroupSize}}
\par
{\bkmkstart AAAAAAADFT}
{\bkmkend AAAAAAADFT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The size of write protected group in number of erase groups \par
}}
{\xe \v Permanent\:LDD_SDHC_TCardWriteProtect}
{\xe \v LDD_SDHC_TCardWriteProtect\:Permanent}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool LDD_SDHC_TCardWriteProtect::Permanent}}
\par
{\bkmkstart AAAAAAADFU}
{\bkmkend AAAAAAADFU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Indicates whether card is permanently write protected (read-only) \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/{\b PE_Types.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
LDD_SERIAL_TStats Struct Reference\par \pard\plain 
{\tc\tcl2 \v LDD_SERIAL_TStats}
{\xe \v LDD_SERIAL_TStats}
{\bkmkstart AAAAAAADFV}
{\bkmkend AAAAAAADFV}
\par
{
{\f2 #include <PE_Types.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint32_t {\b ReceivedChars}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint32_t {\b SentChars}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint32_t {\b ReceivedBreaks}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint32_t {\b ParityErrors}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint32_t {\b FramingErrors}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint32_t {\b OverrunErrors}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint32_t {\b NoiseErrors}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Communication statistics \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Field Documentation\par
\pard\plain 
{\xe \v FramingErrors\:LDD_SERIAL_TStats}
{\xe \v LDD_SERIAL_TStats\:FramingErrors}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint32_t LDD_SERIAL_TStats::FramingErrors}}
\par
{\bkmkstart AAAAAAADFW}
{\bkmkend AAAAAAADFW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Number of receiver framing errors \par
}}
{\xe \v NoiseErrors\:LDD_SERIAL_TStats}
{\xe \v LDD_SERIAL_TStats\:NoiseErrors}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint32_t LDD_SERIAL_TStats::NoiseErrors}}
\par
{\bkmkstart AAAAAAADFX}
{\bkmkend AAAAAAADFX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Number of receiver noise errors \par
}}
{\xe \v OverrunErrors\:LDD_SERIAL_TStats}
{\xe \v LDD_SERIAL_TStats\:OverrunErrors}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint32_t LDD_SERIAL_TStats::OverrunErrors}}
\par
{\bkmkstart AAAAAAADFY}
{\bkmkend AAAAAAADFY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Number of receiver overrun errors \par
}}
{\xe \v ParityErrors\:LDD_SERIAL_TStats}
{\xe \v LDD_SERIAL_TStats\:ParityErrors}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint32_t LDD_SERIAL_TStats::ParityErrors}}
\par
{\bkmkstart AAAAAAADFZ}
{\bkmkend AAAAAAADFZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Number of receiver parity errors \par
}}
{\xe \v ReceivedBreaks\:LDD_SERIAL_TStats}
{\xe \v LDD_SERIAL_TStats\:ReceivedBreaks}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint32_t LDD_SERIAL_TStats::ReceivedBreaks}}
\par
{\bkmkstart AAAAAAADGA}
{\bkmkend AAAAAAADGA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Number of received break characters \par
}}
{\xe \v ReceivedChars\:LDD_SERIAL_TStats}
{\xe \v LDD_SERIAL_TStats\:ReceivedChars}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint32_t LDD_SERIAL_TStats::ReceivedChars}}
\par
{\bkmkstart AAAAAAADGB}
{\bkmkend AAAAAAADGB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Number of received characters \par
}}
{\xe \v SentChars\:LDD_SERIAL_TStats}
{\xe \v LDD_SERIAL_TStats\:SentChars}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint32_t LDD_SERIAL_TStats::SentChars}}
\par
{\bkmkstart AAAAAAADGC}
{\bkmkend AAAAAAADGC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Number of transmitted characters \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/{\b PE_Types.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
LDD_SPIMASTER_TStats Struct Reference\par \pard\plain 
{\tc\tcl2 \v LDD_SPIMASTER_TStats}
{\xe \v LDD_SPIMASTER_TStats}
{\bkmkstart AAAAAAADGD}
{\bkmkend AAAAAAADGD}
\par
{
{\f2 #include <PE_Types.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint32_t {\b RxChars}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint32_t {\b TxChars}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint32_t {\b RxParityErrors}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint32_t {\b RxOverruns}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Communication statistics \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Field Documentation\par
\pard\plain 
{\xe \v RxChars\:LDD_SPIMASTER_TStats}
{\xe \v LDD_SPIMASTER_TStats\:RxChars}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint32_t LDD_SPIMASTER_TStats::RxChars}}
\par
{\bkmkstart AAAAAAADGE}
{\bkmkend AAAAAAADGE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Number of received characters \par
}}
{\xe \v RxOverruns\:LDD_SPIMASTER_TStats}
{\xe \v LDD_SPIMASTER_TStats\:RxOverruns}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint32_t LDD_SPIMASTER_TStats::RxOverruns}}
\par
{\bkmkstart AAAAAAADGF}
{\bkmkend AAAAAAADGF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Number of receiver overruns, which have occured \par
}}
{\xe \v RxParityErrors\:LDD_SPIMASTER_TStats}
{\xe \v LDD_SPIMASTER_TStats\:RxParityErrors}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint32_t LDD_SPIMASTER_TStats::RxParityErrors}}
\par
{\bkmkstart AAAAAAADGG}
{\bkmkend AAAAAAADGG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Number of receiver parity errors, which have occured \par
}}
{\xe \v TxChars\:LDD_SPIMASTER_TStats}
{\xe \v LDD_SPIMASTER_TStats\:TxChars}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint32_t LDD_SPIMASTER_TStats::TxChars}}
\par
{\bkmkstart AAAAAAADGH}
{\bkmkend AAAAAAADGH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Number of transmitted characters \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/{\b PE_Types.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
LDD_SPISLAVE_TStats Struct Reference\par \pard\plain 
{\tc\tcl2 \v LDD_SPISLAVE_TStats}
{\xe \v LDD_SPISLAVE_TStats}
{\bkmkstart AAAAAAADGI}
{\bkmkend AAAAAAADGI}
\par
{
{\f2 #include <PE_Types.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint32_t {\b RxChars}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint32_t {\b TxChars}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint32_t {\b RxParityErrors}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint32_t {\b RxOverruns}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint32_t {\b TxUnderruns}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Communication statistics \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Field Documentation\par
\pard\plain 
{\xe \v RxChars\:LDD_SPISLAVE_TStats}
{\xe \v LDD_SPISLAVE_TStats\:RxChars}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint32_t LDD_SPISLAVE_TStats::RxChars}}
\par
{\bkmkstart AAAAAAADGJ}
{\bkmkend AAAAAAADGJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Number of received characters \par
}}
{\xe \v RxOverruns\:LDD_SPISLAVE_TStats}
{\xe \v LDD_SPISLAVE_TStats\:RxOverruns}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint32_t LDD_SPISLAVE_TStats::RxOverruns}}
\par
{\bkmkstart AAAAAAADGK}
{\bkmkend AAAAAAADGK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Number of receiver overruns, which have occured \par
}}
{\xe \v RxParityErrors\:LDD_SPISLAVE_TStats}
{\xe \v LDD_SPISLAVE_TStats\:RxParityErrors}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint32_t LDD_SPISLAVE_TStats::RxParityErrors}}
\par
{\bkmkstart AAAAAAADGL}
{\bkmkend AAAAAAADGL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Number of receiver parity errors, which have occured \par
}}
{\xe \v TxChars\:LDD_SPISLAVE_TStats}
{\xe \v LDD_SPISLAVE_TStats\:TxChars}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint32_t LDD_SPISLAVE_TStats::TxChars}}
\par
{\bkmkstart AAAAAAADGM}
{\bkmkend AAAAAAADGM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Number of transmitted characters \par
}}
{\xe \v TxUnderruns\:LDD_SPISLAVE_TStats}
{\xe \v LDD_SPISLAVE_TStats\:TxUnderruns}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint32_t LDD_SPISLAVE_TStats::TxUnderruns}}
\par
{\bkmkstart AAAAAAADGN}
{\bkmkend AAAAAAADGN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Number of transmitter underruns, which have occured \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/{\b PE_Types.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
LDD_SSI_TAC97Command Struct Reference\par \pard\plain 
{\tc\tcl2 \v LDD_SSI_TAC97Command}
{\xe \v LDD_SSI_TAC97Command}
{\bkmkstart AAAAAAADGO}
{\bkmkend AAAAAAADGO}
\par
{
{\f2 #include <PE_Types.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LDD_SSI_TAC97CommandType} {\b Type}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint32_t {\b Address}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint32_t {\b Data}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
AC97 command \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Field Documentation\par
\pard\plain 
{\xe \v Address\:LDD_SSI_TAC97Command}
{\xe \v LDD_SSI_TAC97Command\:Address}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint32_t LDD_SSI_TAC97Command::Address}}
\par
{\bkmkstart AAAAAAADGP}
{\bkmkend AAAAAAADGP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Command address \par
}}
{\xe \v Data\:LDD_SSI_TAC97Command}
{\xe \v LDD_SSI_TAC97Command\:Data}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint32_t LDD_SSI_TAC97Command::Data}}
\par
{\bkmkstart AAAAAAADGQ}
{\bkmkend AAAAAAADGQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Command data \par
}}
{\xe \v Type\:LDD_SSI_TAC97Command}
{\xe \v LDD_SSI_TAC97Command\:Type}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LDD_SSI_TAC97CommandType} LDD_SSI_TAC97Command::Type}}
\par
{\bkmkstart AAAAAAADGR}
{\bkmkend AAAAAAADGR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Command type \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/{\b PE_Types.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
LDD_SSI_TDataBlocks Struct Reference\par \pard\plain 
{\tc\tcl2 \v LDD_SSI_TDataBlocks}
{\xe \v LDD_SSI_TDataBlocks}
{\bkmkstart AAAAAAADGS}
{\bkmkend AAAAAAADGS}
\par
{
{\f2 #include <PE_Types.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LDD_TData} * {\b Channel0Ptr}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LDD_TData} * {\b Channel1Ptr}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Group of pointers to data blocks. \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Field Documentation\par
\pard\plain 
{\xe \v Channel0Ptr\:LDD_SSI_TDataBlocks}
{\xe \v LDD_SSI_TDataBlocks\:Channel0Ptr}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LDD_TData}* LDD_SSI_TDataBlocks::Channel0Ptr}}
\par
{\bkmkstart AAAAAAADGT}
{\bkmkend AAAAAAADGT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Pointer to data block to send/received via data channel 0 \par
}}
{\xe \v Channel1Ptr\:LDD_SSI_TDataBlocks}
{\xe \v LDD_SSI_TDataBlocks\:Channel1Ptr}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LDD_TData}* LDD_SSI_TDataBlocks::Channel1Ptr}}
\par
{\bkmkstart AAAAAAADGU}
{\bkmkend AAAAAAADGU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Pointer to data block to send/received via data channel 1 \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/{\b PE_Types.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
LDD_SSI_TStats Struct Reference\par \pard\plain 
{\tc\tcl2 \v LDD_SSI_TStats}
{\xe \v LDD_SSI_TStats}
{\bkmkstart AAAAAAADGV}
{\bkmkend AAAAAAADGV}
\par
{
{\f2 #include <PE_Types.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint32_t {\b RxChars}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint32_t {\b TxChars}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint32_t {\b RxOverruns}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint32_t {\b TxUnderruns}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint32_t {\b RxChars1}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint32_t {\b TxChars1}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint32_t {\b RxOverruns1}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint32_t {\b TxUnderruns1}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Communication statistics \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Field Documentation\par
\pard\plain 
{\xe \v RxChars\:LDD_SSI_TStats}
{\xe \v LDD_SSI_TStats\:RxChars}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint32_t LDD_SSI_TStats::RxChars}}
\par
{\bkmkstart AAAAAAADGW}
{\bkmkend AAAAAAADGW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Number of received characters \par
}}
{\xe \v RxChars1\:LDD_SSI_TStats}
{\xe \v LDD_SSI_TStats\:RxChars1}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint32_t LDD_SSI_TStats::RxChars1}}
\par
{\bkmkstart AAAAAAADGX}
{\bkmkend AAAAAAADGX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Number of received characters for second channel \par
}}
{\xe \v RxOverruns\:LDD_SSI_TStats}
{\xe \v LDD_SSI_TStats\:RxOverruns}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint32_t LDD_SSI_TStats::RxOverruns}}
\par
{\bkmkstart AAAAAAADGY}
{\bkmkend AAAAAAADGY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Number of receiver overruns, which have occured \par
}}
{\xe \v RxOverruns1\:LDD_SSI_TStats}
{\xe \v LDD_SSI_TStats\:RxOverruns1}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint32_t LDD_SSI_TStats::RxOverruns1}}
\par
{\bkmkstart AAAAAAADGZ}
{\bkmkend AAAAAAADGZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Number of receiver overruns, which have occured for second channel \par
}}
{\xe \v TxChars\:LDD_SSI_TStats}
{\xe \v LDD_SSI_TStats\:TxChars}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint32_t LDD_SSI_TStats::TxChars}}
\par
{\bkmkstart AAAAAAADHA}
{\bkmkend AAAAAAADHA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Number of transmitted characters \par
}}
{\xe \v TxChars1\:LDD_SSI_TStats}
{\xe \v LDD_SSI_TStats\:TxChars1}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint32_t LDD_SSI_TStats::TxChars1}}
\par
{\bkmkstart AAAAAAADHB}
{\bkmkend AAAAAAADHB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Number of transmitted characters for second channel \par
}}
{\xe \v TxUnderruns\:LDD_SSI_TStats}
{\xe \v LDD_SSI_TStats\:TxUnderruns}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint32_t LDD_SSI_TStats::TxUnderruns}}
\par
{\bkmkstart AAAAAAADHC}
{\bkmkend AAAAAAADHC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Number of transmitter underruns, which have occured \par
}}
{\xe \v TxUnderruns1\:LDD_SSI_TStats}
{\xe \v LDD_SSI_TStats\:TxUnderruns1}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint32_t LDD_SSI_TStats::TxUnderruns1}}
\par
{\bkmkstart AAAAAAADHD}
{\bkmkend AAAAAAADHD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Number of transmitter underruns, which have occured for second channel \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/{\b PE_Types.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
LDD_TimeDate_TDateRec Struct Reference\par \pard\plain 
{\tc\tcl2 \v LDD_TimeDate_TDateRec}
{\xe \v LDD_TimeDate_TDateRec}
{\bkmkstart AAAAAAADHE}
{\bkmkend AAAAAAADHE}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint16_t {\b Year}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint16_t {\b Month}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint16_t {\b Day}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint16_t {\b DayOfWeek}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Field Documentation\par
\pard\plain 
{\xe \v Day\:LDD_TimeDate_TDateRec}
{\xe \v LDD_TimeDate_TDateRec\:Day}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint16_t LDD_TimeDate_TDateRec::Day}}
\par
{\bkmkstart AAAAAAADHF}
{\bkmkend AAAAAAADHF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Days (1 - 31) \par
}}
{\xe \v DayOfWeek\:LDD_TimeDate_TDateRec}
{\xe \v LDD_TimeDate_TDateRec\:DayOfWeek}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint16_t LDD_TimeDate_TDateRec::DayOfWeek}}
\par
{\bkmkstart AAAAAAADHG}
{\bkmkend AAAAAAADHG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Day of week (0-Sunday, .. 6-Saturday) \par
}}
{\xe \v Month\:LDD_TimeDate_TDateRec}
{\xe \v LDD_TimeDate_TDateRec\:Month}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint16_t LDD_TimeDate_TDateRec::Month}}
\par
{\bkmkstart AAAAAAADHH}
{\bkmkend AAAAAAADHH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Months (1 - 12) \par
}}
{\xe \v Year\:LDD_TimeDate_TDateRec}
{\xe \v LDD_TimeDate_TDateRec\:Year}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint16_t LDD_TimeDate_TDateRec::Year}}
\par
{\bkmkstart AAAAAAADHI}
{\bkmkend AAAAAAADHI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Years (1998 - 2099) \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/{\b PE_Types.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
LDD_TimeDate_TTimeRec Struct Reference\par \pard\plain 
{\tc\tcl2 \v LDD_TimeDate_TTimeRec}
{\xe \v LDD_TimeDate_TTimeRec}
{\bkmkstart AAAAAAADHJ}
{\bkmkend AAAAAAADHJ}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint16_t {\b Hour}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint16_t {\b Min}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint16_t {\b Sec}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint16_t {\b Sec100}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Field Documentation\par
\pard\plain 
{\xe \v Hour\:LDD_TimeDate_TTimeRec}
{\xe \v LDD_TimeDate_TTimeRec\:Hour}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint16_t LDD_TimeDate_TTimeRec::Hour}}
\par
{\bkmkstart AAAAAAADHK}
{\bkmkend AAAAAAADHK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Hours (0 - 23) \par
}}
{\xe \v Min\:LDD_TimeDate_TTimeRec}
{\xe \v LDD_TimeDate_TTimeRec\:Min}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint16_t LDD_TimeDate_TTimeRec::Min}}
\par
{\bkmkstart AAAAAAADHL}
{\bkmkend AAAAAAADHL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Minutes (0 - 59) \par
}}
{\xe \v Sec\:LDD_TimeDate_TTimeRec}
{\xe \v LDD_TimeDate_TTimeRec\:Sec}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint16_t LDD_TimeDate_TTimeRec::Sec}}
\par
{\bkmkstart AAAAAAADHM}
{\bkmkend AAAAAAADHM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Seconds (0 - 59) \par
}}
{\xe \v Sec100\:LDD_TimeDate_TTimeRec}
{\xe \v LDD_TimeDate_TTimeRec\:Sec100}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint16_t LDD_TimeDate_TTimeRec::Sec100}}
\par
{\bkmkstart AAAAAAADHN}
{\bkmkend AAAAAAADHN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Hundredths of seconds (0 - 99) \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/{\b PE_Types.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
LDD_USB_Device_TTD_Head_Struct Struct Reference\par \pard\plain 
{\tc\tcl2 \v LDD_USB_Device_TTD_Head_Struct}
{\xe \v LDD_USB_Device_TTD_Head_Struct}
{\bkmkstart AAAAAAADHO}
{\bkmkend AAAAAAADHO}
\par
{
{\f2 #include <PE_Types.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\b EpNum}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LDD_TData} * {\b BufferPtr}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint16_t {\b BufferSize}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\b Flags}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Device transfer descriptor structure - head part \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Field Documentation\par
\pard\plain 
{\xe \v BufferPtr\:LDD_USB_Device_TTD_Head_Struct}
{\xe \v LDD_USB_Device_TTD_Head_Struct\:BufferPtr}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LDD_TData}* LDD_USB_Device_TTD_Head_Struct::BufferPtr}}
\par
{\bkmkstart AAAAAAADHP}
{\bkmkend AAAAAAADHP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Buffer address \par
}}
{\xe \v BufferSize\:LDD_USB_Device_TTD_Head_Struct}
{\xe \v LDD_USB_Device_TTD_Head_Struct\:BufferSize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint16_t LDD_USB_Device_TTD_Head_Struct::BufferSize}}
\par
{\bkmkstart AAAAAAADHQ}
{\bkmkend AAAAAAADHQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Buffer size \par
}}
{\xe \v EpNum\:LDD_USB_Device_TTD_Head_Struct}
{\xe \v LDD_USB_Device_TTD_Head_Struct\:EpNum}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t LDD_USB_Device_TTD_Head_Struct::EpNum}}
\par
{\bkmkstart AAAAAAADHR}
{\bkmkend AAAAAAADHR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Endpoint number \par
}}
{\xe \v Flags\:LDD_USB_Device_TTD_Head_Struct}
{\xe \v LDD_USB_Device_TTD_Head_Struct\:Flags}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t LDD_USB_Device_TTD_Head_Struct::Flags}}
\par
{\bkmkstart AAAAAAADHS}
{\bkmkend AAAAAAADHS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Transfer flags - see constants definition \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/{\b PE_Types.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
LDD_USB_Device_TTD_Struct Struct Reference\par \pard\plain 
{\tc\tcl2 \v LDD_USB_Device_TTD_Struct}
{\xe \v LDD_USB_Device_TTD_Struct}
{\bkmkstart AAAAAAADHT}
{\bkmkend AAAAAAADHT}
\par
{
{\f2 #include <PE_Types.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LDD_USB_Device_TTD_Head} {\b Head}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LDD_USB_TTransferState} {\b TransferState}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint16_t {\b TransmittedDataSize}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LDD_USB_Device_TTransferDoneCalback} * {\b CallbackFnPtr}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t * {\b ParamPtr}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Device transfer descriptor structure \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Field Documentation\par
\pard\plain 
{\xe \v CallbackFnPtr\:LDD_USB_Device_TTD_Struct}
{\xe \v LDD_USB_Device_TTD_Struct\:CallbackFnPtr}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LDD_USB_Device_TTransferDoneCalback}* LDD_USB_Device_TTD_Struct::CallbackFnPtr}}
\par
{\bkmkstart AAAAAAADHU}
{\bkmkend AAAAAAADHU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Address of the callback function. Must be set by the caller \par
}}
{\xe \v Head\:LDD_USB_Device_TTD_Struct}
{\xe \v LDD_USB_Device_TTD_Struct\:Head}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LDD_USB_Device_TTD_Head} LDD_USB_Device_TTD_Struct::Head}}
\par
{\bkmkstart AAAAAAADHV}
{\bkmkend AAAAAAADHV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Td head data, not changed by the driver \par
}}
{\xe \v ParamPtr\:LDD_USB_Device_TTD_Struct}
{\xe \v LDD_USB_Device_TTD_Struct\:ParamPtr}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t* LDD_USB_Device_TTD_Struct::ParamPtr}}
\par
{\bkmkstart AAAAAAADHW}
{\bkmkend AAAAAAADHW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
User parameter. Not changed by the driver \par
}}
{\xe \v TransferState\:LDD_USB_Device_TTD_Struct}
{\xe \v LDD_USB_Device_TTD_Struct\:TransferState}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LDD_USB_TTransferState} LDD_USB_Device_TTD_Struct::TransferState}}
\par
{\bkmkstart AAAAAAADHX}
{\bkmkend AAAAAAADHX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Transfer state. Set by the driver \par
}}
{\xe \v TransmittedDataSize\:LDD_USB_Device_TTD_Struct}
{\xe \v LDD_USB_Device_TTD_Struct\:TransmittedDataSize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint16_t LDD_USB_Device_TTD_Struct::TransmittedDataSize}}
\par
{\bkmkstart AAAAAAADHY}
{\bkmkend AAAAAAADHY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Transmitted data size. Set by the driver \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/{\b PE_Types.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
LDD_USB_Host_TPipeDescr_Struct Struct Reference\par \pard\plain 
{\tc\tcl2 \v LDD_USB_Host_TPipeDescr_Struct}
{\xe \v LDD_USB_Host_TPipeDescr_Struct}
{\bkmkstart AAAAAAADHZ}
{\bkmkend AAAAAAADHZ}
\par
{
{\f2 #include <PE_Types.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\b DevAddress}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LDD_USB_TBusSpeed} {\b DevSpeed}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\b EpNumber}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\b EpDir}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LDD_USB_TTransferType} {\b TransferType}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint16_t {\b MaxPacketSize}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\b TrPerUFrame}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint32_t {\b Interval}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint32_t {\b NAKCount}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\b Flags}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
USB host pipe descriptor structure \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Field Documentation\par
\pard\plain 
{\xe \v DevAddress\:LDD_USB_Host_TPipeDescr_Struct}
{\xe \v LDD_USB_Host_TPipeDescr_Struct\:DevAddress}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t LDD_USB_Host_TPipeDescr_Struct::DevAddress}}
\par
{\bkmkstart AAAAAAADIA}
{\bkmkend AAAAAAADIA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Device address \par
}}
{\xe \v DevSpeed\:LDD_USB_Host_TPipeDescr_Struct}
{\xe \v LDD_USB_Host_TPipeDescr_Struct\:DevSpeed}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LDD_USB_TBusSpeed} LDD_USB_Host_TPipeDescr_Struct::DevSpeed}}
\par
{\bkmkstart AAAAAAADIB}
{\bkmkend AAAAAAADIB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Device speed \par
}}
{\xe \v EpDir\:LDD_USB_Host_TPipeDescr_Struct}
{\xe \v LDD_USB_Host_TPipeDescr_Struct\:EpDir}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t LDD_USB_Host_TPipeDescr_Struct::EpDir}}
\par
{\bkmkstart AAAAAAADIC}
{\bkmkend AAAAAAADIC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
EP direction \par
}}
{\xe \v EpNumber\:LDD_USB_Host_TPipeDescr_Struct}
{\xe \v LDD_USB_Host_TPipeDescr_Struct\:EpNumber}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t LDD_USB_Host_TPipeDescr_Struct::EpNumber}}
\par
{\bkmkstart AAAAAAADID}
{\bkmkend AAAAAAADID}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
EP number \par
}}
{\xe \v Flags\:LDD_USB_Host_TPipeDescr_Struct}
{\xe \v LDD_USB_Host_TPipeDescr_Struct\:Flags}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t LDD_USB_Host_TPipeDescr_Struct::Flags}}
\par
{\bkmkstart AAAAAAADIE}
{\bkmkend AAAAAAADIE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
1 = ZLT \par
}}
{\xe \v Interval\:LDD_USB_Host_TPipeDescr_Struct}
{\xe \v LDD_USB_Host_TPipeDescr_Struct\:Interval}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint32_t LDD_USB_Host_TPipeDescr_Struct::Interval}}
\par
{\bkmkstart AAAAAAADIF}
{\bkmkend AAAAAAADIF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Interval for polling endpoint for data transfers \par
}}
{\xe \v MaxPacketSize\:LDD_USB_Host_TPipeDescr_Struct}
{\xe \v LDD_USB_Host_TPipeDescr_Struct\:MaxPacketSize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint16_t LDD_USB_Host_TPipeDescr_Struct::MaxPacketSize}}
\par
{\bkmkstart AAAAAAADIG}
{\bkmkend AAAAAAADIG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
EP max. packet size \par
}}
{\xe \v NAKCount\:LDD_USB_Host_TPipeDescr_Struct}
{\xe \v LDD_USB_Host_TPipeDescr_Struct\:NAKCount}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint32_t LDD_USB_Host_TPipeDescr_Struct::NAKCount}}
\par
{\bkmkstart AAAAAAADIH}
{\bkmkend AAAAAAADIH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
NAK count \par
}}
{\xe \v TransferType\:LDD_USB_Host_TPipeDescr_Struct}
{\xe \v LDD_USB_Host_TPipeDescr_Struct\:TransferType}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LDD_USB_TTransferType} LDD_USB_Host_TPipeDescr_Struct::TransferType}}
\par
{\bkmkstart AAAAAAADII}
{\bkmkend AAAAAAADII}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
EP Transfer type \par
}}
{\xe \v TrPerUFrame\:LDD_USB_Host_TPipeDescr_Struct}
{\xe \v LDD_USB_Host_TPipeDescr_Struct\:TrPerUFrame}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t LDD_USB_Host_TPipeDescr_Struct::TrPerUFrame}}
\par
{\bkmkstart AAAAAAADIJ}
{\bkmkend AAAAAAADIJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Transaction pre microframe \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/{\b PE_Types.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
LDD_USB_Host_TTD_Struct Struct Reference\par \pard\plain 
{\tc\tcl2 \v LDD_USB_Host_TTD_Struct}
{\xe \v LDD_USB_Host_TTD_Struct}
{\bkmkstart AAAAAAADIK}
{\bkmkend AAAAAAADIK}
\par
{
{\f2 #include <PE_Types.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LDD_TData} * {\b BufferPtr}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint16_t {\b BufferSize}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\b Flags}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LDD_USB_Host_TTransferDoneCalback} * {\b CallbackFnPtr}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t * {\b ParamPtr}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LDD_USB_TSDP} * {\b SDPPrt}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
USB host transfer descriptor structure \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Field Documentation\par
\pard\plain 
{\xe \v BufferPtr\:LDD_USB_Host_TTD_Struct}
{\xe \v LDD_USB_Host_TTD_Struct\:BufferPtr}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LDD_TData}* LDD_USB_Host_TTD_Struct::BufferPtr}}
\par
{\bkmkstart AAAAAAADIL}
{\bkmkend AAAAAAADIL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Buffer address \par
}}
{\xe \v BufferSize\:LDD_USB_Host_TTD_Struct}
{\xe \v LDD_USB_Host_TTD_Struct\:BufferSize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint16_t LDD_USB_Host_TTD_Struct::BufferSize}}
\par
{\bkmkstart AAAAAAADIM}
{\bkmkend AAAAAAADIM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Buffer size \par
}}
{\xe \v CallbackFnPtr\:LDD_USB_Host_TTD_Struct}
{\xe \v LDD_USB_Host_TTD_Struct\:CallbackFnPtr}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LDD_USB_Host_TTransferDoneCalback}* LDD_USB_Host_TTD_Struct::CallbackFnPtr}}
\par
{\bkmkstart AAAAAAADIN}
{\bkmkend AAAAAAADIN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Address of the callback function. Must be set by the caller \par
}}
{\xe \v Flags\:LDD_USB_Host_TTD_Struct}
{\xe \v LDD_USB_Host_TTD_Struct\:Flags}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t LDD_USB_Host_TTD_Struct::Flags}}
\par
{\bkmkstart AAAAAAADIO}
{\bkmkend AAAAAAADIO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Transfer flags \par
}}
{\xe \v ParamPtr\:LDD_USB_Host_TTD_Struct}
{\xe \v LDD_USB_Host_TTD_Struct\:ParamPtr}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t* LDD_USB_Host_TTD_Struct::ParamPtr}}
\par
{\bkmkstart AAAAAAADIP}
{\bkmkend AAAAAAADIP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
User parameter. Not changed by the driver \par
}}
{\xe \v SDPPrt\:LDD_USB_Host_TTD_Struct}
{\xe \v LDD_USB_Host_TTD_Struct\:SDPPrt}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LDD_USB_TSDP}* LDD_USB_Host_TTD_Struct::SDPPrt}}
\par
{\bkmkstart AAAAAAADIQ}
{\bkmkend AAAAAAADIQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Setup data buffer pointer \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/{\b PE_Types.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
LDD_USB_TDevDescriptor_Struct Struct Reference\par \pard\plain 
{\tc\tcl2 \v LDD_USB_TDevDescriptor_Struct}
{\xe \v LDD_USB_TDevDescriptor_Struct}
{\bkmkstart AAAAAAADIR}
{\bkmkend AAAAAAADIR}
\par
{
{\f2 #include <PE_Types.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\b bLength}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\b bDescriptorType}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint16_t {\b bcdUSB}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\b bDeviceClass}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\b bDeviceSubClass}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\b bDeviceProtocol}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\b bMaxPacketSize0}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint16_t {\b idVendor}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint16_t {\b idProduct}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint16_t {\b bcdDevice}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\b iManufacturer}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\b iProduct}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\b iSerialNumber}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\b bNumConfigurations}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Standard device descriptor structure, uint16_t items must be in little-endian format \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Field Documentation\par
\pard\plain 
{\xe \v bcdDevice\:LDD_USB_TDevDescriptor_Struct}
{\xe \v LDD_USB_TDevDescriptor_Struct\:bcdDevice}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint16_t LDD_USB_TDevDescriptor_Struct::bcdDevice}}
\par
{\bkmkstart AAAAAAADIS}
{\bkmkend AAAAAAADIS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Device release number in binary-coded decimal \par
}}
{\xe \v bcdUSB\:LDD_USB_TDevDescriptor_Struct}
{\xe \v LDD_USB_TDevDescriptor_Struct\:bcdUSB}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint16_t LDD_USB_TDevDescriptor_Struct::bcdUSB}}
\par
{\bkmkstart AAAAAAADIT}
{\bkmkend AAAAAAADIT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
USB specification release number in binary-coded Decimal \par
}}
{\xe \v bDescriptorType\:LDD_USB_TDevDescriptor_Struct}
{\xe \v LDD_USB_TDevDescriptor_Struct\:bDescriptorType}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t LDD_USB_TDevDescriptor_Struct::bDescriptorType}}
\par
{\bkmkstart AAAAAAADIU}
{\bkmkend AAAAAAADIU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Descriptor type \par
}}
{\xe \v bDeviceClass\:LDD_USB_TDevDescriptor_Struct}
{\xe \v LDD_USB_TDevDescriptor_Struct\:bDeviceClass}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t LDD_USB_TDevDescriptor_Struct::bDeviceClass}}
\par
{\bkmkstart AAAAAAADIV}
{\bkmkend AAAAAAADIV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Class code (assigned by the USB-IF) \par
}}
{\xe \v bDeviceProtocol\:LDD_USB_TDevDescriptor_Struct}
{\xe \v LDD_USB_TDevDescriptor_Struct\:bDeviceProtocol}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t LDD_USB_TDevDescriptor_Struct::bDeviceProtocol}}
\par
{\bkmkstart AAAAAAADIW}
{\bkmkend AAAAAAADIW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Protocol code (assigned by the USB-IF) \par
}}
{\xe \v bDeviceSubClass\:LDD_USB_TDevDescriptor_Struct}
{\xe \v LDD_USB_TDevDescriptor_Struct\:bDeviceSubClass}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t LDD_USB_TDevDescriptor_Struct::bDeviceSubClass}}
\par
{\bkmkstart AAAAAAADIX}
{\bkmkend AAAAAAADIX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Subclass code (assigned by the USB-IF) \par
}}
{\xe \v bLength\:LDD_USB_TDevDescriptor_Struct}
{\xe \v LDD_USB_TDevDescriptor_Struct\:bLength}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t LDD_USB_TDevDescriptor_Struct::bLength}}
\par
{\bkmkstart AAAAAAADIY}
{\bkmkend AAAAAAADIY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Size of this descriptor in bytes \par
}}
{\xe \v bMaxPacketSize0\:LDD_USB_TDevDescriptor_Struct}
{\xe \v LDD_USB_TDevDescriptor_Struct\:bMaxPacketSize0}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t LDD_USB_TDevDescriptor_Struct::bMaxPacketSize0}}
\par
{\bkmkstart AAAAAAADIZ}
{\bkmkend AAAAAAADIZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Maximum packet size for endpoint zero \par
}}
{\xe \v bNumConfigurations\:LDD_USB_TDevDescriptor_Struct}
{\xe \v LDD_USB_TDevDescriptor_Struct\:bNumConfigurations}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t LDD_USB_TDevDescriptor_Struct::bNumConfigurations}}
\par
{\bkmkstart AAAAAAADJA}
{\bkmkend AAAAAAADJA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Number of possible configurations \par
}}
{\xe \v idProduct\:LDD_USB_TDevDescriptor_Struct}
{\xe \v LDD_USB_TDevDescriptor_Struct\:idProduct}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint16_t LDD_USB_TDevDescriptor_Struct::idProduct}}
\par
{\bkmkstart AAAAAAADJB}
{\bkmkend AAAAAAADJB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Product ID (assigned by the manufacturer) \par
}}
{\xe \v idVendor\:LDD_USB_TDevDescriptor_Struct}
{\xe \v LDD_USB_TDevDescriptor_Struct\:idVendor}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint16_t LDD_USB_TDevDescriptor_Struct::idVendor}}
\par
{\bkmkstart AAAAAAADJC}
{\bkmkend AAAAAAADJC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Vendor ID (assigned by the USB-IF) \par
}}
{\xe \v iManufacturer\:LDD_USB_TDevDescriptor_Struct}
{\xe \v LDD_USB_TDevDescriptor_Struct\:iManufacturer}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t LDD_USB_TDevDescriptor_Struct::iManufacturer}}
\par
{\bkmkstart AAAAAAADJD}
{\bkmkend AAAAAAADJD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Index of string descriptor describing manufacturer \par
}}
{\xe \v iProduct\:LDD_USB_TDevDescriptor_Struct}
{\xe \v LDD_USB_TDevDescriptor_Struct\:iProduct}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t LDD_USB_TDevDescriptor_Struct::iProduct}}
\par
{\bkmkstart AAAAAAADJE}
{\bkmkend AAAAAAADJE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Index of string descriptor describing product \par
}}
{\xe \v iSerialNumber\:LDD_USB_TDevDescriptor_Struct}
{\xe \v LDD_USB_TDevDescriptor_Struct\:iSerialNumber}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t LDD_USB_TDevDescriptor_Struct::iSerialNumber}}
\par
{\bkmkstart AAAAAAADJF}
{\bkmkend AAAAAAADJF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Index of string descriptor describing the device\'92s serial number \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/{\b PE_Types.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
LDD_USB_TDeviceFeatureRequest_Struct Struct Reference\par \pard\plain 
{\tc\tcl2 \v LDD_USB_TDeviceFeatureRequest_Struct}
{\xe \v LDD_USB_TDeviceFeatureRequest_Struct}
{\bkmkstart AAAAAAADJG}
{\bkmkend AAAAAAADJG}
\par
{
{\f2 #include <PE_Types.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\b bmRequestType}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\b bRequest}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint16_t {\b wFeatureSelector}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint16_t {\b wIndex}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint16_t {\b wLength}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Clear/Set device request structure \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Field Documentation\par
\pard\plain 
{\xe \v bmRequestType\:LDD_USB_TDeviceFeatureRequest_Struct}
{\xe \v LDD_USB_TDeviceFeatureRequest_Struct\:bmRequestType}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t LDD_USB_TDeviceFeatureRequest_Struct::bmRequestType}}
\par
{\bkmkstart AAAAAAADJH}
{\bkmkend AAAAAAADJH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Characteristics of request \par
}}
{\xe \v bRequest\:LDD_USB_TDeviceFeatureRequest_Struct}
{\xe \v LDD_USB_TDeviceFeatureRequest_Struct\:bRequest}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t LDD_USB_TDeviceFeatureRequest_Struct::bRequest}}
\par
{\bkmkstart AAAAAAADJI}
{\bkmkend AAAAAAADJI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Request ID \par
}}
{\xe \v wFeatureSelector\:LDD_USB_TDeviceFeatureRequest_Struct}
{\xe \v LDD_USB_TDeviceFeatureRequest_Struct\:wFeatureSelector}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint16_t LDD_USB_TDeviceFeatureRequest_Struct::wFeatureSelector}}
\par
{\bkmkstart AAAAAAADJJ}
{\bkmkend AAAAAAADJJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Feature selector \par
}}
{\xe \v wIndex\:LDD_USB_TDeviceFeatureRequest_Struct}
{\xe \v LDD_USB_TDeviceFeatureRequest_Struct\:wIndex}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint16_t LDD_USB_TDeviceFeatureRequest_Struct::wIndex}}
\par
{\bkmkstart AAAAAAADJK}
{\bkmkend AAAAAAADJK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Not used, should be set to zero \par
}}
{\xe \v wLength\:LDD_USB_TDeviceFeatureRequest_Struct}
{\xe \v LDD_USB_TDeviceFeatureRequest_Struct\:wLength}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint16_t LDD_USB_TDeviceFeatureRequest_Struct::wLength}}
\par
{\bkmkstart AAAAAAADJL}
{\bkmkend AAAAAAADJL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Not used, should be set to zero \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/{\b PE_Types.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
LDD_USB_TEndpointFeatureRequest_Struct Struct Reference\par \pard\plain 
{\tc\tcl2 \v LDD_USB_TEndpointFeatureRequest_Struct}
{\xe \v LDD_USB_TEndpointFeatureRequest_Struct}
{\bkmkstart AAAAAAADJM}
{\bkmkend AAAAAAADJM}
\par
{
{\f2 #include <PE_Types.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\b bmRequestType}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\b bRequest}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint16_t {\b wFeatureSelector}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\b bEndpoint}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\b bIndexHigh}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint16_t {\b wLength}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Clear/Set endpoint feature request structure \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Field Documentation\par
\pard\plain 
{\xe \v bEndpoint\:LDD_USB_TEndpointFeatureRequest_Struct}
{\xe \v LDD_USB_TEndpointFeatureRequest_Struct\:bEndpoint}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t LDD_USB_TEndpointFeatureRequest_Struct::bEndpoint}}
\par
{\bkmkstart AAAAAAADJN}
{\bkmkend AAAAAAADJN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Endpoint address \par
}}
{\xe \v bIndexHigh\:LDD_USB_TEndpointFeatureRequest_Struct}
{\xe \v LDD_USB_TEndpointFeatureRequest_Struct\:bIndexHigh}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t LDD_USB_TEndpointFeatureRequest_Struct::bIndexHigh}}
\par
{\bkmkstart AAAAAAADJO}
{\bkmkend AAAAAAADJO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Not used, should be set to zero \par
}}
{\xe \v bmRequestType\:LDD_USB_TEndpointFeatureRequest_Struct}
{\xe \v LDD_USB_TEndpointFeatureRequest_Struct\:bmRequestType}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t LDD_USB_TEndpointFeatureRequest_Struct::bmRequestType}}
\par
{\bkmkstart AAAAAAADJP}
{\bkmkend AAAAAAADJP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Characteristics of request \par
}}
{\xe \v bRequest\:LDD_USB_TEndpointFeatureRequest_Struct}
{\xe \v LDD_USB_TEndpointFeatureRequest_Struct\:bRequest}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t LDD_USB_TEndpointFeatureRequest_Struct::bRequest}}
\par
{\bkmkstart AAAAAAADJQ}
{\bkmkend AAAAAAADJQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Request ID \par
}}
{\xe \v wFeatureSelector\:LDD_USB_TEndpointFeatureRequest_Struct}
{\xe \v LDD_USB_TEndpointFeatureRequest_Struct\:wFeatureSelector}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint16_t LDD_USB_TEndpointFeatureRequest_Struct::wFeatureSelector}}
\par
{\bkmkstart AAAAAAADJR}
{\bkmkend AAAAAAADJR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Feature selector \par
}}
{\xe \v wLength\:LDD_USB_TEndpointFeatureRequest_Struct}
{\xe \v LDD_USB_TEndpointFeatureRequest_Struct\:wLength}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint16_t LDD_USB_TEndpointFeatureRequest_Struct::wLength}}
\par
{\bkmkstart AAAAAAADJS}
{\bkmkend AAAAAAADJS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Not used, should be set to zero \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/{\b PE_Types.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
LDD_USB_TEndpointStatusRequest_Struct Struct Reference\par \pard\plain 
{\tc\tcl2 \v LDD_USB_TEndpointStatusRequest_Struct}
{\xe \v LDD_USB_TEndpointStatusRequest_Struct}
{\bkmkstart AAAAAAADJT}
{\bkmkend AAAAAAADJT}
\par
{
{\f2 #include <PE_Types.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\b bmRequestType}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\b bRequest}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint16_t {\b wValue}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\b bEndpoint}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\b bIndexHigh}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint16_t {\b wLength}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get endpoint status request structure \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Field Documentation\par
\pard\plain 
{\xe \v bEndpoint\:LDD_USB_TEndpointStatusRequest_Struct}
{\xe \v LDD_USB_TEndpointStatusRequest_Struct\:bEndpoint}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t LDD_USB_TEndpointStatusRequest_Struct::bEndpoint}}
\par
{\bkmkstart AAAAAAADJU}
{\bkmkend AAAAAAADJU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Endpoint address \par
}}
{\xe \v bIndexHigh\:LDD_USB_TEndpointStatusRequest_Struct}
{\xe \v LDD_USB_TEndpointStatusRequest_Struct\:bIndexHigh}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t LDD_USB_TEndpointStatusRequest_Struct::bIndexHigh}}
\par
{\bkmkstart AAAAAAADJV}
{\bkmkend AAAAAAADJV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Not used, should be set to zero \par
}}
{\xe \v bmRequestType\:LDD_USB_TEndpointStatusRequest_Struct}
{\xe \v LDD_USB_TEndpointStatusRequest_Struct\:bmRequestType}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t LDD_USB_TEndpointStatusRequest_Struct::bmRequestType}}
\par
{\bkmkstart AAAAAAADJW}
{\bkmkend AAAAAAADJW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Characteristics of request \par
}}
{\xe \v bRequest\:LDD_USB_TEndpointStatusRequest_Struct}
{\xe \v LDD_USB_TEndpointStatusRequest_Struct\:bRequest}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t LDD_USB_TEndpointStatusRequest_Struct::bRequest}}
\par
{\bkmkstart AAAAAAADJX}
{\bkmkend AAAAAAADJX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Request ID \par
}}
{\xe \v wLength\:LDD_USB_TEndpointStatusRequest_Struct}
{\xe \v LDD_USB_TEndpointStatusRequest_Struct\:wLength}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint16_t LDD_USB_TEndpointStatusRequest_Struct::wLength}}
\par
{\bkmkstart AAAAAAADJY}
{\bkmkend AAAAAAADJY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Reqested data size, should be set to 2 \par
}}
{\xe \v wValue\:LDD_USB_TEndpointStatusRequest_Struct}
{\xe \v LDD_USB_TEndpointStatusRequest_Struct\:wValue}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint16_t LDD_USB_TEndpointStatusRequest_Struct::wValue}}
\par
{\bkmkstart AAAAAAADJZ}
{\bkmkend AAAAAAADJZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Not used, should be set to zero \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/{\b PE_Types.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
LDD_USB_TEpDescriptor_Struct Struct Reference\par \pard\plain 
{\tc\tcl2 \v LDD_USB_TEpDescriptor_Struct}
{\xe \v LDD_USB_TEpDescriptor_Struct}
{\bkmkstart AAAAAAADKA}
{\bkmkend AAAAAAADKA}
\par
{
{\f2 #include <PE_Types.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\b bLength}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\b bDescriptorType}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\b bEndpointAddress}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\b bmAttributes}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint16_t {\b wMaxPacketSize}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\b bInterval}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Endpoint descriptor structure, uint16_t items must be in little-endian format \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Field Documentation\par
\pard\plain 
{\xe \v bDescriptorType\:LDD_USB_TEpDescriptor_Struct}
{\xe \v LDD_USB_TEpDescriptor_Struct\:bDescriptorType}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t LDD_USB_TEpDescriptor_Struct::bDescriptorType}}
\par
{\bkmkstart AAAAAAADKB}
{\bkmkend AAAAAAADKB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Descriptor type \par
}}
{\xe \v bEndpointAddress\:LDD_USB_TEpDescriptor_Struct}
{\xe \v LDD_USB_TEpDescriptor_Struct\:bEndpointAddress}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t LDD_USB_TEpDescriptor_Struct::bEndpointAddress}}
\par
{\bkmkstart AAAAAAADKC}
{\bkmkend AAAAAAADKC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Endpoint address \par
}}
{\xe \v bInterval\:LDD_USB_TEpDescriptor_Struct}
{\xe \v LDD_USB_TEpDescriptor_Struct\:bInterval}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t LDD_USB_TEpDescriptor_Struct::bInterval}}
\par
{\bkmkstart AAAAAAADKD}
{\bkmkend AAAAAAADKD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Interval for polling endpoint for data transfers \par
}}
{\xe \v bLength\:LDD_USB_TEpDescriptor_Struct}
{\xe \v LDD_USB_TEpDescriptor_Struct\:bLength}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t LDD_USB_TEpDescriptor_Struct::bLength}}
\par
{\bkmkstart AAAAAAADKE}
{\bkmkend AAAAAAADKE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Size of this descriptor in bytes \par
}}
{\xe \v bmAttributes\:LDD_USB_TEpDescriptor_Struct}
{\xe \v LDD_USB_TEpDescriptor_Struct\:bmAttributes}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t LDD_USB_TEpDescriptor_Struct::bmAttributes}}
\par
{\bkmkstart AAAAAAADKF}
{\bkmkend AAAAAAADKF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Endpoint attributes \par
}}
{\xe \v wMaxPacketSize\:LDD_USB_TEpDescriptor_Struct}
{\xe \v LDD_USB_TEpDescriptor_Struct\:wMaxPacketSize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint16_t LDD_USB_TEpDescriptor_Struct::wMaxPacketSize}}
\par
{\bkmkstart AAAAAAADKG}
{\bkmkend AAAAAAADKG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Maximum packet size the endpoint is capable of sending or receiving \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/{\b PE_Types.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
LDD_USB_TGetDecriptorRequest_Struct Struct Reference\par \pard\plain 
{\tc\tcl2 \v LDD_USB_TGetDecriptorRequest_Struct}
{\xe \v LDD_USB_TGetDecriptorRequest_Struct}
{\bkmkstart AAAAAAADKH}
{\bkmkend AAAAAAADKH}
\par
{
{\f2 #include <PE_Types.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\b bmRequestType}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\b bRequest}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\b bDescriptorIndex}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\b bDescriptorType}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint16_t {\b wLanguageID}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint16_t {\b wLength}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get decriptor request structure \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Field Documentation\par
\pard\plain 
{\xe \v bDescriptorIndex\:LDD_USB_TGetDecriptorRequest_Struct}
{\xe \v LDD_USB_TGetDecriptorRequest_Struct\:bDescriptorIndex}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t LDD_USB_TGetDecriptorRequest_Struct::bDescriptorIndex}}
\par
{\bkmkstart AAAAAAADKI}
{\bkmkend AAAAAAADKI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Descriptor index \par
}}
{\xe \v bDescriptorType\:LDD_USB_TGetDecriptorRequest_Struct}
{\xe \v LDD_USB_TGetDecriptorRequest_Struct\:bDescriptorType}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t LDD_USB_TGetDecriptorRequest_Struct::bDescriptorType}}
\par
{\bkmkstart AAAAAAADKJ}
{\bkmkend AAAAAAADKJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Descriptor type \par
}}
{\xe \v bmRequestType\:LDD_USB_TGetDecriptorRequest_Struct}
{\xe \v LDD_USB_TGetDecriptorRequest_Struct\:bmRequestType}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t LDD_USB_TGetDecriptorRequest_Struct::bmRequestType}}
\par
{\bkmkstart AAAAAAADKK}
{\bkmkend AAAAAAADKK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Characteristics of request \par
}}
{\xe \v bRequest\:LDD_USB_TGetDecriptorRequest_Struct}
{\xe \v LDD_USB_TGetDecriptorRequest_Struct\:bRequest}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t LDD_USB_TGetDecriptorRequest_Struct::bRequest}}
\par
{\bkmkstart AAAAAAADKL}
{\bkmkend AAAAAAADKL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Request ID \par
}}
{\xe \v wLanguageID\:LDD_USB_TGetDecriptorRequest_Struct}
{\xe \v LDD_USB_TGetDecriptorRequest_Struct\:wLanguageID}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint16_t LDD_USB_TGetDecriptorRequest_Struct::wLanguageID}}
\par
{\bkmkstart AAAAAAADKM}
{\bkmkend AAAAAAADKM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Language ID \par
}}
{\xe \v wLength\:LDD_USB_TGetDecriptorRequest_Struct}
{\xe \v LDD_USB_TGetDecriptorRequest_Struct\:wLength}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint16_t LDD_USB_TGetDecriptorRequest_Struct::wLength}}
\par
{\bkmkstart AAAAAAADKN}
{\bkmkend AAAAAAADKN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Requested data size \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/{\b PE_Types.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
LDD_USB_TGetInterfaceRequest_Struct Struct Reference\par \pard\plain 
{\tc\tcl2 \v LDD_USB_TGetInterfaceRequest_Struct}
{\xe \v LDD_USB_TGetInterfaceRequest_Struct}
{\bkmkstart AAAAAAADKO}
{\bkmkend AAAAAAADKO}
\par
{
{\f2 #include <PE_Types.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\b bmRequestType}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\b bRequest}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint16_t {\b wWalue}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint16_t {\b wInterface}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint16_t {\b wLength}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get interface request structure \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Field Documentation\par
\pard\plain 
{\xe \v bmRequestType\:LDD_USB_TGetInterfaceRequest_Struct}
{\xe \v LDD_USB_TGetInterfaceRequest_Struct\:bmRequestType}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t LDD_USB_TGetInterfaceRequest_Struct::bmRequestType}}
\par
{\bkmkstart AAAAAAADKP}
{\bkmkend AAAAAAADKP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Characteristics of request \par
}}
{\xe \v bRequest\:LDD_USB_TGetInterfaceRequest_Struct}
{\xe \v LDD_USB_TGetInterfaceRequest_Struct\:bRequest}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t LDD_USB_TGetInterfaceRequest_Struct::bRequest}}
\par
{\bkmkstart AAAAAAADKQ}
{\bkmkend AAAAAAADKQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Request ID \par
}}
{\xe \v wInterface\:LDD_USB_TGetInterfaceRequest_Struct}
{\xe \v LDD_USB_TGetInterfaceRequest_Struct\:wInterface}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint16_t LDD_USB_TGetInterfaceRequest_Struct::wInterface}}
\par
{\bkmkstart AAAAAAADKR}
{\bkmkend AAAAAAADKR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Interface index \par
}}
{\xe \v wLength\:LDD_USB_TGetInterfaceRequest_Struct}
{\xe \v LDD_USB_TGetInterfaceRequest_Struct\:wLength}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint16_t LDD_USB_TGetInterfaceRequest_Struct::wLength}}
\par
{\bkmkstart AAAAAAADKS}
{\bkmkend AAAAAAADKS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Reqested data size, should be set to 1 \par
}}
{\xe \v wWalue\:LDD_USB_TGetInterfaceRequest_Struct}
{\xe \v LDD_USB_TGetInterfaceRequest_Struct\:wWalue}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint16_t LDD_USB_TGetInterfaceRequest_Struct::wWalue}}
\par
{\bkmkstart AAAAAAADKT}
{\bkmkend AAAAAAADKT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Not used, should be zero \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/{\b PE_Types.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
LDD_USB_TInterfaceFeatureRequest_Struct Struct Reference\par \pard\plain 
{\tc\tcl2 \v LDD_USB_TInterfaceFeatureRequest_Struct}
{\xe \v LDD_USB_TInterfaceFeatureRequest_Struct}
{\bkmkstart AAAAAAADKU}
{\bkmkend AAAAAAADKU}
\par
{
{\f2 #include <PE_Types.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\b bmRequestType}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\b bRequest}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint16_t {\b wFeatureSelector}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint16_t {\b wInterface}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint16_t {\b wLength}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Clear/Set interface request structure \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Field Documentation\par
\pard\plain 
{\xe \v bmRequestType\:LDD_USB_TInterfaceFeatureRequest_Struct}
{\xe \v LDD_USB_TInterfaceFeatureRequest_Struct\:bmRequestType}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t LDD_USB_TInterfaceFeatureRequest_Struct::bmRequestType}}
\par
{\bkmkstart AAAAAAADKV}
{\bkmkend AAAAAAADKV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Characteristics of request \par
}}
{\xe \v bRequest\:LDD_USB_TInterfaceFeatureRequest_Struct}
{\xe \v LDD_USB_TInterfaceFeatureRequest_Struct\:bRequest}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t LDD_USB_TInterfaceFeatureRequest_Struct::bRequest}}
\par
{\bkmkstart AAAAAAADKW}
{\bkmkend AAAAAAADKW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Request ID \par
}}
{\xe \v wFeatureSelector\:LDD_USB_TInterfaceFeatureRequest_Struct}
{\xe \v LDD_USB_TInterfaceFeatureRequest_Struct\:wFeatureSelector}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint16_t LDD_USB_TInterfaceFeatureRequest_Struct::wFeatureSelector}}
\par
{\bkmkstart AAAAAAADKX}
{\bkmkend AAAAAAADKX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Feature selector \par
}}
{\xe \v wInterface\:LDD_USB_TInterfaceFeatureRequest_Struct}
{\xe \v LDD_USB_TInterfaceFeatureRequest_Struct\:wInterface}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint16_t LDD_USB_TInterfaceFeatureRequest_Struct::wInterface}}
\par
{\bkmkstart AAAAAAADKY}
{\bkmkend AAAAAAADKY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Interface index \par
}}
{\xe \v wLength\:LDD_USB_TInterfaceFeatureRequest_Struct}
{\xe \v LDD_USB_TInterfaceFeatureRequest_Struct\:wLength}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint16_t LDD_USB_TInterfaceFeatureRequest_Struct::wLength}}
\par
{\bkmkstart AAAAAAADKZ}
{\bkmkend AAAAAAADKZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Not used, should be set to zero \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/{\b PE_Types.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
LDD_USB_TSDP_Struct Struct Reference\par \pard\plain 
{\tc\tcl2 \v LDD_USB_TSDP_Struct}
{\xe \v LDD_USB_TSDP_Struct}
{\bkmkstart AAAAAAADLA}
{\bkmkend AAAAAAADLA}
\par
{
{\f2 #include <PE_Types.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\b bmRequestType}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\b bRequest}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint16_t {\b wValue}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint16_t {\b wIndex}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint16_t {\b wLength}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Setup data packet structure, uint16_t items must be in little-endian format \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Field Documentation\par
\pard\plain 
{\xe \v bmRequestType\:LDD_USB_TSDP_Struct}
{\xe \v LDD_USB_TSDP_Struct\:bmRequestType}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t LDD_USB_TSDP_Struct::bmRequestType}}
\par
{\bkmkstart AAAAAAADLB}
{\bkmkend AAAAAAADLB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Characteristics of request \par
}}
{\xe \v bRequest\:LDD_USB_TSDP_Struct}
{\xe \v LDD_USB_TSDP_Struct\:bRequest}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t LDD_USB_TSDP_Struct::bRequest}}
\par
{\bkmkstart AAAAAAADLC}
{\bkmkend AAAAAAADLC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Request code \par
}}
{\xe \v wIndex\:LDD_USB_TSDP_Struct}
{\xe \v LDD_USB_TSDP_Struct\:wIndex}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint16_t LDD_USB_TSDP_Struct::wIndex}}
\par
{\bkmkstart AAAAAAADLD}
{\bkmkend AAAAAAADLD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Word-sized field that varies according to request, typically used to pass an index or offset \par
}}
{\xe \v wLength\:LDD_USB_TSDP_Struct}
{\xe \v LDD_USB_TSDP_Struct\:wLength}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint16_t LDD_USB_TSDP_Struct::wLength}}
\par
{\bkmkstart AAAAAAADLE}
{\bkmkend AAAAAAADLE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Number of bytes to transfer if there is a data stage \par
}}
{\xe \v wValue\:LDD_USB_TSDP_Struct}
{\xe \v LDD_USB_TSDP_Struct\:wValue}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint16_t LDD_USB_TSDP_Struct::wValue}}
\par
{\bkmkstart AAAAAAADLF}
{\bkmkend AAAAAAADLF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Word-sized field that varies according to request \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/{\b PE_Types.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
LDD_USB_TSetAddressRequest_Struct Struct Reference\par \pard\plain 
{\tc\tcl2 \v LDD_USB_TSetAddressRequest_Struct}
{\xe \v LDD_USB_TSetAddressRequest_Struct}
{\bkmkstart AAAAAAADLG}
{\bkmkend AAAAAAADLG}
\par
{
{\f2 #include <PE_Types.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\b bmRequestType}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\b bRequest}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\b DeviceAddress}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\b bValueHigh}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint16_t {\b wIndex}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint16_t {\b wLength}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set address request structure \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Field Documentation\par
\pard\plain 
{\xe \v bmRequestType\:LDD_USB_TSetAddressRequest_Struct}
{\xe \v LDD_USB_TSetAddressRequest_Struct\:bmRequestType}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t LDD_USB_TSetAddressRequest_Struct::bmRequestType}}
\par
{\bkmkstart AAAAAAADLH}
{\bkmkend AAAAAAADLH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Characteristics of request \par
}}
{\xe \v bRequest\:LDD_USB_TSetAddressRequest_Struct}
{\xe \v LDD_USB_TSetAddressRequest_Struct\:bRequest}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t LDD_USB_TSetAddressRequest_Struct::bRequest}}
\par
{\bkmkstart AAAAAAADLI}
{\bkmkend AAAAAAADLI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Request ID \par
}}
{\xe \v bValueHigh\:LDD_USB_TSetAddressRequest_Struct}
{\xe \v LDD_USB_TSetAddressRequest_Struct\:bValueHigh}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t LDD_USB_TSetAddressRequest_Struct::bValueHigh}}
\par
{\bkmkstart AAAAAAADLJ}
{\bkmkend AAAAAAADLJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Not used, should be set to zero \par
}}
{\xe \v DeviceAddress\:LDD_USB_TSetAddressRequest_Struct}
{\xe \v LDD_USB_TSetAddressRequest_Struct\:DeviceAddress}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t LDD_USB_TSetAddressRequest_Struct::DeviceAddress}}
\par
{\bkmkstart AAAAAAADLK}
{\bkmkend AAAAAAADLK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Device address \par
}}
{\xe \v wIndex\:LDD_USB_TSetAddressRequest_Struct}
{\xe \v LDD_USB_TSetAddressRequest_Struct\:wIndex}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint16_t LDD_USB_TSetAddressRequest_Struct::wIndex}}
\par
{\bkmkstart AAAAAAADLL}
{\bkmkend AAAAAAADLL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Not used, should be set to zero \par
}}
{\xe \v wLength\:LDD_USB_TSetAddressRequest_Struct}
{\xe \v LDD_USB_TSetAddressRequest_Struct\:wLength}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint16_t LDD_USB_TSetAddressRequest_Struct::wLength}}
\par
{\bkmkstart AAAAAAADLM}
{\bkmkend AAAAAAADLM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Not used, should be set to zero \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/{\b PE_Types.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
LDD_USB_TSetConfigRequest_Struct Struct Reference\par \pard\plain 
{\tc\tcl2 \v LDD_USB_TSetConfigRequest_Struct}
{\xe \v LDD_USB_TSetConfigRequest_Struct}
{\bkmkstart AAAAAAADLN}
{\bkmkend AAAAAAADLN}
\par
{
{\f2 #include <PE_Types.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\b bmRequestType}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\b bRequest}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\b bValueHigh}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\b ConfigNumber}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint16_t {\b wIndex}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint16_t {\b wLength}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set address request structure \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Field Documentation\par
\pard\plain 
{\xe \v bmRequestType\:LDD_USB_TSetConfigRequest_Struct}
{\xe \v LDD_USB_TSetConfigRequest_Struct\:bmRequestType}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t LDD_USB_TSetConfigRequest_Struct::bmRequestType}}
\par
{\bkmkstart AAAAAAADLO}
{\bkmkend AAAAAAADLO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Characteristics of request \par
}}
{\xe \v bRequest\:LDD_USB_TSetConfigRequest_Struct}
{\xe \v LDD_USB_TSetConfigRequest_Struct\:bRequest}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t LDD_USB_TSetConfigRequest_Struct::bRequest}}
\par
{\bkmkstart AAAAAAADLP}
{\bkmkend AAAAAAADLP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Request ID \par
}}
{\xe \v bValueHigh\:LDD_USB_TSetConfigRequest_Struct}
{\xe \v LDD_USB_TSetConfigRequest_Struct\:bValueHigh}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t LDD_USB_TSetConfigRequest_Struct::bValueHigh}}
\par
{\bkmkstart AAAAAAADLQ}
{\bkmkend AAAAAAADLQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Not used, should be set to zero \par
}}
{\xe \v ConfigNumber\:LDD_USB_TSetConfigRequest_Struct}
{\xe \v LDD_USB_TSetConfigRequest_Struct\:ConfigNumber}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t LDD_USB_TSetConfigRequest_Struct::ConfigNumber}}
\par
{\bkmkstart AAAAAAADLR}
{\bkmkend AAAAAAADLR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Configuration number \par
}}
{\xe \v wIndex\:LDD_USB_TSetConfigRequest_Struct}
{\xe \v LDD_USB_TSetConfigRequest_Struct\:wIndex}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint16_t LDD_USB_TSetConfigRequest_Struct::wIndex}}
\par
{\bkmkstart AAAAAAADLS}
{\bkmkend AAAAAAADLS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Not used, should be set to zero \par
}}
{\xe \v wLength\:LDD_USB_TSetConfigRequest_Struct}
{\xe \v LDD_USB_TSetConfigRequest_Struct\:wLength}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint16_t LDD_USB_TSetConfigRequest_Struct::wLength}}
\par
{\bkmkstart AAAAAAADLT}
{\bkmkend AAAAAAADLT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Not used, should be set to zero \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/{\b PE_Types.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
LDD_USB_TSetInterfaceRequest_Struct Struct Reference\par \pard\plain 
{\tc\tcl2 \v LDD_USB_TSetInterfaceRequest_Struct}
{\xe \v LDD_USB_TSetInterfaceRequest_Struct}
{\bkmkstart AAAAAAADLU}
{\bkmkend AAAAAAADLU}
\par
{
{\f2 #include <PE_Types.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\b bmRequestType}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\b bRequest}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint16_t {\b wAltSet}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint16_t {\b wInterface}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint16_t {\b wLength}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set interface request structure \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Field Documentation\par
\pard\plain 
{\xe \v bmRequestType\:LDD_USB_TSetInterfaceRequest_Struct}
{\xe \v LDD_USB_TSetInterfaceRequest_Struct\:bmRequestType}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t LDD_USB_TSetInterfaceRequest_Struct::bmRequestType}}
\par
{\bkmkstart AAAAAAADLV}
{\bkmkend AAAAAAADLV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Characteristics of request \par
}}
{\xe \v bRequest\:LDD_USB_TSetInterfaceRequest_Struct}
{\xe \v LDD_USB_TSetInterfaceRequest_Struct\:bRequest}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t LDD_USB_TSetInterfaceRequest_Struct::bRequest}}
\par
{\bkmkstart AAAAAAADLW}
{\bkmkend AAAAAAADLW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Request ID \par
}}
{\xe \v wAltSet\:LDD_USB_TSetInterfaceRequest_Struct}
{\xe \v LDD_USB_TSetInterfaceRequest_Struct\:wAltSet}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint16_t LDD_USB_TSetInterfaceRequest_Struct::wAltSet}}
\par
{\bkmkstart AAAAAAADLX}
{\bkmkend AAAAAAADLX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Alternate setting \par
}}
{\xe \v wInterface\:LDD_USB_TSetInterfaceRequest_Struct}
{\xe \v LDD_USB_TSetInterfaceRequest_Struct\:wInterface}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint16_t LDD_USB_TSetInterfaceRequest_Struct::wInterface}}
\par
{\bkmkstart AAAAAAADLY}
{\bkmkend AAAAAAADLY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Interface index \par
}}
{\xe \v wLength\:LDD_USB_TSetInterfaceRequest_Struct}
{\xe \v LDD_USB_TSetInterfaceRequest_Struct\:wLength}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint16_t LDD_USB_TSetInterfaceRequest_Struct::wLength}}
\par
{\bkmkstart AAAAAAADLZ}
{\bkmkend AAAAAAADLZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Not used, should be set to zero \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/{\b PE_Types.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
PC_TError Union Reference\par \pard\plain 
{\tc\tcl2 \v PC_TError}
{\xe \v PC_TError}
{\bkmkstart AAAAAAADMA}
{\bkmkend AAAAAAADMA}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

byte {\b err}{\bkmkstart AAAAAAADMB}
{\bkmkend AAAAAAADMB}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

struct \{\par

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
\~ bool {\b OverRun}: 1\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
\~ bool {\b Framing}: 1\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
\~ bool {\b Parity}: 1\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
\~ bool {\b RxBufOvf}: 1\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
\~ bool {\b Noise}: 1\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
\~ bool {\b Break}: 1\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
\~ bool {\b LINSync}: 1\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
\~ bool {\b BitError}: 1\par
}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
\} {\b errName}{\bkmkstart AAAAAAADMC}
{\bkmkend AAAAAAADMC}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this union was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/{\b PC.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RealTimeLdd1_TDeviceData Struct Reference\par \pard\plain 
{\tc\tcl2 \v RealTimeLdd1_TDeviceData}
{\xe \v RealTimeLdd1_TDeviceData}
{\bkmkstart AAAAAAADMD}
{\bkmkend AAAAAAADMD}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b LDD_TDeviceData} * {\b LinkedDeviceDataPtr}{\bkmkstart AAAAAAADME}
{\bkmkend AAAAAAADME}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b EnUser}{\bkmkstart AAAAAAADMF}
{\bkmkend AAAAAAADMF}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint16_t {\b TimerTicks}{\bkmkstart AAAAAAADMG}
{\bkmkend AAAAAAADMG}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b Overflow}{\bkmkstart AAAAAAADMH}
{\bkmkend AAAAAAADMH}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b LDD_TUserData} * {\b UserDataPtr}{\bkmkstart AAAAAAADMI}
{\bkmkend AAAAAAADMI}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/{\b RealTimeLdd1.c}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RealTimeLdd2_TDeviceData Struct Reference\par \pard\plain 
{\tc\tcl2 \v RealTimeLdd2_TDeviceData}
{\xe \v RealTimeLdd2_TDeviceData}
{\bkmkstart AAAAAAADMJ}
{\bkmkend AAAAAAADMJ}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b LDD_TDeviceData} * {\b LinkedDeviceDataPtr}{\bkmkstart AAAAAAADMK}
{\bkmkend AAAAAAADMK}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b EnUser}{\bkmkstart AAAAAAADML}
{\bkmkend AAAAAAADML}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint16_t {\b TimerTicks}{\bkmkstart AAAAAAADMM}
{\bkmkend AAAAAAADMM}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b Overflow}{\bkmkstart AAAAAAADMN}
{\bkmkend AAAAAAADMN}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b LDD_TUserData} * {\b UserDataPtr}{\bkmkstart AAAAAAADMO}
{\bkmkend AAAAAAADMO}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/{\b RealTimeLdd2.c}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RTC1_TDeviceData Struct Reference\par \pard\plain 
{\tc\tcl2 \v RTC1_TDeviceData}
{\xe \v RTC1_TDeviceData}
{\bkmkstart AAAAAAADMP}
{\bkmkend AAAAAAADMP}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b LDD_TUserData} * {\b UserDataPtr}{\bkmkstart AAAAAAADMQ}
{\bkmkend AAAAAAADMQ}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/{\b RTC1.c}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
SM1_TDeviceData Struct Reference\par \pard\plain 
{\tc\tcl2 \v SM1_TDeviceData}
{\xe \v SM1_TDeviceData}
{\bkmkstart AAAAAAADMR}
{\bkmkend AAAAAAADMR}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b LDD_SPIMASTER_TError} {\b ErrFlag}{\bkmkstart AAAAAAADMS}
{\bkmkend AAAAAAADMS}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint16_t {\b InpRecvDataNum}{\bkmkstart AAAAAAADMT}
{\bkmkend AAAAAAADMT}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint8_t * {\b InpDataPtr}{\bkmkstart AAAAAAADMU}
{\bkmkend AAAAAAADMU}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint16_t {\b InpDataNumReq}{\bkmkstart AAAAAAADMV}
{\bkmkend AAAAAAADMV}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint16_t {\b OutSentDataNum}{\bkmkstart AAAAAAADMW}
{\bkmkend AAAAAAADMW}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint8_t * {\b OutDataPtr}{\bkmkstart AAAAAAADMX}
{\bkmkend AAAAAAADMX}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint16_t {\b OutDataNumReq}{\bkmkstart AAAAAAADMY}
{\bkmkend AAAAAAADMY}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b LDD_TUserData} * {\b UserData}{\bkmkstart AAAAAAADMZ}
{\bkmkend AAAAAAADMZ}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/{\b SM1.c}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
TCpuClockConfiguration Struct Reference\par \pard\plain 
{\tc\tcl2 \v TCpuClockConfiguration}
{\xe \v TCpuClockConfiguration}
{\bkmkstart AAAAAAADNA}
{\bkmkend AAAAAAADNA}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint32_t {\b cpu_core_clk_hz}{\bkmkstart AAAAAAADNB}
{\bkmkend AAAAAAADNB}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint32_t {\b cpu_bus_clk_hz}{\bkmkstart AAAAAAADNC}
{\bkmkend AAAAAAADNC}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint32_t {\b cpu_flexbus_clk_hz}{\bkmkstart AAAAAAADND}
{\bkmkend AAAAAAADND}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint32_t {\b cpu_flash_clk_hz}{\bkmkstart AAAAAAADNE}
{\bkmkend AAAAAAADNE}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint32_t {\b cpu_usb_clk_hz}{\bkmkstart AAAAAAADNF}
{\bkmkend AAAAAAADNF}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint32_t {\b cpu_pll_fll_clk_hz}{\bkmkstart AAAAAAADNG}
{\bkmkend AAAAAAADNG}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint32_t {\b cpu_mcgir_clk_hz}{\bkmkstart AAAAAAADNH}
{\bkmkend AAAAAAADNH}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint32_t {\b cpu_oscer_clk_hz}{\bkmkstart AAAAAAADNI}
{\bkmkend AAAAAAADNI}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint32_t {\b cpu_erclk32k_clk_hz}{\bkmkstart AAAAAAADNJ}
{\bkmkend AAAAAAADNJ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint32_t {\b cpu_mcgff_clk_hz}{\bkmkstart AAAAAAADNK}
{\bkmkend AAAAAAADNK}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/{\b Cpu.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
TimerIntLdd1_TDeviceData Struct Reference\par \pard\plain 
{\tc\tcl2 \v TimerIntLdd1_TDeviceData}
{\xe \v TimerIntLdd1_TDeviceData}
{\bkmkstart AAAAAAADNL}
{\bkmkend AAAAAAADNL}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b LDD_TDeviceData} * {\b LinkedDeviceDataPtr}{\bkmkstart AAAAAAADNM}
{\bkmkend AAAAAAADNM}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b EnUser}{\bkmkstart AAAAAAADNN}
{\bkmkend AAAAAAADNN}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b LDD_TUserData} * {\b UserDataPtr}{\bkmkstart AAAAAAADNO}
{\bkmkend AAAAAAADNO}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/{\b TimerIntLdd1.c}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
TU1_TDeviceData Struct Reference\par \pard\plain 
{\tc\tcl2 \v TU1_TDeviceData}
{\xe \v TU1_TDeviceData}
{\bkmkstart AAAAAAADNP}
{\bkmkend AAAAAAADNP}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint8_t {\b InitCntr}{\bkmkstart AAAAAAADNQ}
{\bkmkend AAAAAAADNQ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b LDD_TUserData} * {\b UserDataPtr}{\bkmkstart AAAAAAADNR}
{\bkmkend AAAAAAADNR}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/{\b TU1.c}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
TU3_TDeviceData Struct Reference\par \pard\plain 
{\tc\tcl2 \v TU3_TDeviceData}
{\xe \v TU3_TDeviceData}
{\bkmkstart AAAAAAADNS}
{\bkmkend AAAAAAADNS}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b LDD_TEventMask} {\b EnEvents}{\bkmkstart AAAAAAADNT}
{\bkmkend AAAAAAADNT}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint8_t {\b InitCntr}{\bkmkstart AAAAAAADNU}
{\bkmkend AAAAAAADNU}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b LDD_TUserData} * {\b UserDataPtr}{\bkmkstart AAAAAAADNV}
{\bkmkend AAAAAAADNV}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/{\b TU3.c}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
TU4_TDeviceData Struct Reference\par \pard\plain 
{\tc\tcl2 \v TU4_TDeviceData}
{\xe \v TU4_TDeviceData}
{\bkmkstart AAAAAAADNW}
{\bkmkend AAAAAAADNW}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b LDD_TEventMask} {\b EnEvents}{\bkmkstart AAAAAAADNX}
{\bkmkend AAAAAAADNX}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint8_t {\b InitCntr}{\bkmkstart AAAAAAADNY}
{\bkmkend AAAAAAADNY}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b LDD_TUserData} * {\b UserDataPtr}{\bkmkstart AAAAAAADNZ}
{\bkmkend AAAAAAADNZ}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/{\b TU4.c}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
TU6_TDeviceData Struct Reference\par \pard\plain 
{\tc\tcl2 \v TU6_TDeviceData}
{\xe \v TU6_TDeviceData}
{\bkmkstart AAAAAAADOA}
{\bkmkend AAAAAAADOA}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b LDD_TUserData} * {\b UserDataPtr}{\bkmkstart AAAAAAADOB}
{\bkmkend AAAAAAADOB}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/{\b TU6.c}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
tVectorTable Struct Reference\par \pard\plain 
{\tc\tcl2 \v tVectorTable}
{\xe \v tVectorTable}
{\bkmkstart AAAAAAADOC}
{\bkmkend AAAAAAADOC}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void * {\b __ptr}{\bkmkstart AAAAAAADOD}
{\bkmkend AAAAAAADOD}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

tIsrFunc {\b __fun} [0x2F]{\bkmkstart AAAAAAADOE}
{\bkmkend AAAAAAADOE}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/{\b Cpu.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Wifi_TError Union Reference\par \pard\plain 
{\tc\tcl2 \v Wifi_TError}
{\xe \v Wifi_TError}
{\bkmkstart AAAAAAADOF}
{\bkmkend AAAAAAADOF}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

byte {\b err}{\bkmkstart AAAAAAADOG}
{\bkmkend AAAAAAADOG}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

struct \{\par

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
\~ bool {\b OverRun}: 1\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
\~ bool {\b Framing}: 1\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
\~ bool {\b Parity}: 1\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
\~ bool {\b RxBufOvf}: 1\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
\~ bool {\b Noise}: 1\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
\~ bool {\b Break}: 1\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
\~ bool {\b LINSync}: 1\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
\~ bool {\b BitError}: 1\par
}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
\} {\b errName}{\bkmkstart AAAAAAADOH}
{\bkmkend AAAAAAADOH}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this union was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/{\b Wifi.h}\par
}
\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
File Documentation{\tc \v File Documentation}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/ASerialLdd1.c File Reference\par \pard\plain 
{\tc\tcl2 \v C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/ASerialLdd1.c}
{\xe \v C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/ASerialLdd1.c}
{\bkmkstart AAAAAAAAAA}
{\bkmkend AAAAAAAAAA}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This component "Serial_LDD" implements an asynchronous serial communication. The component supports different settings of parity, word width, stop-bit and communication speed, user can select interrupt or polling handler. Communication speed can be changed also in runtime. The component requires one on-chip asynchronous serial communication channel. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "ASerialLdd1.h"}\par
{\f2 #include "PC.h"}\par
{\f2 #include "UART0_PDD.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macros\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b AVAILABLE_EVENTS_MASK}\~ ({\b LDD_SERIAL_ON_BLOCK_RECEIVED} | {\b LDD_SERIAL_ON_BLOCK_SENT} | {\b LDD_SERIAL_ON_BREAK} | {\b LDD_SERIAL_ON_ERROR})\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LDD_TDeviceData} * {\b ASerialLdd1_Init} ({\b LDD_TUserData} *UserDataPtr)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Initializes the device. Allocates memory for the device data structure, allocates interrupt vectors and sets interrupt priority, sets pin routing, sets timing, etc. If the "Enable
    in init. code" is set to "yes" value then the device is also enabled(see the description of the Enable() method). In this case the Enable() method is not necessary and needn't to be generated. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LDD_TError} {\b ASerialLdd1_ReceiveBlock} ({\b LDD_TDeviceData} *DeviceDataPtr, {\b LDD_TData} *BufferPtr, uint16_t Size)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Specifies the number of data to receive. The method returns ERR_BUSY until the specified number of characters is received. Method [CancelBlockReception] can be used to cancel a running receive operation. If a receive operation is not in progress (the method was not called or a previous operation has already finished) all received characters will be lost without any notification. To prevent the loss of data call the method immediately after the last receive operation has finished (e.g. from the [OnBlockReceived] event). This method finishes immediately after calling it - it doesn't wait the end of data reception. Use event [OnBlockReceived] to check the end of data reception. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LDD_TError} {\b ASerialLdd1_SendBlock} ({\b LDD_TDeviceData} *DeviceDataPtr, {\b LDD_TData} *BufferPtr, uint16_t Size)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sends a block of characters. The method returns ERR_BUSY when the previous block transmission is not completed. Method [CancelBlockTransmission] can be used to cancel a transmit operation. This method is available only if the transmitter property is enabled. This method finishes immediately after calling it - it doesn't wait the end of data transmission. Use event [OnBlockSent] to check the end of data transmission. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b PE_ISR} (ASerialLdd1_Interrupt){\bkmkstart AAAAAAAAAB}
{\bkmkend AAAAAAAAAB}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LDD_TError} {\b ASerialLdd1_GetError} ({\b LDD_TDeviceData} *DeviceDataPtr, {\b LDD_SERIAL_TError} *ErrorPtr)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This method returns a set of asserted flags. The flags are accumulated in the set. After calling this method the set is returned and cleared. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This component "Serial_LDD" implements an asynchronous serial communication. The component supports different settings of parity, word width, stop-bit and communication speed, user can select interrupt or polling handler. Communication speed can be changed also in runtime. The component requires one on-chip asynchronous serial communication channel. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Version:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid 01.12 \par
}}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/ASerialLdd1.h File Reference\par \pard\plain 
{\tc\tcl2 \v C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/ASerialLdd1.h}
{\xe \v C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/ASerialLdd1.h}
{\bkmkstart AAAAAAAAAC}
{\bkmkend AAAAAAAAAC}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This component "Serial_LDD" implements an asynchronous serial communication. The component supports different settings of parity, word width, stop-bit and communication speed, user can select interrupt or polling handler. Communication speed can be changed also in runtime. The component requires one on-chip asynchronous serial communication channel. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "Cpu.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Structures\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b ASerialLdd1_TDeviceData}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macros\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ASerialLdd1_PRPH_BASE_ADDRESS}\~ 0x4006A000U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ASerialLdd1_Init_METHOD_ENABLED}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ASerialLdd1_SendBlock_METHOD_ENABLED}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ASerialLdd1_ReceiveBlock_METHOD_ENABLED}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ASerialLdd1_GetError_METHOD_ENABLED}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ASerialLdd1_OnBlockReceived_EVENT_ENABLED}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ASerialLdd1_OnBlockSent_EVENT_ENABLED}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ASerialLdd1_OnBreak_EVENT_ENABLED}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ASerialLdd1_OnError_EVENT_ENABLED}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ENABLED_TX_INT}\~ 0x01U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b BREAK_DETECTED}\~ 0x02U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b TX_COMPLETED}\~ 0x04U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ENABLE_TX_COMPLETE}\~ 0x10U\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Typedefs\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef {\b ASerialLdd1_TDeviceData} * {\b ASerialLdd1_TDeviceDataPtr}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LDD_TDeviceData} * {\b ASerialLdd1_Init} ({\b LDD_TUserData} *UserDataPtr)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Initializes the device. Allocates memory for the device data structure, allocates interrupt vectors and sets interrupt priority, sets pin routing, sets timing, etc. If the "Enable
    in init. code" is set to "yes" value then the device is also enabled(see the description of the Enable() method). In this case the Enable() method is not necessary and needn't to be generated. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LDD_TError} {\b ASerialLdd1_ReceiveBlock} ({\b LDD_TDeviceData} *DeviceDataPtr, {\b LDD_TData} *BufferPtr, uint16_t Size)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Specifies the number of data to receive. The method returns ERR_BUSY until the specified number of characters is received. Method [CancelBlockReception] can be used to cancel a running receive operation. If a receive operation is not in progress (the method was not called or a previous operation has already finished) all received characters will be lost without any notification. To prevent the loss of data call the method immediately after the last receive operation has finished (e.g. from the [OnBlockReceived] event). This method finishes immediately after calling it - it doesn't wait the end of data reception. Use event [OnBlockReceived] to check the end of data reception. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LDD_TError} {\b ASerialLdd1_SendBlock} ({\b LDD_TDeviceData} *DeviceDataPtr, {\b LDD_TData} *BufferPtr, uint16_t Size)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sends a block of characters. The method returns ERR_BUSY when the previous block transmission is not completed. Method [CancelBlockTransmission] can be used to cancel a transmit operation. This method is available only if the transmitter property is enabled. This method finishes immediately after calling it - it doesn't wait the end of data transmission. Use event [OnBlockSent] to check the end of data transmission. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b PE_ISR} (ASerialLdd1_Interrupt){\bkmkstart AAAAAAAAAB}
{\bkmkend AAAAAAAAAB}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LDD_TError} {\b ASerialLdd1_GetError} ({\b LDD_TDeviceData} *DeviceDataPtr, {\b LDD_SERIAL_TError} *ErrorPtr)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This method returns a set of asserted flags. The flags are accumulated in the set. After calling this method the set is returned and cleared. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This component "Serial_LDD" implements an asynchronous serial communication. The component supports different settings of parity, word width, stop-bit and communication speed, user can select interrupt or polling handler. Communication speed can be changed also in runtime. The component requires one on-chip asynchronous serial communication channel. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Version:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid 01.12 \par
}}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/ASerialLdd2.c File Reference\par \pard\plain 
{\tc\tcl2 \v C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/ASerialLdd2.c}
{\xe \v C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/ASerialLdd2.c}
{\bkmkstart AAAAAAAAAD}
{\bkmkend AAAAAAAAAD}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This component "Serial_LDD" implements an asynchronous serial communication. The component supports different settings of parity, word width, stop-bit and communication speed, user can select interrupt or polling handler. Communication speed can be changed also in runtime. The component requires one on-chip asynchronous serial communication channel. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "ASerialLdd2.h"}\par
{\f2 #include "Wifi.h"}\par
{\f2 #include "UART_PDD.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macros\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b AVAILABLE_EVENTS_MASK}\~ ({\b LDD_SERIAL_ON_BLOCK_RECEIVED} | {\b LDD_SERIAL_ON_BLOCK_SENT} | {\b LDD_SERIAL_ON_BREAK} | {\b LDD_SERIAL_ON_ERROR})\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LDD_TDeviceData} * {\b ASerialLdd2_Init} ({\b LDD_TUserData} *UserDataPtr)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Initializes the device. Allocates memory for the device data structure, allocates interrupt vectors and sets interrupt priority, sets pin routing, sets timing, etc. If the "Enable
    in init. code" is set to "yes" value then the device is also enabled(see the description of the Enable() method). In this case the Enable() method is not necessary and needn't to be generated. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LDD_TError} {\b ASerialLdd2_ReceiveBlock} ({\b LDD_TDeviceData} *DeviceDataPtr, {\b LDD_TData} *BufferPtr, uint16_t Size)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Specifies the number of data to receive. The method returns ERR_BUSY until the specified number of characters is received. Method [CancelBlockReception] can be used to cancel a running receive operation. If a receive operation is not in progress (the method was not called or a previous operation has already finished) all received characters will be lost without any notification. To prevent the loss of data call the method immediately after the last receive operation has finished (e.g. from the [OnBlockReceived] event). This method finishes immediately after calling it - it doesn't wait the end of data reception. Use event [OnBlockReceived] to check the end of data reception. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LDD_TError} {\b ASerialLdd2_SendBlock} ({\b LDD_TDeviceData} *DeviceDataPtr, {\b LDD_TData} *BufferPtr, uint16_t Size)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sends a block of characters. The method returns ERR_BUSY when the previous block transmission is not completed. Method [CancelBlockTransmission] can be used to cancel a transmit operation. This method is available only if the transmitter property is enabled. This method finishes immediately after calling it - it doesn't wait the end of data transmission. Use event [OnBlockSent] to check the end of data transmission. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b PE_ISR} (ASerialLdd2_Interrupt){\bkmkstart AAAAAAAAAE}
{\bkmkend AAAAAAAAAE}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LDD_TError} {\b ASerialLdd2_GetError} ({\b LDD_TDeviceData} *DeviceDataPtr, {\b LDD_SERIAL_TError} *ErrorPtr)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This method returns a set of asserted flags. The flags are accumulated in the set. After calling this method the set is returned and cleared. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This component "Serial_LDD" implements an asynchronous serial communication. The component supports different settings of parity, word width, stop-bit and communication speed, user can select interrupt or polling handler. Communication speed can be changed also in runtime. The component requires one on-chip asynchronous serial communication channel. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Version:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid 01.12 \par
}}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/ASerialLdd2.h File Reference\par \pard\plain 
{\tc\tcl2 \v C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/ASerialLdd2.h}
{\xe \v C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/ASerialLdd2.h}
{\bkmkstart AAAAAAAAAF}
{\bkmkend AAAAAAAAAF}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This component "Serial_LDD" implements an asynchronous serial communication. The component supports different settings of parity, word width, stop-bit and communication speed, user can select interrupt or polling handler. Communication speed can be changed also in runtime. The component requires one on-chip asynchronous serial communication channel. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "Cpu.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Structures\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b ASerialLdd2_TDeviceData}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macros\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ASerialLdd2_PRPH_BASE_ADDRESS}\~ 0x4006C000U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ASerialLdd2_Init_METHOD_ENABLED}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ASerialLdd2_SendBlock_METHOD_ENABLED}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ASerialLdd2_ReceiveBlock_METHOD_ENABLED}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ASerialLdd2_GetError_METHOD_ENABLED}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ASerialLdd2_OnBlockReceived_EVENT_ENABLED}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ASerialLdd2_OnBlockSent_EVENT_ENABLED}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ASerialLdd2_OnBreak_EVENT_ENABLED}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ASerialLdd2_OnError_EVENT_ENABLED}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ENABLED_TX_INT}\~ 0x01U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b BREAK_DETECTED}\~ 0x02U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b TX_COMPLETED}\~ 0x04U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ENABLE_TX_COMPLETE}\~ 0x10U\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Typedefs\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef {\b ASerialLdd2_TDeviceData} * {\b ASerialLdd2_TDeviceDataPtr}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LDD_TDeviceData} * {\b ASerialLdd2_Init} ({\b LDD_TUserData} *UserDataPtr)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Initializes the device. Allocates memory for the device data structure, allocates interrupt vectors and sets interrupt priority, sets pin routing, sets timing, etc. If the "Enable
    in init. code" is set to "yes" value then the device is also enabled(see the description of the Enable() method). In this case the Enable() method is not necessary and needn't to be generated. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LDD_TError} {\b ASerialLdd2_ReceiveBlock} ({\b LDD_TDeviceData} *DeviceDataPtr, {\b LDD_TData} *BufferPtr, uint16_t Size)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Specifies the number of data to receive. The method returns ERR_BUSY until the specified number of characters is received. Method [CancelBlockReception] can be used to cancel a running receive operation. If a receive operation is not in progress (the method was not called or a previous operation has already finished) all received characters will be lost without any notification. To prevent the loss of data call the method immediately after the last receive operation has finished (e.g. from the [OnBlockReceived] event). This method finishes immediately after calling it - it doesn't wait the end of data reception. Use event [OnBlockReceived] to check the end of data reception. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LDD_TError} {\b ASerialLdd2_SendBlock} ({\b LDD_TDeviceData} *DeviceDataPtr, {\b LDD_TData} *BufferPtr, uint16_t Size)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sends a block of characters. The method returns ERR_BUSY when the previous block transmission is not completed. Method [CancelBlockTransmission] can be used to cancel a transmit operation. This method is available only if the transmitter property is enabled. This method finishes immediately after calling it - it doesn't wait the end of data transmission. Use event [OnBlockSent] to check the end of data transmission. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b PE_ISR} (ASerialLdd2_Interrupt){\bkmkstart AAAAAAAAAE}
{\bkmkend AAAAAAAAAE}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LDD_TError} {\b ASerialLdd2_GetError} ({\b LDD_TDeviceData} *DeviceDataPtr, {\b LDD_SERIAL_TError} *ErrorPtr)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This method returns a set of asserted flags. The flags are accumulated in the set. After calling this method the set is returned and cleared. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This component "Serial_LDD" implements an asynchronous serial communication. The component supports different settings of parity, word width, stop-bit and communication speed, user can select interrupt or polling handler. Communication speed can be changed also in runtime. The component requires one on-chip asynchronous serial communication channel. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Version:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid 01.12 \par
}}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/BitIoLdd7.c File Reference\par \pard\plain 
{\tc\tcl2 \v C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/BitIoLdd7.c}
{\xe \v C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/BitIoLdd7.c}
{\bkmkstart AAAAAAAAAG}
{\bkmkend AAAAAAAAAG}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The HAL BitIO component provides a low level API for unified access to general purpose digital input/output pins across various device designs. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "BitIoLdd7.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Structures\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b BitIoLdd7_TDeviceData}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Typedefs\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

typedef {\b BitIoLdd7_TDeviceData} * {\b BitIoLdd7_TDeviceDataPtr}{\bkmkstart AAAAAAAAAH}
{\bkmkend AAAAAAAAAH}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LDD_TDeviceData} * {\b BitIoLdd7_Init} ({\b LDD_TUserData} *UserDataPtr)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Initializes the device. Allocates memory for the device data structure, allocates interrupt vectors and sets interrupt priority, sets pin routing, sets timing, etc. If the "Enable
    in init. code" is set to "yes" value then the device is also enabled(see the description of the Enable() method). In this case the Enable() method is not necessary and needn't to be generated. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b BitIoLdd7_GetVal} ({\b LDD_TDeviceData} *DeviceDataPtr)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Returns the input/output value. If the direction is [input] then the input value of the pin is read and returned. If the direction is [output] then the last written value is read and returned (see <Safe mode>=""> property for limitations). This method cannot be disabled if direction is [input]. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b BitIoLdd7_PutVal} ({\b LDD_TDeviceData} *DeviceDataPtr, bool Val)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The specified output value is set. If the direction is {\b  input} , the component saves the value to a memory or a register and this value will be written to the pin after switching to the output mode (using {\f2 SetDir(TRUE)} ; see {\f2 Safe mode} property for limitations). If the direction is {\b output} , it writes the value to the pin. (Method is available only if the direction = <u>{\f2 output} </u> or <u>{\f2  input/output} </u>). }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b BitIoLdd7_ClrVal} ({\b LDD_TDeviceData} *DeviceDataPtr)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Clears (set to zero) the output value. It is equivalent to the [PutVal(FALSE)]. This method is available only if the direction = _[output]_ or _[input/output]_. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b BitIoLdd7_SetVal} ({\b LDD_TDeviceData} *DeviceDataPtr)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets (to one) the output value. It is equivalent to the [PutVal(TRUE)]. This method is available only if the direction = _[output]_ or _[input/output]_. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b BitIoLdd7_NegVal} ({\b LDD_TDeviceData} *DeviceDataPtr)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Negates (inverts) the output value. It is equivalent to the [PutVal(!GetVal())]. This method is available only if the direction = _[output]_ or _[input/output]_. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The HAL BitIO component provides a low level API for unified access to general purpose digital input/output pins across various device designs. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Version:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid 01.03 RTOS drivers using HAL BitIO API are simpler and more portable to various microprocessors. \par
}}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/BitIoLdd7.h File Reference\par \pard\plain 
{\tc\tcl2 \v C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/BitIoLdd7.h}
{\xe \v C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/BitIoLdd7.h}
{\bkmkstart AAAAAAAAAI}
{\bkmkend AAAAAAAAAI}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The HAL BitIO component provides a low level API for unified access to general purpose digital input/output pins across various device designs. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "PE_Types.h"}\par
{\f2 #include "PE_Error.h"}\par
{\f2 #include "PE_Const.h"}\par
{\f2 #include "IO_Map.h"}\par
{\f2 #include "GPIO_PDD.h"}\par
{\f2 #include "Cpu.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macros\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b BitIoLdd7_PRPH_BASE_ADDRESS}\~ 0x400FF100U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b BitIoLdd7_DeviceData}\~ (({\b LDD_TDeviceData} *){\b PE_LDD_GetDeviceStructure}(PE_LDD_COMPONENT_BitIoLdd7_ID))\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b BitIoLdd7_Init_METHOD_ENABLED}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b BitIoLdd7_GetVal_METHOD_ENABLED}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b BitIoLdd7_PutVal_METHOD_ENABLED}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b BitIoLdd7_ClrVal_METHOD_ENABLED}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b BitIoLdd7_SetVal_METHOD_ENABLED}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b BitIoLdd7_NegVal_METHOD_ENABLED}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b BitIoLdd7_MODULE_BASE_ADDRESS}\~ FPTE_BASE_PTR\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b BitIoLdd7_PORTCONTROL_BASE_ADDRESS}\~ PORTE_BASE_PTR\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b BitIoLdd7_PORT_MASK}\~ 0x04U\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LDD_TDeviceData} * {\b BitIoLdd7_Init} ({\b LDD_TUserData} *UserDataPtr)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Initializes the device. Allocates memory for the device data structure, allocates interrupt vectors and sets interrupt priority, sets pin routing, sets timing, etc. If the "Enable
    in init. code" is set to "yes" value then the device is also enabled(see the description of the Enable() method). In this case the Enable() method is not necessary and needn't to be generated. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b BitIoLdd7_GetVal} ({\b LDD_TDeviceData} *DeviceDataPtr)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Returns the input/output value. If the direction is [input] then the input value of the pin is read and returned. If the direction is [output] then the last written value is read and returned (see <Safe mode>=""> property for limitations). This method cannot be disabled if direction is [input]. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b BitIoLdd7_PutVal} ({\b LDD_TDeviceData} *DeviceDataPtr, bool Val)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The specified output value is set. If the direction is {\b  input} , the component saves the value to a memory or a register and this value will be written to the pin after switching to the output mode (using {\f2 SetDir(TRUE)} ; see {\f2 Safe mode} property for limitations). If the direction is {\b output} , it writes the value to the pin. (Method is available only if the direction = <u>{\f2 output} </u> or <u>{\f2  input/output} </u>). }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b BitIoLdd7_ClrVal} ({\b LDD_TDeviceData} *DeviceDataPtr)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Clears (set to zero) the output value. It is equivalent to the [PutVal(FALSE)]. This method is available only if the direction = _[output]_ or _[input/output]_. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b BitIoLdd7_SetVal} ({\b LDD_TDeviceData} *DeviceDataPtr)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets (to one) the output value. It is equivalent to the [PutVal(TRUE)]. This method is available only if the direction = _[output]_ or _[input/output]_. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b BitIoLdd7_NegVal} ({\b LDD_TDeviceData} *DeviceDataPtr)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Negates (inverts) the output value. It is equivalent to the [PutVal(!GetVal())]. This method is available only if the direction = _[output]_ or _[input/output]_. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The HAL BitIO component provides a low level API for unified access to general purpose digital input/output pins across various device designs. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Version:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid 01.03 RTOS drivers using HAL BitIO API are simpler and more portable to various microprocessors. \par
}}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/BitIoLdd8.c File Reference\par \pard\plain 
{\tc\tcl2 \v C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/BitIoLdd8.c}
{\xe \v C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/BitIoLdd8.c}
{\bkmkstart AAAAAAAAAJ}
{\bkmkend AAAAAAAAAJ}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The HAL BitIO component provides a low level API for unified access to general purpose digital input/output pins across various device designs. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "BitIoLdd8.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Structures\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b BitIoLdd8_TDeviceData}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Typedefs\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

typedef {\b BitIoLdd8_TDeviceData} * {\b BitIoLdd8_TDeviceDataPtr}{\bkmkstart AAAAAAAAAK}
{\bkmkend AAAAAAAAAK}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LDD_TDeviceData} * {\b BitIoLdd8_Init} ({\b LDD_TUserData} *UserDataPtr)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Initializes the device. Allocates memory for the device data structure, allocates interrupt vectors and sets interrupt priority, sets pin routing, sets timing, etc. If the "Enable
    in init. code" is set to "yes" value then the device is also enabled(see the description of the Enable() method). In this case the Enable() method is not necessary and needn't to be generated. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b BitIoLdd8_GetVal} ({\b LDD_TDeviceData} *DeviceDataPtr)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Returns the input/output value. If the direction is [input] then the input value of the pin is read and returned. If the direction is [output] then the last written value is read and returned (see <Safe mode>=""> property for limitations). This method cannot be disabled if direction is [input]. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b BitIoLdd8_PutVal} ({\b LDD_TDeviceData} *DeviceDataPtr, bool Val)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The specified output value is set. If the direction is {\b  input} , the component saves the value to a memory or a register and this value will be written to the pin after switching to the output mode (using {\f2 SetDir(TRUE)} ; see {\f2 Safe mode} property for limitations). If the direction is {\b output} , it writes the value to the pin. (Method is available only if the direction = <u>{\f2 output} </u> or <u>{\f2  input/output} </u>). }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b BitIoLdd8_ClrVal} ({\b LDD_TDeviceData} *DeviceDataPtr)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Clears (set to zero) the output value. It is equivalent to the [PutVal(FALSE)]. This method is available only if the direction = _[output]_ or _[input/output]_. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b BitIoLdd8_SetVal} ({\b LDD_TDeviceData} *DeviceDataPtr)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets (to one) the output value. It is equivalent to the [PutVal(TRUE)]. This method is available only if the direction = _[output]_ or _[input/output]_. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b BitIoLdd8_NegVal} ({\b LDD_TDeviceData} *DeviceDataPtr)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Negates (inverts) the output value. It is equivalent to the [PutVal(!GetVal())]. This method is available only if the direction = _[output]_ or _[input/output]_. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The HAL BitIO component provides a low level API for unified access to general purpose digital input/output pins across various device designs. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Version:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid 01.03 RTOS drivers using HAL BitIO API are simpler and more portable to various microprocessors. \par
}}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/BitIoLdd8.h File Reference\par \pard\plain 
{\tc\tcl2 \v C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/BitIoLdd8.h}
{\xe \v C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/BitIoLdd8.h}
{\bkmkstart AAAAAAAAAL}
{\bkmkend AAAAAAAAAL}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The HAL BitIO component provides a low level API for unified access to general purpose digital input/output pins across various device designs. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "PE_Types.h"}\par
{\f2 #include "PE_Error.h"}\par
{\f2 #include "PE_Const.h"}\par
{\f2 #include "IO_Map.h"}\par
{\f2 #include "GPIO_PDD.h"}\par
{\f2 #include "Cpu.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macros\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b BitIoLdd8_PRPH_BASE_ADDRESS}\~ 0x400FF040U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b BitIoLdd8_DeviceData}\~ (({\b LDD_TDeviceData} *){\b PE_LDD_GetDeviceStructure}(PE_LDD_COMPONENT_BitIoLdd8_ID))\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b BitIoLdd8_Init_METHOD_ENABLED}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b BitIoLdd8_GetVal_METHOD_ENABLED}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b BitIoLdd8_PutVal_METHOD_ENABLED}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b BitIoLdd8_ClrVal_METHOD_ENABLED}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b BitIoLdd8_SetVal_METHOD_ENABLED}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b BitIoLdd8_NegVal_METHOD_ENABLED}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b BitIoLdd8_MODULE_BASE_ADDRESS}\~ FPTB_BASE_PTR\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b BitIoLdd8_PORTCONTROL_BASE_ADDRESS}\~ PORTB_BASE_PTR\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b BitIoLdd8_PORT_MASK}\~ 0x0200U\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LDD_TDeviceData} * {\b BitIoLdd8_Init} ({\b LDD_TUserData} *UserDataPtr)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Initializes the device. Allocates memory for the device data structure, allocates interrupt vectors and sets interrupt priority, sets pin routing, sets timing, etc. If the "Enable
    in init. code" is set to "yes" value then the device is also enabled(see the description of the Enable() method). In this case the Enable() method is not necessary and needn't to be generated. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b BitIoLdd8_GetVal} ({\b LDD_TDeviceData} *DeviceDataPtr)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Returns the input/output value. If the direction is [input] then the input value of the pin is read and returned. If the direction is [output] then the last written value is read and returned (see <Safe mode>=""> property for limitations). This method cannot be disabled if direction is [input]. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b BitIoLdd8_PutVal} ({\b LDD_TDeviceData} *DeviceDataPtr, bool Val)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The specified output value is set. If the direction is {\b  input} , the component saves the value to a memory or a register and this value will be written to the pin after switching to the output mode (using {\f2 SetDir(TRUE)} ; see {\f2 Safe mode} property for limitations). If the direction is {\b output} , it writes the value to the pin. (Method is available only if the direction = <u>{\f2 output} </u> or <u>{\f2  input/output} </u>). }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b BitIoLdd8_ClrVal} ({\b LDD_TDeviceData} *DeviceDataPtr)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Clears (set to zero) the output value. It is equivalent to the [PutVal(FALSE)]. This method is available only if the direction = _[output]_ or _[input/output]_. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b BitIoLdd8_SetVal} ({\b LDD_TDeviceData} *DeviceDataPtr)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets (to one) the output value. It is equivalent to the [PutVal(TRUE)]. This method is available only if the direction = _[output]_ or _[input/output]_. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b BitIoLdd8_NegVal} ({\b LDD_TDeviceData} *DeviceDataPtr)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Negates (inverts) the output value. It is equivalent to the [PutVal(!GetVal())]. This method is available only if the direction = _[output]_ or _[input/output]_. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The HAL BitIO component provides a low level API for unified access to general purpose digital input/output pins across various device designs. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Version:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid 01.03 RTOS drivers using HAL BitIO API are simpler and more portable to various microprocessors. \par
}}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/BitIoLdd9.c File Reference\par \pard\plain 
{\tc\tcl2 \v C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/BitIoLdd9.c}
{\xe \v C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/BitIoLdd9.c}
{\bkmkstart AAAAAAAAAM}
{\bkmkend AAAAAAAAAM}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The HAL BitIO component provides a low level API for unified access to general purpose digital input/output pins across various device designs. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "BitIoLdd9.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Structures\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b BitIoLdd9_TDeviceData}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Typedefs\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

typedef {\b BitIoLdd9_TDeviceData} * {\b BitIoLdd9_TDeviceDataPtr}{\bkmkstart AAAAAAAAAN}
{\bkmkend AAAAAAAAAN}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LDD_TDeviceData} * {\b BitIoLdd9_Init} ({\b LDD_TUserData} *UserDataPtr)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Initializes the device. Allocates memory for the device data structure, allocates interrupt vectors and sets interrupt priority, sets pin routing, sets timing, etc. If the "Enable
    in init. code" is set to "yes" value then the device is also enabled(see the description of the Enable() method). In this case the Enable() method is not necessary and needn't to be generated. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b BitIoLdd9_GetVal} ({\b LDD_TDeviceData} *DeviceDataPtr)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Returns the input/output value. If the direction is [input] then the input value of the pin is read and returned. If the direction is [output] then the last written value is read and returned (see <Safe mode>=""> property for limitations). This method cannot be disabled if direction is [input]. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The HAL BitIO component provides a low level API for unified access to general purpose digital input/output pins across various device designs. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Version:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid 01.03 RTOS drivers using HAL BitIO API are simpler and more portable to various microprocessors. \par
}}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/BitIoLdd9.h File Reference\par \pard\plain 
{\tc\tcl2 \v C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/BitIoLdd9.h}
{\xe \v C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/BitIoLdd9.h}
{\bkmkstart AAAAAAAAAO}
{\bkmkend AAAAAAAAAO}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The HAL BitIO component provides a low level API for unified access to general purpose digital input/output pins across various device designs. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "PE_Types.h"}\par
{\f2 #include "PE_Error.h"}\par
{\f2 #include "PE_Const.h"}\par
{\f2 #include "IO_Map.h"}\par
{\f2 #include "GPIO_PDD.h"}\par
{\f2 #include "Cpu.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macros\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b BitIoLdd9_PRPH_BASE_ADDRESS}\~ 0x400FF080U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b BitIoLdd9_DeviceData}\~ (({\b LDD_TDeviceData} *){\b PE_LDD_GetDeviceStructure}(PE_LDD_COMPONENT_BitIoLdd9_ID))\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b BitIoLdd9_Init_METHOD_ENABLED}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b BitIoLdd9_GetVal_METHOD_ENABLED}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b BitIoLdd9_MODULE_BASE_ADDRESS}\~ FPTC_BASE_PTR\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b BitIoLdd9_PORTCONTROL_BASE_ADDRESS}\~ PORTC_BASE_PTR\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b BitIoLdd9_PORT_MASK}\~ 0x00010000U\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LDD_TDeviceData} * {\b BitIoLdd9_Init} ({\b LDD_TUserData} *UserDataPtr)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Initializes the device. Allocates memory for the device data structure, allocates interrupt vectors and sets interrupt priority, sets pin routing, sets timing, etc. If the "Enable
    in init. code" is set to "yes" value then the device is also enabled(see the description of the Enable() method). In this case the Enable() method is not necessary and needn't to be generated. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b BitIoLdd9_GetVal} ({\b LDD_TDeviceData} *DeviceDataPtr)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Returns the input/output value. If the direction is [input] then the input value of the pin is read and returned. If the direction is [output] then the last written value is read and returned (see <Safe mode>=""> property for limitations). This method cannot be disabled if direction is [input]. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The HAL BitIO component provides a low level API for unified access to general purpose digital input/output pins across various device designs. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Version:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid 01.03 RTOS drivers using HAL BitIO API are simpler and more portable to various microprocessors. \par
}}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/Buzzer.c File Reference\par \pard\plain 
{\tc\tcl2 \v C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/Buzzer.c}
{\xe \v C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/Buzzer.c}
{\bkmkstart AAAAAAAAAP}
{\bkmkend AAAAAAAAAP}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This component "BitIO" implements an one-bit input/output. It uses one bit/pin of a port. Note: This component is set to work in Output direction only. Methods of this component are mostly implemented as a macros (if supported by target language and compiler). }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "Buzzer.h"}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This component "BitIO" implements an one-bit input/output. It uses one bit/pin of a port. Note: This component is set to work in Output direction only. Methods of this component are mostly implemented as a macros (if supported by target language and compiler). \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Version:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid 01.00 \par
}}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/Buzzer.h File Reference\par \pard\plain 
{\tc\tcl2 \v C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/Buzzer.h}
{\xe \v C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/Buzzer.h}
{\bkmkstart AAAAAAAAAQ}
{\bkmkend AAAAAAAAAQ}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This component "BitIO" implements an one-bit input/output. It uses one bit/pin of a port. Note: This component is set to work in Output direction only. Methods of this component are mostly implemented as a macros (if supported by target language and compiler). }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "PE_Types.h"}\par
{\f2 #include "PE_Error.h"}\par
{\f2 #include "PE_Const.h"}\par
{\f2 #include "IO_Map.h"}\par
{\f2 #include "BitIoLdd8.h"}\par
{\f2 #include "Cpu.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macros\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b Buzzer_GetVal}()\~ ({\b BitIoLdd8_GetVal}({\b BitIoLdd8_DeviceData})){\bkmkstart AAAAAAAAAR}
{\bkmkend AAAAAAAAAR}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b Buzzer_PutVal}(Val)\~ ({\b BitIoLdd8_PutVal}({\b BitIoLdd8_DeviceData}, (Val))){\bkmkstart AAAAAAAAAS}
{\bkmkend AAAAAAAAAS}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b Buzzer_ClrVal}()\~ ({\b BitIoLdd8_ClrVal}({\b BitIoLdd8_DeviceData})){\bkmkstart AAAAAAAAAT}
{\bkmkend AAAAAAAAAT}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b Buzzer_SetVal}()\~ ({\b BitIoLdd8_SetVal}({\b BitIoLdd8_DeviceData})){\bkmkstart AAAAAAAAAU}
{\bkmkend AAAAAAAAAU}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b Buzzer_NegVal}()\~ ({\b BitIoLdd8_NegVal}({\b BitIoLdd8_DeviceData})){\bkmkstart AAAAAAAAAV}
{\bkmkend AAAAAAAAAV}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This component "BitIO" implements an one-bit input/output. It uses one bit/pin of a port. Note: This component is set to work in Output direction only. Methods of this component are mostly implemented as a macros (if supported by target language and compiler). \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Version:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid 01.00 \par
}}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/CI2C1.c File Reference\par \pard\plain 
{\tc\tcl2 \v C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/CI2C1.c}
{\xe \v C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/CI2C1.c}
{\bkmkstart AAAAAAAAAW}
{\bkmkend AAAAAAAAAW}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This component encapsulates the internal I2C communication interface. The implementation of the interface is based on the Philips I2C-bus specification version 2.0. Interface features: MASTER mode. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "GI2C1.h"}\par
{\f2 #include "CI2C1.h"}\par
{\f2 #include "PORT_PDD.h"}\par
{\f2 #include "I2C_PDD.h"}\par
{\f2 #include "IO_Map.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Structures\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b CI2C1_TDeviceData}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macros\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b MASTER_IN_PROGRES}\~ 0x01U  /* Communication is in progress (Master) */{\bkmkstart AAAAAAAAAX}
{\bkmkend AAAAAAAAAX}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b ADDR_COMPLETE}\~ 0x02U  /* 10-bit address transmission complete   */{\bkmkstart AAAAAAAAAY}
{\bkmkend AAAAAAAAAY}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b REP_ADDR_COMPLETE}\~ 0x04U  /* repeated address transmission complete */{\bkmkstart AAAAAAAAAZ}
{\bkmkend AAAAAAAAAZ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b GENERAL_CALL}\~ 0x08U  /* General call flag */{\bkmkstart AAAAAAAABA}
{\bkmkend AAAAAAAABA}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b ADDR_10}\~ 0x10U  /* 10-bit addr flag */{\bkmkstart AAAAAAAABB}
{\bkmkend AAAAAAAABB}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b ADDR_7}\~ 0x20U  /* 7-bit addr flag */{\bkmkstart AAAAAAAABC}
{\bkmkend AAAAAAAABC}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b AVAILABLE_EVENTS_MASK}\~ ({\b LDD_I2C_ON_MASTER_BLOCK_SENT} | {\b LDD_I2C_ON_MASTER_BLOCK_RECEIVED}){\bkmkstart AAAAAAAABD}
{\bkmkend AAAAAAAABD}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Typedefs\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

typedef {\b CI2C1_TDeviceData} * {\b CI2C1_TDeviceDataPtr}{\bkmkstart AAAAAAAABE}
{\bkmkend AAAAAAAABE}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b PE_ISR} (CI2C1_Interrupt){\bkmkstart AAAAAAAABF}
{\bkmkend AAAAAAAABF}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LDD_TDeviceData} * {\b CI2C1_Init} ({\b LDD_TUserData} *UserDataPtr)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Initializes the device. Allocates memory for the device data structure, allocates interrupt vectors and sets interrupt priority, sets pin routing, sets timing, etc. If the "Enable in init. code" is set to "yes" value then the device is also enabled(see the description of the Enable() method). In this case the Enable() method is not necessary and needn't to be generated. This method can be called only once. Before the second call of Init() the Deinit() must be called first. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b CI2C1_Deinit} ({\b LDD_TDeviceData} *DeviceDataPtr)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Deinitializes the device. Switches off the device, frees the device data structure memory, interrupts vectors, etc. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LDD_TError} {\b CI2C1_MasterSendBlock} ({\b LDD_TDeviceData} *DeviceDataPtr, {\b LDD_TData} *BufferPtr, {\b LDD_I2C_TSize} Size, {\b LDD_I2C_TSendStop} SendStop)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This method writes one (7-bit addressing) or two (10-bit addressing) slave address bytes inclusive of R/W bit = 0 to the I2C bus and then writes the block of characters to the bus. The slave address must be specified before, by the "SelectSlaveDevice" method or in component initialization section, "Target slave address init" property. If the method returns ERR_OK, it doesn't mean that transmission was successful. The state of transmission is detectable by means of events (OnMasterSendComplete or OnError). Data to be sent are not copied to an internal buffer and remains in the original location. Therefore the content of the buffer should not be changed until the transmission is complete. Event "OnMasterBlockSent"can be used to detect the end of the transmission. This method is available only for the MASTER or MASTER - SLAVE mode. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LDD_TError} {\b CI2C1_MasterReceiveBlock} ({\b LDD_TDeviceData} *DeviceDataPtr, {\b LDD_TData} *BufferPtr, {\b LDD_I2C_TSize} Size, {\b LDD_I2C_TSendStop} SendStop)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This method writes one (7-bit addressing) or two (10-bit addressing) slave address bytes inclusive of R/W bit = 1 to the I2C bus and then receives the block of characters from the bus. The slave address must be specified before, by the "SelectSlaveDevice" method or in component initialization section, "Target slave address init" property. If the method returns ERR_OK, it doesn't mean that reception was successful. The state of reception is detectable by means of events (OnMasterSendComplete or OnError). Data to be received are not copied to an internal buffer and remains in the original location. Therefore the content of the buffer should not be changed until the transmission is complete. Event "OnMasterBlockReceived"can be used to detect the end of the reception. This method is available only for the MASTER or MASTER - SLAVE mode. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LDD_TError} {\b CI2C1_SelectSlaveDevice} ({\b LDD_TDeviceData} *DeviceDataPtr, {\b LDD_I2C_TAddrType} AddrType, {\b LDD_I2C_TAddr} Addr)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This method selects a new slave for communication by its 7-bit slave, 10-bit address or general call value. Any send or receive method directs to or from selected device, until a new slave device is selected by this method. This method is available for the MASTER mode. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This component encapsulates the internal I2C communication interface. The implementation of the interface is based on the Philips I2C-bus specification version 2.0. Interface features: MASTER mode. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Version:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid 01.07{
\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
Multi master communication\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
The combined format of communication possible (see SendStop parameter in MasterSend/ReceiveBlock method)\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
7-bit slave addressing (10-bit addressing can be made as well)\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
Acknowledge polling provided\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
No wait state initiated when a slave device holds the SCL line low\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
Holding of the SCL line low by slave device recognized as 'not available bus'\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
Invalid start/stop condition detection provided SLAVE mode\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
7-bit slave addressing\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
General call address detection provided \par}
}}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/CI2C1.h File Reference\par \pard\plain 
{\tc\tcl2 \v C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/CI2C1.h}
{\xe \v C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/CI2C1.h}
{\bkmkstart AAAAAAAABG}
{\bkmkend AAAAAAAABG}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This component encapsulates the internal I2C communication interface. The implementation of the interface is based on the Philips I2C-bus specification version 2.0. Interface features: MASTER mode. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "PE_Types.h"}\par
{\f2 #include "PE_Error.h"}\par
{\f2 #include "PE_Const.h"}\par
{\f2 #include "IO_Map.h"}\par
{\f2 #include "Cpu.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macros\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b CI2C1_PRPH_BASE_ADDRESS}\~ 0x40067000U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b CI2C1_Init_METHOD_ENABLED}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b CI2C1_Deinit_METHOD_ENABLED}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b CI2C1_MasterSendBlock_METHOD_ENABLED}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b CI2C1_MasterReceiveBlock_METHOD_ENABLED}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b CI2C1_SelectSlaveDevice_METHOD_ENABLED}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b CI2C1_OnMasterBlockSent_EVENT_ENABLED}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b CI2C1_OnMasterBlockReceived_EVENT_ENABLED}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LDD_TDeviceData} * {\b CI2C1_Init} ({\b LDD_TUserData} *UserDataPtr)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Initializes the device. Allocates memory for the device data structure, allocates interrupt vectors and sets interrupt priority, sets pin routing, sets timing, etc. If the "Enable in init. code" is set to "yes" value then the device is also enabled(see the description of the Enable() method). In this case the Enable() method is not necessary and needn't to be generated. This method can be called only once. Before the second call of Init() the Deinit() must be called first. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b CI2C1_Deinit} ({\b LDD_TDeviceData} *DeviceDataPtr)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Deinitializes the device. Switches off the device, frees the device data structure memory, interrupts vectors, etc. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LDD_TError} {\b CI2C1_MasterSendBlock} ({\b LDD_TDeviceData} *DeviceDataPtr, {\b LDD_TData} *BufferPtr, {\b LDD_I2C_TSize} Size, {\b LDD_I2C_TSendStop} SendStop)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This method writes one (7-bit addressing) or two (10-bit addressing) slave address bytes inclusive of R/W bit = 0 to the I2C bus and then writes the block of characters to the bus. The slave address must be specified before, by the "SelectSlaveDevice" method or in component initialization section, "Target slave address init" property. If the method returns ERR_OK, it doesn't mean that transmission was successful. The state of transmission is detectable by means of events (OnMasterSendComplete or OnError). Data to be sent are not copied to an internal buffer and remains in the original location. Therefore the content of the buffer should not be changed until the transmission is complete. Event "OnMasterBlockSent"can be used to detect the end of the transmission. This method is available only for the MASTER or MASTER - SLAVE mode. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LDD_TError} {\b CI2C1_MasterReceiveBlock} ({\b LDD_TDeviceData} *DeviceDataPtr, {\b LDD_TData} *BufferPtr, {\b LDD_I2C_TSize} Size, {\b LDD_I2C_TSendStop} SendStop)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This method writes one (7-bit addressing) or two (10-bit addressing) slave address bytes inclusive of R/W bit = 1 to the I2C bus and then receives the block of characters from the bus. The slave address must be specified before, by the "SelectSlaveDevice" method or in component initialization section, "Target slave address init" property. If the method returns ERR_OK, it doesn't mean that reception was successful. The state of reception is detectable by means of events (OnMasterSendComplete or OnError). Data to be received are not copied to an internal buffer and remains in the original location. Therefore the content of the buffer should not be changed until the transmission is complete. Event "OnMasterBlockReceived"can be used to detect the end of the reception. This method is available only for the MASTER or MASTER - SLAVE mode. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LDD_TError} {\b CI2C1_SelectSlaveDevice} ({\b LDD_TDeviceData} *DeviceDataPtr, {\b LDD_I2C_TAddrType} AddrType, {\b LDD_I2C_TAddr} Addr)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This method selects a new slave for communication by its 7-bit slave, 10-bit address or general call value. Any send or receive method directs to or from selected device, until a new slave device is selected by this method. This method is available for the MASTER mode. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b PE_ISR} (CI2C1_Interrupt){\bkmkstart AAAAAAAABF}
{\bkmkend AAAAAAAABF}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This component encapsulates the internal I2C communication interface. The implementation of the interface is based on the Philips I2C-bus specification version 2.0. Interface features: MASTER mode. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Version:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid 01.07{
\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
Multi master communication\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
The combined format of communication possible (see SendStop parameter in MasterSend/ReceiveBlock method)\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
7-bit slave addressing (10-bit addressing can be made as well)\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
Acknowledge polling provided\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
No wait state initiated when a slave device holds the SCL line low\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
Holding of the SCL line low by slave device recognized as 'not available bus'\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
Invalid start/stop condition detection provided SLAVE mode\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
7-bit slave addressing\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
General call address detection provided \par}
}}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/Cpu.c File Reference\par \pard\plain 
{\tc\tcl2 \v C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/Cpu.c}
{\xe \v C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/Cpu.c}
{\bkmkstart AAAAAAAABH}
{\bkmkend AAAAAAAABH}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "PC.h"}\par
{\f2 #include "ASerialLdd1.h"}\par
{\f2 #include "Wifi.h"}\par
{\f2 #include "ASerialLdd2.h"}\par
{\f2 #include "MCUC1.h"}\par
{\f2 #include "UTIL1.h"}\par
{\f2 #include "TI1.h"}\par
{\f2 #include "TimerIntLdd1.h"}\par
{\f2 #include "TU1.h"}\par
{\f2 #include "RTC1.h"}\par
{\f2 #include "WAIT1.h"}\par
{\f2 #include "SM1.h"}\par
{\f2 #include "LT.h"}\par
{\f2 #include "BitIoLdd7.h"}\par
{\f2 #include "WAIT2.h"}\par
{\f2 #include "Timer.h"}\par
{\f2 #include "RealTimeLdd1.h"}\par
{\f2 #include "TU3.h"}\par
{\f2 #include "EE241.h"}\par
{\f2 #include "GI2C1.h"}\par
{\f2 #include "CI2C1.h"}\par
{\f2 #include "Timer_Buzzer.h"}\par
{\f2 #include "RealTimeLdd2.h"}\par
{\f2 #include "TU4.h"}\par
{\f2 #include "PIR.h"}\par
{\f2 #include "ExtIntLdd4.h"}\par
{\f2 #include "Buzzer.h"}\par
{\f2 #include "BitIoLdd8.h"}\par
{\f2 #include "CS1.h"}\par
{\f2 #include "TU6.h"}\par
{\f2 #include "PIR2.h"}\par
{\f2 #include "BitIoLdd9.h"}\par
{\f2 #include "PE_Types.h"}\par
{\f2 #include "PE_Error.h"}\par
{\f2 #include "PE_Const.h"}\par
{\f2 #include "IO_Map.h"}\par
{\f2 #include "Events.h"}\par
{\f2 #include "Cpu.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b PE_ISR} (Cpu_INT_NMIInterrupt){\bkmkstart AAAAAAAABI}
{\bkmkend AAAAAAAABI}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b PE_ISR} (Cpu_Interrupt){\bkmkstart AAAAAAAABJ}
{\bkmkend AAAAAAAABJ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b __init_hardware} (void){\bkmkstart AAAAAAAABK}
{\bkmkend AAAAAAAABK}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b PE_low_level_init} (void){\bkmkstart AAAAAAAABL}
{\bkmkend AAAAAAAABL}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b __attribute__} ((section(".cfmconfig"))) const{\bkmkstart AAAAAAAABM}
{\bkmkend AAAAAAAABM}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

volatile uint8_t {\b SR_reg}{\bkmkstart AAAAAAAABN}
{\bkmkend AAAAAAAABN}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

volatile uint8_t {\b SR_lock} = 0x00U{\bkmkstart AAAAAAAABO}
{\bkmkend AAAAAAAABO}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Version:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid 01.04 \par
}}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/Cpu.h File Reference\par \pard\plain 
{\tc\tcl2 \v C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/Cpu.h}
{\xe \v C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/Cpu.h}
{\bkmkstart AAAAAAAABP}
{\bkmkend AAAAAAAABP}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "PE_Types.h"}\par
{\f2 #include "PE_Error.h"}\par
{\f2 #include "PE_Const.h"}\par
{\f2 #include "IO_Map.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Structures\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b TCpuClockConfiguration}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b tVectorTable}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macros\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b PEcfg_FLASH}\~ 1U{\bkmkstart AAAAAAAABQ}
{\bkmkend AAAAAAAABQ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b Cpu_OnNMIINT_EVENT_ENABLED}{\bkmkstart AAAAAAAABR}
{\bkmkend AAAAAAAABR}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b CPU_BUS_CLK_HZ}\~ 20971520U /* Initial value of the bus clock frequency in Hz */{\bkmkstart AAAAAAAABS}
{\bkmkend AAAAAAAABS}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b CPU_CORE_CLK_HZ}\~ 20971520U /* Initial value of the core/system clock frequency in Hz.  */{\bkmkstart AAAAAAAABT}
{\bkmkend AAAAAAAABT}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b CPU_CLOCK_CONFIG_NUMBER}\~ 0x01U /* Specifies number of defined clock configurations. */{\bkmkstart AAAAAAAABU}
{\bkmkend AAAAAAAABU}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b CPU_BUS_CLK_HZ_CLOCK_CONFIG0}\~ 20971520U /* Value of the bus clock frequency in the clock configuration 0 in Hz. */{\bkmkstart AAAAAAAABV}
{\bkmkend AAAAAAAABV}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b CPU_CORE_CLK_HZ_CLOCK_CONFIG0}\~ 20971520U /* Value of the core/system clock frequency in the clock configuration 0 in Hz. */{\bkmkstart AAAAAAAABW}
{\bkmkend AAAAAAAABW}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b CPU_XTAL_CLK_HZ}\~ 8000000U /* Value of the external crystal or oscillator clock frequency in Hz */{\bkmkstart AAAAAAAABX}
{\bkmkend AAAAAAAABX}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b CPU_INT_SLOW_CLK_HZ}\~ 32768U /* Value of the slow internal oscillator clock frequency in Hz  */{\bkmkstart AAAAAAAABY}
{\bkmkend AAAAAAAABY}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b CPU_INT_FAST_CLK_HZ}\~ 4000000U /* Value of the fast internal oscillator clock frequency in Hz  */{\bkmkstart AAAAAAAABZ}
{\bkmkend AAAAAAAABZ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b CPU_FAMILY_Kinetis}\~ /* Specification of the core type of the selected cpu */{\bkmkstart AAAAAAAACA}
{\bkmkend AAAAAAAACA}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b CPU_DERIVATIVE_MKL25Z128LK4}\~ /* Name of the selected cpu derivative */{\bkmkstart AAAAAAAACB}
{\bkmkend AAAAAAAACB}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b CPU_PARTNUM_MKL25Z128VLK4}\~ /* Part number of the selected cpu */{\bkmkstart AAAAAAAACC}
{\bkmkend AAAAAAAACC}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b CPU_LITTLE_ENDIAN}\~ /* The selected cpu uses little endian */{\bkmkstart AAAAAAAACD}
{\bkmkend AAAAAAAACD}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b CPU_CLOCK_CONFIG_0}\~ 0x00U /* Clock configuration 0 identifier */{\bkmkstart AAAAAAAACE}
{\bkmkend AAAAAAAACE}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b CPU_CORE_CLK_HZ_CONFIG_0}\~ 20971520UL /* Core clock frequency in clock configuration 0 */{\bkmkstart AAAAAAAACF}
{\bkmkend AAAAAAAACF}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b CPU_BUS_CLK_HZ_CONFIG_0}\~ 20971520UL /* Bus clock frequency in clock configuration 0 */{\bkmkstart AAAAAAAACG}
{\bkmkend AAAAAAAACG}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b CPU_FLEXBUS_CLK_HZ_CONFIG_0}\~ 0UL /* Flexbus clock frequency in clock configuration 0 */{\bkmkstart AAAAAAAACH}
{\bkmkend AAAAAAAACH}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b CPU_FLASH_CLK_HZ_CONFIG_0}\~ 0UL /* FLASH clock frequency in clock configuration 0 */{\bkmkstart AAAAAAAACI}
{\bkmkend AAAAAAAACI}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b CPU_USB_CLK_HZ_CONFIG_0}\~ 0UL /* USB clock frequency in clock configuration 0 */{\bkmkstart AAAAAAAACJ}
{\bkmkend AAAAAAAACJ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b CPU_PLL_FLL_CLK_HZ_CONFIG_0}\~ 20971520UL /* PLL/FLL clock frequency in clock configuration 0 */{\bkmkstart AAAAAAAACK}
{\bkmkend AAAAAAAACK}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b CPU_MCGIR_CLK_HZ_CONFIG_0}\~ 32768UL /* MCG internal reference clock frequency in clock configuration 0 */{\bkmkstart AAAAAAAACL}
{\bkmkend AAAAAAAACL}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b CPU_OSCER_CLK_HZ_CONFIG_0}\~ 8000000UL /* System OSC external reference clock frequency in clock configuration 0 */{\bkmkstart AAAAAAAACM}
{\bkmkend AAAAAAAACM}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b CPU_ERCLK32K_CLK_HZ_CONFIG_0}\~ 32768UL /* External reference clock 32k frequency in clock configuration 0 */{\bkmkstart AAAAAAAACN}
{\bkmkend AAAAAAAACN}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b CPU_MCGFF_CLK_HZ_CONFIG_0}\~ 32768UL /* MCG fixed frequency clock */{\bkmkstart AAAAAAAACO}
{\bkmkend AAAAAAAACO}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Typedefs\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

typedef void(*const {\b tIsrFunc} )(void){\bkmkstart AAAAAAAACP}
{\bkmkend AAAAAAAACP}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b PE_low_level_init} (void){\bkmkstart AAAAAAAABL}
{\bkmkend AAAAAAAABL}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b PE_ISR} (Cpu_INT_NMIInterrupt){\bkmkstart AAAAAAAABI}
{\bkmkend AAAAAAAABI}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b PE_ISR} (Cpu_Interrupt){\bkmkstart AAAAAAAABJ}
{\bkmkend AAAAAAAABJ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b __init_hardware} (void){\bkmkstart AAAAAAAABK}
{\bkmkend AAAAAAAABK}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const {\b TCpuClockConfiguration} {\b PE_CpuClockConfigurations} [CPU_CLOCK_CONFIG_NUMBER]\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

const {\b tVectorTable} {\b __vect_table}{\bkmkstart AAAAAAAACQ}
{\bkmkend AAAAAAAACQ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

volatile uint8_t {\b SR_reg}{\bkmkstart AAAAAAAABN}
{\bkmkend AAAAAAAABN}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

volatile uint8_t {\b SR_lock}{\bkmkstart AAAAAAAABO}
{\bkmkend AAAAAAAABO}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Version:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid 01.04 \par
}}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/CS1.c File Reference\par \pard\plain 
{\tc\tcl2 \v C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/CS1.c}
{\xe \v C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/CS1.c}
{\bkmkstart AAAAAAAACR}
{\bkmkend AAAAAAAACR}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "CS1.h"}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Version:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid 01.00 \par
}}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/CS1.h File Reference\par \pard\plain 
{\tc\tcl2 \v C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/CS1.h}
{\xe \v C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/CS1.h}
{\bkmkstart AAAAAAAACS}
{\bkmkend AAAAAAAACS}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "MCUC1.h"}\par
{\f2 #include "CS1config.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macros\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b CS1_CriticalVariableDrv}()\~ CS1_CriticalVariable(){\bkmkstart AAAAAAAACT}
{\bkmkend AAAAAAAACT}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b CS1_EnterCriticalDrv}()\~ CS1_EnterCritical(){\bkmkstart AAAAAAAACU}
{\bkmkend AAAAAAAACU}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b CS1_ExitCriticalDrv}()\~ CS1_ExitCritical(){\bkmkstart AAAAAAAACV}
{\bkmkend AAAAAAAACV}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b CS1_CriticalVariable}()\~ uint8_t cpuSR; /* variable to store current status */{\bkmkstart AAAAAAAACW}
{\bkmkend AAAAAAAACW}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b CS1_EnterCritical}()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b CS1_ExitCritical}()\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Version:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid 01.00 \par
}}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/EE241.c File Reference\par \pard\plain 
{\tc\tcl2 \v C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/EE241.c}
{\xe \v C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/EE241.c}
{\bkmkstart AAAAAAAACX}
{\bkmkend AAAAAAAACX}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Driver for Microchip 24_AA/LC EEPROMs. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "EE241.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macros\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b EE241_I2CAddress}\~ (0&EE241_MAX_I2C_ADDR_MASK) /* address defined by the A2|A1|A0 pins */{\bkmkstart AAAAAAAACY}
{\bkmkend AAAAAAAACY}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b EE241_CTRL_NBL}\~ (0x0A<<3)  /* control byte high nibble. Typically this is 1010 (shifted by one to the right) */{\bkmkstart AAAAAAAACZ}
{\bkmkend AAAAAAAACZ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b EE241_CTRL_ADDR}\~ 0        /* no additional address bits */{\bkmkstart AAAAAAAADA}
{\bkmkend AAAAAAAADA}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b EE241_BANK_0}\~ (0<<2)   /* B0 bit (0) inside the CTRL_BYTE: 1010|B0|A1|A0 */{\bkmkstart AAAAAAAADB}
{\bkmkend AAAAAAAADB}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b EE241_BANK_1}\~ (1<<2)   /* B0 bit (1) inside the CTRL_BYTE: 1010|B0|A1|A0 */{\bkmkstart AAAAAAAADC}
{\bkmkend AAAAAAAADC}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b EE241_CTRL_BYTE}\~ (EE241_CTRL_NBL|EE241_CTRL_ADDR) /* 1010|B0|A1|A0 */{\bkmkstart AAAAAAAADD}
{\bkmkend AAAAAAAADD}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b EE241_DEVICE_ADDR}(addr)\~ ( EE241_CTRL_BYTE|((addr>>8)&0x07) ){\bkmkstart AAAAAAAADE}
{\bkmkend AAAAAAAADE}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

byte {\b EE241_WriteByte} (EE241_Address addr, byte data){\bkmkstart AAAAAAAADF}
{\bkmkend AAAAAAAADF}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

byte {\b EE241_ReadByte} (EE241_Address addr, byte *data){\bkmkstart AAAAAAAADG}
{\bkmkend AAAAAAAADG}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

byte {\b EE241_ReadBlock} (EE241_Address addr, byte *data, word dataSize){\bkmkstart AAAAAAAADH}
{\bkmkend AAAAAAAADH}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

byte {\b EE241_WriteBlockPage} (EE241_Address addr, byte *data, word dataSize){\bkmkstart AAAAAAAADI}
{\bkmkend AAAAAAAADI}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

byte {\b EE241_WriteBlock} (EE241_Address addr, byte *data, word dataSize){\bkmkstart AAAAAAAADJ}
{\bkmkend AAAAAAAADJ}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Driver for Microchip 24_AA/LC EEPROMs. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Version:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid 01.00 \par
}}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/EE241.h File Reference\par \pard\plain 
{\tc\tcl2 \v C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/EE241.h}
{\xe \v C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/EE241.h}
{\bkmkstart AAAAAAAADK}
{\bkmkend AAAAAAAADK}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Driver for Microchip 24_AA/LC EEPROMs. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "PE_Types.h"}\par
{\f2 #include "PE_Error.h"}\par
{\f2 #include "PE_Const.h"}\par
{\f2 #include "IO_Map.h"}\par
{\f2 #include "WAIT1.h"}\par
{\f2 #include "GI2C1.h"}\par
{\f2 #include "Cpu.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macros\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b EE241_DEVICE_ID_8}\~ 8 /* 24AA08, 24LC08 */{\bkmkstart AAAAAAAADL}
{\bkmkend AAAAAAAADL}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b EE241_DEVICE_ID_16}\~ 16 /* 24AA16, 24LC16 */{\bkmkstart AAAAAAAADM}
{\bkmkend AAAAAAAADM}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b EE241_DEVICE_ID_32}\~ 32 /* 24AA32, 24LC32 */{\bkmkstart AAAAAAAADN}
{\bkmkend AAAAAAAADN}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b EE241_DEVICE_ID_256}\~ 256 /* 24AA256, 24LC256, 24FC256 */{\bkmkstart AAAAAAAADO}
{\bkmkend AAAAAAAADO}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b EE241_DEVICE_ID_512}\~ 512 /* 24AA512, 24LC512, 24FC256 */{\bkmkstart AAAAAAAADP}
{\bkmkend AAAAAAAADP}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b EE241_DEVICE_ID_1025}\~ 1025 /* 24AA1025, 24LC1025, 24FC1025 */{\bkmkstart AAAAAAAADQ}
{\bkmkend AAAAAAAADQ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b EE241_DEVICE_ID}\~ EE241_DEVICE_ID_8{\bkmkstart AAAAAAAADR}
{\bkmkend AAAAAAAADR}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b EE241_BLOCK_BUF_SIZE}\~ 12         /* buffer used for block read/write. Max is 128. Keep it small to reduce stack consumption. */{\bkmkstart AAAAAAAADS}
{\bkmkend AAAAAAAADS}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b EE241_MAX_I2C_ADDR_MASK}\~ 0     /* A2|A1|A0 are not used */{\bkmkstart AAAAAAAADT}
{\bkmkend AAAAAAAADT}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b EE241_MAX_ADDRESS}\~ 0x03FF /* 8 kBit is 1KByte */{\bkmkstart AAAAAAAADU}
{\bkmkend AAAAAAAADU}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b EE241_ADDRT}\~ word  /* a word/16bit is enough to hold the address */{\bkmkstart AAAAAAAADV}
{\bkmkend AAAAAAAADV}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b EE241_PAGE_SIZE}\~ 16    /* maximum page size (for page/block operation) */{\bkmkstart AAAAAAAADW}
{\bkmkend AAAAAAAADW}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b EE241_DO_ACKNOWLEDGE_POLLING}\~ 1 /* Perform acknowledge polling in the driver */{\bkmkstart AAAAAAAADX}
{\bkmkend AAAAAAAADX}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b EE241_PAGE_WRITE_TIME_MS}\~ 10 /* Page Write Time as per data sheet */{\bkmkstart AAAAAAAADY}
{\bkmkend AAAAAAAADY}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b EE241_ACK_POLLING_TIME_US}\~ 100 /* Acknowledge polling {\b time} in the I2C driver*/{\bkmkstart AAAAAAAADZ}
{\bkmkend AAAAAAAADZ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b __BWUserType_EE241_Address}{\bkmkstart AAAAAAAAEA}
{\bkmkend AAAAAAAAEA}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b EE241_PARSE_COMMAND_ENABLED}\~ 0 /* set to 1 if method ParseCommand() is present, 0 otherwise */{\bkmkstart AAAAAAAAEB}
{\bkmkend AAAAAAAAEB}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Typedefs\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

typedef EE241_ADDRT {\b EE241_Address}{\bkmkstart AAAAAAAAEC}
{\bkmkend AAAAAAAAEC}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

byte {\b EE241_WriteByte} (EE241_Address addr, byte data){\bkmkstart AAAAAAAADF}
{\bkmkend AAAAAAAADF}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

byte {\b EE241_ReadByte} (EE241_Address addr, byte *data){\bkmkstart AAAAAAAADG}
{\bkmkend AAAAAAAADG}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

byte {\b EE241_ReadBlock} (EE241_Address addr, byte *data, word dataSize){\bkmkstart AAAAAAAADH}
{\bkmkend AAAAAAAADH}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

byte {\b EE241_WriteBlock} (EE241_Address addr, byte *data, word dataSize){\bkmkstart AAAAAAAADJ}
{\bkmkend AAAAAAAADJ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

byte {\b EE241_WriteBlockPage} (EE241_Address addr, byte *data, word dataSize){\bkmkstart AAAAAAAADI}
{\bkmkend AAAAAAAADI}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Driver for Microchip 24_AA/LC EEPROMs. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Version:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid 01.00 \par
}}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/ExtIntLdd4.c File Reference\par \pard\plain 
{\tc\tcl2 \v C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/ExtIntLdd4.c}
{\xe \v C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/ExtIntLdd4.c}
{\bkmkstart AAAAAAAAED}
{\bkmkend AAAAAAAAED}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This component, "ExtInt_LDD", provide a low level API for unified access of external interrupts handling across various device designs. The component uses one pin which generates interrupt on selected edge. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "PIR.h"}\par
{\f2 #include "ExtIntLdd4.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Structures\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b ExtIntLdd4_TDeviceData}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Typedefs\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

typedef struct \par
{\b ExtIntLdd4_TDeviceData} * {\b ExtIntLdd4_TDeviceDataPtr}{\bkmkstart AAAAAAAAEE}
{\bkmkend AAAAAAAAEE}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LDD_TDeviceData} * {\b ExtIntLdd4_Init} ({\b LDD_TUserData} *UserDataPtr)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This method initializes the associated peripheral(s) and the component internal variables. The method is called automatically as a part of the application initialization code. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b PE_ISR} (ExtIntLdd4_Interrupt){\bkmkstart AAAAAAAAEF}
{\bkmkend AAAAAAAAEF}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b ExtIntLdd4_GetVal} ({\b LDD_TDeviceData} *DeviceDataPtr)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Returns the actual value of the input pin of the component. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LDD_TError} {\b ExtIntLdd4_SetEdge} ({\b LDD_TDeviceData} *DeviceDataPtr, uint8_t Edge)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the edge type for this component that generates the interrupt. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This component, "ExtInt_LDD", provide a low level API for unified access of external interrupts handling across various device designs. The component uses one pin which generates interrupt on selected edge. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Version:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid 01.02 \par
}}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/ExtIntLdd4.h File Reference\par \pard\plain 
{\tc\tcl2 \v C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/ExtIntLdd4.h}
{\xe \v C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/ExtIntLdd4.h}
{\bkmkstart AAAAAAAAEG}
{\bkmkend AAAAAAAAEG}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This component, "ExtInt_LDD", provide a low level API for unified access of external interrupts handling across various device designs. The component uses one pin which generates interrupt on selected edge. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "Cpu.h"}\par
{\f2 #include "PE_Types.h"}\par
{\f2 #include "PE_Error.h"}\par
{\f2 #include "PE_Const.h"}\par
{\f2 #include "IO_Map.h"}\par
{\f2 #include "GPIO_PDD.h"}\par
{\f2 #include "PORT_PDD.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macros\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ExtIntLdd4_PRPH_BASE_ADDRESS}\~ 0x400FF0C0U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ExtIntLdd4_DeviceData}\~ (({\b LDD_TDeviceData} *){\b PE_LDD_GetDeviceStructure}(PE_LDD_COMPONENT_ExtIntLdd4_ID))\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ExtIntLdd4_Init_METHOD_ENABLED}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ExtIntLdd4_GetVal_METHOD_ENABLED}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ExtIntLdd4_SetEdge_METHOD_ENABLED}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ExtIntLdd4_OnInterrupt_EVENT_ENABLED}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ExtIntLdd4_PIN_INDEX}\~ 0x07U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ExtIntLdd4_PIN_MASK}\~ 0x80U\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LDD_TDeviceData} * {\b ExtIntLdd4_Init} ({\b LDD_TUserData} *UserDataPtr)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This method initializes the associated peripheral(s) and the component internal variables. The method is called automatically as a part of the application initialization code. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b PE_ISR} (ExtIntLdd4_Interrupt){\bkmkstart AAAAAAAAEF}
{\bkmkend AAAAAAAAEF}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b ExtIntLdd4_GetVal} ({\b LDD_TDeviceData} *DeviceDataPtr)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Returns the actual value of the input pin of the component. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LDD_TError} {\b ExtIntLdd4_SetEdge} ({\b LDD_TDeviceData} *DeviceDataPtr, uint8_t Edge)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the edge type for this component that generates the interrupt. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This component, "ExtInt_LDD", provide a low level API for unified access of external interrupts handling across various device designs. The component uses one pin which generates interrupt on selected edge. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Version:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid 01.02 \par
}}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/GI2C1.c File Reference\par \pard\plain 
{\tc\tcl2 \v C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/GI2C1.c}
{\xe \v C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/GI2C1.c}
{\bkmkstart AAAAAAAAEH}
{\bkmkend AAAAAAAAEH}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This component implements a generic I2C driver wrapper to work both with LDD and non-LDD I2C components. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "GI2C1.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Structures\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b GI2C1_TDataState}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b GI2C1_RequestBus} (void){\bkmkstart AAAAAAAAEI}
{\bkmkend AAAAAAAAEI}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b GI2C1_ReleaseBus} (void){\bkmkstart AAAAAAAAEJ}
{\bkmkend AAAAAAAAEJ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint8_t {\b GI2C1_SelectSlave} (uint8_t i2cAddr){\bkmkstart AAAAAAAAEK}
{\bkmkend AAAAAAAAEK}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint8_t {\b GI2C1_UnselectSlave} (void){\bkmkstart AAAAAAAAEL}
{\bkmkend AAAAAAAAEL}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint8_t {\b GI2C1_ReadBlock} (void *data, uint16_t dataSize, GI2C1_EnumSendFlags flags){\bkmkstart AAAAAAAAEM}
{\bkmkend AAAAAAAAEM}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint8_t {\b GI2C1_WriteBlock} (void *data, uint16_t dataSize, GI2C1_EnumSendFlags flags){\bkmkstart AAAAAAAAEN}
{\bkmkend AAAAAAAAEN}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint8_t {\b GI2C1_ReadAddress} (uint8_t i2cAddr, uint8_t *memAddr, uint8_t memAddrSize, uint8_t *data, uint16_t dataSize){\bkmkstart AAAAAAAAEO}
{\bkmkend AAAAAAAAEO}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint8_t {\b GI2C1_WriteAddress} (uint8_t i2cAddr, uint8_t *memAddr, uint8_t memAddrSize, uint8_t *data, uint16_t dataSize){\bkmkstart AAAAAAAAEP}
{\bkmkend AAAAAAAAEP}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b CI2C1_OnMasterBlockSent} ({\b LDD_TUserData} *UserDataPtr){\bkmkstart AAAAAAAAEQ}
{\bkmkend AAAAAAAAEQ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b CI2C1_OnMasterBlockReceived} ({\b LDD_TUserData} *UserDataPtr){\bkmkstart AAAAAAAAER}
{\bkmkend AAAAAAAAER}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b GI2C1_Init} (void){\bkmkstart AAAAAAAAES}
{\bkmkend AAAAAAAAES}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b GI2C1_Deinit} (void){\bkmkstart AAAAAAAAET}
{\bkmkend AAAAAAAAET}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void * {\b GI2C1_GetSemaphore} (void){\bkmkstart AAAAAAAAEU}
{\bkmkend AAAAAAAAEU}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint8_t {\b GI2C1_ReadByteAddress8} (uint8_t i2cAddr, uint8_t memAddr, uint8_t *data){\bkmkstart AAAAAAAAEV}
{\bkmkend AAAAAAAAEV}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint8_t {\b GI2C1_WriteByteAddress8} (uint8_t i2cAddr, uint8_t memAddr, uint8_t data){\bkmkstart AAAAAAAAEW}
{\bkmkend AAAAAAAAEW}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint8_t {\b GI2C1_ScanDevice} (uint8_t i2cAddr){\bkmkstart AAAAAAAAEX}
{\bkmkend AAAAAAAAEX}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint8_t {\b GI2C1_ProbeACK} (void *data, uint16_t dataSize, GI2C1_EnumSendFlags flags, uint16_t WaitTimeUS){\bkmkstart AAAAAAAAEY}
{\bkmkend AAAAAAAAEY}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This component implements a generic I2C driver wrapper to work both with LDD and non-LDD I2C components. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Version:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid 01.00 \par
}}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/GI2C1.h File Reference\par \pard\plain 
{\tc\tcl2 \v C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/GI2C1.h}
{\xe \v C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/GI2C1.h}
{\bkmkstart AAAAAAAAEZ}
{\bkmkend AAAAAAAAEZ}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This component implements a generic I2C driver wrapper to work both with LDD and non-LDD I2C components. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "MCUC1.h"}\par
{\f2 #include "GI2C1config.h"}\par
{\f2 #include "WAIT1.h"}\par
{\f2 #include "CI2C1.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macros\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b GI2C1_WRITE_BUFFER_SIZE}\~ 16 /* size of internal buffer used, set in the component properties */{\bkmkstart AAAAAAAAFA}
{\bkmkend AAAAAAAAFA}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Typedefs\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

typedef enum GI2C1_EnumSendFlags_ {\b GI2C1_EnumSendFlags}{\bkmkstart AAAAAAAAFB}
{\bkmkend AAAAAAAAFB}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

typedef enum GI2C1_EnumStartFlags_ {\b GI2C1_EnumStartFlags}{\bkmkstart AAAAAAAAFC}
{\bkmkend AAAAAAAAFC}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

typedef enum GI2C1_EnumAckFlags_ {\b GI2C1_EnumAckFlags}{\bkmkstart AAAAAAAAFD}
{\bkmkend AAAAAAAAFD}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Enumerations\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b GI2C1_EnumSendFlags_} \{ {\b GI2C1_SEND_STOP}, 
{\b GI2C1_DO_NOT_SEND_STOP}, 
{\b GI2C1_STOP_NOSTART}
 \}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b GI2C1_EnumStartFlags_} \{ {\b GI2C1_SEND_START}, 
{\b GI2C1_DO_NOT_SEND_START}
 \}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b GI2C1_EnumAckFlags_} \{ {\b GI2C1_SEND_LAST_ACK}, 
{\b GI2C1_DO_NOT_LAST_ACK}
 \}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b CI2C1_OnMasterBlockSent} ({\b LDD_TUserData} *UserDataPtr){\bkmkstart AAAAAAAAEQ}
{\bkmkend AAAAAAAAEQ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b CI2C1_OnMasterBlockReceived} ({\b LDD_TUserData} *UserDataPtr){\bkmkstart AAAAAAAAER}
{\bkmkend AAAAAAAAER}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b GI2C1_Init} (void){\bkmkstart AAAAAAAAES}
{\bkmkend AAAAAAAAES}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b GI2C1_Deinit} (void){\bkmkstart AAAAAAAAET}
{\bkmkend AAAAAAAAET}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint8_t {\b GI2C1_ReadAddress} (uint8_t i2cAddr, uint8_t *memAddr, uint8_t memAddrSize, uint8_t *data, uint16_t dataSize){\bkmkstart AAAAAAAAEO}
{\bkmkend AAAAAAAAEO}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint8_t {\b GI2C1_WriteAddress} (uint8_t i2cAddr, uint8_t *memAddr, uint8_t memAddrSize, uint8_t *data, uint16_t dataSize){\bkmkstart AAAAAAAAEP}
{\bkmkend AAAAAAAAEP}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void * {\b GI2C1_GetSemaphore} (void){\bkmkstart AAAAAAAAEU}
{\bkmkend AAAAAAAAEU}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint8_t {\b GI2C1_ReadBlock} (void *data, uint16_t dataSize, GI2C1_EnumSendFlags flags){\bkmkstart AAAAAAAAEM}
{\bkmkend AAAAAAAAEM}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint8_t {\b GI2C1_WriteBlock} (void *data, uint16_t dataSize, GI2C1_EnumSendFlags flags){\bkmkstart AAAAAAAAEN}
{\bkmkend AAAAAAAAEN}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b GI2C1_RequestBus} (void){\bkmkstart AAAAAAAAEI}
{\bkmkend AAAAAAAAEI}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b GI2C1_ReleaseBus} (void){\bkmkstart AAAAAAAAEJ}
{\bkmkend AAAAAAAAEJ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint8_t {\b GI2C1_SelectSlave} (uint8_t i2cAddr){\bkmkstart AAAAAAAAEK}
{\bkmkend AAAAAAAAEK}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint8_t {\b GI2C1_UnselectSlave} (void){\bkmkstart AAAAAAAAEL}
{\bkmkend AAAAAAAAEL}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint8_t {\b GI2C1_ReadByteAddress8} (uint8_t i2cAddr, uint8_t memAddr, uint8_t *data){\bkmkstart AAAAAAAAEV}
{\bkmkend AAAAAAAAEV}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint8_t {\b GI2C1_WriteByteAddress8} (uint8_t i2cAddr, uint8_t memAddr, uint8_t data){\bkmkstart AAAAAAAAEW}
{\bkmkend AAAAAAAAEW}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint8_t {\b GI2C1_ScanDevice} (uint8_t i2cAddr){\bkmkstart AAAAAAAAEX}
{\bkmkend AAAAAAAAEX}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint8_t {\b GI2C1_ProbeACK} (void *data, uint16_t dataSize, GI2C1_EnumSendFlags flags, uint16_t WaitTimeUS){\bkmkstart AAAAAAAAEY}
{\bkmkend AAAAAAAAEY}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This component implements a generic I2C driver wrapper to work both with LDD and non-LDD I2C components. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Version:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid 01.00 \par
}}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/GI2C1config.h File Reference\par \pard\plain 
{\tc\tcl2 \v C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/GI2C1config.h}
{\xe \v C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/GI2C1config.h}
{\bkmkstart AAAAAAAAFE}
{\bkmkend AAAAAAAAFE}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Configuration header file for GenericI2C. }}\par
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Configuration header file for GenericI2C. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This header file is used to configure settings of the Generic I2C module. \par
}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/LT.c File Reference\par \pard\plain 
{\tc\tcl2 \v C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/LT.c}
{\xe \v C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/LT.c}
{\bkmkstart AAAAAAAAFF}
{\bkmkend AAAAAAAAFF}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This component "BitIO" implements an one-bit input/output. It uses one bit/pin of a port. Note: This component is set to work in Output direction only. Methods of this component are mostly implemented as a macros (if supported by target language and compiler). }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "LT.h"}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This component "BitIO" implements an one-bit input/output. It uses one bit/pin of a port. Note: This component is set to work in Output direction only. Methods of this component are mostly implemented as a macros (if supported by target language and compiler). \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Version:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid 01.00 \par
}}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/LT.h File Reference\par \pard\plain 
{\tc\tcl2 \v C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/LT.h}
{\xe \v C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/LT.h}
{\bkmkstart AAAAAAAAFG}
{\bkmkend AAAAAAAAFG}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This component "BitIO" implements an one-bit input/output. It uses one bit/pin of a port. Note: This component is set to work in Output direction only. Methods of this component are mostly implemented as a macros (if supported by target language and compiler). }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "PE_Types.h"}\par
{\f2 #include "PE_Error.h"}\par
{\f2 #include "PE_Const.h"}\par
{\f2 #include "IO_Map.h"}\par
{\f2 #include "BitIoLdd7.h"}\par
{\f2 #include "Cpu.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macros\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b LT_GetVal}()\~ ({\b BitIoLdd7_GetVal}({\b BitIoLdd7_DeviceData})){\bkmkstart AAAAAAAAFH}
{\bkmkend AAAAAAAAFH}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b LT_PutVal}(Val)\~ ({\b BitIoLdd7_PutVal}({\b BitIoLdd7_DeviceData}, (Val))){\bkmkstart AAAAAAAAFI}
{\bkmkend AAAAAAAAFI}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b LT_ClrVal}()\~ ({\b BitIoLdd7_ClrVal}({\b BitIoLdd7_DeviceData})){\bkmkstart AAAAAAAAFJ}
{\bkmkend AAAAAAAAFJ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b LT_SetVal}()\~ ({\b BitIoLdd7_SetVal}({\b BitIoLdd7_DeviceData})){\bkmkstart AAAAAAAAFK}
{\bkmkend AAAAAAAAFK}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b LT_NegVal}()\~ ({\b BitIoLdd7_NegVal}({\b BitIoLdd7_DeviceData})){\bkmkstart AAAAAAAAFL}
{\bkmkend AAAAAAAAFL}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This component "BitIO" implements an one-bit input/output. It uses one bit/pin of a port. Note: This component is set to work in Output direction only. Methods of this component are mostly implemented as a macros (if supported by target language and compiler). \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Version:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid 01.00 \par
}}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/MCUC1.c File Reference\par \pard\plain 
{\tc\tcl2 \v C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/MCUC1.c}
{\xe \v C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/MCUC1.c}
{\bkmkstart AAAAAAAAFM}
{\bkmkend AAAAAAAAFM}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "MCUC1.h"}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Version:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid 01.00 \par
}}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/MCUC1.h File Reference\par \pard\plain 
{\tc\tcl2 \v C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/MCUC1.h}
{\xe \v C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/MCUC1.h}
{\bkmkstart AAAAAAAAFN}
{\bkmkend AAAAAAAAFN}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "MCUC1config.h"}\par
{\f2 #include "PE_Types.h"}\par
{\f2 #include "PE_Error.h"}\par
{\f2 #include "PE_Const.h"}\par
{\f2 #include "IO_Map.h"}\par
{\f2 #include "Cpu.h"}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Version:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid 01.00 \par
}}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/MCUC1config.h File Reference\par \pard\plain 
{\tc\tcl2 \v C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/MCUC1config.h}
{\xe \v C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/MCUC1config.h}
{\bkmkstart AAAAAAAAFO}
{\bkmkend AAAAAAAAFO}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Configuration header file for McuLibConfig. }}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macros\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b MCUC1_CONFIG_CPU_IS_ARM_CORTEX_M}\~ (1 || defined(__CORTEX_M))\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b MCUC1_CONFIG_CPU_IS_KINETIS}\~ (1 && {\b MCUC1_CONFIG_CPU_IS_ARM_CORTEX_M})\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b MCUC1_CONFIG_CPU_IS_LPC}\~ (0 && {\b MCUC1_CONFIG_CPU_IS_ARM_CORTEX_M})\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b MCUC1_CONFIG_CORTEX_M}\~ (0)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b MCUC1_CONFIG_FPU_USED}\~ (0 || (defined(__FPU_USED) && (__FPU_USED)==1))\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b MCUC1_CONFIG_SDK_GENERIC}\~ 0\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b MCUC1_CONFIG_SDK_PROCESSOR_EXPERT}\~ 1\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b MCUC1_CONFIG_SDK_KINETIS_1_3}\~ 2\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b MCUC1_CONFIG_SDK_KINETIS_2_0}\~ 3\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b MCUC1_CONFIG_SDK_MCUXPRESSO_2_0}\~ 4\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b MCUC1_CONFIG_SDK_VERSION_USED}\~ {\b MCUC1_CONFIG_SDK_PROCESSOR_EXPERT}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b MCUC1_CONFIG_NXP_SDK_USED}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b MCUC1_CONFIG_NXP_SDK_2_0_USED}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b MCUC1_CONFIG_PEX_SDK_USED}\~ ({\b MCUC1_CONFIG_SDK_VERSION_USED}=={\b MCUC1_CONFIG_SDK_PROCESSOR_EXPERT})\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Configuration header file for McuLibConfig. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This header file is used to configure settings of the McuLibConfig module. \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macro Definition Documentation\par
\pard\plain 
{\xe \v MCUC1_CONFIG_CORTEX_M\:MCUC1config.h}
{\xe \v MCUC1config.h\:MCUC1_CONFIG_CORTEX_M}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define MCUC1_CONFIG_CORTEX_M\~ (0)}}
\par
{\bkmkstart AAAAAAAAFP}
{\bkmkend AAAAAAAAFP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
0: Cortex-M0, 3: M3, 4: M4, 7: M7, -1 otherwise \par
}}
{\xe \v MCUC1_CONFIG_CPU_IS_ARM_CORTEX_M\:MCUC1config.h}
{\xe \v MCUC1config.h\:MCUC1_CONFIG_CPU_IS_ARM_CORTEX_M}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define MCUC1_CONFIG_CPU_IS_ARM_CORTEX_M\~ (1 || defined(__CORTEX_M))}}
\par
{\bkmkstart AAAAAAAAFQ}
{\bkmkend AAAAAAAAFQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
1: ARM Cortex-M family, 0 otherwise \par
}}
{\xe \v MCUC1_CONFIG_CPU_IS_KINETIS\:MCUC1config.h}
{\xe \v MCUC1config.h\:MCUC1_CONFIG_CPU_IS_KINETIS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define MCUC1_CONFIG_CPU_IS_KINETIS\~ (1 && {\b MCUC1_CONFIG_CPU_IS_ARM_CORTEX_M})}}
\par
{\bkmkstart AAAAAAAAFR}
{\bkmkend AAAAAAAAFR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
1: NXP Kinetis CPU family, 0: otherwise \par
}}
{\xe \v MCUC1_CONFIG_CPU_IS_LPC\:MCUC1config.h}
{\xe \v MCUC1config.h\:MCUC1_CONFIG_CPU_IS_LPC}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define MCUC1_CONFIG_CPU_IS_LPC\~ (0 && {\b MCUC1_CONFIG_CPU_IS_ARM_CORTEX_M})}}
\par
{\bkmkstart AAAAAAAAFS}
{\bkmkend AAAAAAAAFS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
1: NXP LPC CPU family, 0: otherwise \par
}}
{\xe \v MCUC1_CONFIG_FPU_USED\:MCUC1config.h}
{\xe \v MCUC1config.h\:MCUC1_CONFIG_FPU_USED}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define MCUC1_CONFIG_FPU_USED\~ (0 || (defined(__FPU_USED) && (__FPU_USED)==1))}}
\par
{\bkmkstart AAAAAAAAFT}
{\bkmkend AAAAAAAAFT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
1: using floating point unit, 0: otherwise \par
}}
{\xe \v MCUC1_CONFIG_NXP_SDK_2_0_USED\:MCUC1config.h}
{\xe \v MCUC1config.h\:MCUC1_CONFIG_NXP_SDK_2_0_USED}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define MCUC1_CONFIG_NXP_SDK_2_0_USED}}
\par
{\bkmkstart AAAAAAAAFU}
{\bkmkend AAAAAAAAFU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Value:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid (   (MCUC1_CONFIG_SDK_VERSION_USED==MCUC1_CONFIG_SDK_KINETIS_2_0) \\\par
                                                  || (MCUC1_CONFIG_SDK_VERSION_USED==MCUC1_CONFIG_SDK_MCUXPRESSO_2_0) \\\par
                                                 )\par
}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Using Freescale/NXP SDK V2.0 \par
}}
{\xe \v MCUC1_CONFIG_NXP_SDK_USED\:MCUC1config.h}
{\xe \v MCUC1config.h\:MCUC1_CONFIG_NXP_SDK_USED}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define MCUC1_CONFIG_NXP_SDK_USED}}
\par
{\bkmkstart AAAAAAAAFV}
{\bkmkend AAAAAAAAFV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Value:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid (   (MCUC1_CONFIG_SDK_VERSION_USED==MCUC1_CONFIG_SDK_KINETIS_1_3) \\\par
                                                  || (MCUC1_CONFIG_SDK_VERSION_USED==MCUC1_CONFIG_SDK_KINETIS_2_0) \\\par
                                                  || (MCUC1_CONFIG_SDK_VERSION_USED==MCUC1_CONFIG_SDK_MCUXPRESSO_2_0) \\\par
                                                 )\par
}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Using one of the Freescale/NXP SDKs \par
}}
{\xe \v MCUC1_CONFIG_PEX_SDK_USED\:MCUC1config.h}
{\xe \v MCUC1config.h\:MCUC1_CONFIG_PEX_SDK_USED}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define MCUC1_CONFIG_PEX_SDK_USED\~ ({\b MCUC1_CONFIG_SDK_VERSION_USED}=={\b MCUC1_CONFIG_SDK_PROCESSOR_EXPERT})}}
\par
{\bkmkstart AAAAAAAAFW}
{\bkmkend AAAAAAAAFW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Using Processor Expert API \par
}}
{\xe \v MCUC1_CONFIG_SDK_GENERIC\:MCUC1config.h}
{\xe \v MCUC1config.h\:MCUC1_CONFIG_SDK_GENERIC}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define MCUC1_CONFIG_SDK_GENERIC\~ 0}}
\par
{\bkmkstart AAAAAAAAFX}
{\bkmkend AAAAAAAAFX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
using a generic API/SDK \par
}}
{\xe \v MCUC1_CONFIG_SDK_KINETIS_1_3\:MCUC1config.h}
{\xe \v MCUC1config.h\:MCUC1_CONFIG_SDK_KINETIS_1_3}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define MCUC1_CONFIG_SDK_KINETIS_1_3\~ 2}}
\par
{\bkmkstart AAAAAAAAFY}
{\bkmkend AAAAAAAAFY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
using NXP Kinetis SDK V1.3 \par
}}
{\xe \v MCUC1_CONFIG_SDK_KINETIS_2_0\:MCUC1config.h}
{\xe \v MCUC1config.h\:MCUC1_CONFIG_SDK_KINETIS_2_0}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define MCUC1_CONFIG_SDK_KINETIS_2_0\~ 3}}
\par
{\bkmkstart AAAAAAAAFZ}
{\bkmkend AAAAAAAAFZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
using NXP Kinetis SDK V2.0 \par
}}
{\xe \v MCUC1_CONFIG_SDK_MCUXPRESSO_2_0\:MCUC1config.h}
{\xe \v MCUC1config.h\:MCUC1_CONFIG_SDK_MCUXPRESSO_2_0}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define MCUC1_CONFIG_SDK_MCUXPRESSO_2_0\~ 4}}
\par
{\bkmkstart AAAAAAAAGA}
{\bkmkend AAAAAAAAGA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
same as Kinetis SDK v2.0 \par
}}
{\xe \v MCUC1_CONFIG_SDK_PROCESSOR_EXPERT\:MCUC1config.h}
{\xe \v MCUC1config.h\:MCUC1_CONFIG_SDK_PROCESSOR_EXPERT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define MCUC1_CONFIG_SDK_PROCESSOR_EXPERT\~ 1}}
\par
{\bkmkstart AAAAAAAAGB}
{\bkmkend AAAAAAAAGB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
using Processor Expert SDK \par
}}
{\xe \v MCUC1_CONFIG_SDK_VERSION_USED\:MCUC1config.h}
{\xe \v MCUC1config.h\:MCUC1_CONFIG_SDK_VERSION_USED}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define MCUC1_CONFIG_SDK_VERSION_USED\~ {\b MCUC1_CONFIG_SDK_PROCESSOR_EXPERT}}}
\par
{\bkmkstart AAAAAAAAGC}
{\bkmkend AAAAAAAAGC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
identify the version of SDK/API used \par
}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/PC.c File Reference\par \pard\plain 
{\tc\tcl2 \v C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/PC.c}
{\xe \v C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/PC.c}
{\bkmkstart AAAAAAAAGD}
{\bkmkend AAAAAAAAGD}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This component "AsynchroSerial" implements an asynchronous serial communication. The component supports different settings of parity, word width, stop-bit and communication speed, user can select interrupt or polling handler. Communication speed can be changed also in runtime. The component requires one on-chip asynchronous serial channel. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "PC.h"}\par
{\f2 #include "Events.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macros\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b OVERRUN_ERR}\~ 0x01U         /* Overrun error flag bit    */{\bkmkstart AAAAAAAAGE}
{\bkmkend AAAAAAAAGE}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b FRAMING_ERR}\~ 0x02U         /* Framing error flag bit    */{\bkmkstart AAAAAAAAGF}
{\bkmkend AAAAAAAAGF}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b PARITY_ERR}\~ 0x04U         /* Parity error flag bit     */{\bkmkstart AAAAAAAAGG}
{\bkmkend AAAAAAAAGG}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b CHAR_IN_RX}\~ 0x08U         /* Char is in RX buffer      */{\bkmkstart AAAAAAAAGH}
{\bkmkend AAAAAAAAGH}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b FULL_TX}\~ 0x10U         /* Full transmit buffer      */{\bkmkstart AAAAAAAAGI}
{\bkmkend AAAAAAAAGI}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b RUNINT_FROM_TX}\~ 0x20U         /* Interrupt is in progress  */{\bkmkstart AAAAAAAAGJ}
{\bkmkend AAAAAAAAGJ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b FULL_RX}\~ 0x40U         /* Full receive buffer       */{\bkmkstart AAAAAAAAGK}
{\bkmkend AAAAAAAAGK}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b NOISE_ERR}\~ 0x80U         /* Noise error flag bit      */{\bkmkstart AAAAAAAAGL}
{\bkmkend AAAAAAAAGL}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b IDLE_ERR}\~ 0x0100U       /* Idle character flag bit   */{\bkmkstart AAAAAAAAGM}
{\bkmkend AAAAAAAAGM}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b BREAK_ERR}\~ 0x0200U       /* Break detect              */{\bkmkstart AAAAAAAAGN}
{\bkmkend AAAAAAAAGN}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b COMMON_ERR}\~ 0x0800U       /* Common error of RX       */{\bkmkstart AAAAAAAAGO}
{\bkmkend AAAAAAAAGO}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b ON_ERROR}\~ 0x01U{\bkmkstart AAAAAAAAGP}
{\bkmkend AAAAAAAAGP}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b ON_FULL_RX}\~ 0x02U{\bkmkstart AAAAAAAAGQ}
{\bkmkend AAAAAAAAGQ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b ON_RX_CHAR}\~ 0x04U{\bkmkstart AAAAAAAAGR}
{\bkmkend AAAAAAAAGR}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b ON_FREE_TX}\~ 0x01U{\bkmkstart AAAAAAAAGS}
{\bkmkend AAAAAAAAGS}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b ON_TX_CHAR}\~ 0x02U{\bkmkstart AAAAAAAAGT}
{\bkmkend AAAAAAAAGT}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

byte {\b PC_RecvChar} (PC_TComData *Chr){\bkmkstart AAAAAAAAGU}
{\bkmkend AAAAAAAAGU}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

byte {\b PC_SendChar} (PC_TComData Chr){\bkmkstart AAAAAAAAGV}
{\bkmkend AAAAAAAAGV}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

byte {\b PC_RecvBlock} (PC_TComData *Ptr, word Size, word *Rcv){\bkmkstart AAAAAAAAGW}
{\bkmkend AAAAAAAAGW}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

byte {\b PC_SendBlock} (PC_TComData *Ptr, word Size, word *Snd){\bkmkstart AAAAAAAAGX}
{\bkmkend AAAAAAAAGX}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

byte {\b PC_ClearRxBuf} (void){\bkmkstart AAAAAAAAGY}
{\bkmkend AAAAAAAAGY}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

byte {\b PC_ClearTxBuf} (void){\bkmkstart AAAAAAAAGZ}
{\bkmkend AAAAAAAAGZ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

word {\b PC_GetCharsInRxBuf} (void){\bkmkstart AAAAAAAAHA}
{\bkmkend AAAAAAAAHA}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

word {\b PC_GetCharsInTxBuf} (void){\bkmkstart AAAAAAAAHB}
{\bkmkend AAAAAAAAHB}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b PC_Init} (void){\bkmkstart AAAAAAAAHC}
{\bkmkend AAAAAAAAHC}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b ASerialLdd1_OnBlockReceived} ({\b LDD_TUserData} *UserDataPtr){\bkmkstart AAAAAAAAHD}
{\bkmkend AAAAAAAAHD}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b ASerialLdd1_OnBlockSent} ({\b LDD_TUserData} *UserDataPtr){\bkmkstart AAAAAAAAHE}
{\bkmkend AAAAAAAAHE}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b ASerialLdd1_OnError} ({\b LDD_TUserData} *UserDataPtr){\bkmkstart AAAAAAAAHF}
{\bkmkend AAAAAAAAHF}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b ASerialLdd1_OnBreak} ({\b LDD_TUserData} *UserDataPtr){\bkmkstart AAAAAAAAHG}
{\bkmkend AAAAAAAAHG}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b LDD_TDeviceData} * {\b ASerialLdd1_DeviceDataPtr}{\bkmkstart AAAAAAAAHH}
{\bkmkend AAAAAAAAHH}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This component "AsynchroSerial" implements an asynchronous serial communication. The component supports different settings of parity, word width, stop-bit and communication speed, user can select interrupt or polling handler. Communication speed can be changed also in runtime. The component requires one on-chip asynchronous serial channel. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Version:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid 01.01 \par
}}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/PC.h File Reference\par \pard\plain 
{\tc\tcl2 \v C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/PC.h}
{\xe \v C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/PC.h}
{\bkmkstart AAAAAAAAHI}
{\bkmkend AAAAAAAAHI}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This component "AsynchroSerial" implements an asynchronous serial communication. The component supports different settings of parity, word width, stop-bit and communication speed, user can select interrupt or polling handler. Communication speed can be changed also in runtime. The component requires one on-chip asynchronous serial channel. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "ASerialLdd1.h"}\par
{\f2 #include "Cpu.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Structures\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
union {\b PC_TError}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macros\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b __BWUserType_PC_TError}{\bkmkstart AAAAAAAAHJ}
{\bkmkend AAAAAAAAHJ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b __BWUserType_PC_TComData}{\bkmkstart AAAAAAAAHK}
{\bkmkend AAAAAAAAHK}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b PC_INP_BUF_SIZE}\~ 0x0100U       /* Length of the RX buffer */{\bkmkstart AAAAAAAAHL}
{\bkmkend AAAAAAAAHL}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b PC_OUT_BUF_SIZE}\~ 0x0100U       /* Length of the TX buffer */{\bkmkstart AAAAAAAAHM}
{\bkmkend AAAAAAAAHM}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Typedefs\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

typedef byte {\b PC_TComData}{\bkmkstart AAAAAAAAHN}
{\bkmkend AAAAAAAAHN}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

byte {\b PC_RecvChar} (PC_TComData *Chr){\bkmkstart AAAAAAAAGU}
{\bkmkend AAAAAAAAGU}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

byte {\b PC_SendChar} (PC_TComData Chr){\bkmkstart AAAAAAAAGV}
{\bkmkend AAAAAAAAGV}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

byte {\b PC_RecvBlock} (PC_TComData *Ptr, word Size, word *Rcv){\bkmkstart AAAAAAAAGW}
{\bkmkend AAAAAAAAGW}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

byte {\b PC_SendBlock} (PC_TComData *Ptr, word Size, word *Snd){\bkmkstart AAAAAAAAGX}
{\bkmkend AAAAAAAAGX}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

byte {\b PC_ClearRxBuf} (void){\bkmkstart AAAAAAAAGY}
{\bkmkend AAAAAAAAGY}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

byte {\b PC_ClearTxBuf} (void){\bkmkstart AAAAAAAAGZ}
{\bkmkend AAAAAAAAGZ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

word {\b PC_GetCharsInRxBuf} (void){\bkmkstart AAAAAAAAHA}
{\bkmkend AAAAAAAAHA}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

word {\b PC_GetCharsInTxBuf} (void){\bkmkstart AAAAAAAAHB}
{\bkmkend AAAAAAAAHB}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b PC_Init} (void){\bkmkstart AAAAAAAAHC}
{\bkmkend AAAAAAAAHC}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b ASerialLdd1_OnBlockReceived} ({\b LDD_TUserData} *UserDataPtr){\bkmkstart AAAAAAAAHD}
{\bkmkend AAAAAAAAHD}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b ASerialLdd1_OnBlockSent} ({\b LDD_TUserData} *UserDataPtr){\bkmkstart AAAAAAAAHE}
{\bkmkend AAAAAAAAHE}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b ASerialLdd1_OnError} ({\b LDD_TUserData} *UserDataPtr){\bkmkstart AAAAAAAAHF}
{\bkmkend AAAAAAAAHF}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b ASerialLdd1_OnBreak} ({\b LDD_TUserData} *UserDataPtr){\bkmkstart AAAAAAAAHG}
{\bkmkend AAAAAAAAHG}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This component "AsynchroSerial" implements an asynchronous serial communication. The component supports different settings of parity, word width, stop-bit and communication speed, user can select interrupt or polling handler. Communication speed can be changed also in runtime. The component requires one on-chip asynchronous serial channel. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Version:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid 01.01 \par
}}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/PE_Const.h File Reference\par \pard\plain 
{\tc\tcl2 \v C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/PE_Const.h}
{\xe \v C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/PE_Const.h}
{\bkmkstart AAAAAAAAHO}
{\bkmkend AAAAAAAAHO}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This component "PE_Const" contains internal definitions of the constants. }}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macros\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b RSTSRC_WAKEUP}\~ 0x01U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b RSTSRC_LVD}\~ 0x02U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b RSTSRC_LOC}\~ 0x04U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b RSTSRC_LOL}\~ 0x08U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b RSTSRC_COP}\~ 0x20U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b RSTSRC_WDOG}\~ 0x20U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b RSTSRC_PIN}\~ 0x40U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b RSTSRC_POR}\~ 0x80U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b RSTSRC_JTAG}\~ 0x0100U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b RSTSRC_LOCKUP}\~ 0x0200U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b RSTSRC_SW}\~ 0x0400U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b RSTSRC_MDM_AP}\~ 0x0800U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b RSTSRC_SACKERR}\~ 0x2000U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LVDSRC_LVD}\~ 0x01U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LVDSRC_LVW}\~ 0x02U\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This component "PE_Const" contains internal definitions of the constants. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Version:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid 01.00 \par
}}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/PE_Error.h File Reference\par \pard\plain 
{\tc\tcl2 \v C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/PE_Error.h}
{\xe \v C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/PE_Error.h}
{\bkmkstart AAAAAAAAHP}
{\bkmkend AAAAAAAAHP}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This component "PE_Error" contains internal definitions of the error constants. }}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macros\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ERR_OK}\~ 0x00U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ERR_SPEED}\~ 0x01U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ERR_RANGE}\~ 0x02U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ERR_VALUE}\~ 0x03U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ERR_OVERFLOW}\~ 0x04U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ERR_MATH}\~ 0x05U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ERR_ENABLED}\~ 0x06U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ERR_DISABLED}\~ 0x07U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ERR_BUSY}\~ 0x08U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ERR_NOTAVAIL}\~ 0x09U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ERR_RXEMPTY}\~ 0x0AU\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ERR_TXFULL}\~ 0x0BU\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ERR_BUSOFF}\~ 0x0CU\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ERR_OVERRUN}\~ 0x0DU\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ERR_FRAMING}\~ 0x0EU\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ERR_PARITY}\~ 0x0FU\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ERR_NOISE}\~ 0x10U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ERR_IDLE}\~ 0x11U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ERR_FAULT}\~ 0x12U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ERR_BREAK}\~ 0x13U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ERR_CRC}\~ 0x14U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ERR_ARBITR}\~ 0x15U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ERR_PROTECT}\~ 0x16U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ERR_UNDERFLOW}\~ 0x17U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ERR_UNDERRUN}\~ 0x18U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ERR_COMMON}\~ 0x19U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ERR_LINSYNC}\~ 0x1AU\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ERR_FAILED}\~ 0x1BU\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ERR_QFULL}\~ 0x1CU\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ERR_PARAM_MASK}\~ 0x80U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ERR_PARAM_MODE}\~ 0x81U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ERR_PARAM_INDEX}\~ 0x82U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ERR_PARAM_DATA}\~ 0x83U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ERR_PARAM_SIZE}\~ 0x84U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ERR_PARAM_VALUE}\~ 0x85U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ERR_PARAM_RANGE}\~ 0x86U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ERR_PARAM_LOW_VALUE}\~ 0x87U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ERR_PARAM_HIGH_VALUE}\~ 0x88U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ERR_PARAM_ADDRESS}\~ 0x89U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ERR_PARAM_PARITY}\~ 0x8AU\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ERR_PARAM_WIDTH}\~ 0x8BU\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ERR_PARAM_LENGTH}\~ 0x8CU\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ERR_PARAM_ADDRESS_TYPE}\~ 0x8DU\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ERR_PARAM_COMMAND_TYPE}\~ 0x8EU\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ERR_PARAM_COMMAND}\~ 0x8FU\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ERR_PARAM_RECIPIENT}\~ 0x90U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ERR_PARAM_BUFFER_COUNT}\~ 0x91U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ERR_PARAM_ID}\~ 0x92U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ERR_PARAM_GROUP}\~ 0x93U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ERR_PARAM_CHIP_SELECT}\~ 0x94U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ERR_PARAM_ATTRIBUTE_SET}\~ 0x95U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ERR_PARAM_SAMPLE_COUNT}\~ 0x96U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ERR_PARAM_CONDITION}\~ 0x97U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ERR_PARAM_TICKS}\~ 0x98U\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This component "PE_Error" contains internal definitions of the error constants. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Version:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid 01.00 \par
}}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/PE_LDD.c File Reference\par \pard\plain 
{\tc\tcl2 \v C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/PE_LDD.c}
{\xe \v C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/PE_LDD.c}
{\bkmkstart AAAAAAAAHQ}
{\bkmkend AAAAAAAAHQ}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "PE_LDD.h"}\par
{\f2 #include "Cpu.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b PE_FillMemory} (register void *SourceAddressPtr, register uint8_t c, register uint32_t len)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Fills a memory area block by a specified value. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b PE_PeripheralUsed} (uint32_t PrphBaseAddress)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Returns information whether a peripheral is allocated by PEx or not. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b LDD_SetClockConfiguration} ({\b LDD_TClockConfiguration} ClockConfiguration)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Changes the clock configuration of all LDD components in a project. }{
}\par
}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LDD_TDeviceData} * {\b PE_LDD_DeviceDataList} [16]\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const {\b TCpuClockConfiguration} {\b PE_CpuClockConfigurations} [CPU_CLOCK_CONFIG_NUMBER]\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {\tc\tcl \v 4}\par}
THIS COMPONENT MODULE IS GENERATED BY THE TOOL. DO NOT MODIFY IT. Filename : {\b PE_LDD.c} Project : ProjetoFinal Processor : MKL25Z128VLK4 Version : Component 01.025, Driver 01.04, CPU db: 3.00.000 Compiler : GNU C Compiler Date/Time : 2019-11-27, 08:14, # CodeGen: 0 Abstract :\par
Settings :\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid Copyright : 1997 - 2014 Freescale Semiconductor, Inc. \par
All Rights Reserved.\par
\par
Redistribution and use in source and binary forms, with or without modification,\par
are permitted provided that the following conditions are met:\par
\par
o Redistributions of source code must retain the above copyright notice, this list\par
  of conditions and the following disclaimer.\par
\par
o Redistributions in binary form must reproduce the above copyright notice, this\par
  list of conditions and the following disclaimer in the documentation and/or\par
  other materials provided with the distribution.\par
\par
o Neither the name of Freescale Semiconductor, Inc. nor the names of its\par
  contributors may be used to endorse or promote products derived from this\par
  software without specific prior written permission.\par
\par
THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND\par
ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\par
WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\par
DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR\par
ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\par
(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\par
LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON\par
ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\par
(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\par
SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\par
\par
http: www.freescale.com\par
mail: support@freescale.com\par
}
 {\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {\tc\tcl \v 4}\par}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Version:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid 01.04 \par
}}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/PE_LDD.h File Reference\par \pard\plain 
{\tc\tcl2 \v C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/PE_LDD.h}
{\xe \v C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/PE_LDD.h}
{\bkmkstart AAAAAAAAHR}
{\bkmkend AAAAAAAAHR}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "PE_Types.h"}\par
{\f2 #include "PE_Error.h"}\par
{\f2 #include "PE_Const.h"}\par
{\f2 #include "PC.h"}\par
{\f2 #include "ASerialLdd1.h"}\par
{\f2 #include "Wifi.h"}\par
{\f2 #include "ASerialLdd2.h"}\par
{\f2 #include "MCUC1.h"}\par
{\f2 #include "UTIL1.h"}\par
{\f2 #include "TI1.h"}\par
{\f2 #include "TimerIntLdd1.h"}\par
{\f2 #include "TU1.h"}\par
{\f2 #include "RTC1.h"}\par
{\f2 #include "WAIT1.h"}\par
{\f2 #include "SM1.h"}\par
{\f2 #include "LT.h"}\par
{\f2 #include "BitIoLdd7.h"}\par
{\f2 #include "WAIT2.h"}\par
{\f2 #include "Timer.h"}\par
{\f2 #include "RealTimeLdd1.h"}\par
{\f2 #include "TU3.h"}\par
{\f2 #include "EE241.h"}\par
{\f2 #include "GI2C1.h"}\par
{\f2 #include "CI2C1.h"}\par
{\f2 #include "Timer_Buzzer.h"}\par
{\f2 #include "RealTimeLdd2.h"}\par
{\f2 #include "TU4.h"}\par
{\f2 #include "PIR.h"}\par
{\f2 #include "ExtIntLdd4.h"}\par
{\f2 #include "Buzzer.h"}\par
{\f2 #include "BitIoLdd8.h"}\par
{\f2 #include "CS1.h"}\par
{\f2 #include "TU6.h"}\par
{\f2 #include "PIR2.h"}\par
{\f2 #include "BitIoLdd9.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b PE_FillMemory} (register void *SourceAddressPtr, register uint8_t c, register uint32_t len)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Fills a memory area block by a specified value. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b PE_PeripheralUsed} (uint32_t PrphBaseAddress)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Returns information whether a peripheral is allocated by PEx or not. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b LDD_SetClockConfiguration} ({\b LDD_TClockConfiguration} ClockConfiguration)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Changes the clock configuration of all LDD components in a project. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {\tc\tcl \v 4}\par}
THIS COMPONENT MODULE IS GENERATED BY THE TOOL. DO NOT MODIFY IT. Filename : {\b PE_LDD.h} Project : ProjetoFinal Processor : MKL25Z128VLK4 Version : Component 01.025, Driver 01.04, CPU db: 3.00.000 Compiler : GNU C Compiler Date/Time : 2019-11-27, 08:14, # CodeGen: 0 Abstract :\par
Settings :\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid Copyright : 1997 - 2014 Freescale Semiconductor, Inc. \par
All Rights Reserved.\par
\par
Redistribution and use in source and binary forms, with or without modification,\par
are permitted provided that the following conditions are met:\par
\par
o Redistributions of source code must retain the above copyright notice, this list\par
  of conditions and the following disclaimer.\par
\par
o Redistributions in binary form must reproduce the above copyright notice, this\par
  list of conditions and the following disclaimer in the documentation and/or\par
  other materials provided with the distribution.\par
\par
o Neither the name of Freescale Semiconductor, Inc. nor the names of its\par
  contributors may be used to endorse or promote products derived from this\par
  software without specific prior written permission.\par
\par
THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND\par
ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\par
WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\par
DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR\par
ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\par
(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\par
LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON\par
ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\par
(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\par
SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\par
\par
http: www.freescale.com\par
mail: support@freescale.com\par
}
 {\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {\tc\tcl \v 4}\par}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Version:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid 01.04 \par
}}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/PE_Types.h File Reference\par \pard\plain 
{\tc\tcl2 \v C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/PE_Types.h}
{\xe \v C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/PE_Types.h}
{\bkmkstart AAAAAAAAHS}
{\bkmkend AAAAAAAAHS}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b PE_Types.h} - contains definitions of basic types, register access macros and hardware specific macros which can be used in user application. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <stdint.h>}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Structures\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b LDD_TimeDate_TTimeRec}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b LDD_TimeDate_TDateRec}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b LDD_SERIAL_TStats}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b LDD_ADC_TPinMask}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b LDD_ADC_TSample}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b LDD_I2C_TStats}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b LDD_ETH_TBufferDesc}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b LDD_ETH_TStats}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b LDD_CAN_TStats}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b LDD_CAN_TFrame}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b LDD_USB_TSDP_Struct}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b LDD_USB_TEpDescriptor_Struct}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b LDD_USB_TDevDescriptor_Struct}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b LDD_USB_Device_TTD_Head_Struct}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b LDD_USB_Device_TTD_Struct}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b LDD_USB_Host_TPipeDescr_Struct}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b LDD_USB_Host_TTD_Struct}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b LDD_USB_TGetDecriptorRequest_Struct}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b LDD_USB_TEndpointStatusRequest_Struct}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b LDD_USB_TEndpointFeatureRequest_Struct}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b LDD_USB_TInterfaceFeatureRequest_Struct}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b LDD_USB_TDeviceFeatureRequest_Struct}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b LDD_USB_TGetInterfaceRequest_Struct}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b LDD_USB_TSetInterfaceRequest_Struct}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b LDD_USB_TSetAddressRequest_Struct}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b LDD_USB_TSetConfigRequest_Struct}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b LDD_FLASH_TErrorStatus}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b LDD_SDHC_TCardAccess}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b LDD_SDHC_TCardErase}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b LDD_SDHC_TCardWriteProtect}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b LDD_SDHC_TCardCaps}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b LDD_SDHC_TCardInfo}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b LDD_SDHC_TBufferDesc}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b LDD_DMA_TError}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b LDD_DMA_TTransferDescriptor}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b LDD_SPIMASTER_TStats}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b LDD_SPISLAVE_TStats}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b LDD_SSI_TDataBlocks}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b LDD_SSI_TAC97Command}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b LDD_SSI_TStats}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b LDD_RTC_TTime}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b LDD_CRC_TUserCRCStandard}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b LDD_LCDC_TBitmap}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b LDD_LCDC_TWindow}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macros\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b FALSE}\~ 0x00u                /* Boolean value FALSE. FALSE is defined always as a zero value. */{\bkmkstart AAAAAAAAHT}
{\bkmkend AAAAAAAAHT}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b TRUE}\~ 0x01u                /* Boolean value TRUE. TRUE is defined always as a non zero value. */{\bkmkstart AAAAAAAAHU}
{\bkmkend AAAAAAAAHU}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b NULL}\~ 0x00u{\bkmkstart AAAAAAAAHV}
{\bkmkend AAAAAAAAHV}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b __EI}()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b __DI}()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b EnterCritical}()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ExitCritical}()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b PE_DEBUGHALT}()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b PE_NOP}()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b PE_WFI}()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b PE_ISR}(ISR_name)\~ void __attribute__ ((interrupt)) ISR_name(void){\bkmkstart AAAAAAAAHW}
{\bkmkend AAAAAAAAHW}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b PE_LDD_VERSION}\~ 0x0100U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b PE_LDD_DRIVER_DISABLED_IN_CLOCK_CONFIGURATION}\~ 0x01U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b PE_LDD_DRIVER_DISABLED_BY_USER}\~ 0x02U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b PE_LDD_DRIVER_BUSY}\~ 0x04U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b PE_LDD_RegisterDeviceStructure}(ComponentIndex, DeviceStructure)\~ ({\b PE_LDD_DeviceDataList}[ComponentIndex] = DeviceStructure)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b PE_LDD_UnregisterDeviceStructure}(ComponentIndex)\~ ({\b PE_LDD_DeviceDataList}[ComponentIndex] = NULL)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b PE_LDD_GetDeviceStructure}(ComponentIndex)\~ ({\b PE_LDD_DeviceDataList}[ComponentIndex])\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b PE_LDD_COMPONENT_ASerialLdd1_ID}\~ 0x00U{\bkmkstart AAAAAAAAHX}
{\bkmkend AAAAAAAAHX}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b PE_LDD_COMPONENT_ASerialLdd2_ID}\~ 0x01U{\bkmkstart AAAAAAAAHY}
{\bkmkend AAAAAAAAHY}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b PE_LDD_COMPONENT_TU1_ID}\~ 0x02U{\bkmkstart AAAAAAAAHZ}
{\bkmkend AAAAAAAAHZ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b PE_LDD_COMPONENT_TimerIntLdd1_ID}\~ 0x03U{\bkmkstart AAAAAAAAIA}
{\bkmkend AAAAAAAAIA}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b PE_LDD_COMPONENT_RTC1_ID}\~ 0x04U{\bkmkstart AAAAAAAAIB}
{\bkmkend AAAAAAAAIB}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b PE_LDD_COMPONENT_SM1_ID}\~ 0x05U{\bkmkstart AAAAAAAAIC}
{\bkmkend AAAAAAAAIC}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b PE_LDD_COMPONENT_BitIoLdd7_ID}\~ 0x06U{\bkmkstart AAAAAAAAID}
{\bkmkend AAAAAAAAID}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b PE_LDD_COMPONENT_TU3_ID}\~ 0x07U{\bkmkstart AAAAAAAAIE}
{\bkmkend AAAAAAAAIE}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b PE_LDD_COMPONENT_RealTimeLdd1_ID}\~ 0x08U{\bkmkstart AAAAAAAAIF}
{\bkmkend AAAAAAAAIF}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b PE_LDD_COMPONENT_CI2C1_ID}\~ 0x09U{\bkmkstart AAAAAAAAIG}
{\bkmkend AAAAAAAAIG}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b PE_LDD_COMPONENT_TU4_ID}\~ 0x0AU{\bkmkstart AAAAAAAAIH}
{\bkmkend AAAAAAAAIH}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b PE_LDD_COMPONENT_RealTimeLdd2_ID}\~ 0x0BU{\bkmkstart AAAAAAAAII}
{\bkmkend AAAAAAAAII}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b PE_LDD_COMPONENT_ExtIntLdd4_ID}\~ 0x0CU{\bkmkstart AAAAAAAAIJ}
{\bkmkend AAAAAAAAIJ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b PE_LDD_COMPONENT_BitIoLdd8_ID}\~ 0x0DU{\bkmkstart AAAAAAAAIK}
{\bkmkend AAAAAAAAIK}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b PE_LDD_COMPONENT_TU6_ID}\~ 0x0EU{\bkmkstart AAAAAAAAIL}
{\bkmkend AAAAAAAAIL}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b PE_LDD_COMPONENT_BitIoLdd9_ID}\~ 0x0FU{\bkmkstart AAAAAAAAIM}
{\bkmkend AAAAAAAAIM}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_TIMERUNIT_ON_CHANNEL_0}\~ 0x01u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_TIMERUNIT_ON_CHANNEL_1}\~ 0x02u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_TIMERUNIT_ON_CHANNEL_2}\~ 0x04u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_TIMERUNIT_ON_CHANNEL_3}\~ 0x08u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_TIMERUNIT_ON_CHANNEL_4}\~ 0x10u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_TIMERUNIT_ON_CHANNEL_5}\~ 0x20u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_TIMERUNIT_ON_CHANNEL_6}\~ 0x40u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_TIMERUNIT_ON_CHANNEL_7}\~ 0x80u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_TIMERUNIT_ON_COUNTER_RESTART}\~ 0x0100u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_CMT_ON_END}\~ 0x01u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_PPG_ON_END}\~ 0x01u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_PWM_ON_END}\~ 0x01u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_CAPTURE_ON_CAPTURE}\~ 0x01u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_CAPTURE_ON_OVERRUN}\~ 0x02u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_TIMERINT_ON_INTERRUPT}\~ 0x01u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_TIMEROUT_ON_INTERRUPT}\~ 0x01u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_EVENTCNTR_ON_END}\~ 0x01u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_FREECNTR_ON_INTERRUPT}\~ 0x01u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_TIMEDATE_ON_ALARM}\~ 0x01u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_TIMEDATE_ON_SECOND}\~ 0x02u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_SERIAL_RX_PIN}\~ 0x01u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_SERIAL_TX_PIN}\~ 0x02u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_SERIAL_CTS_PIN}\~ 0x04u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_SERIAL_RTS_PIN}\~ 0x08u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_SERIAL_ON_BLOCK_RECEIVED}\~ 0x01u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_SERIAL_ON_BLOCK_SENT}\~ 0x02u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_SERIAL_ON_BREAK}\~ 0x04u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_SERIAL_ON_TXCOMPLETE}\~ 0x08u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_SERIAL_ON_ERROR}\~ 0x10u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_SERIAL_RX_OVERRUN}\~ 0x01u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_SERIAL_PARITY_ERROR}\~ 0x02u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_SERIAL_FRAMING_ERROR}\~ 0x04u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_SERIAL_NOISE_ERROR}\~ 0x08u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_ADC_CHANNEL_0_PIN}\~ 0x01u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_ADC_CHANNEL_1_PIN}\~ 0x02u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_ADC_CHANNEL_2_PIN}\~ 0x04u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_ADC_CHANNEL_3_PIN}\~ 0x08u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_ADC_CHANNEL_4_PIN}\~ 0x10u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_ADC_CHANNEL_5_PIN}\~ 0x20u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_ADC_CHANNEL_6_PIN}\~ 0x40u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_ADC_CHANNEL_7_PIN}\~ 0x80u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_ADC_CHANNEL_8_PIN}\~ 0x0100u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_ADC_CHANNEL_9_PIN}\~ 0x0200u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_ADC_CHANNEL_10_PIN}\~ 0x0400u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_ADC_CHANNEL_11_PIN}\~ 0x0800u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_ADC_CHANNEL_12_PIN}\~ 0x1000u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_ADC_CHANNEL_13_PIN}\~ 0x2000u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_ADC_CHANNEL_14_PIN}\~ 0x4000u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_ADC_CHANNEL_15_PIN}\~ 0x8000u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_ADC_CHANNEL_16_PIN}\~ 0x00010000u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_ADC_CHANNEL_17_PIN}\~ 0x00020000u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_ADC_CHANNEL_18_PIN}\~ 0x00040000u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_ADC_CHANNEL_19_PIN}\~ 0x00080000u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_ADC_CHANNEL_20_PIN}\~ 0x00100000u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_ADC_CHANNEL_21_PIN}\~ 0x00200000u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_ADC_CHANNEL_22_PIN}\~ 0x00400000u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_ADC_CHANNEL_23_PIN}\~ 0x00800000u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_ADC_CHANNEL_24_PIN}\~ 0x01000000u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_ADC_CHANNEL_25_PIN}\~ 0x02000000u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_ADC_CHANNEL_26_PIN}\~ 0x04000000u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_ADC_CHANNEL_27_PIN}\~ 0x08000000u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_ADC_CHANNEL_28_PIN}\~ 0x10000000u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_ADC_CHANNEL_29_PIN}\~ 0x20000000u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_ADC_CHANNEL_30_PIN}\~ 0x40000000u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_ADC_CHANNEL_31_PIN}\~ 0x80000000u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_ADC_CHANNEL_32_PIN}\~ 0x01u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_ADC_CHANNEL_33_PIN}\~ 0x02u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_ADC_CHANNEL_34_PIN}\~ 0x04u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_ADC_CHANNEL_35_PIN}\~ 0x08u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_ADC_CHANNEL_36_PIN}\~ 0x10u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_ADC_CHANNEL_37_PIN}\~ 0x20u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_ADC_CHANNEL_38_PIN}\~ 0x40u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_ADC_CHANNEL_39_PIN}\~ 0x80u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_ADC_CHANNEL_40_PIN}\~ 0x0100u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_ADC_CHANNEL_41_PIN}\~ 0x0200u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_ADC_CHANNEL_42_PIN}\~ 0x0400u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_ADC_CHANNEL_43_PIN}\~ 0x0800u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_ADC_CHANNEL_44_PIN}\~ 0x1000u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_ADC_CHANNEL_45_PIN}\~ 0x2000u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_ADC_CHANNEL_46_PIN}\~ 0x4000u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_ADC_CHANNEL_47_PIN}\~ 0x8000u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_ADC_CHANNEL_48_PIN}\~ 0x00010000u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_ADC_CHANNEL_49_PIN}\~ 0x00020000u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_ADC_CHANNEL_50_PIN}\~ 0x00040000u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_ADC_CHANNEL_51_PIN}\~ 0x00080000u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_ADC_CHANNEL_52_PIN}\~ 0x00100000u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_ADC_CHANNEL_53_PIN}\~ 0x00200000u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_ADC_CHANNEL_54_PIN}\~ 0x00400000u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_ADC_CHANNEL_55_PIN}\~ 0x00800000u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_ADC_CHANNEL_56_PIN}\~ 0x01000000u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_ADC_CHANNEL_57_PIN}\~ 0x02000000u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_ADC_CHANNEL_58_PIN}\~ 0x04000000u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_ADC_CHANNEL_59_PIN}\~ 0x08000000u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_ADC_CHANNEL_60_PIN}\~ 0x10000000u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_ADC_CHANNEL_61_PIN}\~ 0x20000000u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_ADC_CHANNEL_62_PIN}\~ 0x40000000u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_ADC_CHANNEL_63_PIN}\~ 0x80000000u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_ADC_TRIGGER_0_PIN}\~ 0x01u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_ADC_TRIGGER_1_PIN}\~ 0x02u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_ADC_LOW_VOLT_REF_PIN}\~ 0x01u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_ADC_HIGH_VOLT_REF_PIN}\~ 0x02u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_ADC_ON_MEASUREMENT_COMPLETE}\~ 0x40u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_ADC_ON_ERROR}\~ 0x80u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_ADC_DMA_ERROR}\~ 0x01u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_I2C_SDA_PIN}\~ 0x01u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_I2C_SCL_PIN}\~ 0x02u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_I2C_ON_MASTER_BLOCK_SENT}\~ 0x0001u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_I2C_ON_MASTER_BLOCK_RECEIVED}\~ 0x0002u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_I2C_ON_SLAVE_BLOCK_SENT}\~ 0x0004u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_I2C_ON_SLAVE_BLOCK_RECEIVED}\~ 0x0008u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_I2C_ON_SLAVE_TX_REQUEST}\~ 0x0010u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_I2C_ON_SLAVE_RX_REQUEST}\~ 0x0020u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_I2C_ON_ERROR}\~ 0x0040u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_I2C_ON_SLAVE_SM_BUS_CALL_ADDR}\~ 0x0080u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_I2C_ON_SLAVE_SM_BUS_ALERT_RESPONSE}\~ 0x0100u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_I2C_ON_SLAVE_GENERAL_CALL_ADDR}\~ 0x0200u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_I2C_ON_MASTER_BYTE_RECEIVED}\~ 0x0400u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_I2C_ON_SLAVE_BYTE_RECEIVED}\~ 0x0800u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_I2C_ON_BUS_START_DETECTED}\~ 0x1000u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_I2C_ON_BUS_STOP_DETECTED}\~ 0x2000u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_I2C_SLAVE_TX_UNDERRUN}\~ 0x0001u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_I2C_SLAVE_RX_OVERRUN}\~ 0x0002u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_I2C_ARBIT_LOST}\~ 0x0004u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_I2C_MASTER_NACK}\~ 0x0008u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_I2C_SCL_LOW_TIMEOUT}\~ 0x0010u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_I2C_SDA_LOW_TIMEOUT}\~ 0x0020u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_I2C_SLAVE_NACK}\~ 0x0040u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_SEGLCD_ON_FRAME_FREQUENCY}\~ 0x0001u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_SEGLCD_ON_FAULT_DETECT_COMPLETE}\~ 0x0002u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_GPIO_PIN_0}\~ 0x01u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_GPIO_PIN_1}\~ 0x02u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_GPIO_PIN_2}\~ 0x04u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_GPIO_PIN_3}\~ 0x08u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_GPIO_PIN_4}\~ 0x10u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_GPIO_PIN_5}\~ 0x20u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_GPIO_PIN_6}\~ 0x40u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_GPIO_PIN_7}\~ 0x80u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_GPIO_PIN_8}\~ 0x0100u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_GPIO_PIN_9}\~ 0x0200u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_GPIO_PIN_10}\~ 0x0400u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_GPIO_PIN_11}\~ 0x0800u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_GPIO_PIN_12}\~ 0x1000u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_GPIO_PIN_13}\~ 0x2000u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_GPIO_PIN_14}\~ 0x4000u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_GPIO_PIN_15}\~ 0x8000u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_GPIO_PIN_16}\~ 0x00010000u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_GPIO_PIN_17}\~ 0x00020000u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_GPIO_PIN_18}\~ 0x00040000u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_GPIO_PIN_19}\~ 0x00080000u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_GPIO_PIN_20}\~ 0x00100000u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_GPIO_PIN_21}\~ 0x00200000u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_GPIO_PIN_22}\~ 0x00400000u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_GPIO_PIN_23}\~ 0x00800000u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_GPIO_PIN_24}\~ 0x01000000u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_GPIO_PIN_25}\~ 0x02000000u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_GPIO_PIN_26}\~ 0x04000000u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_GPIO_PIN_27}\~ 0x08000000u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_GPIO_PIN_28}\~ 0x10000000u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_GPIO_PIN_29}\~ 0x20000000u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_GPIO_PIN_30}\~ 0x40000000u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_GPIO_PIN_31}\~ 0x80000000u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_GPIO_ON_PORT_EVENT}\~ 0x01u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b LDD_GPIO_EVENT_CONDITIONS_MASK}\~ 0x000F0000u{\bkmkstart AAAAAAAAIN}
{\bkmkend AAAAAAAAIN}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_BITSIO_PIN_0}\~ 0x01U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_BITSIO_PIN_1}\~ 0x02U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_BITSIO_PIN_2}\~ 0x04U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_BITSIO_PIN_3}\~ 0x08U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_BITSIO_PIN_4}\~ 0x10U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_BITSIO_PIN_5}\~ 0x20U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_BITSIO_PIN_6}\~ 0x40U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_BITSIO_PIN_7}\~ 0x80U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_BITSIO_PIN_8}\~ 0x0100U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_BITSIO_PIN_9}\~ 0x0200U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_BITSIO_PIN_10}\~ 0x0400U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_BITSIO_PIN_11}\~ 0x0800U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_BITSIO_PIN_12}\~ 0x1000U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_BITSIO_PIN_13}\~ 0x2000U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_BITSIO_PIN_14}\~ 0x4000U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_BITSIO_PIN_15}\~ 0x8000U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_BITSIO_PIN_16}\~ 0x00010000U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_BITSIO_PIN_17}\~ 0x00020000U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_BITSIO_PIN_18}\~ 0x00040000U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_BITSIO_PIN_19}\~ 0x00080000U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_BITSIO_PIN_20}\~ 0x00100000U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_BITSIO_PIN_21}\~ 0x00200000U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_BITSIO_PIN_22}\~ 0x00400000U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_BITSIO_PIN_23}\~ 0x00800000U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_BITSIO_PIN_24}\~ 0x01000000U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_BITSIO_PIN_25}\~ 0x02000000U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_BITSIO_PIN_26}\~ 0x04000000U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_BITSIO_PIN_27}\~ 0x08000000U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_BITSIO_PIN_28}\~ 0x10000000U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_BITSIO_PIN_29}\~ 0x20000000U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_BITSIO_PIN_30}\~ 0x40000000U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_BITSIO_PIN_31}\~ 0x80000000U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_ETH_MDC_PIN}\~ 0x01u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_ETH_MDIO_PIN}\~ 0x02u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_ETH_COL_PIN}\~ 0x04u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_ETH_CRS_PIN}\~ 0x08u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_ETH_TXCLK_PIN}\~ 0x10u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_ETH_TXD0_PIN}\~ 0x20u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_ETH_TXD1_PIN}\~ 0x40u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_ETH_TXD2_PIN}\~ 0x80u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_ETH_TXD3_PIN}\~ 0x0100u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_ETH_TXEN_PIN}\~ 0x0200u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_ETH_TXER_PIN}\~ 0x0400u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_ETH_RXCLK_PIN}\~ 0x0800u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_ETH_RXDV_PIN}\~ 0x1000u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_ETH_RXD0_PIN}\~ 0x2000u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_ETH_RXD1_PIN}\~ 0x4000u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_ETH_RXD2_PIN}\~ 0x8000u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_ETH_RXD3_PIN}\~ 0x00010000u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_ETH_RXER_PIN}\~ 0x00020000u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_ETH_ON_FRAME_TRANSMITTED}\~ 0x01u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_ETH_ON_FRAME_TRANSMITTED_TIMESTAMPED}\~ 0x02u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_ETH_ON_FRAME_RECEIVED}\~ 0x04u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_ETH_ON_FRAME_RECEIVED_TIMESTAMPED}\~ 0x08u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_ETH_ON_MII_FINISHED}\~ 0x10u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_ETH_ON_FATAL_ERROR}\~ 0x20u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_ETH_ON_WAKE_UP}\~ 0x40u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_CAN_RX_PIN}\~ 0x01U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_CAN_TX_PIN}\~ 0x02U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_CAN_ON_FULL_RXBUFFER}\~ 0x01U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_CAN_ON_FREE_TXBUFFER}\~ 0x02U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_CAN_ON_BUSOFF}\~ 0x04U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_CAN_ON_TXWARNING}\~ 0x08U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_CAN_ON_RXWARNING}\~ 0x10U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_CAN_ON_ERROR}\~ 0x20U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_CAN_ON_WAKEUP}\~ 0x40U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_CAN_BIT0_ERROR}\~ 0x4000UL\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_CAN_BIT1_ERROR}\~ 0x8000UL\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_CAN_ACK_ERROR}\~ 0x2000UL\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_CAN_CRC_ERROR}\~ 0x1000UL\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_CAN_FORM_ERROR}\~ 0x0800UL\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_CAN_STUFFING_ERROR}\~ 0x0400UL\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_CAN_MESSAGE_ID_EXT}\~ 0x80000000UL\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_USB_ON_DEVICE_RESET}\~ 0x00000001u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_USB_ON_DEVICE_SPEED_DETECT}\~ 0x00000002u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_USB_ON_DEVICE_SUSPEND}\~ 0x00000004u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_USB_ON_DEVICE_RESUME}\~ 0x00000008u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_USB_ON_DEVICE_SETUP_PACKET}\~ 0x00000010u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_USB_ON_DEVICE_SOF}\~ 0x00000020u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_USB_ON_DEVICE_1MS_TIMER}\~ 0x00000040u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_USB_ON_DEVICE_1_MS_TIMER}\~ 0x00000040u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_USB_ON_DEVICE_ERROR}\~ 0x00000080u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_USB_ON_HOST_DEVICE_DEATTACH}\~ 0x00000100u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_USB_ON_HOST_RESET_RECOVERY}\~ 0x00000200u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_USB_ON_HOST_RESUME_RECOVERY}\~ 0x00000400u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_USB_ON_HOST_1MS_TIMER}\~ 0x00000800u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_USB_ON_HOST_1_MS_TIMER}\~ 0x00000800u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_USB_ON_HOST_ERROR}\~ 0x00001000u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_USB_ON_OTG_DEVICE}\~ 0x00002000u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_USB_ON_OTG_HOST}\~ 0x00004000u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_USB_ON_OTG_STATE_CHANGE}\~ 0x00008000u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_USB_ON_SIGNAL_CHANGE}\~ 0x00010000u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_USB_DP_PIN}\~ 0x00000001u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_USB_DM_PIN}\~ 0x00000002u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_USB_DP_PU_PIN}\~ 0x00000004u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_USB_DM_PU_PIN}\~ 0x00000008u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_USB_DP_PD_PIN}\~ 0x00000010u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_USB_DM_PD_PIN}\~ 0x00000020u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_USB_DEVICE_VBUS_DETECT_PIN}\~ 0x00000040u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_USB_HOST_VBUS_ENABLE_PIN}\~ 0x00000080u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_USB_HOST_VBUS_OVERCURRENT_PIN}\~ 0x00000100u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_USB_OTG_ID_PIN}\~ 0x00000200u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_USB_OTG_VBUS_VALID_PIN}\~ 0x00000400u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_USB_OTG_SESSION_VALID_PIN}\~ 0x00000800u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_USB_OTG_B_SESSION_END_PIN}\~ 0x00004000u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_USB_OTG_VBUS_ENABLE_PIN}\~ 0x00008000u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_USB_OTG_VBUS_CHARGE_PIN}\~ 0x00010000u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_USB_OTG_VBUS_DISCHARGE_PIN}\~ 0x00020000u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_USB_ULPI_CLK_PIN}\~ 0x00080000u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_USB_ULPI_DIR_PIN}\~ 0x00100000u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_USB_ULPI_NXT_PIN}\~ 0x00200000u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_USB_ULPI_STP_PIN}\~ 0x00400000u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_USB_ULPI_DATA_0_PIN}\~ 0x00800000u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_USB_ULPI_DATA_1_PIN}\~ 0x01000000u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_USB_ULPI_DATA_2_PIN}\~ 0x02000000u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_USB_ULPI_DATA_3_PIN}\~ 0x04000000u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_USB_ULPI_DATA_4_PIN}\~ 0x08000000u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_USB_ULPI_DATA_5_PIN}\~ 0x10000000u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_USB_ULPI_DATA_6_PIN}\~ 0x20000000u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_USB_ULPI_DATA_7_PIN}\~ 0x40000000u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_USB_CLKIN_PIN}\~ 0x80000000u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_USB_ALT_CLK_PIN}\~ 0x80000000u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_USB_CMD_GET_EP_STATUS}\~ 0x00u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_USB_CMD_SET_EP_HALT_FATURE}\~ 0x01u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_USB_CMD_CLR_EP_HALT_FATURE}\~ 0x02u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_USB_CMD_EP_STATUS_HALT_MASK}\~ 0x01u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_USB_ID_EP0_OUT}\~ 0x00u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_USB_ID_EP0_IN}\~ 0x80u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_USB_ID_EP1_OUT}\~ 0x01u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_USB_ID_EP1_IN}\~ 0x81u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_USB_ID_EP2_OUT}\~ 0x02u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_USB_ID_EP2_IN}\~ 0x82u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_USB_ID_EP3_OUT}\~ 0x03u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_USB_ID_EP3_IN}\~ 0x83u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_USB_ID_EP4_OUT}\~ 0x04u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_USB_ID_EP4_IN}\~ 0x84u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_USB_ID_EP5_OUT}\~ 0x05u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_USB_ID_EP5_IN}\~ 0x85u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_USB_ID_EP6_OUT}\~ 0x06u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_USB_ID_EP6_IN}\~ 0x86u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_USB_ID_EP7_OUT}\~ 0x07u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_USB_ID_EP7_IN}\~ 0x87u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_USB_ID_EP8_OUT}\~ 0x08u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_USB_ID_EP8_IN}\~ 0x88u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_USB_ID_EP9_OUT}\~ 0x09u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_USB_ID_EP9_IN}\~ 0x89u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_USB_ID_EP10_OUT}\~ 0x0Au\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_USB_ID_EP10_IN}\~ 0x8Au\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_USB_ID_EP11_OUT}\~ 0x0Bu\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_USB_ID_EP11_IN}\~ 0x8Bu\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_USB_ID_EP12_OUT}\~ 0x0Cu\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_USB_ID_EP12_IN}\~ 0x8Cu\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_USB_ID_EP13_OUT}\~ 0x0Du\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_USB_ID_EP13_IN}\~ 0x8Du\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_USB_ID_EP14_OUT}\~ 0x0Eu\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_USB_ID_EP14_IN}\~ 0x8Eu\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_USB_ID_EP15_OUT}\~ 0x0Fu\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_USB_ID_EP15_IN}\~ 0x8Fu\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_USB_ID_EP_MASK}\~ 0x8Fu\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_USB_PID_OUT}\~ 0x01u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_USB_PID_IN}\~ 0x09u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_USB_PID_SOF}\~ 0x05u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_USB_PID_SETUP}\~ 0x0Du\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_USB_PID_DATA0}\~ 0x03u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_USB_PID_DATA1}\~ 0x0Bu\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_USB_PID_DATA2}\~ 0x07u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_USB_PID_MDATA}\~ 0x0Fu\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_USB_PID_ACK}\~ 0x02u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_USB_PID_NACK}\~ 0x0Au\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_USB_PID_STALL}\~ 0x0Eu\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_USB_PID_NYET}\~ 0x06u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_USB_PID_PRE}\~ 0x0Cu\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_USB_PID_ERR}\~ 0x0Cu\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_USB_PID_SPLIT}\~ 0x08u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_USB_PID_PING}\~ 0x04u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_USB_DIR_OUT}\~ 0x00u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_USB_DIR_IN}\~ 0x80u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_USB_DIR_MASK}\~ 0x80u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b LDD_USB_DEVICE_TRANSFER_FLAG_ZLT}\~ 0x01u{\bkmkstart AAAAAAAAIO}
{\bkmkend AAAAAAAAIO}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b LDD_USB_DEVICE_TRANSFER_FLAG_EXT_PARAM}\~ 0x02u{\bkmkstart AAAAAAAAIP}
{\bkmkend AAAAAAAAIP}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b ERR_COMPONET_SPECIFIC}\~ 0x100u{\bkmkstart AAAAAAAAIQ}
{\bkmkend AAAAAAAAIQ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ERR_USB_DEVICE_DISABLED}\~ (ERR_COMPONET_SPECIFIC + 0x00u)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ERR_USB_DEVICE_DISABLED_BY_OTG}\~ (ERR_COMPONET_SPECIFIC + 0x01u)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ERR_USB_DEVICE_VBUS_OFF}\~ (ERR_COMPONET_SPECIFIC + 0x02u)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ERR_USB_DEVICE_VBUS_ON}\~ (ERR_COMPONET_SPECIFIC + 0x03u)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ERR_USB_DEVICE_ENABLED}\~ (ERR_COMPONET_SPECIFIC + 0x04u)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ERR_USB_DEVICE_SUSPENDED}\~ (ERR_COMPONET_SPECIFIC + 0x05u)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ERR_USB_DEVICE_SUSPENDED_RESUME_READY}\~ (ERR_COMPONET_SPECIFIC + 0x06u)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ERR_USB_DEVICE_RESUME_PENDING}\~ (ERR_COMPONET_SPECIFIC + 0x07u)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ERR_USB_HOST_DISABLED}\~ (ERR_COMPONET_SPECIFIC + 0x00u)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ERR_USB_HOST_DISABLED_BY_OTG}\~ (ERR_COMPONET_SPECIFIC + 0x01u)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ERR_USB_HOST_PORT_POWERED_OFF}\~ (ERR_COMPONET_SPECIFIC + 0x02u)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ERR_USB_HOST_PORT_DISCONNECTED}\~ (ERR_COMPONET_SPECIFIC + 0x03u)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ERR_USB_HOST_PORT_DISABLED}\~ (ERR_COMPONET_SPECIFIC + 0x04u)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ERR_USB_HOST_PORT_RESETING}\~ (ERR_COMPONET_SPECIFIC + 0x05u)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ERR_USB_HOST_PORT_RESET_RECOVERING}\~ (ERR_COMPONET_SPECIFIC + 0x06u)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ERR_USB_HOST_PORT_ENABLED}\~ (ERR_COMPONET_SPECIFIC + 0x07u)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ERR_USB_HOST_PORT_SUSPENDED}\~ (ERR_COMPONET_SPECIFIC + 0x08u)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ERR_USB_HOST_PORT_RESUME_READY}\~ (ERR_COMPONET_SPECIFIC + 0x09u)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ERR_USB_HOST_PORT_RESUMING}\~ (ERR_COMPONET_SPECIFIC + 0x0Au)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ERR_USB_HOST_PORT_RESUME_RECOVERING}\~ (ERR_COMPONET_SPECIFIC + 0x0Bu)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ERR_USB_OTG_DISABLED}\~ (ERR_COMPONET_SPECIFIC + 0x00u)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ERR_USB_OTG_ENABLED_PENDING}\~ (ERR_COMPONET_SPECIFIC + 0x01u)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ERR_USB_OTG_A_IDLE}\~ (ERR_COMPONET_SPECIFIC + 0x02u)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ERR_USB_OTG_A_WAIT_VRISE}\~ (ERR_COMPONET_SPECIFIC + 0x03u)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ERR_USB_OTG_A_WAIT_VFALL}\~ (ERR_COMPONET_SPECIFIC + 0x05u)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ERR_USB_OTG_A_WAIT_BCON}\~ (ERR_COMPONET_SPECIFIC + 0x07u)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ERR_USB_OTG_A_VBUS_ERROR}\~ (ERR_COMPONET_SPECIFIC + 0x09u)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ERR_USB_OTG_A_SUSPEND}\~ (ERR_COMPONET_SPECIFIC + 0x0Au)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ERR_USB_OTG_B_IDLE}\~ (ERR_COMPONET_SPECIFIC + 0x0Cu)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ERR_USB_OTG_B_SRP_INIT}\~ (ERR_COMPONET_SPECIFIC + 0x0Eu)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ERR_USB_OTG_B_WAIT_ACON}\~ (ERR_COMPONET_SPECIFIC + 0x0Fu)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ERR_USB_OTG_A_HOST}\~ (ERR_COMPONET_SPECIFIC + 0x10u)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ERR_USB_OTG_A_PERIPHERAL}\~ (ERR_COMPONET_SPECIFIC + 0x11u)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ERR_USB_OTG_B_HOST}\~ (ERR_COMPONET_SPECIFIC + 0x12u)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ERR_USB_OTG_B_PERIPHERAL}\~ (ERR_COMPONET_SPECIFIC + 0x13u)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_USB_REQ_TYPE_STANDARD}\~ 0x00u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_USB_REQ_TYPE_CLASS}\~ 0x20u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_USB_REQ_TYPE_VENDOR}\~ 0x40u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_USB_REQ_TYPE_MASK}\~ 0x60u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_USB_REQ_RECP_DEVICE}\~ 0x00u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_USB_REQ_RECP_INTERFACE}\~ 0x01u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_USB_REQ_RECP_ENDPOINT}\~ 0x02u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_USB_REQ_RECP_OTHER}\~ 0x03u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_USB_REQ_RECP_MASK}\~ 0x03u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_USB_REQ_GET_STATUS}\~ 0x00u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_USB_REQ_CLEAR_FEATURE}\~ 0x01u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_USB_REQ_SET_FEATURE}\~ 0x03u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_USB_REQ_GET_STATE}\~ 0x04u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_USB_REQ_SET_ADDRESS}\~ 0x05u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_USB_REQ_GET_DESCRIPTOR}\~ 0x06u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_USB_REQ_SET_DESCRIPTOR}\~ 0x07u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_USB_REQ_GET_CONFIGURATION}\~ 0x08u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_USB_REQ_SET_CONFIGURATION}\~ 0x09u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_USB_REQ_GET_INTERFACE}\~ 0x0Au\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_USB_REQ_SET_INTERFACE}\~ 0x0Bu\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_USB_REQ_SYNCH_FRAME}\~ 0x0Cu\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_USB_STD_REQ_GET_DEV_STATUS}\~ 0x0080u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_USB_STD_REQ_CLR_DEV_FEATURE}\~ 0x0100u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_USB_STD_REQ_SET_DEV_FEATURE}\~ 0x0300u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_USB_STD_REQ_SET_ADDRESS}\~ 0x0500u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_USB_STD_REQ_GET_DESCRIPTOR}\~ 0x0680u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_USB_STD_REQ_SET_DESCRIPTOR}\~ 0x0700u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_USB_STD_REQ_GET_CONFIGURATION}\~ 0x0880u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_USB_STD_REQ_SET_CONFIGURATION}\~ 0x0900u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_USB_STD_REQ_GET_INT_STATUS}\~ 0x0081u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_USB_STD_REQ_CLR_INT_FEATURE}\~ 0x0101u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_USB_STD_REQ_SET_INT_FEATURE}\~ 0x0301u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_USB_STD_REQ_GET_INTERFACE}\~ 0x0A81u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_USB_STD_REQ_SET_INTERFACE}\~ 0x0B01u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_USB_STD_REQ_GET_EP_STATUS}\~ 0x0082u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_USB_STD_REQ_CLR_EP_FEATURE}\~ 0x0102u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_USB_STD_REQ_SET_EP_FEATURE}\~ 0x0302u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_USB_STD_REQ_SYNCH_FRAME}\~ 0x0C12u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b LDD_USB_STATUS_DEVICE_SELF_POWERED_MASK}\~ 0x01u{\bkmkstart AAAAAAAAIR}
{\bkmkend AAAAAAAAIR}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b LDD_USB_STATUS_DEVICE_REMOTE_WAKEUP_MASK}\~ 0x02u{\bkmkstart AAAAAAAAIS}
{\bkmkend AAAAAAAAIS}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_USB_DT_DEVICE}\~ 0x01u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_USB_DT_CONFIGURATION}\~ 0x02u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_USB_DT_STRING}\~ 0x03u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_USB_DT_INTERFACE}\~ 0x04u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_USB_DT_ENDPOINT}\~ 0x05u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_USB_DT_DEVICE_QUALIFIER}\~ 0x06u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_USB_DT_OTHER_SPEED_CONFIGURATION}\~ 0x07u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_USB_DT_INTERFACE_POWER}\~ 0x08u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_USB_DT_OTG}\~ 0x09u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_USB_DT_DEBUG}\~ 0x0Au\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_USB_DT_INTERFACE_ASSOCIATION}\~ 0x0Bu\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_USB_FEATURE_EP_HALT}\~ 0x00u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_USB_FEATURE_DEV_REMOTE_WAKEUP}\~ 0x01u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_USB_FEATURE_DEV_TEST_MODE}\~ 0x02u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_DAC_OUTPUT_PIN_0}\~ 0x01u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_DAC_ON_BUFFER_END}\~ 0x01U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_DAC_ON_BUFFER_START}\~ 0x02U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_DAC_ON_BUFFER_WATERMARK}\~ 0x04U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_DAC_ON_COMPLETE}\~ {\b LDD_DMA_ON_COMPLETE}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_DAC_ON_ERROR}\~ {\b LDD_DMA_ON_ERROR}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_DAC_DMA_ERROR}\~ 0x01u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_FLASH_ON_OPERATION_COMPLETE}\~ 0x02u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_FLASH_ON_ERROR}\~ 0x04u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_FLASH_READ_COLLISION_ERROR}\~ 0x40u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_FLASH_ACCESS_ERROR}\~ 0x20u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_FLASH_PROTECTION_VIOLATION}\~ 0x10u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_FLASH_ERASE_VERIFICATION_ERROR}\~ 0x08u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_FLASH_MULTIPLE_WRITE_ERROR}\~ 0x04u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_ANALOGCOMP_ON_COMPARE}\~ 0x01u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_ANALOGCOMP_POSITIVE_INPUT_0_MASK}\~ 0x01U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_ANALOGCOMP_POSITIVE_INPUT_1_MASK}\~ 0x02U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_ANALOGCOMP_POSITIVE_INPUT_2_MASK}\~ 0x04U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_ANALOGCOMP_POSITIVE_INPUT_3_MASK}\~ 0x08U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_ANALOGCOMP_POSITIVE_INPUT_4_MASK}\~ 0x10U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_ANALOGCOMP_POSITIVE_INPUT_5_MASK}\~ 0x20U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_ANALOGCOMP_POSITIVE_INPUT_6_MASK}\~ 0x40U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_ANALOGCOMP_POSITIVE_INPUT_7_MASK}\~ 0x80U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_ANALOGCOMP_NEGATIVE_INPUT_0_MASK}\~ 0x0100U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_ANALOGCOMP_NEGATIVE_INPUT_1_MASK}\~ 0x0200U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_ANALOGCOMP_NEGATIVE_INPUT_2_MASK}\~ 0x0400U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_ANALOGCOMP_NEGATIVE_INPUT_3_MASK}\~ 0x0800U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_ANALOGCOMP_NEGATIVE_INPUT_4_MASK}\~ 0x1000U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_ANALOGCOMP_NEGATIVE_INPUT_5_MASK}\~ 0x2000U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_ANALOGCOMP_NEGATIVE_INPUT_6_MASK}\~ 0x4000U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_ANALOGCOMP_NEGATIVE_INPUT_7_MASK}\~ 0x8000U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_ANALOGCOMP_OUTPUT_PIN_MASK}\~ 0x00010000U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b LDD_ANALOGCOMP_WINDOWSAMPLE_PIN_MASK}\~ 0x00020000UL{\bkmkstart AAAAAAAAIT}
{\bkmkend AAAAAAAAIT}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_SDHC_CARD_DATA_WIDTH_1_BIT}\~ 0x01u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_SDHC_CARD_DATA_WIDTH_4_BIT}\~ 0x02u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_SDHC_CARD_DATA_WIDTH_8_BIT}\~ 0x04u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_SDHC_CARD_BLOCK_READ}\~ 0x01u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_SDHC_CARD_BLOCK_WRITE}\~ 0x04u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_SDHC_CARD_ERASE}\~ 0x08u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_SDHC_CARD_WRITE_PROTECTION}\~ 0x10u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_SDHC_CARD_IO}\~ 0x80u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_SDHC_CLK_PIN}\~ 0x01u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_SDHC_CMD_PIN}\~ 0x02u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_SDHC_DAT0_PIN}\~ 0x04u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_SDHC_DAT1_PIN}\~ 0x08u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_SDHC_DAT2_PIN}\~ 0x10u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_SDHC_DAT3_PIN}\~ 0x20u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_SDHC_DAT4_PIN}\~ 0x40u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_SDHC_DAT5_PIN}\~ 0x80u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_SDHC_DAT6_PIN}\~ 0x0100u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_SDHC_DAT7_PIN}\~ 0x0200u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_SDHC_CD_PIN}\~ 0x0400u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_SDHC_WP_PIN}\~ 0x0800u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_SDHC_LCTL_PIN}\~ 0x1000u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_SDHC_VS_PIN}\~ 0x2000u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_SDHC_ON_CARD_INSERTED}\~ 0x01u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_SDHC_ON_CARD_REMOVED}\~ 0x02u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_SDHC_ON_FINISHED}\~ 0x04u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_DMA_ON_COMPLETE}\~ 0x01U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_DMA_ON_ERROR}\~ 0x02U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_DMA_CONFIGURATION_ERROR}\~ 0x40000000U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_DMA_SOURCE_BUS_ERROR}\~ 0x20000000U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_DMA_DESTINATION_BUS_ERROR}\~ 0x10000000U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_DMA_CHANNEL_PRIORITY_ERROR}\~ 0x4000U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_DMA_SOURCE_ADDRESS_ERROR}\~ 0x80U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_DMA_SOURCE_OFFSET_ERROR}\~ 0x40U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_DMA_DESTINATION_ADDRESS_ERROR}\~ 0x20U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_DMA_DESTINATION_OFFSET_ERROR}\~ 0x10U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_DMA_COUNT_ERROR}\~ 0x08U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_DMA_SCATTER_GATHER_ERROR}\~ 0x04U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_DMA_CHANNEL_0_MASK}\~ 0x01U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_DMA_CHANNEL_1_MASK}\~ 0x02U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_DMA_CHANNEL_2_MASK}\~ 0x04U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_DMA_CHANNEL_3_MASK}\~ 0x08U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_DMA_CHANNEL_4_MASK}\~ 0x10U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_DMA_CHANNEL_5_MASK}\~ 0x20U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_DMA_CHANNEL_6_MASK}\~ 0x40U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_DMA_CHANNEL_7_MASK}\~ 0x80U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_DMA_CHANNEL_8_MASK}\~ 0x0100U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_DMA_CHANNEL_9_MASK}\~ 0x0200U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_DMA_CHANNEL_10_MASK}\~ 0x0400U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_DMA_CHANNEL_11_MASK}\~ 0x0800U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_DMA_CHANNEL_12_MASK}\~ 0x1000U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_DMA_CHANNEL_13_MASK}\~ 0x2000U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_DMA_CHANNEL_14_MASK}\~ 0x4000U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_DMA_CHANNEL_15_MASK}\~ 0x8000U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_DMA_NO_ACTION}\~ 0x00U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_DMA_DESTINATION_ADDRESS_ADJUSTMENT}\~ 0x01U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_DMA_SOURCE_ADDRESS_ADJUSTMENT}\~ 0x02U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_DMA_ADDRESS_ADJUSTMENT}\~ 0x01U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_DMA_SCATTER_GATHER}\~ 0x02U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_SPIMASTER_INPUT_PIN}\~ 0x01U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_SPIMASTER_OUTPUT_PIN}\~ 0x02U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_SPIMASTER_CLK_PIN}\~ 0x04U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_SPIMASTER_CS_0_PIN}\~ 0x08U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_SPIMASTER_CS_1_PIN}\~ 0x10U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_SPIMASTER_CS_2_PIN}\~ 0x20U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_SPIMASTER_CS_3_PIN}\~ 0x40U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_SPIMASTER_CS_4_PIN}\~ 0x80U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_SPIMASTER_CS_5_PIN}\~ 0x0100U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_SPIMASTER_CS_6_PIN}\~ 0x0200U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_SPIMASTER_CS_7_PIN}\~ 0x0400U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_SPIMASTER_CSS_PIN}\~ 0x0800U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_SPIMASTER_ON_BLOCK_RECEIVED}\~ 0x01U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_SPIMASTER_ON_BLOCK_SENT}\~ 0x02U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_SPIMASTER_ON_ERROR}\~ 0x04U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_SPIMASTER_RX_OVERFLOW}\~ 0x01U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_SPIMASTER_PARITY_ERROR}\~ 0x02U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_SPIMASTER_RX_DMA_ERROR}\~ 0x04U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_SPIMASTER_TX_DMA_ERROR}\~ 0x08U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_SPISLAVE_INPUT_PIN}\~ 0x01U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_SPISLAVE_OUTPUT_PIN}\~ 0x02U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_SPISLAVE_CLK_PIN}\~ 0x04U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_SPISLAVE_SS_PIN}\~ 0x08U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_SPISLAVE_ON_BLOCK_RECEIVED}\~ 0x01U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_SPISLAVE_ON_BLOCK_SENT}\~ 0x02U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_SPISLAVE_ON_ERROR}\~ 0x04U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_SPISLAVE_RX_OVERFLOW}\~ 0x01U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_SPISLAVE_TX_UNDERFLOW}\~ 0x02U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_SPISLAVE_PARITY_ERROR}\~ 0x04U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_SPISLAVE_RX_DMA_ERROR}\~ 0x08U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_SPISLAVE_TX_DMA_ERROR}\~ 0x10U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_SSI_INPUT_PIN}\~ 0x01U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_SSI_OUTPUT_PIN}\~ 0x02U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_SSI_RX_CLK_PIN}\~ 0x04U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_SSI_TX_CLK_PIN}\~ 0x08U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_SSI_RX_FS_PIN}\~ 0x10U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_SSI_TX_FS_PIN}\~ 0x20U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_SSI_MCLK_PIN}\~ 0x40U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_SSI_INPUT_PIN_CHANNEL_0}\~ 0x80U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_SSI_INPUT_PIN_CHANNEL_1}\~ 0x0100U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_SSI_OUTPUT_PIN_CHANNEL_0}\~ 0x0200U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_SSI_OUTPUT_PIN_CHANNEL_1}\~ 0x0400U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_SSI_ON_BLOCK_RECEIVED}\~ 0x01u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_SSI_ON_BLOCK_SENT}\~ 0x02u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_SSI_ON_ERROR}\~ 0x04u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_SSI_ON_BLOCK_RECEIVED_1}\~ 0x08u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_SSI_ON_BLOCK_SENT_1}\~ 0x10u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_SSI_ON_RECEIVE_FRAME_SYNC}\~ 0x20u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_SSI_ON_TRANSMIT_FRAME_SYNC}\~ 0x40u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_SSI_ON_RECEIVE_LAST_SLOT}\~ 0x80u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_SSI_ON_TRANSMIT_LAST_SLOT}\~ 0x0100u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_SSI_ON_RECEIVE_COMPLETE}\~ 0x0200u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_SSI_ON_TRANSMIT_COMPLETE}\~ 0x0400u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_SSI_ON_A_C_9_7_TAG_UPDATED}\~ 0x0800u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_SSI_ON_AC_97_TAG_UPDATED}\~ 0x0800u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_SSI_ON_A_C_9_7_COMMAND_ADDRESS_UPDATED}\~ 0x1000u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_SSI_ON_AC_97_COMMAND_ADDRESS_UPDATED}\~ 0x1000u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_SSI_ON_A_C_9_7_COMMAND_DATA_UPDATED}\~ 0x2000u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_SSI_ON_AC_97_COMMAND_DATA_UPDATED}\~ 0x2000u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_SSI_RECEIVER}\~ (I2S_CR_RE_MASK)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_SSI_TRANSMITTER}\~ (I2S_CR_TE_MASK)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_SSI_RX_OVERFLOW}\~ (I2S_ISR_ROE0_MASK)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_SSI_RX_OVERFLOW_1}\~ (I2S_ISR_ROE1_MASK)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_SSI_TX_UNDERFLOW}\~ (I2S_ISR_TUE0_MASK)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_SSI_TX_UNDERFLOW_1}\~ (I2S_ISR_TUE1_MASK)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_SSI_RX_FRAME_COMPLETE}\~ (I2S_ISR_RFRC_MASK)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_SSI_TX_FRAME_COMPLETE}\~ (I2S_ISR_TFRC_MASK)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_SSI_RX_FRAME_SYNC}\~ (I2S_ISR_RFS_MASK)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_SSI_TX_FRAME_SYNC}\~ (I2S_ISR_TFS_MASK)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_SSI_RX_LAST_SLOT}\~ (I2S_ISR_RLS_MASK)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_SSI_TX_LAST_SLOT}\~ (I2S_ISR_TLS_MASK)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_SSI_AC97_TAG}\~ (I2S_ISR_RXT_MASK)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_SSI_AC97_COMMAND_ADDRESS}\~ (I2S_ISR_CMDAU_MASK)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_SSI_AC97_COMMAND_DATA}\~ (I2S_ISR_CMDDU_MASK)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_RTC_ON_SECOND}\~ 0x10u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_RTC_ON_MONOTONIC_OVERFLOW}\~ 0x08u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_RTC_ON_ALARM}\~ 0x04u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_RTC_ON_TIME_OVERFLOW}\~ 0x02u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_RTC_ON_TIME_INVALID}\~ 0x01u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_RTC_ON_STOPWATCH}\~ 0x0100u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_CRC_16_SEED_LOW}\~ 0x00U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_CRC_16_POLY_LOW}\~ 0x8005U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_CRC_32_SEED_LOW}\~ 0xFFFFU\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_CRC_32_SEED_HIGH}\~ 0xFFFFU\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_CRC_32_POLY_LOW}\~ 0x1DB7U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_CRC_32_POLY_HIGH}\~ 0x04C1U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_CRC_CCITT_SEED_LOW}\~ 0xFFFFU\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_CRC_CCITT_POLY_LOW}\~ 0x1021U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_CRC_MODBUS_16_SEED_LOW}\~ 0xFFFFU\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_CRC_MODBUS_16_POLY_LOW}\~ 0x8005U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_CRC_KERMIT_SEED_LOW}\~ 0x00U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_CRC_KERMIT_POLY_LOW}\~ 0x1021U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_CRC_DNP_SEED_LOW}\~ 0x00U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_CRC_DNP_POLY_LOW}\~ 0x3D65U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_RNG_LFSR_ERROR}\~ 0x01U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_RNG_OSCILLATOR_ERROR}\~ 0x02U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_RNG_SELF_TEST_ERROR}\~ 0x04U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_RNG_STATISTICAL_ERROR}\~ 0x08U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_RNG_FIFO_UNDERFLOW_ERROR}\~ 0x10U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_RNG_SELF_TETS_RESEED_ERROR}\~ 0x00200000U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_RNG_SELF_TEST_PRNG_ERROR}\~ 0x00400000U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_RNG_SELF_TEST_TRNG_ERROR}\~ 0x00800000U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_RNG_MONOBIT_TEST_ERROR}\~ 0x01000000U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_RNG_LENGTH_1_RUN_TEST_ERROR}\~ 0x02000000U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_RNG_LENGTH_2_RUN_TEST_ERROR}\~ 0x04000000U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_RNG_LENGTH_3_RUN_TEST_ERROR}\~ 0x08000000U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_RNG_LENGTH_4_RUN_TEST_ERROR}\~ 0x10000000U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_RNG_LENGTH_5_RUN_TEST_ERROR}\~ 0x20000000U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_RNG_LENGTH_6_RUN_TEST_ERROR}\~ 0x40000000U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_RNG_LONG_RUN_TEST_ERROR}\~ 0x80000000U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_RNG_ON_SEED_GENERATION_DONE}\~ 0x01U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_RNG_ON_SELF_TEST_DONE}\~ 0x02U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_RNG_ON_ERROR_LFSR}\~ 0x04U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_RNG_ON_OSC_ERROR}\~ 0x08U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_RNG_ON_SELF_TEST_ERROR}\~ 0x10U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_RNG_ON_STATISTICAL_ERROR}\~ 0x20U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_RNG_ON_FIFO_UNDER_FLOW_ERROR}\~ 0x40U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_RNG_ON_FIFOUNDER_FLOW_ERROR}\~ 0x40U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_RNG_STATUS_ERROR}\~ 0xFFFFU\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_RNG_STATUS_NEW_SEED_DONE}\~ 0x40U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_RNG_STATUS_SEED_DONE}\~ 0x20U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_RNG_STATUS_SELF_TEST_DONE}\~ 0x10U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_RNG_STATUS_RESEED_NEEDED}\~ 0x08U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_RNG_STATUS_SLEEP}\~ 0x04U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_RNG_STATUS_BUSY}\~ 0x02U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_RNG_ON_ERROR}\~ 0x01U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_RNG_STATUS_SECURITY_VIOLATION}\~ 0x01U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_RNG_STATUS_LAST_READ_UNDERFLOW}\~ 0x02U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_RNG_STATUS_OUT_REG_UNDERFLOW}\~ 0x04U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_RNG_STATUS_ERR_INT_PENDING}\~ 0x08U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_RNG_STATUS_SLEEP_MODE}\~ 0x10U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_DRY_ON_TAMPER_DETECTED}\~ 0x01U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_DRY_TIME_OVERFLOW}\~ 0x04U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_DRY_MONOTONIC_OVERFLOW}\~ 0x08U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_DRY_VOLTAGE_TAMPER}\~ 0x10U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_DRY_CLOCK_TAMPER}\~ 0x20U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_DRY_TEMPERATURE_TAMPER}\~ 0x40U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_DRY_SECURITY_TAMPER}\~ 0x80U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_DRY_FLASH_SECURITY}\~ 0x0100U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_DRY_TEST_MODE}\~ 0x0200U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_DRY_TAMPER_PIN_0}\~ 0x00010000U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_DRY_TAMPER_PIN_1}\~ 0x00020000U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_DRY_TAMPER_PIN_2}\~ 0x00040000U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_DRY_TAMPER_PIN_3}\~ 0x00080000U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_DRY_TAMPER_PIN_4}\~ 0x00100000U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_DRY_TAMPER_PIN_5}\~ 0x00200000U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_DRY_TAMPER_PIN_6}\~ 0x00400000U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_DRY_TAMPER_PIN_7}\~ 0x00800000U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_DRY_SECURE_KEY_WORD_0}\~ 0x01U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_DRY_SECURE_KEY_WORD_1}\~ 0x02U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_DRY_SECURE_KEY_WORD_2}\~ 0x04U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_DRY_SECURE_KEY_WORD_3}\~ 0x08U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_DRY_SECURE_KEY_WORD_4}\~ 0x10U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_DRY_SECURE_KEY_WORD_5}\~ 0x20U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_DRY_SECURE_KEY_WORD_6}\~ 0x40U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_DRY_SECURE_KEY_WORD_7}\~ 0x80U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_NFC_ON_CMD_ERROR}\~ 0x01U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_NFC_ON_CMD_DONE}\~ 0x02U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_NFC_CE0_PIN}\~ 0x01U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_NFC_RB0_PIN}\~ 0x02U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_NFC_CE1_PIN}\~ 0x04U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_NFC_RB1_PIN}\~ 0x08U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_NFC_CE2_PIN}\~ 0x10U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_NFC_RB2_PIN}\~ 0x20U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_NFC_CE3_PIN}\~ 0x40U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_NFC_RB3_PIN}\~ 0x80U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_NFC_ALE_PIN}\~ 0x0100U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_NFC_CLE_PIN}\~ 0x0200U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_NFC_RE_PIN}\~ 0x0400U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_NFC_WE_PIN}\~ 0x0800U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_NFC_D0_PIN}\~ 0x00010000U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_NFC_D1_PIN}\~ 0x00020000U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_NFC_D2_PIN}\~ 0x00040000U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_NFC_D3_PIN}\~ 0x00080000U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_NFC_D4_PIN}\~ 0x00100000U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_NFC_D5_PIN}\~ 0x00200000U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_NFC_D6_PIN}\~ 0x00400000U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_NFC_D7_PIN}\~ 0x00800000U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_NFC_D8_PIN}\~ 0x01000000U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_NFC_D9_PIN}\~ 0x02000000U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_NFC_D10_PIN}\~ 0x04000000U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_NFC_D11_PIN}\~ 0x08000000U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_NFC_D12_PIN}\~ 0x10000000U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_NFC_D13_PIN}\~ 0x20000000U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_NFC_D14_PIN}\~ 0x40000000U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_NFC_D15_PIN}\~ 0x80000000U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_LCDC_ON_ERROR}\~ 0x01U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_LCDC_ON_START_OF_FRAME}\~ 0x02U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_LCDC_ON_END_OF_FRAME}\~ 0x04U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_LCDC_NO_ERR}\~ 0x00U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_LCDC_PLANE_0_UNDERRUN_ERR}\~ 0x01U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_LCDC_PLANE_1_UNDERRUN_ERR}\~ 0x02U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LDD_LCDC_REVERSED_VERTICAL_SCAN}\~ 0x8000U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b LDD_ivIndex_INT_Initial_Stack_Pointer}\~ 0x00u{\bkmkstart AAAAAAAAIU}
{\bkmkend AAAAAAAAIU}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b LDD_ivIndex_INT_Initial_Program_Counter}\~ 0x01u{\bkmkstart AAAAAAAAIV}
{\bkmkend AAAAAAAAIV}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b LDD_ivIndex_INT_NMI}\~ 0x02u{\bkmkstart AAAAAAAAIW}
{\bkmkend AAAAAAAAIW}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b LDD_ivIndex_INT_Hard_Fault}\~ 0x03u{\bkmkstart AAAAAAAAIX}
{\bkmkend AAAAAAAAIX}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b LDD_ivIndex_INT_Reserved4}\~ 0x04u{\bkmkstart AAAAAAAAIY}
{\bkmkend AAAAAAAAIY}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b LDD_ivIndex_INT_Reserved5}\~ 0x05u{\bkmkstart AAAAAAAAIZ}
{\bkmkend AAAAAAAAIZ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b LDD_ivIndex_INT_Reserved6}\~ 0x06u{\bkmkstart AAAAAAAAJA}
{\bkmkend AAAAAAAAJA}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b LDD_ivIndex_INT_Reserved7}\~ 0x07u{\bkmkstart AAAAAAAAJB}
{\bkmkend AAAAAAAAJB}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b LDD_ivIndex_INT_Reserved8}\~ 0x08u{\bkmkstart AAAAAAAAJC}
{\bkmkend AAAAAAAAJC}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b LDD_ivIndex_INT_Reserved9}\~ 0x09u{\bkmkstart AAAAAAAAJD}
{\bkmkend AAAAAAAAJD}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b LDD_ivIndex_INT_Reserved10}\~ 0x0Au{\bkmkstart AAAAAAAAJE}
{\bkmkend AAAAAAAAJE}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b LDD_ivIndex_INT_SVCall}\~ 0x0Bu{\bkmkstart AAAAAAAAJF}
{\bkmkend AAAAAAAAJF}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b LDD_ivIndex_INT_Reserved12}\~ 0x0Cu{\bkmkstart AAAAAAAAJG}
{\bkmkend AAAAAAAAJG}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b LDD_ivIndex_INT_Reserved13}\~ 0x0Du{\bkmkstart AAAAAAAAJH}
{\bkmkend AAAAAAAAJH}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b LDD_ivIndex_INT_PendableSrvReq}\~ 0x0Eu{\bkmkstart AAAAAAAAJI}
{\bkmkend AAAAAAAAJI}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b LDD_ivIndex_INT_SysTick}\~ 0x0Fu{\bkmkstart AAAAAAAAJJ}
{\bkmkend AAAAAAAAJJ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b LDD_ivIndex_INT_DMA0}\~ 0x10u{\bkmkstart AAAAAAAAJK}
{\bkmkend AAAAAAAAJK}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b LDD_ivIndex_INT_DMA1}\~ 0x11u{\bkmkstart AAAAAAAAJL}
{\bkmkend AAAAAAAAJL}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b LDD_ivIndex_INT_DMA2}\~ 0x12u{\bkmkstart AAAAAAAAJM}
{\bkmkend AAAAAAAAJM}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b LDD_ivIndex_INT_DMA3}\~ 0x13u{\bkmkstart AAAAAAAAJN}
{\bkmkend AAAAAAAAJN}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b LDD_ivIndex_INT_Reserved20}\~ 0x14u{\bkmkstart AAAAAAAAJO}
{\bkmkend AAAAAAAAJO}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b LDD_ivIndex_INT_FTFA}\~ 0x15u{\bkmkstart AAAAAAAAJP}
{\bkmkend AAAAAAAAJP}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b LDD_ivIndex_INT_LVD_LVW}\~ 0x16u{\bkmkstart AAAAAAAAJQ}
{\bkmkend AAAAAAAAJQ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b LDD_ivIndex_INT_LLW}\~ 0x17u{\bkmkstart AAAAAAAAJR}
{\bkmkend AAAAAAAAJR}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b LDD_ivIndex_INT_I2C0}\~ 0x18u{\bkmkstart AAAAAAAAJS}
{\bkmkend AAAAAAAAJS}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b LDD_ivIndex_INT_I2C1}\~ 0x19u{\bkmkstart AAAAAAAAJT}
{\bkmkend AAAAAAAAJT}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b LDD_ivIndex_INT_SPI0}\~ 0x1Au{\bkmkstart AAAAAAAAJU}
{\bkmkend AAAAAAAAJU}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b LDD_ivIndex_INT_SPI1}\~ 0x1Bu{\bkmkstart AAAAAAAAJV}
{\bkmkend AAAAAAAAJV}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b LDD_ivIndex_INT_UART0}\~ 0x1Cu{\bkmkstart AAAAAAAAJW}
{\bkmkend AAAAAAAAJW}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b LDD_ivIndex_INT_UART1}\~ 0x1Du{\bkmkstart AAAAAAAAJX}
{\bkmkend AAAAAAAAJX}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b LDD_ivIndex_INT_UART2}\~ 0x1Eu{\bkmkstart AAAAAAAAJY}
{\bkmkend AAAAAAAAJY}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b LDD_ivIndex_INT_ADC0}\~ 0x1Fu{\bkmkstart AAAAAAAAJZ}
{\bkmkend AAAAAAAAJZ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b LDD_ivIndex_INT_CMP0}\~ 0x20u{\bkmkstart AAAAAAAAKA}
{\bkmkend AAAAAAAAKA}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b LDD_ivIndex_INT_TPM0}\~ 0x21u{\bkmkstart AAAAAAAAKB}
{\bkmkend AAAAAAAAKB}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b LDD_ivIndex_INT_TPM1}\~ 0x22u{\bkmkstart AAAAAAAAKC}
{\bkmkend AAAAAAAAKC}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b LDD_ivIndex_INT_TPM2}\~ 0x23u{\bkmkstart AAAAAAAAKD}
{\bkmkend AAAAAAAAKD}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b LDD_ivIndex_INT_RTC}\~ 0x24u{\bkmkstart AAAAAAAAKE}
{\bkmkend AAAAAAAAKE}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b LDD_ivIndex_INT_RTC_Seconds}\~ 0x25u{\bkmkstart AAAAAAAAKF}
{\bkmkend AAAAAAAAKF}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b LDD_ivIndex_INT_PIT}\~ 0x26u{\bkmkstart AAAAAAAAKG}
{\bkmkend AAAAAAAAKG}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b LDD_ivIndex_INT_Reserved39}\~ 0x27u{\bkmkstart AAAAAAAAKH}
{\bkmkend AAAAAAAAKH}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b LDD_ivIndex_INT_USB0}\~ 0x28u{\bkmkstart AAAAAAAAKI}
{\bkmkend AAAAAAAAKI}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b LDD_ivIndex_INT_DAC0}\~ 0x29u{\bkmkstart AAAAAAAAKJ}
{\bkmkend AAAAAAAAKJ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b LDD_ivIndex_INT_TSI0}\~ 0x2Au{\bkmkstart AAAAAAAAKK}
{\bkmkend AAAAAAAAKK}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b LDD_ivIndex_INT_MCG}\~ 0x2Bu{\bkmkstart AAAAAAAAKL}
{\bkmkend AAAAAAAAKL}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b LDD_ivIndex_INT_LPTimer}\~ 0x2Cu{\bkmkstart AAAAAAAAKM}
{\bkmkend AAAAAAAAKM}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b LDD_ivIndex_INT_Reserved45}\~ 0x2Du{\bkmkstart AAAAAAAAKN}
{\bkmkend AAAAAAAAKN}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b LDD_ivIndex_INT_PORTA}\~ 0x2Eu{\bkmkstart AAAAAAAAKO}
{\bkmkend AAAAAAAAKO}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b LDD_ivIndex_INT_PORTD}\~ 0x2Fu{\bkmkstart AAAAAAAAKP}
{\bkmkend AAAAAAAAKP}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Typedefs\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

typedef unsigned char {\b bool}{\bkmkstart AAAAAAAAKQ}
{\bkmkend AAAAAAAAKQ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

typedef unsigned char {\b byte}{\bkmkstart AAAAAAAAKR}
{\bkmkend AAAAAAAAKR}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

typedef unsigned short {\b word}{\bkmkstart AAAAAAAAKS}
{\bkmkend AAAAAAAAKS}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

typedef unsigned long {\b dword}{\bkmkstart AAAAAAAAKT}
{\bkmkend AAAAAAAAKT}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

typedef unsigned long long {\b dlong}{\bkmkstart AAAAAAAAKU}
{\bkmkend AAAAAAAAKU}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

typedef unsigned char {\b TPE_ErrCode}{\bkmkstart AAAAAAAAKV}
{\bkmkend AAAAAAAAKV}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

typedef float {\b TPE_Float}{\bkmkstart AAAAAAAAKW}
{\bkmkend AAAAAAAAKW}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

typedef char {\b char_t}{\bkmkstart AAAAAAAAKX}
{\bkmkend AAAAAAAAKX}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

typedef signed char {\b int8}{\bkmkstart AAAAAAAAKY}
{\bkmkend AAAAAAAAKY}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

typedef signed short int {\b int16}{\bkmkstart AAAAAAAAKZ}
{\bkmkend AAAAAAAAKZ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

typedef signed long int {\b int32}{\bkmkstart AAAAAAAALA}
{\bkmkend AAAAAAAALA}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

typedef unsigned char {\b uint8}{\bkmkstart AAAAAAAALB}
{\bkmkend AAAAAAAALB}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

typedef unsigned short int {\b uint16}{\bkmkstart AAAAAAAALC}
{\bkmkend AAAAAAAALC}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

typedef unsigned long int {\b uint32}{\bkmkstart AAAAAAAALD}
{\bkmkend AAAAAAAALD}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef uint32_t {\b LDD_TPinMask}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef uint16_t {\b LDD_TError}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef uint32_t {\b LDD_TEventMask}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef uint8_t {\b LDD_TClockConfiguration}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef void {\b LDD_TDeviceData}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef void * {\b LDD_TDeviceDataPtr}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef void {\b LDD_TData}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef void {\b LDD_TUserData}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef uint16_t {\b LDD_TDriverState}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef void {\b LDD_TCallbackParam}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef void(* {\b LDD_TCallback} )({\b LDD_TCallbackParam} *CallbackParam)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef float {\b LDD_TimerUnit_Tfloat}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef float {\b LDD_PPG_Tfloat}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef float {\b LDD_RealTime_Tfloat}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef uint32_t {\b LDD_SERIAL_TError}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef uint8_t {\b LDD_SERIAL_TDataWidth}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef uint16_t {\b LDD_SERIAL_TSize}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef uint8_t {\b LDD_SERIAL_TBaudMode}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef uint32_t {\b LDD_ADC_TErrorMask}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef uint16_t {\b LDD_I2C_TSize}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef uint16_t {\b LDD_I2C_TAddr}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef uint16_t {\b LDD_I2C_TErrorMask}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef bool {\b LDD_I2C_TMode}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef uint8_t {\b LDD_SegLCD_TPinIndex}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef uint8_t {\b LDD_SegLCD_TFrontplaneData}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef uint8_t {\b LDD_SegLCD_TFaultValue}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef uint32_t {\b LDD_GPIO_TBitField}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef uint8_t {\b LDD_ETH_TMACAddress} [6]\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef {\b LDD_ETH_TBufferDesc} * {\b LDD_ETH_TBufferDescPtr}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef uint8_t {\b LDD_CAN_TMBIndex}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef uint32_t {\b LDD_CAN_TAccMask}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef uint32_t {\b LDD_CAN_TMessageID}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef uint8_t {\b LDD_CAN_TErrorCounter}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef uint32_t {\b LDD_CAN_TErrorMask}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef uint16_t {\b LDD_CAN_TBufferMask}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef struct {\b LDD_USB_TSDP_Struct} {\b LDD_USB_TSDP}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef struct \par
{\b LDD_USB_TEpDescriptor_Struct} {\b LDD_USB_TEpDescriptor}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef struct \par
{\b LDD_USB_TDevDescriptor_Struct} {\b LDD_USB_TDevDescriptor}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef void( {\b LDD_USB_Device_TTransferDoneCalback} )({\b LDD_TDeviceData} *DevDataPtr, struct {\b LDD_USB_Device_TTD_Struct} *TrParamPtr)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef struct \par
{\b LDD_USB_Device_TTD_Head_Struct} {\b LDD_USB_Device_TTD_Head}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef struct \par
{\b LDD_USB_Device_TTD_Struct} {\b LDD_USB_Device_TTD}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef void {\b LDD_USB_Host_TPipeHandle}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef void {\b LDD_USB_Host_TTransferHandle}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef struct \par
{\b LDD_USB_Host_TPipeDescr_Struct} {\b LDD_USB_Host_TPipeDescr}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef void( {\b LDD_USB_Host_TTransferDoneCalback} )({\b LDD_TDeviceData} *DevDataPtr, {\b LDD_TData} *BufferPtr, uint16_t BufferSize, uint8_t *ParamPtr, {\b LDD_USB_TTransferState} Status)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef struct \par
{\b LDD_USB_Host_TTD_Struct} {\b LDD_USB_Host_TTD}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef struct \par
{\b LDD_USB_TGetDecriptorRequest_Struct} {\b LDD_USB_TGetDecriptorRequest}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef struct \par
{\b LDD_USB_TEndpointStatusRequest_Struct} {\b LDD_USB_TEndpointStatusRequest}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef struct \par
{\b LDD_USB_TEndpointFeatureRequest_Struct} {\b LDD_USB_TEndpointFeatureRequest}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef struct \par
{\b LDD_USB_TInterfaceFeatureRequest_Struct} {\b LDD_USB_TInterfaceFeatureRequest}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef struct \par
{\b LDD_USB_TDeviceFeatureRequest_Struct} {\b LDD_USB_TDeviceFeatureRequest}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef struct \par
{\b LDD_USB_TGetInterfaceRequest_Struct} {\b LDD_USB_TGetInterfaceRequest}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef struct \par
{\b LDD_USB_TSetInterfaceRequest_Struct} {\b LDD_USB_TSetInterfaceRequest}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef struct \par
{\b LDD_USB_TSetAddressRequest_Struct} {\b LDD_USB_TSetAddressRequest}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef struct \par
{\b LDD_USB_TSetConfigRequest_Struct} {\b LDD_USB_TSetConfigRequest}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef void * {\b LDD_DAC_TDataPtr}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef uint32_t {\b LDD_DAC_TData}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef uint32_t {\b LDD_DAC_TErrorMask}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef uint32_t {\b LDD_DAC_TArrayLength}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef uint8_t {\b LDD_FLASH_TErrorFlags}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef uint32_t {\b LDD_FLASH_TAddress}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef uint32_t {\b LDD_FLASH_TDataSize}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef uint16_t {\b LDD_FLASH_TErasableUnitSize}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef uint8_t {\b LDD_AnalogComp_TOutputValue}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

typedef void {\b LDD_DMA_TData}{\bkmkstart AAAAAAAALE}
{\bkmkend AAAAAAAALE}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

typedef uint8_t {\b LDD_DMA_TTransactionSize}{\bkmkstart AAAAAAAALF}
{\bkmkend AAAAAAAALF}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

typedef uint32_t {\b LDD_DMA_TTransactionCount}{\bkmkstart AAAAAAAALG}
{\bkmkend AAAAAAAALG}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

typedef uint32_t {\b LDD_DMA_TRequestCount}{\bkmkstart AAAAAAAALH}
{\bkmkend AAAAAAAALH}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

typedef uint32_t {\b LDD_DMA_TTransferDataSize}{\bkmkstart AAAAAAAALI}
{\bkmkend AAAAAAAALI}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef uint32_t {\b LDD_DMA_TAddress}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef int32_t {\b LDD_DMA_TAddressOffset}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef uint32_t {\b LDD_DMA_TByteCount}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef uint8_t {\b LDD_DMA_TTransferSize}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef uint8_t {\b LDD_DMA_TModuloSize}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef uint8_t {\b LDD_DMA_TTriggerSource}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef uint8_t {\b LDD_DMA_TChannelNumber}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef uint8_t {\b LDD_DMA_TRecordNumber}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef uint16_t {\b LDD_DMA_TChannelMask}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef uint8_t {\b LDD_DMA_TChannelPriority}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef uint8_t {\b LDD_DMA_TOuterLoopCount}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef uint8_t {\b LDD_DMA_TAfterRequest}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef uint8_t {\b LDD_DMA_TAfterTransfer}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef uint8_t {\b LDD_DMA_TBandwidthControl}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef uint32_t {\b LDD_DMA_TErrorFlags}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef \par
{\b LDD_DMA_TTransferDescriptor} * {\b LDD_DMA_TTransferDescriptorPtr}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef uint32_t {\b LDD_SPIMASTER_TError}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef uint32_t {\b LDD_SPISLAVE_TError}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef uint8_t {\b LDD_SSI_TSectionMask}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef uint32_t {\b LDD_SSI_TError}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef uint32_t {\b LDD_SSI_TComStatus}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef uint32_t {\b LDD_NFC_TTargetID}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Enumerations\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b LDD_TDriverOperationMode} \{ {\b DOM_NONE}, 
{\b DOM_RUN}, 
{\b DOM_WAIT}, 
{\b DOM_SLEEP}, 
{\b DOM_STOP}
 \}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b LDD_TimerUnit_TCounterDirection} \{ {\b DIR_UP}, 
{\b DIR_DOWN}
 \}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b LDD_TimerUnit_TOutAction} \{ {\b OUTPUT_NONE}, 
{\b OUTPUT_TOGGLE}, 
{\b OUTPUT_CLEAR}, 
{\b OUTPUT_SET}
 \}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b LDD_TimerUnit_TEdge} \{ {\b EDGE_NONE}, 
{\b EDGE_RISING}, 
{\b EDGE_FALLING}, 
{\b EDGE_BOTH}
 \}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b LDD_SERIAL_TParity} \{ {\b LDD_SERIAL_PARITY_UNDEF}, 
{\b LDD_SERIAL_PARITY_NONE}, 
{\b LDD_SERIAL_PARITY_ODD}, 
{\b LDD_SERIAL_PARITY_EVEN}, 
{\b LDD_SERIAL_PARITY_MARK}, 
{\b LDD_SERIAL_PARITY_SPACE}
 \}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b LDD_SERIAL_TStopBitLen} \{ {\b LDD_SERIAL_STOP_BIT_LEN_UNDEF}, 
{\b LDD_SERIAL_STOP_BIT_LEN_1}, 
{\b LDD_SERIAL_STOP_BIT_LEN_1_5}, 
{\b LDD_SERIAL_STOP_BIT_LEN_2}
 \}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b LDD_SERIAL_TLoopMode} \{ {\b LOOPMODE_UNDEF}, 
{\b LOOPMODE_NORMAL}, 
{\b LOOPMODE_AUTO_ECHO}, 
{\b LOOPMODE_LOCAL_LOOPBACK}, 
{\b LOOPMODE_REMOTE_LOOPBACK}
 \}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b LDD_ADC_TCompareMode} \{ {\b LDD_ADC_LESS_THAN} = 0x00u, 
{\b LDD_ADC_GREATER_THAN_OR_EQUAL} = 0x01u, 
{\b LDD_ADC_INSIDE_RANGE_INCLUSIVE} = 0x02u, 
{\b LDD_ADC_INSIDE_RANGE_NOT_INCLUSIVE} = 0x03u, 
{\b LDD_ADC_OUTSIDE_RANGE_INCLUSIVE} = 0x04u, 
{\b LDD_ADC_OUTSIDE_RANGE_NOT_INCLUSIVE} = 0x05u
 \}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b LDD_I2C_TAddrType} \{ {\b LDD_I2C_ADDRTYPE_7BITS}, 
{\b LDD_I2C_ADDRTYPE_10BITS}, 
{\b LDD_I2C_ADDRTYPE_GENERAL_CALL}
 \}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b LDD_I2C_TSendStop} \{ {\b LDD_I2C_NO_SEND_STOP}, 
{\b LDD_I2C_SEND_STOP}
 \}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b LDD_I2C_TBusState} \{ {\b LDD_I2C_BUSY}, 
{\b LDD_I2C_IDLE}
 \}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b LDD_I2C_TAckType} \{ {\b LDD_I2C_ACK_BYTE}, 
{\b LDD_I2C_NACK_BYTE}
 \}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b LDD_SegLCD_TBlinking} \{ {\b LDD_SEGLCD_BLINK_OFF}, 
{\b LDD_SEGLCD_BLINK_ALL}, 
{\b LDD_SEGLCD_BLINK_ALL_ALTERNATE}
 \}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b LDD_SegLCD_TSetBlank} \{ {\b LDD_SEGLCD_BLANK_STATE}, 
{\b LDD_SEGLCD_NORMAL_STATE}, 
{\b LDD_SEGLCD_ALTERNATE_STATE}
 \}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b LDD_SegLCD_TPinType} \{ {\b LDD_SEGLCD_BACKPLANE_PIN}, 
{\b LDD_SEGLCD_FRONTPLANE_PIN}
 \}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b LDD_GPIO_TEventCondition} \{ {\b LDD_GPIO_DISABLED} = 0x00u, 
{\b LDD_GPIO_LOW} = 0x00080000u, 
{\b LDD_GPIO_HIGH} = 0x000C0000u, 
{\b LDD_GPIO_RISING} = 0x00090000u, 
{\b LDD_GPIO_FALLING} = 0x000A0000u, 
{\b LDD_GPIO_BOTH} = 0x000B0000u
 \}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b LDD_ETH_TDuplexMode} \{ {\b LDD_ETH_FULL_DUPLEX}, 
{\b LDD_ETH_HALF_DUPLEX}
 \}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b LDD_ETH_TFilterMode} \{ {\b LDD_ETH_PROMISC}, 
{\b LDD_ETH_REJECT_BC}, 
{\b LDD_ETH_ACCEPT_BC}
 \}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b LDD_ETH_TSleepMode} \{ {\b LDD_ETH_ENABLED}, 
{\b LDD_ETH_ENABLED_WITH_WAKEUP}, 
{\b LDD_ETH_DISABLED}
 \}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b LDD_CAN_TRxBufferState} \{ {\b LDD_CAN_MB_RX_NOT_ACTIVE} = 0x00U, 
{\b LDD_CAN_MB_RX_FULL} = 0x02U, 
{\b LDD_CAN_MB_RX_EMPTY} = 0x04U, 
{\b LDD_CAN_MB_RX_OVERRUN} = 0x06U, 
{\b LDD_CAN_MB_RX_BUSY} = 0x01U, 
{\b LDD_CAN_MB_RX_RANSWER} = 0x0AU
 \}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b LDD_CAN_TFrameType} \{ {\b LDD_CAN_DATA_FRAME}, 
{\b LDD_CAN_REMOTE_FRAME}, 
{\b LDD_CAN_RESPONSE_FRAME}
 \}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b LDD_USB_TBusSpeed} \{ {\b LDD_USB_LOW_SPEED} = 0x00u, 
{\b LDD_USB_FULL_SPEED} = 0x01u, 
{\b LDD_USB_HIGH_SPEED} = 0x02u, 
{\b LDD_USB_SPEED_UNKNOWN} = 0xFFu
 \}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b LDD_USB_TTransferType} \{ {\b LDD_USB_CONTROL} = 0x00u, 
{\b LDD_USB_ISOCHRONOUS} = 0x01u, 
{\b LDD_USB_BULK} = 0x02u, 
{\b LDD_USB_INTERRUPT} = 0x03u
 \}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b LDD_USB_TTransferState} \{ {\b LDD_USB_TRANSFER_NONE} = 0x00u, 
{\b LDD_USB_TRANSFER_DONE} = 0x01u, 
{\b LDD_USB_TRANSFER_ERROR_CANCELLED} = 0x02u, 
{\b LDD_USB_TRANSFER_ERROR_STALLED} = 0x03u, 
{\b LDD_USB_TRANSFER_ERROR_BUS_TIMEOUT} = 0x04u, 
{\b LDD_USB_TRANSFER_ERROR_DATA} = 0x05u, 
{\b LDD_USB_TRANSFER_ERROR_PID} = 0x06u, 
{\b LDD_USB_TRANSFER_ERROR_EOF} = 0x07u, 
{\b LDD_USB_TRANSFER_ERROR_CRC16} = 0x08u, 
{\b LDD_USB_TRANSFER_ERROR_DFN8} = 0x09u, 
{\b LDD_USB_TRANSFER_ERROR_DMA} = 0x0Au, 
{\b LDD_USB_TRANSFER_ERROR_BTS} = 0x0Bu, 
{\b LDD_USB_TRANSFER_ERROR} = 0x0Fu, 
{\b LDD_USB_TRANSFER_QUEUED} = 0x10u, 
{\b LDD_USB_TRANSFER_PENDING} = 0x30u
 \}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b LDD_USB_Device_TState} \{ {\b LDD_USB_DEVICE_DISABLED} = ERR_USB_DEVICE_DISABLED, 
{\b LDD_USB_DEVICE_DISABLED_BY_OTG} = ERR_USB_DEVICE_DISABLED_BY_OTG, 
{\b LDD_USB_DEVICE_VBUS_OFF} = ERR_USB_DEVICE_VBUS_OFF, 
{\b LDD_USB_DEVICE_VBUS_ON} = ERR_USB_DEVICE_VBUS_ON, 
{\b LDD_USB_DEVICE_ENABLED} = ERR_USB_DEVICE_ENABLED, 
{\b LDD_USB_DEVICE_SUSPENDED} = ERR_USB_DEVICE_SUSPENDED, 
{\b LDD_USB_DEVICE_SUSPENDED_RESUME_READY} = ERR_USB_DEVICE_SUSPENDED_RESUME_READY, 
{\b LDD_USB_DEVICE_RESUME_PENDING} = ERR_USB_DEVICE_RESUME_PENDING
 \}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b LDD_USB_Host_TState} \{ {\b LDD_USB_HOST_DISABLED} = ERR_USB_HOST_DISABLED, 
{\b LDD_USB_HOST_DISABLED_BY_OTG} = ERR_USB_HOST_DISABLED_BY_OTG, 
{\b LDD_USB_HOST_PORT_POWERED_OFF} = ERR_USB_HOST_PORT_POWERED_OFF, 
{\b LDD_USB_HOST_PORT_DISCONNECTED} = ERR_USB_HOST_PORT_DISCONNECTED, 
{\b LDD_USB_HOST_PORT_DISABLED} = ERR_USB_HOST_PORT_DISABLED, 
{\b LDD_USB_HOST_PORT_RESETING} = ERR_USB_HOST_PORT_RESETING, 
{\b LDD_USB_HOST_PORT_RESET_RECOVERING} = ERR_USB_HOST_PORT_RESET_RECOVERING, 
{\b LDD_USB_HOST_PORT_ENABLED} = ERR_USB_HOST_PORT_ENABLED, 
{\b LDD_USB_HOST_PORT_SUSPENDED} = ERR_USB_HOST_PORT_SUSPENDED, 
{\b LDD_USB_HOST_PORT_RESUME_READY} = ERR_USB_HOST_PORT_RESUME_READY, 
{\b LDD_USB_HOST_PORT_RESUMING} = ERR_USB_HOST_PORT_RESUMING, 
{\b LDD_USB_HOST_PORT_RESUME_RECOVERING} = ERR_USB_HOST_PORT_RESUME_RECOVERING
 \}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b LDD_USB_Otg_TState} \{ {\b LDD_USB_OTG_DISABLED} = ERR_USB_OTG_DISABLED, 
{\b LDD_USB_OTG_ENABLED} = ERR_USB_OTG_ENABLED_PENDING, 
{\b LDD_USB_OTG_A_IDLE} = ERR_USB_OTG_A_IDLE, 
{\b LDD_USB_OTG_A_WAIT_VRISE} = ERR_USB_OTG_A_WAIT_VRISE, 
{\b LDD_USB_OTG_A_WAIT_VFALL} = ERR_USB_OTG_A_WAIT_VFALL, 
{\b LDD_USB_OTG_A_WAIT_BCON} = ERR_USB_OTG_A_WAIT_BCON, 
{\b LDD_USB_OTG_A_VBUS_ERROR} = ERR_USB_OTG_A_VBUS_ERROR, 
{\b LDD_USB_OTG_A_SUSPEND} = ERR_USB_OTG_A_SUSPEND, 
{\b LDD_USB_OTG_B_IDLE} = ERR_USB_OTG_B_IDLE, 
{\b LDD_USB_OTG_B_SRP_INIT} = ERR_USB_OTG_B_SRP_INIT, 
{\b LDD_USB_OTG_B_WAIT_ACON} = ERR_USB_OTG_B_WAIT_ACON, 
{\b LDD_USB_OTG_A_HOST} = ERR_USB_OTG_A_HOST, 
{\b LDD_USB_OTG_A_PERIPHERAL} = ERR_USB_OTG_A_PERIPHERAL, 
{\b LDD_USB_OTG_B_HOST} = ERR_USB_OTG_B_HOST, 
{\b LDD_USB_OTG_B_PERIPHERAL} = ERR_USB_OTG_B_PERIPHERAL
 \}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b LDD_USB_Otg_TCmd} \{ {\b LDD_USB_OTG_CMD_SET_A_BUS_REQUEST}, 
{\b LDD_USB_OTG_CMD_CLR_A_BUS_REQUEST}, 
{\b LDD_USB_OTG_CMD_SET_B_BUS_REQUEST}, 
{\b LDD_USB_OTG_CMD_CLR_B_BUS_REQUEST}, 
{\b LDD_USB_OTG_CMD_SET_A_BUS_DROP}, 
{\b LDD_USB_OTG_CMD_CLR_A_BUS_DROP}, 
{\b LDD_USB_OTG_CMD_SET_A_SUSPEND_REQUEST}, 
{\b LDD_USB_OTG_CMD_CLR_A_SUSPEND_REQUEST}, 
{\b LDD_USB_OTG_CMD_SET_A_SET_B_HNP_EN_REQUEST}, 
{\b LDD_USB_OTG_CMD_CLR_A_SET_B_HNP_EN_REQUEST}, 
{\b LDD_USB_OTG_CMD_SET_B_HNP_EN_REQUEST}, 
{\b LDD_USB_OTG_CMD_CLR_B_HNP_EN_REQUEST}
 \}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b LDD_USB_Host_TPortControlCmd} \{ {\b LDD_USB_HOST_PORT_CMD_POWER_ON}, 
{\b LDD_USB_HOST_PORT_CMD_POWER_OFF}, 
{\b LDD_USB_HOST_PORT_CMD_RESET}, 
{\b LDD_USB_HOST_PORT_CMD_RESUME}, 
{\b LDD_USB_HOST_PORT_CMD_SUSPEND}, 
{\b LDD_USB_HOST_PORT_CMD_DISABLE}
 \}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b LDD_DAC_TBufferMode} \{ {\b LDD_DAC_BUFFER_NORMAL_MODE} = 0x00U, 
{\b LDD_DAC_BUFFER_SWING_MODE} = 0x01U, 
{\b LDD_DAC_BUFFER_SCAN_MODE} = 0x02U
 \}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b LDD_DAC_TBufferWatermark} \{ {\b LDD_DAC_BUFFER_WATERMARK_L1} = 0x00U, 
{\b LDD_DAC_BUFFER_WATERMARK_L2} = 0x01U, 
{\b LDD_DAC_BUFFER_WATERMARK_L3} = 0x02U, 
{\b LDD_DAC_BUFFER_WATERMARK_L4} = 0x03U
 \}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b LDD_FLASH_TCommand} \{ {\b LDD_FLASH_READ_1S_BLOCK} = 0x00u, 
{\b LDD_FLASH_READ_1S_SECTION} = 0x01u, 
{\b LDD_FLASH_WRITE_BYTE} = 0x04u, 
{\b LDD_FLASH_WRITE_WORD} = 0x05u, 
{\b LDD_FLASH_WRITE_LONG_WORD} = 0x06u, 
{\b LDD_FLASH_WRITE_PHRASE} = 0x07u, 
{\b LDD_FLASH_ERASE_FLASH_BLOCK} = 0x08u, 
{\b LDD_FLASH_ERASE_SECTOR} = 0x09u, 
{\b LDD_FLASH_ERASE_ALL_FLASH_BLOCKS} = 0x44u
 \}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b LDD_FLASH_TOperationType} \{ {\b LDD_FLASH_NO_OPERATION}, 
{\b LDD_FLASH_READ}, 
{\b LDD_FLASH_WRITE}, 
{\b LDD_FLASH_ERASE}, 
{\b LDD_FLASH_ERASE_BLOCK}, 
{\b LDD_FLASH_VERIFY_ERASED_BLOCK}
 \}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b LDD_FLASH_TOperationStatus} \{ {\b LDD_FLASH_FAILED} = 0x00u, 
{\b LDD_FLASH_STOP} = 0x01u, 
{\b LDD_FLASH_IDLE} = 0x02u, 
{\b LDD_FLASH_STOP_REQ} = 0x03u, 
{\b LDD_FLASH_START} = 0x04u, 
{\b LDD_FLASH_RUNNING} = 0x05u
 \}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b LDD_AnalogComp_TComparatorInput} \{ {\b LDD_ANALOGCOMP_INPUT_0} = 0x00U, 
{\b LDD_ANALOGCOMP_INPUT_1} = 0x01U, 
{\b LDD_ANALOGCOMP_INPUT_2} = 0x02U, 
{\b LDD_ANALOGCOMP_INPUT_3} = 0x03U, 
{\b LDD_ANALOGCOMP_INPUT_4} = 0x04U, 
{\b LDD_ANALOGCOMP_INPUT_5} = 0x05U, 
{\b LDD_ANALOGCOMP_INPUT_6} = 0x06U, 
{\b LDD_ANALOGCOMP_INPUT_7} = 0x07U, 
{\b LDD_ANALOGCOMP_INPUT_DISABLED} = 0x08U
 \}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b LDD_AnalogComp_TCompareStatus} \{ {\b LDD_ANALOGCOMP_NO_EDGE} = 0x00U, 
{\b LDD_ANALOGCOMP_FALLING_EDGE} = 0x02U, 
{\b LDD_ANALOGCOMP_RISING_EDGE} = 0x04U, 
{\b LDD_ANALOGCOMP_BOTH_EDGES} = 0x06U
 \}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b LDD_AnalogComp_TComparatorMode} \{ {\b LDD_ANALOGCOMP_RISING_EDGE_MODE} = 0x10U, 
{\b LDD_ANALOGCOMP_FALLING_EDGE_MODE} = 0x08U, 
{\b LDD_ANALOGCOMP_BOTH_EDGES_MODE} = 0x18U
 \}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b LDD_SDHC_TCardType} \{ {\b LDD_SDHC_SD}, 
{\b LDD_SDHC_SDIO}, 
{\b LDD_SDHC_SDCOMBO}, 
{\b LDD_SDHC_MMC}, 
{\b LDD_SDHC_CE_ATA}
 \}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b LDD_SDHC_TTransferOperation} \{ {\b LDD_SDHC_READ}, 
{\b LDD_SDHC_WRITE}
 \}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b LDD_SDHC_TVoltage} \{ {\b LDD_SDHC_LOW_VOLTAGE}, 
{\b LDD_SDHC_HIGH_VOLTAGE}
 \}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b LDD_SDHC_TWriteProtectType} \{ {\b LDD_SDHC_GROUP}, 
{\b LDD_SDHC_CARD}
 \}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b LDD_SDHC_TStatus} \{ {\b LDD_SDHC_DISABLED}, 
{\b LDD_SDHC_RESET}, 
{\b LDD_SDHC_IDLE}, 
{\b LDD_SDHC_VOLTAGE_VALIDATION}, 
{\b LDD_SDHC_CARD_REGISTRATION}, 
{\b LDD_SDHC_CARD_SELECTION}, 
{\b LDD_SDHC_CARD_INFO_RETRIEVAL}, 
{\b LDD_SDHC_TRANSFER}, 
{\b LDD_SDHC_ERASION}, 
{\b LDD_SDHC_IO_REG_TRANSFER}, 
{\b LDD_SDHC_DATA_WIDTH_SELECTION}, 
{\b LDD_SDHC_BUS_CLOCK_SELECTION}, 
{\b LDD_SDHC_WRITE_PROTECTION_SETUP}, 
{\b LDD_SDHC_WRITE_PROTECTION_RETRIEVAL}
 \}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b LDD_SDHC_TError} \{ {\b LDD_SDHC_ERR_OK}, 
{\b LDD_SDHC_ERR_DMA}, 
{\b LDD_SDHC_ERR_NOT_SUPPORTED}, 
{\b LDD_SDHC_ERR_TIMEOUT}, 
{\b LDD_SDHC_ERR_COMMAND_CRC}, 
{\b LDD_SDHC_ERR_DATA_CRC}, 
{\b LDD_SDHC_ERR_ADDRESS_OUT_OF_RANGE}, 
{\b LDD_SDHC_ERR_ADDRESS_MISALIGN}, 
{\b LDD_SDHC_ERR_BLOCK_LEN_ERROR}, 
{\b LDD_SDHC_ERR_WP_VIOLATION}, 
{\b LDD_SDHC_ERR_CARD_IS_LOCKED}, 
{\b LDD_SDHC_ERR_WP_ERASE_SKIP}, 
{\b LDD_SDHC_ERR_INTERNAL_FAILURE}, 
{\b LDD_SDHC_ERR_CARD_FAILURE}
 \}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b LDD_DMA_TChannelStatus} \{ {\b LDD_DMA_IDLE}, 
{\b LDD_DMA_BUSY}, 
{\b LDD_DMA_DONE}, 
{\b LDD_DMA_ERROR}
 \}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b LDD_DMA_TTransferState} \{ {\b LDD_DMA_TRANSFER_IDLE}, 
{\b LDD_DMA_TRANSFER_BUSY}, 
{\b LDD_DMA_TRANSFER_ERROR}
 \}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b LDD_DMA_TTransferMode} \{ {\b LDD_DMA_CYCLE_STEAL_TRANSFERS}, 
{\b LDD_DMA_SINGLE_TRANSFER}, 
{\b LDD_DMA_NESTED_TRANSFERS}
 \}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b LDD_DMA_TTriggerType} \{ {\b LDD_DMA_SW_TRIGGER}, 
{\b LDD_DMA_HW_TRIGGER}, 
{\b LDD_DMA_ALWAYS_ENABLED_TRIGGER}
 \}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b LDD_DMA_TChannelLinkingMode} \{ {\b LDD_DMA_LINKING_DISABLED}, 
{\b LDD_DMA_CYCLE_STEAL_AND_TRANSFER_COMPLETE_LINKING}, 
{\b LDD_DMA_CYCLE_STEAL_LINKING}, 
{\b LDD_DMA_TRANSFER_COMPLETE_LINKING}
 \}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b LDD_SSI_TAC97CommandType} \{ {\b LDD_SSI_READ_COMMAND} = 0x08u, 
{\b LDD_SSI_WRITE_COMMAND} = 0x10u
 \}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b LDD_CRC_TTransposeType} \{ {\b LDD_CRC_NO_TRANSPOSE} = 0, 
{\b LDD_CRC_BITS} = 1, 
{\b LDD_CRC_BITS_AND_BYTES} = 2, 
{\b LDD_CRC_BYTES} = 3
 \}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b LDD_CRC_TCRCStandard} \{ {\b LDD_CRC_16}, 
{\b LDD_CRC_CCITT}, 
{\b LDD_CRC_MODBUS_16}, 
{\b LDD_CRC_KERMIT}, 
{\b LDD_CRC_DNP}, 
{\b LDD_CRC_32}, 
{\b LDD_CRC_USER}
 \}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b LDD_RNG_TSleepMode} \{ {\b LDD_RNG_SLEEP_ENABLED}, 
{\b LDD_RNG_SLEEP_DISABLED}
 \}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b LDD_NFC_TeCmd} \{ {\b LDD_NFC_CMD_NONE} = 0x00U, 
{\b LDD_NFC_CMD_RESET} = 0x01U, 
{\b LDD_NFC_CMD_ERASE} = 0x02U, 
{\b LDD_NFC_CMD_READ_ID} = 0x03U, 
{\b LDD_NFC_CMD_READ_PAGES} = 0x04U, 
{\b LDD_NFC_CMD_WRITE_PAGES} = 0x05U, 
{\b LDD_NFC_CMD_ERASE_BLOCKS} = 0x06U, 
{\b LDD_NFC_CMD_READ_RAW_PAGE} = 0x07U, 
{\b LDD_NFC_CMD_WRITE_RAW_PAGE} = 0x08U
 \}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b LDD_LCDC_CursorOperation} \{ {\b LDD_LCDC_DISABLED} = 0, 
{\b LDD_LCDC_ALWAYS_1}, 
{\b LDD_LCDC_ALWAYS_0}, 
{\b LDD_LCDC_COLOR}, 
{\b LDD_LCDC_INVERTED}, 
{\b LDD_LCDC_INVERTED_COLOR}, 
{\b LDD_LCDC_AND}, 
{\b LDD_LCDC_OR}, 
{\b LDD_LCDC_XOR}
 \}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b LDD_LCDC_TPlaneID} \{ {\b LDD_LCDC_PLANE_COMMON}, 
{\b LDD_LCDC_PLANE_0}, 
{\b LDD_LCDC_PLANE_1}
 \}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b PE_FillMemory} (register void *SourceAddressPtr, register uint8_t c, register uint32_t len)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Fills a memory area block by a specified value. }{
}\par
}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LDD_TDeviceData} * {\b PE_LDD_DeviceDataList} []\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b PE_Types.h} - contains definitions of basic types, register access macros and hardware specific macros which can be used in user application. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Version:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid 01.01 \par
}}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/PIR.c File Reference\par \pard\plain 
{\tc\tcl2 \v C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/PIR.c}
{\xe \v C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/PIR.c}
{\bkmkstart AAAAAAAALJ}
{\bkmkend AAAAAAAALJ}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This component "ExtInt" implements an external interrupt, its control methods and interrupt/event handling procedure. The component uses one pin which generates interrupt on selected edge. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "Events.h"}\par
{\f2 #include "PIR.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b ExtIntLdd4_OnInterrupt} ({\b LDD_TUserData} *UserDataPtr){\bkmkstart AAAAAAAALK}
{\bkmkend AAAAAAAALK}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This component "ExtInt" implements an external interrupt, its control methods and interrupt/event handling procedure. The component uses one pin which generates interrupt on selected edge. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Version:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid 01.00 \par
}}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/PIR.h File Reference\par \pard\plain 
{\tc\tcl2 \v C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/PIR.h}
{\xe \v C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/PIR.h}
{\bkmkstart AAAAAAAALL}
{\bkmkend AAAAAAAALL}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This component "ExtInt" implements an external interrupt, its control methods and interrupt/event handling procedure. The component uses one pin which generates interrupt on selected edge. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "PE_Types.h"}\par
{\f2 #include "PE_Error.h"}\par
{\f2 #include "PE_Const.h"}\par
{\f2 #include "IO_Map.h"}\par
{\f2 #include "ExtIntLdd4.h"}\par
{\f2 #include "Cpu.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macros\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b PIR_GetVal}()\~ ({\b ExtIntLdd4_GetVal}({\b ExtIntLdd4_DeviceData})){\bkmkstart AAAAAAAALM}
{\bkmkend AAAAAAAALM}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b PIR_SetEdge}(Edge)\~ ((byte){\b ExtIntLdd4_SetEdge}({\b ExtIntLdd4_DeviceData}, (Edge))){\bkmkstart AAAAAAAALN}
{\bkmkend AAAAAAAALN}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b ExtIntLdd4_OnInterrupt} ({\b LDD_TUserData} *UserDataPtr){\bkmkstart AAAAAAAALK}
{\bkmkend AAAAAAAALK}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This component "ExtInt" implements an external interrupt, its control methods and interrupt/event handling procedure. The component uses one pin which generates interrupt on selected edge. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Version:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid 01.00 \par
}}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/PIR2.c File Reference\par \pard\plain 
{\tc\tcl2 \v C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/PIR2.c}
{\xe \v C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/PIR2.c}
{\bkmkstart AAAAAAAALO}
{\bkmkend AAAAAAAALO}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This component "BitIO" implements an one-bit input/output. It uses one bit/pin of a port. Note: This component is set to work in Input direction only. Methods of this component are mostly implemented as a macros (if supported by target language and compiler). }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "PIR2.h"}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This component "BitIO" implements an one-bit input/output. It uses one bit/pin of a port. Note: This component is set to work in Input direction only. Methods of this component are mostly implemented as a macros (if supported by target language and compiler). \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Version:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid 01.00 \par
}}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/PIR2.h File Reference\par \pard\plain 
{\tc\tcl2 \v C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/PIR2.h}
{\xe \v C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/PIR2.h}
{\bkmkstart AAAAAAAALP}
{\bkmkend AAAAAAAALP}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This component "BitIO" implements an one-bit input/output. It uses one bit/pin of a port. Note: This component is set to work in Input direction only. Methods of this component are mostly implemented as a macros (if supported by target language and compiler). }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "PE_Types.h"}\par
{\f2 #include "PE_Error.h"}\par
{\f2 #include "PE_Const.h"}\par
{\f2 #include "IO_Map.h"}\par
{\f2 #include "BitIoLdd9.h"}\par
{\f2 #include "Cpu.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macros\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b PIR2_GetVal}()\~ ({\b BitIoLdd9_GetVal}({\b BitIoLdd9_DeviceData})){\bkmkstart AAAAAAAALQ}
{\bkmkend AAAAAAAALQ}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This component "BitIO" implements an one-bit input/output. It uses one bit/pin of a port. Note: This component is set to work in Input direction only. Methods of this component are mostly implemented as a macros (if supported by target language and compiler). \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Version:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid 01.00 \par
}}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/RealTimeLdd1.c File Reference\par \pard\plain 
{\tc\tcl2 \v C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/RealTimeLdd1.c}
{\xe \v C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/RealTimeLdd1.c}
{\bkmkstart AAAAAAAALR}
{\bkmkend AAAAAAAALR}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This component "RealTime_LDD" implements a free running counter for time measurement. This RealTime component provides a high level API for unified hardware access to various timer devices using the TimerUnit component. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "RealTimeLdd1.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Structures\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b RealTimeLdd1_TDeviceData}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Typedefs\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

typedef {\b RealTimeLdd1_TDeviceData} * {\b RealTimeLdd1_TDeviceDataPtr}{\bkmkstart AAAAAAAALS}
{\bkmkend AAAAAAAALS}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LDD_TDeviceData} * {\b RealTimeLdd1_Init} ({\b LDD_TUserData} *UserDataPtr)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Initializes the device. Allocates memory for the device data structure, allocates interrupt vectors and sets interrupt priority, sets pin routing, sets timing, etc. If the property ["Enable in init. code"] is set to "yes" value then the device is also enabled (see the description of the [Enable] method). In this case the [Enable] method is not necessary and needn't to be generated. This method can be called only once. Before the second call of Init the [Deinit] must be called first. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LDD_TError} {\b RealTimeLdd1_Reset} ({\b LDD_TDeviceData} *DeviceDataPtr)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This method resets software counter. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LDD_TError} {\b RealTimeLdd1_GetTimeUS} ({\b LDD_TDeviceData} *DeviceDataPtr, uint16_t *TimePtr)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This method returns the time (as a 16-bit unsigned integer) in microseconds since the last Reset method call. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LDD_TError} {\b RealTimeLdd1_GetTimeMS} ({\b LDD_TDeviceData} *DeviceDataPtr, uint16_t *TimePtr)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This method returns the time (as a 16-bit unsigned integer) in milliseconds since the last Reset method call. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LDD_TError} {\b RealTimeLdd1_GetTimeSec} ({\b LDD_TDeviceData} *DeviceDataPtr, uint16_t *TimePtr)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This method returns the time (as a 16-bit unsigned integer) in seconds since the last Reset method call. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b TU3_OnCounterRestart} ({\b LDD_TUserData} *UserDataPtr){\bkmkstart AAAAAAAALT}
{\bkmkend AAAAAAAALT}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This component "RealTime_LDD" implements a free running counter for time measurement. This RealTime component provides a high level API for unified hardware access to various timer devices using the TimerUnit component. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Version:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid 01.01 \par
}}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/RealTimeLdd1.h File Reference\par \pard\plain 
{\tc\tcl2 \v C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/RealTimeLdd1.h}
{\xe \v C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/RealTimeLdd1.h}
{\bkmkstart AAAAAAAALU}
{\bkmkend AAAAAAAALU}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This component "RealTime_LDD" implements a free running counter for time measurement. This RealTime component provides a high level API for unified hardware access to various timer devices using the TimerUnit component. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "PE_Types.h"}\par
{\f2 #include "PE_Error.h"}\par
{\f2 #include "PE_Const.h"}\par
{\f2 #include "IO_Map.h"}\par
{\f2 #include "TU3.h"}\par
{\f2 #include "Cpu.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macros\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b RealTimeLdd1_PRPH_BASE_ADDRESS}\~ 0x40038000U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b RealTimeLdd1_DeviceData}\~ (({\b LDD_TDeviceData} *){\b PE_LDD_GetDeviceStructure}(PE_LDD_COMPONENT_RealTimeLdd1_ID))\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b RealTimeLdd1_Init_METHOD_ENABLED}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b RealTimeLdd1_Reset_METHOD_ENABLED}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b RealTimeLdd1_GetTimeUS_METHOD_ENABLED}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b RealTimeLdd1_GetTimeMS_METHOD_ENABLED}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b RealTimeLdd1_GetTimeSec_METHOD_ENABLED}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LDD_TDeviceData} * {\b RealTimeLdd1_Init} ({\b LDD_TUserData} *UserDataPtr)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Initializes the device. Allocates memory for the device data structure, allocates interrupt vectors and sets interrupt priority, sets pin routing, sets timing, etc. If the property ["Enable in init. code"] is set to "yes" value then the device is also enabled (see the description of the [Enable] method). In this case the [Enable] method is not necessary and needn't to be generated. This method can be called only once. Before the second call of Init the [Deinit] must be called first. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LDD_TError} {\b RealTimeLdd1_Reset} ({\b LDD_TDeviceData} *DeviceDataPtr)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This method resets software counter. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LDD_TError} {\b RealTimeLdd1_GetTimeUS} ({\b LDD_TDeviceData} *DeviceDataPtr, uint16_t *TimePtr)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This method returns the time (as a 16-bit unsigned integer) in microseconds since the last Reset method call. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LDD_TError} {\b RealTimeLdd1_GetTimeMS} ({\b LDD_TDeviceData} *DeviceDataPtr, uint16_t *TimePtr)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This method returns the time (as a 16-bit unsigned integer) in milliseconds since the last Reset method call. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LDD_TError} {\b RealTimeLdd1_GetTimeSec} ({\b LDD_TDeviceData} *DeviceDataPtr, uint16_t *TimePtr)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This method returns the time (as a 16-bit unsigned integer) in seconds since the last Reset method call. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b TU3_OnCounterRestart} ({\b LDD_TUserData} *UserDataPtr){\bkmkstart AAAAAAAALT}
{\bkmkend AAAAAAAALT}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This component "RealTime_LDD" implements a free running counter for time measurement. This RealTime component provides a high level API for unified hardware access to various timer devices using the TimerUnit component. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Version:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid 01.01 \par
}}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/RealTimeLdd2.c File Reference\par \pard\plain 
{\tc\tcl2 \v C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/RealTimeLdd2.c}
{\xe \v C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/RealTimeLdd2.c}
{\bkmkstart AAAAAAAALV}
{\bkmkend AAAAAAAALV}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This component "RealTime_LDD" implements a free running counter for time measurement. This RealTime component provides a high level API for unified hardware access to various timer devices using the TimerUnit component. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "RealTimeLdd2.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Structures\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b RealTimeLdd2_TDeviceData}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Typedefs\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

typedef {\b RealTimeLdd2_TDeviceData} * {\b RealTimeLdd2_TDeviceDataPtr}{\bkmkstart AAAAAAAALW}
{\bkmkend AAAAAAAALW}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LDD_TDeviceData} * {\b RealTimeLdd2_Init} ({\b LDD_TUserData} *UserDataPtr)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Initializes the device. Allocates memory for the device data structure, allocates interrupt vectors and sets interrupt priority, sets pin routing, sets timing, etc. If the property ["Enable in init. code"] is set to "yes" value then the device is also enabled (see the description of the [Enable] method). In this case the [Enable] method is not necessary and needn't to be generated. This method can be called only once. Before the second call of Init the [Deinit] must be called first. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LDD_TError} {\b RealTimeLdd2_Reset} ({\b LDD_TDeviceData} *DeviceDataPtr)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This method resets software counter. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LDD_TError} {\b RealTimeLdd2_GetTimeUS} ({\b LDD_TDeviceData} *DeviceDataPtr, uint16_t *TimePtr)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This method returns the time (as a 16-bit unsigned integer) in microseconds since the last Reset method call. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LDD_TError} {\b RealTimeLdd2_GetTimeMS} ({\b LDD_TDeviceData} *DeviceDataPtr, uint16_t *TimePtr)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This method returns the time (as a 16-bit unsigned integer) in milliseconds since the last Reset method call. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LDD_TError} {\b RealTimeLdd2_GetTimeSec} ({\b LDD_TDeviceData} *DeviceDataPtr, uint16_t *TimePtr)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This method returns the time (as a 16-bit unsigned integer) in seconds since the last Reset method call. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b TU4_OnCounterRestart} ({\b LDD_TUserData} *UserDataPtr){\bkmkstart AAAAAAAALX}
{\bkmkend AAAAAAAALX}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This component "RealTime_LDD" implements a free running counter for time measurement. This RealTime component provides a high level API for unified hardware access to various timer devices using the TimerUnit component. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Version:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid 01.01 \par
}}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/RealTimeLdd2.h File Reference\par \pard\plain 
{\tc\tcl2 \v C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/RealTimeLdd2.h}
{\xe \v C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/RealTimeLdd2.h}
{\bkmkstart AAAAAAAALY}
{\bkmkend AAAAAAAALY}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This component "RealTime_LDD" implements a free running counter for time measurement. This RealTime component provides a high level API for unified hardware access to various timer devices using the TimerUnit component. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "PE_Types.h"}\par
{\f2 #include "PE_Error.h"}\par
{\f2 #include "PE_Const.h"}\par
{\f2 #include "IO_Map.h"}\par
{\f2 #include "TU4.h"}\par
{\f2 #include "Cpu.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macros\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b RealTimeLdd2_PRPH_BASE_ADDRESS}\~ 0x4003A000U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b RealTimeLdd2_DeviceData}\~ (({\b LDD_TDeviceData} *){\b PE_LDD_GetDeviceStructure}(PE_LDD_COMPONENT_RealTimeLdd2_ID))\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b RealTimeLdd2_Init_METHOD_ENABLED}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b RealTimeLdd2_Reset_METHOD_ENABLED}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b RealTimeLdd2_GetTimeUS_METHOD_ENABLED}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b RealTimeLdd2_GetTimeMS_METHOD_ENABLED}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b RealTimeLdd2_GetTimeSec_METHOD_ENABLED}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LDD_TDeviceData} * {\b RealTimeLdd2_Init} ({\b LDD_TUserData} *UserDataPtr)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Initializes the device. Allocates memory for the device data structure, allocates interrupt vectors and sets interrupt priority, sets pin routing, sets timing, etc. If the property ["Enable in init. code"] is set to "yes" value then the device is also enabled (see the description of the [Enable] method). In this case the [Enable] method is not necessary and needn't to be generated. This method can be called only once. Before the second call of Init the [Deinit] must be called first. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LDD_TError} {\b RealTimeLdd2_Reset} ({\b LDD_TDeviceData} *DeviceDataPtr)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This method resets software counter. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LDD_TError} {\b RealTimeLdd2_GetTimeUS} ({\b LDD_TDeviceData} *DeviceDataPtr, uint16_t *TimePtr)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This method returns the time (as a 16-bit unsigned integer) in microseconds since the last Reset method call. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LDD_TError} {\b RealTimeLdd2_GetTimeMS} ({\b LDD_TDeviceData} *DeviceDataPtr, uint16_t *TimePtr)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This method returns the time (as a 16-bit unsigned integer) in milliseconds since the last Reset method call. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LDD_TError} {\b RealTimeLdd2_GetTimeSec} ({\b LDD_TDeviceData} *DeviceDataPtr, uint16_t *TimePtr)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This method returns the time (as a 16-bit unsigned integer) in seconds since the last Reset method call. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b TU4_OnCounterRestart} ({\b LDD_TUserData} *UserDataPtr){\bkmkstart AAAAAAAALX}
{\bkmkend AAAAAAAALX}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This component "RealTime_LDD" implements a free running counter for time measurement. This RealTime component provides a high level API for unified hardware access to various timer devices using the TimerUnit component. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Version:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid 01.01 \par
}}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/RTC1.c File Reference\par \pard\plain 
{\tc\tcl2 \v C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/RTC1.c}
{\xe \v C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/RTC1.c}
{\bkmkstart AAAAAAAALZ}
{\bkmkend AAAAAAAALZ}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This component implements a real time clock (RTC). Actual date may also be obtained and an alarm function is included. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "Events.h"}\par
{\f2 #include "RTC1.h"}\par
{\f2 #include "RTC_PDD.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Structures\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b RTC1_TDeviceData}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Typedefs\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

typedef struct {\b RTC1_TDeviceData} * {\b RTC1_TDeviceDataPtr}{\bkmkstart AAAAAAAAMA}
{\bkmkend AAAAAAAAMA}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LDD_TDeviceData} * {\b RTC1_Init} ({\b LDD_TUserData} *UserDataPtr, bool SoftInit)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Initializes the device. There are two modes of initialization. 1) RTC device is NOT battery backed up. (SoftInit = FALSE) All registers (interrupts, counters, clock routing \'85) that influence RTC behavior are initialized. Note: This initialization mode doesn't preserve time and date settings. 2) RTC device IS battery backed up. (SoftInit = TRUE). Only registers that are not backed up are initialized (Interrupt priority \'85). RTC device is running, time and date a preserved, RTC interrupts (events) are preserved too. Allocates memory for the device data structure. This method can be called only once. Before the second call of Init() the Deinit() must be called first. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LDD_TError} {\b RTC1_Enable} ({\b LDD_TDeviceData} *DeviceDataPtr)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Enables the real-time clock module (Typically sets the module enable bit). All other HW settings are preserved. RTC module can be disabled by the [Disable] method and reinitialized by the [Init] method. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b RTC1_GetTime} ({\b LDD_TDeviceData} *DeviceDataPtr, {\b LDD_RTC_TTime} *TimePtr)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Returns actual time and date. Note: Fields not supported by HW are calculated in software. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LDD_TError} {\b RTC1_SetTime} ({\b LDD_TDeviceData} *DeviceDataPtr, {\b LDD_RTC_TTime} *TimePtr)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets new time and date. Note: All {\b LDD_RTC_TTime} structure members must be correctly filled in. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b PE_ISR} (RTC1_Interrupt){\bkmkstart AAAAAAAAMB}
{\bkmkend AAAAAAAAMB}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b PE_ISR} (RTC1_SecondsInterrupt){\bkmkstart AAAAAAAAMC}
{\bkmkend AAAAAAAAMC}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This component implements a real time clock (RTC). Actual date may also be obtained and an alarm function is included. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Version:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid 01.07 \par
}}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/RTC1.h File Reference\par \pard\plain 
{\tc\tcl2 \v C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/RTC1.h}
{\xe \v C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/RTC1.h}
{\bkmkstart AAAAAAAAMD}
{\bkmkend AAAAAAAAMD}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This component implements a real time clock (RTC). Actual date may also be obtained and an alarm function is included. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "Cpu.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macros\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b RTC1_INTERRUPT_MODE}{\bkmkstart AAAAAAAAME}
{\bkmkend AAAAAAAAME}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b RTC1_PRPH_BASE_ADDRESS}\~ 0x4003D000U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b RTC1_DeviceData}\~ (({\b LDD_TDeviceData} *){\b PE_LDD_GetDeviceStructure}(PE_LDD_COMPONENT_RTC1_ID))\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b RTC1_Init_METHOD_ENABLED}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b RTC1_Enable_METHOD_ENABLED}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b RTC1_GetTime_METHOD_ENABLED}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b RTC1_SetTime_METHOD_ENABLED}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b RTC1_OnSecond_EVENT_ENABLED}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LDD_TDeviceData} * {\b RTC1_Init} ({\b LDD_TUserData} *UserDataPtr, bool SoftInit)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Initializes the device. There are two modes of initialization. 1) RTC device is NOT battery backed up. (SoftInit = FALSE) All registers (interrupts, counters, clock routing \'85) that influence RTC behavior are initialized. Note: This initialization mode doesn't preserve time and date settings. 2) RTC device IS battery backed up. (SoftInit = TRUE). Only registers that are not backed up are initialized (Interrupt priority \'85). RTC device is running, time and date a preserved, RTC interrupts (events) are preserved too. Allocates memory for the device data structure. This method can be called only once. Before the second call of Init() the Deinit() must be called first. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LDD_TError} {\b RTC1_Enable} ({\b LDD_TDeviceData} *DeviceDataPtr)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Enables the real-time clock module (Typically sets the module enable bit). All other HW settings are preserved. RTC module can be disabled by the [Disable] method and reinitialized by the [Init] method. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b RTC1_GetTime} ({\b LDD_TDeviceData} *DeviceDataPtr, {\b LDD_RTC_TTime} *TimePtr)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Returns actual time and date. Note: Fields not supported by HW are calculated in software. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LDD_TError} {\b RTC1_SetTime} ({\b LDD_TDeviceData} *DeviceDataPtr, {\b LDD_RTC_TTime} *TimePtr)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets new time and date. Note: All {\b LDD_RTC_TTime} structure members must be correctly filled in. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b PE_ISR} (RTC1_Interrupt){\bkmkstart AAAAAAAAMB}
{\bkmkend AAAAAAAAMB}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b PE_ISR} (RTC1_SecondsInterrupt){\bkmkstart AAAAAAAAMC}
{\bkmkend AAAAAAAAMC}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This component implements a real time clock (RTC). Actual date may also be obtained and an alarm function is included. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Version:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid 01.07 \par
}}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/SM1.c File Reference\par \pard\plain 
{\tc\tcl2 \v C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/SM1.c}
{\xe \v C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/SM1.c}
{\bkmkstart AAAAAAAAMF}
{\bkmkend AAAAAAAAMF}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This component "SPIMaster_LDD" implements MASTER part of synchronous serial master-slave communication. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "Events.h"}\par
{\f2 #include "SM1.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Structures\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b SM1_TDeviceData}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macros\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b AVAILABLE_EVENTS_MASK}\~ ({\b LDD_SPIMASTER_ON_BLOCK_RECEIVED} | {\b LDD_SPIMASTER_ON_BLOCK_SENT}){\bkmkstart AAAAAAAAMG}
{\bkmkend AAAAAAAAMG}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b SM1_AVAILABLE_PIN_MASK}\~ ({\b LDD_SPIMASTER_OUTPUT_PIN} | {\b LDD_SPIMASTER_CLK_PIN}){\bkmkstart AAAAAAAAMH}
{\bkmkend AAAAAAAAMH}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Typedefs\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

typedef {\b SM1_TDeviceData} * {\b SM1_TDeviceDataPtr}{\bkmkstart AAAAAAAAMI}
{\bkmkend AAAAAAAAMI}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LDD_TDeviceData} * {\b SM1_Init} ({\b LDD_TUserData} *UserDataPtr)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Initializes the device. Allocates memory for the device data structure, allocates interrupt vectors and sets interrupt priority, sets pin routing, sets timing, etc. If the "Enable in init. code" is set to "yes" value then the device is also enabled(see the description of the Enable() method). In this case the Enable() method is not necessary and needn't to be generated. This method can be called only once. Before the second call of Init() the Deinit() must be called first. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LDD_TError} {\b SM1_ReceiveBlock} ({\b LDD_TDeviceData} *DeviceDataPtr, {\b LDD_TData} *BufferPtr, uint16_t Size)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This method specifies the number of data to receive. The method returns ERR_BUSY until the specified number of characters is received. The method <CancelBlockReception> can be used to cancel a running receive operation. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LDD_TError} {\b SM1_SendBlock} ({\b LDD_TDeviceData} *DeviceDataPtr, {\b LDD_TData} *BufferPtr, uint16_t Size)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This method sends a block of characters. The method returns ERR_BUSY when the previous block transmission is not completed. The method <CancelBlockTransmission> can be used to cancel a transmit operation. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b PE_ISR} (SM1_Interrupt){\bkmkstart AAAAAAAAMJ}
{\bkmkend AAAAAAAAMJ}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This component "SPIMaster_LDD" implements MASTER part of synchronous serial master-slave communication. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Version:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid 01.02 \par
}}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/SM1.h File Reference\par \pard\plain 
{\tc\tcl2 \v C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/SM1.h}
{\xe \v C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/SM1.h}
{\bkmkstart AAAAAAAAMK}
{\bkmkend AAAAAAAAMK}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This component "SPIMaster_LDD" implements MASTER part of synchronous serial master-slave communication. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "PE_Types.h"}\par
{\f2 #include "PE_Error.h"}\par
{\f2 #include "PE_Const.h"}\par
{\f2 #include "IO_Map.h"}\par
{\f2 #include "Cpu.h"}\par
{\f2 #include "SPI_PDD.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macros\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b SM1_PRPH_BASE_ADDRESS}\~ 0x40076000U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b SM1_DeviceData}\~ (({\b LDD_TDeviceData} *){\b PE_LDD_GetDeviceStructure}(PE_LDD_COMPONENT_SM1_ID))\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b SM1_Init_METHOD_ENABLED}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b SM1_SendBlock_METHOD_ENABLED}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b SM1_ReceiveBlock_METHOD_ENABLED}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b SM1_OnBlockSent_EVENT_ENABLED}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b SM1_OnBlockReceived_EVENT_ENABLED}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b SM1_CHIP_SELECT_COUNT}\~ 0U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b SM1_CONFIGURATION_COUNT}\~ 1U\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LDD_TDeviceData} * {\b SM1_Init} ({\b LDD_TUserData} *UserDataPtr)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Initializes the device. Allocates memory for the device data structure, allocates interrupt vectors and sets interrupt priority, sets pin routing, sets timing, etc. If the "Enable in init. code" is set to "yes" value then the device is also enabled(see the description of the Enable() method). In this case the Enable() method is not necessary and needn't to be generated. This method can be called only once. Before the second call of Init() the Deinit() must be called first. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LDD_TError} {\b SM1_ReceiveBlock} ({\b LDD_TDeviceData} *DeviceDataPtr, {\b LDD_TData} *BufferPtr, uint16_t Size)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This method specifies the number of data to receive. The method returns ERR_BUSY until the specified number of characters is received. The method <CancelBlockReception> can be used to cancel a running receive operation. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LDD_TError} {\b SM1_SendBlock} ({\b LDD_TDeviceData} *DeviceDataPtr, {\b LDD_TData} *BufferPtr, uint16_t Size)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This method sends a block of characters. The method returns ERR_BUSY when the previous block transmission is not completed. The method <CancelBlockTransmission> can be used to cancel a transmit operation. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b PE_ISR} (SM1_Interrupt){\bkmkstart AAAAAAAAMJ}
{\bkmkend AAAAAAAAMJ}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This component "SPIMaster_LDD" implements MASTER part of synchronous serial master-slave communication. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Version:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid 01.02 \par
}}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/TI1.c File Reference\par \pard\plain 
{\tc\tcl2 \v C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/TI1.c}
{\xe \v C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/TI1.c}
{\bkmkstart AAAAAAAAML}
{\bkmkend AAAAAAAAML}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This component "TimerInt" implements a periodic interrupt. When the component and its events are enabled, the "OnInterrupt" event is called periodically with the period that you specify. TimerInt supports also changing the period in runtime. The source of periodic interrupt can be timer compare or reload register or timer-overflow interrupt (of free running counter). }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "Events.h"}\par
{\f2 #include "TI1.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b TimerIntLdd1_OnInterrupt} ({\b LDD_TUserData} *UserDataPtr){\bkmkstart AAAAAAAAMM}
{\bkmkend AAAAAAAAMM}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This component "TimerInt" implements a periodic interrupt. When the component and its events are enabled, the "OnInterrupt" event is called periodically with the period that you specify. TimerInt supports also changing the period in runtime. The source of periodic interrupt can be timer compare or reload register or timer-overflow interrupt (of free running counter). \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Version:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid 01.02 \par
}}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/TI1.h File Reference\par \pard\plain 
{\tc\tcl2 \v C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/TI1.h}
{\xe \v C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/TI1.h}
{\bkmkstart AAAAAAAAMN}
{\bkmkend AAAAAAAAMN}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This component "TimerInt" implements a periodic interrupt. When the component and its events are enabled, the "OnInterrupt" event is called periodically with the period that you specify. TimerInt supports also changing the period in runtime. The source of periodic interrupt can be timer compare or reload register or timer-overflow interrupt (of free running counter). }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "PE_Types.h"}\par
{\f2 #include "PE_Error.h"}\par
{\f2 #include "PE_Const.h"}\par
{\f2 #include "IO_Map.h"}\par
{\f2 #include "TimerIntLdd1.h"}\par
{\f2 #include "Cpu.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b TimerIntLdd1_OnInterrupt} ({\b LDD_TUserData} *UserDataPtr){\bkmkstart AAAAAAAAMM}
{\bkmkend AAAAAAAAMM}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This component "TimerInt" implements a periodic interrupt. When the component and its events are enabled, the "OnInterrupt" event is called periodically with the period that you specify. TimerInt supports also changing the period in runtime. The source of periodic interrupt can be timer compare or reload register or timer-overflow interrupt (of free running counter). \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Version:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid 01.02 \par
}}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/Timer.c File Reference\par \pard\plain 
{\tc\tcl2 \v C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/Timer.c}
{\xe \v C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/Timer.c}
{\bkmkstart AAAAAAAAMO}
{\bkmkend AAAAAAAAMO}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This device "FreeCntr16" implements 16-bit Free Running Counter. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "Timer.h"}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This device "FreeCntr16" implements 16-bit Free Running Counter. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Version:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid 01.00 \par
}}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/Timer.h File Reference\par \pard\plain 
{\tc\tcl2 \v C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/Timer.h}
{\xe \v C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/Timer.h}
{\bkmkstart AAAAAAAAMP}
{\bkmkend AAAAAAAAMP}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This device "FreeCntr16" implements 16-bit Free Running Counter. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "PE_Types.h"}\par
{\f2 #include "PE_Error.h"}\par
{\f2 #include "PE_Const.h"}\par
{\f2 #include "IO_Map.h"}\par
{\f2 #include "RealTimeLdd1.h"}\par
{\f2 #include "Cpu.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macros\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b Timer_Reset}()\~ ({\b RealTimeLdd1_Reset}({\b RealTimeLdd1_DeviceData}))\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This method clears the counter. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b Timer_GetTimeUS}(Time)\~ ({\b RealTimeLdd1_GetTimeUS}({\b RealTimeLdd1_DeviceData}, (uint16_t *)Time)){\bkmkstart AAAAAAAAMQ}
{\bkmkend AAAAAAAAMQ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b Timer_GetTimeMS}(Time)\~ ({\b RealTimeLdd1_GetTimeMS}({\b RealTimeLdd1_DeviceData}, (uint16_t *)Time)){\bkmkstart AAAAAAAAMR}
{\bkmkend AAAAAAAAMR}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b Timer_GetTimeSec}(Time)\~ ({\b RealTimeLdd1_GetTimeSec}({\b RealTimeLdd1_DeviceData}, (uint16_t *)Time)){\bkmkstart AAAAAAAAMS}
{\bkmkend AAAAAAAAMS}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This device "FreeCntr16" implements 16-bit Free Running Counter. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Version:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid 01.00 \par
}}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/Timer_Buzzer.c File Reference\par \pard\plain 
{\tc\tcl2 \v C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/Timer_Buzzer.c}
{\xe \v C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/Timer_Buzzer.c}
{\bkmkstart AAAAAAAAMT}
{\bkmkend AAAAAAAAMT}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This device "FreeCntr16" implements 16-bit Free Running Counter. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "Timer_Buzzer.h"}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This device "FreeCntr16" implements 16-bit Free Running Counter. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Version:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid 01.00 \par
}}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/Timer_Buzzer.h File Reference\par \pard\plain 
{\tc\tcl2 \v C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/Timer_Buzzer.h}
{\xe \v C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/Timer_Buzzer.h}
{\bkmkstart AAAAAAAAMU}
{\bkmkend AAAAAAAAMU}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This device "FreeCntr16" implements 16-bit Free Running Counter. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "PE_Types.h"}\par
{\f2 #include "PE_Error.h"}\par
{\f2 #include "PE_Const.h"}\par
{\f2 #include "IO_Map.h"}\par
{\f2 #include "RealTimeLdd2.h"}\par
{\f2 #include "Cpu.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macros\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b Timer_Buzzer_Reset}()\~ ({\b RealTimeLdd2_Reset}({\b RealTimeLdd2_DeviceData}))\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This method clears the counter. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b Timer_Buzzer_GetTimeUS}(Time)\~ ({\b RealTimeLdd2_GetTimeUS}({\b RealTimeLdd2_DeviceData}, (uint16_t *)Time)){\bkmkstart AAAAAAAAMV}
{\bkmkend AAAAAAAAMV}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b Timer_Buzzer_GetTimeMS}(Time)\~ ({\b RealTimeLdd2_GetTimeMS}({\b RealTimeLdd2_DeviceData}, (uint16_t *)Time)){\bkmkstart AAAAAAAAMW}
{\bkmkend AAAAAAAAMW}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b Timer_Buzzer_GetTimeSec}(Time)\~ ({\b RealTimeLdd2_GetTimeSec}({\b RealTimeLdd2_DeviceData}, (uint16_t *)Time)){\bkmkstart AAAAAAAAMX}
{\bkmkend AAAAAAAAMX}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This device "FreeCntr16" implements 16-bit Free Running Counter. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Version:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid 01.00 \par
}}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/TimerIntLdd1.c File Reference\par \pard\plain 
{\tc\tcl2 \v C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/TimerIntLdd1.c}
{\xe \v C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/TimerIntLdd1.c}
{\bkmkstart AAAAAAAAMY}
{\bkmkend AAAAAAAAMY}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This TimerInt component implements a periodic interrupt. When the component and its events are enabled, the "OnInterrupt" event is called periodically with the period that you specify. TimerInt supports also changing the period in runtime. This TimerInt component provides a high level API for unified hardware access to various timer devices using the TimerUnit component. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "TI1.h"}\par
{\f2 #include "TimerIntLdd1.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Structures\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b TimerIntLdd1_TDeviceData}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macros\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b AVAILABLE_EVENTS_MASK}\~ ({\b LDD_TEventMask})({\b LDD_TIMERINT_ON_INTERRUPT}){\bkmkstart AAAAAAAAMZ}
{\bkmkend AAAAAAAAMZ}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Typedefs\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

typedef {\b TimerIntLdd1_TDeviceData} * {\b TimerIntLdd1_TDeviceDataPtr}{\bkmkstart AAAAAAAANA}
{\bkmkend AAAAAAAANA}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LDD_TDeviceData} * {\b TimerIntLdd1_Init} ({\b LDD_TUserData} *UserDataPtr)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Initializes the device. Allocates memory for the device data structure, allocates interrupt vectors and sets interrupt priority, sets pin routing, sets timing, etc. If the property ["Enable in init. code"] is set to "yes" value then the device is also enabled (see the description of the [Enable] method). In this case the [Enable] method is not necessary and needn't to be generated. This method can be called only once. Before the second call of Init the [Deinit] must be called first. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b TU1_OnCounterRestart} ({\b LDD_TUserData} *UserDataPtr){\bkmkstart AAAAAAAANB}
{\bkmkend AAAAAAAANB}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This TimerInt component implements a periodic interrupt. When the component and its events are enabled, the "OnInterrupt" event is called periodically with the period that you specify. TimerInt supports also changing the period in runtime. This TimerInt component provides a high level API for unified hardware access to various timer devices using the TimerUnit component. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Version:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid 01.02 \par
}}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/TimerIntLdd1.h File Reference\par \pard\plain 
{\tc\tcl2 \v C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/TimerIntLdd1.h}
{\xe \v C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/TimerIntLdd1.h}
{\bkmkstart AAAAAAAANC}
{\bkmkend AAAAAAAANC}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This TimerInt component implements a periodic interrupt. When the component and its events are enabled, the "OnInterrupt" event is called periodically with the period that you specify. TimerInt supports also changing the period in runtime. This TimerInt component provides a high level API for unified hardware access to various timer devices using the TimerUnit component. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "PE_Types.h"}\par
{\f2 #include "PE_Error.h"}\par
{\f2 #include "PE_Const.h"}\par
{\f2 #include "IO_Map.h"}\par
{\f2 #include "TU1.h"}\par
{\f2 #include "Cpu.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macros\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b TimerIntLdd1_PRPH_BASE_ADDRESS}\~ 0x40040000U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b TimerIntLdd1_DeviceData}\~ (({\b LDD_TDeviceData} *){\b PE_LDD_GetDeviceStructure}(PE_LDD_COMPONENT_TimerIntLdd1_ID))\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b TimerIntLdd1_Init_METHOD_ENABLED}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b TimerIntLdd1_OnInterrupt_EVENT_ENABLED}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LDD_TDeviceData} * {\b TimerIntLdd1_Init} ({\b LDD_TUserData} *UserDataPtr)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Initializes the device. Allocates memory for the device data structure, allocates interrupt vectors and sets interrupt priority, sets pin routing, sets timing, etc. If the property ["Enable in init. code"] is set to "yes" value then the device is also enabled (see the description of the [Enable] method). In this case the [Enable] method is not necessary and needn't to be generated. This method can be called only once. Before the second call of Init the [Deinit] must be called first. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b TU1_OnCounterRestart} ({\b LDD_TUserData} *UserDataPtr){\bkmkstart AAAAAAAANB}
{\bkmkend AAAAAAAANB}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This TimerInt component implements a periodic interrupt. When the component and its events are enabled, the "OnInterrupt" event is called periodically with the period that you specify. TimerInt supports also changing the period in runtime. This TimerInt component provides a high level API for unified hardware access to various timer devices using the TimerUnit component. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Version:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid 01.02 \par
}}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/TU1.c File Reference\par \pard\plain 
{\tc\tcl2 \v C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/TU1.c}
{\xe \v C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/TU1.c}
{\bkmkstart AAAAAAAAND}
{\bkmkend AAAAAAAAND}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This TimerUnit component provides a low level API for unified hardware access across various timer devices using the Prescaler-Counter-Compare-Capture timer structure. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "TimerIntLdd1.h"}\par
{\f2 #include "TU1.h"}\par
{\f2 #include "IO_Map.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Structures\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b TU1_TDeviceData}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macros\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b AVAILABLE_EVENTS_MASK}\~ ({\b LDD_TEventMask})({\b LDD_TIMERUNIT_ON_COUNTER_RESTART}){\bkmkstart AAAAAAAANE}
{\bkmkend AAAAAAAANE}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Typedefs\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

typedef {\b TU1_TDeviceData} * {\b TU1_TDeviceDataPtr}{\bkmkstart AAAAAAAANF}
{\bkmkend AAAAAAAANF}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LDD_TDeviceData} * {\b TU1_Init} ({\b LDD_TUserData} *UserDataPtr)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Initializes the device. Allocates memory for the device data structure, allocates interrupt vectors and sets interrupt priority, sets pin routing, sets timing, etc. If the property ["Enable in init. code"] is set to "yes" value then the device is also enabled (see the description of the [Enable] method). In this case the [Enable] method is not necessary and needn't to be generated. This method can be called only once. Before the second call of Init the [Deinit] must be called first. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b PE_ISR} (TU1_Interrupt){\bkmkstart AAAAAAAANG}
{\bkmkend AAAAAAAANG}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This TimerUnit component provides a low level API for unified hardware access across various timer devices using the Prescaler-Counter-Compare-Capture timer structure. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Version:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid 01.11 \par
}}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/TU1.h File Reference\par \pard\plain 
{\tc\tcl2 \v C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/TU1.h}
{\xe \v C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/TU1.h}
{\bkmkstart AAAAAAAANH}
{\bkmkend AAAAAAAANH}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This TimerUnit component provides a low level API for unified hardware access across various timer devices using the Prescaler-Counter-Compare-Capture timer structure. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "PE_Types.h"}\par
{\f2 #include "PE_Error.h"}\par
{\f2 #include "PE_Const.h"}\par
{\f2 #include "IO_Map.h"}\par
{\f2 #include "LPTMR_PDD.h"}\par
{\f2 #include "Cpu.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macros\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b __BWUserType_TU1_TValueType}{\bkmkstart AAAAAAAANI}
{\bkmkend AAAAAAAANI}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b TU1_CNT_INP_FREQ_U_0}\~ 0x00UL    /* Counter input frequency in Hz */{\bkmkstart AAAAAAAANJ}
{\bkmkend AAAAAAAANJ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b TU1_CNT_INP_FREQ_R_0}\~ 0.5F      /* Counter input frequency in Hz */{\bkmkstart AAAAAAAANK}
{\bkmkend AAAAAAAANK}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b TU1_CNT_INP_FREQ_COUNT}\~ 0U      /* Count of predefined counter input frequencies */{\bkmkstart AAAAAAAANL}
{\bkmkend AAAAAAAANL}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b TU1_PERIOD_TICKS}\~ 0x01UL      /* Initialization value of period in 'counter ticks' */{\bkmkstart AAAAAAAANM}
{\bkmkend AAAAAAAANM}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b TU1_NUMBER_OF_CHANNELS}\~ 0x00U   /* Count of predefined channels */{\bkmkstart AAAAAAAANN}
{\bkmkend AAAAAAAANN}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b TU1_COUNTER_WIDTH}\~ 0x10U       /* Counter width in bits  */{\bkmkstart AAAAAAAANO}
{\bkmkend AAAAAAAANO}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b TU1_COUNTER_DIR}\~ {\b DIR_UP}      /* Direction of counting */{\bkmkstart AAAAAAAANP}
{\bkmkend AAAAAAAANP}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b TU1_PRPH_BASE_ADDRESS}\~ 0x40040000U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b TU1_Init_METHOD_ENABLED}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b TU1_OnCounterRestart_EVENT_ENABLED}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Typedefs\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

typedef uint16_t {\b TU1_TValueType}{\bkmkstart AAAAAAAANQ}
{\bkmkend AAAAAAAANQ}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LDD_TDeviceData} * {\b TU1_Init} ({\b LDD_TUserData} *UserDataPtr)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Initializes the device. Allocates memory for the device data structure, allocates interrupt vectors and sets interrupt priority, sets pin routing, sets timing, etc. If the property ["Enable in init. code"] is set to "yes" value then the device is also enabled (see the description of the [Enable] method). In this case the [Enable] method is not necessary and needn't to be generated. This method can be called only once. Before the second call of Init the [Deinit] must be called first. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b PE_ISR} (TU1_Interrupt){\bkmkstart AAAAAAAANG}
{\bkmkend AAAAAAAANG}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This TimerUnit component provides a low level API for unified hardware access across various timer devices using the Prescaler-Counter-Compare-Capture timer structure. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Version:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid 01.11 \par
}}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/TU3.c File Reference\par \pard\plain 
{\tc\tcl2 \v C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/TU3.c}
{\xe \v C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/TU3.c}
{\bkmkstart AAAAAAAANR}
{\bkmkend AAAAAAAANR}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This TimerUnit component provides a low level API for unified hardware access across various timer devices using the Prescaler-Counter-Compare-Capture timer structure. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "RealTimeLdd1.h"}\par
{\f2 #include "TU3.h"}\par
{\f2 #include "IO_Map.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Structures\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b TU3_TDeviceData}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macros\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b AVAILABLE_EVENTS_MASK}\~ ({\b LDD_TEventMask})({\b LDD_TIMERUNIT_ON_COUNTER_RESTART}){\bkmkstart AAAAAAAANS}
{\bkmkend AAAAAAAANS}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Typedefs\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

typedef {\b TU3_TDeviceData} * {\b TU3_TDeviceDataPtr}{\bkmkstart AAAAAAAANT}
{\bkmkend AAAAAAAANT}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LDD_TDeviceData} * {\b TU3_Init} ({\b LDD_TUserData} *UserDataPtr)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Initializes the device. Allocates memory for the device data structure, allocates interrupt vectors and sets interrupt priority, sets pin routing, sets timing, etc. If the property ["Enable in init. code"] is set to "yes" value then the device is also enabled (see the description of the [Enable] method). In this case the [Enable] method is not necessary and needn't to be generated. This method can be called only once. Before the second call of Init the [Deinit] must be called first. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LDD_TError} {\b TU3_ResetCounter} ({\b LDD_TDeviceData} *DeviceDataPtr)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Resets counter. If counter is counting up then it is set to zero. If counter is counting down then counter is updated to the reload value. The method is not available if HW doesn't allow resetting of the counter. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b PE_ISR} (TU3_Interrupt){\bkmkstart AAAAAAAANU}
{\bkmkend AAAAAAAANU}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This TimerUnit component provides a low level API for unified hardware access across various timer devices using the Prescaler-Counter-Compare-Capture timer structure. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Version:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid 01.11 \par
}}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/TU3.h File Reference\par \pard\plain 
{\tc\tcl2 \v C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/TU3.h}
{\xe \v C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/TU3.h}
{\bkmkstart AAAAAAAANV}
{\bkmkend AAAAAAAANV}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This TimerUnit component provides a low level API for unified hardware access across various timer devices using the Prescaler-Counter-Compare-Capture timer structure. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "PE_Types.h"}\par
{\f2 #include "PE_Error.h"}\par
{\f2 #include "PE_Const.h"}\par
{\f2 #include "IO_Map.h"}\par
{\f2 #include "TPM_PDD.h"}\par
{\f2 #include "Cpu.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macros\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b __BWUserType_TU3_TValueType}{\bkmkstart AAAAAAAANW}
{\bkmkend AAAAAAAANW}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b TU3_CNT_INP_FREQ_U_0}\~ 0x000A0000UL /* Counter input frequency in Hz */{\bkmkstart AAAAAAAANX}
{\bkmkend AAAAAAAANX}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b TU3_CNT_INP_FREQ_R_0}\~ 655359.9597346841F /* Counter input frequency in Hz */{\bkmkstart AAAAAAAANY}
{\bkmkend AAAAAAAANY}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b TU3_CNT_INP_FREQ_COUNT}\~ 0U      /* Count of predefined counter input frequencies */{\bkmkstart AAAAAAAANZ}
{\bkmkend AAAAAAAANZ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b TU3_PERIOD_TICKS}\~ 0x00010000UL /* Initialization value of period in 'counter ticks' */{\bkmkstart AAAAAAAAOA}
{\bkmkend AAAAAAAAOA}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b TU3_NUMBER_OF_CHANNELS}\~ 0x00U   /* Count of predefined channels */{\bkmkstart AAAAAAAAOB}
{\bkmkend AAAAAAAAOB}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b TU3_COUNTER_WIDTH}\~ 0x10U       /* Counter width in bits  */{\bkmkstart AAAAAAAAOC}
{\bkmkend AAAAAAAAOC}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b TU3_COUNTER_DIR}\~ {\b DIR_UP}      /* Direction of counting */{\bkmkstart AAAAAAAAOD}
{\bkmkend AAAAAAAAOD}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b TU3_PRPH_BASE_ADDRESS}\~ 0x40038000U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b TU3_Init_METHOD_ENABLED}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b TU3_ResetCounter_METHOD_ENABLED}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b TU3_OnCounterRestart_EVENT_ENABLED}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Typedefs\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

typedef uint16_t {\b TU3_TValueType}{\bkmkstart AAAAAAAAOE}
{\bkmkend AAAAAAAAOE}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LDD_TDeviceData} * {\b TU3_Init} ({\b LDD_TUserData} *UserDataPtr)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Initializes the device. Allocates memory for the device data structure, allocates interrupt vectors and sets interrupt priority, sets pin routing, sets timing, etc. If the property ["Enable in init. code"] is set to "yes" value then the device is also enabled (see the description of the [Enable] method). In this case the [Enable] method is not necessary and needn't to be generated. This method can be called only once. Before the second call of Init the [Deinit] must be called first. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LDD_TError} {\b TU3_ResetCounter} ({\b LDD_TDeviceData} *DeviceDataPtr)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Resets counter. If counter is counting up then it is set to zero. If counter is counting down then counter is updated to the reload value. The method is not available if HW doesn't allow resetting of the counter. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b PE_ISR} (TU3_Interrupt){\bkmkstart AAAAAAAANU}
{\bkmkend AAAAAAAANU}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This TimerUnit component provides a low level API for unified hardware access across various timer devices using the Prescaler-Counter-Compare-Capture timer structure. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Version:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid 01.11 \par
}}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/TU4.c File Reference\par \pard\plain 
{\tc\tcl2 \v C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/TU4.c}
{\xe \v C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/TU4.c}
{\bkmkstart AAAAAAAAOF}
{\bkmkend AAAAAAAAOF}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This TimerUnit component provides a low level API for unified hardware access across various timer devices using the Prescaler-Counter-Compare-Capture timer structure. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "RealTimeLdd2.h"}\par
{\f2 #include "TU4.h"}\par
{\f2 #include "IO_Map.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Structures\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b TU4_TDeviceData}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macros\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b AVAILABLE_EVENTS_MASK}\~ ({\b LDD_TEventMask})({\b LDD_TIMERUNIT_ON_COUNTER_RESTART}){\bkmkstart AAAAAAAAOG}
{\bkmkend AAAAAAAAOG}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Typedefs\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

typedef {\b TU4_TDeviceData} * {\b TU4_TDeviceDataPtr}{\bkmkstart AAAAAAAAOH}
{\bkmkend AAAAAAAAOH}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LDD_TDeviceData} * {\b TU4_Init} ({\b LDD_TUserData} *UserDataPtr)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Initializes the device. Allocates memory for the device data structure, allocates interrupt vectors and sets interrupt priority, sets pin routing, sets timing, etc. If the property ["Enable in init. code"] is set to "yes" value then the device is also enabled (see the description of the [Enable] method). In this case the [Enable] method is not necessary and needn't to be generated. This method can be called only once. Before the second call of Init the [Deinit] must be called first. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LDD_TError} {\b TU4_ResetCounter} ({\b LDD_TDeviceData} *DeviceDataPtr)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Resets counter. If counter is counting up then it is set to zero. If counter is counting down then counter is updated to the reload value. The method is not available if HW doesn't allow resetting of the counter. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b PE_ISR} (TU4_Interrupt){\bkmkstart AAAAAAAAOI}
{\bkmkend AAAAAAAAOI}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This TimerUnit component provides a low level API for unified hardware access across various timer devices using the Prescaler-Counter-Compare-Capture timer structure. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Version:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid 01.11 \par
}}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/TU4.h File Reference\par \pard\plain 
{\tc\tcl2 \v C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/TU4.h}
{\xe \v C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/TU4.h}
{\bkmkstart AAAAAAAAOJ}
{\bkmkend AAAAAAAAOJ}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This TimerUnit component provides a low level API for unified hardware access across various timer devices using the Prescaler-Counter-Compare-Capture timer structure. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "PE_Types.h"}\par
{\f2 #include "PE_Error.h"}\par
{\f2 #include "PE_Const.h"}\par
{\f2 #include "IO_Map.h"}\par
{\f2 #include "TPM_PDD.h"}\par
{\f2 #include "Cpu.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macros\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b __BWUserType_TU4_TValueType}{\bkmkstart AAAAAAAAOK}
{\bkmkend AAAAAAAAOK}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b TU4_CNT_INP_FREQ_U_0}\~ 0x000A0000UL /* Counter input frequency in Hz */{\bkmkstart AAAAAAAAOL}
{\bkmkend AAAAAAAAOL}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b TU4_CNT_INP_FREQ_R_0}\~ 655359.9597346841F /* Counter input frequency in Hz */{\bkmkstart AAAAAAAAOM}
{\bkmkend AAAAAAAAOM}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b TU4_CNT_INP_FREQ_COUNT}\~ 0U      /* Count of predefined counter input frequencies */{\bkmkstart AAAAAAAAON}
{\bkmkend AAAAAAAAON}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b TU4_PERIOD_TICKS}\~ 0x00010000UL /* Initialization value of period in 'counter ticks' */{\bkmkstart AAAAAAAAOO}
{\bkmkend AAAAAAAAOO}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b TU4_NUMBER_OF_CHANNELS}\~ 0x00U   /* Count of predefined channels */{\bkmkstart AAAAAAAAOP}
{\bkmkend AAAAAAAAOP}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b TU4_COUNTER_WIDTH}\~ 0x10U       /* Counter width in bits  */{\bkmkstart AAAAAAAAOQ}
{\bkmkend AAAAAAAAOQ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b TU4_COUNTER_DIR}\~ {\b DIR_UP}      /* Direction of counting */{\bkmkstart AAAAAAAAOR}
{\bkmkend AAAAAAAAOR}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b TU4_PRPH_BASE_ADDRESS}\~ 0x4003A000U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b TU4_Init_METHOD_ENABLED}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b TU4_ResetCounter_METHOD_ENABLED}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b TU4_OnCounterRestart_EVENT_ENABLED}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Typedefs\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

typedef uint16_t {\b TU4_TValueType}{\bkmkstart AAAAAAAAOS}
{\bkmkend AAAAAAAAOS}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LDD_TDeviceData} * {\b TU4_Init} ({\b LDD_TUserData} *UserDataPtr)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Initializes the device. Allocates memory for the device data structure, allocates interrupt vectors and sets interrupt priority, sets pin routing, sets timing, etc. If the property ["Enable in init. code"] is set to "yes" value then the device is also enabled (see the description of the [Enable] method). In this case the [Enable] method is not necessary and needn't to be generated. This method can be called only once. Before the second call of Init the [Deinit] must be called first. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LDD_TError} {\b TU4_ResetCounter} ({\b LDD_TDeviceData} *DeviceDataPtr)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Resets counter. If counter is counting up then it is set to zero. If counter is counting down then counter is updated to the reload value. The method is not available if HW doesn't allow resetting of the counter. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b PE_ISR} (TU4_Interrupt){\bkmkstart AAAAAAAAOI}
{\bkmkend AAAAAAAAOI}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This TimerUnit component provides a low level API for unified hardware access across various timer devices using the Prescaler-Counter-Compare-Capture timer structure. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Version:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid 01.11 \par
}}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/TU6.c File Reference\par \pard\plain 
{\tc\tcl2 \v C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/TU6.c}
{\xe \v C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/TU6.c}
{\bkmkstart AAAAAAAAOT}
{\bkmkend AAAAAAAAOT}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This TimerUnit component provides a low level API for unified hardware access across various timer devices using the Prescaler-Counter-Compare-Capture timer structure. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "TU6.h"}\par
{\f2 #include "IO_Map.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Structures\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b TU6_TDeviceData}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Typedefs\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

typedef {\b TU6_TDeviceData} * {\b TU6_TDeviceDataPtr}{\bkmkstart AAAAAAAAOU}
{\bkmkend AAAAAAAAOU}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LDD_TDeviceData} * {\b TU6_Init} ({\b LDD_TUserData} *UserDataPtr)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Initializes the device. Allocates memory for the device data structure, allocates interrupt vectors and sets interrupt priority, sets pin routing, sets timing, etc. If the property ["Enable in init. code"] is set to "yes" value then the device is also enabled (see the description of the [Enable] method). In this case the [Enable] method is not necessary and needn't to be generated. This method can be called only once. Before the second call of Init the [Deinit] must be called first. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LDD_TError} {\b TU6_ResetCounter} ({\b LDD_TDeviceData} *DeviceDataPtr)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Resets counter. If counter is counting up then it is set to zero. If counter is counting down then counter is updated to the reload value. The method is not available if HW doesn't allow resetting of the counter. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This TimerUnit component provides a low level API for unified hardware access across various timer devices using the Prescaler-Counter-Compare-Capture timer structure. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Version:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid 01.11 \par
}}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/TU6.h File Reference\par \pard\plain 
{\tc\tcl2 \v C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/TU6.h}
{\xe \v C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/TU6.h}
{\bkmkstart AAAAAAAAOV}
{\bkmkend AAAAAAAAOV}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This TimerUnit component provides a low level API for unified hardware access across various timer devices using the Prescaler-Counter-Compare-Capture timer structure. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "PE_Types.h"}\par
{\f2 #include "PE_Error.h"}\par
{\f2 #include "PE_Const.h"}\par
{\f2 #include "IO_Map.h"}\par
{\f2 #include "PIT_PDD.h"}\par
{\f2 #include "Cpu.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macros\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b __BWUserType_TU6_TValueType}{\bkmkstart AAAAAAAAOW}
{\bkmkend AAAAAAAAOW}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b TU6_CNT_INP_FREQ_U_0}\~ 0x01400000UL /* Counter input frequency in Hz */{\bkmkstart AAAAAAAAOX}
{\bkmkend AAAAAAAAOX}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b TU6_CNT_INP_FREQ_R_0}\~ 20971395.017196544F /* Counter input frequency in Hz */{\bkmkstart AAAAAAAAOY}
{\bkmkend AAAAAAAAOY}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b TU6_CNT_INP_FREQ_COUNT}\~ 0U      /* Count of predefined counter input frequencies */{\bkmkstart AAAAAAAAOZ}
{\bkmkend AAAAAAAAOZ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b TU6_PERIOD_TICKS}\~ 0x00200000UL /* Initialization value of period in 'counter ticks' */{\bkmkstart AAAAAAAAPA}
{\bkmkend AAAAAAAAPA}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b TU6_NUMBER_OF_CHANNELS}\~ 0x00U   /* Count of predefined channels */{\bkmkstart AAAAAAAAPB}
{\bkmkend AAAAAAAAPB}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b TU6_COUNTER_WIDTH}\~ 0x20U       /* Counter width in bits  */{\bkmkstart AAAAAAAAPC}
{\bkmkend AAAAAAAAPC}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b TU6_COUNTER_DIR}\~ {\b DIR_DOWN}    /* Direction of counting */{\bkmkstart AAAAAAAAPD}
{\bkmkend AAAAAAAAPD}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b TU6_PRPH_BASE_ADDRESS}\~ 0x40037000U\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b TU6_Init_METHOD_ENABLED}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b TU6_ResetCounter_METHOD_ENABLED}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Typedefs\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

typedef uint32_t {\b TU6_TValueType}{\bkmkstart AAAAAAAAPE}
{\bkmkend AAAAAAAAPE}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LDD_TDeviceData} * {\b TU6_Init} ({\b LDD_TUserData} *UserDataPtr)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Initializes the device. Allocates memory for the device data structure, allocates interrupt vectors and sets interrupt priority, sets pin routing, sets timing, etc. If the property ["Enable in init. code"] is set to "yes" value then the device is also enabled (see the description of the [Enable] method). In this case the [Enable] method is not necessary and needn't to be generated. This method can be called only once. Before the second call of Init the [Deinit] must be called first. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LDD_TError} {\b TU6_ResetCounter} ({\b LDD_TDeviceData} *DeviceDataPtr)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Resets counter. If counter is counting up then it is set to zero. If counter is counting down then counter is updated to the reload value. The method is not available if HW doesn't allow resetting of the counter. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This TimerUnit component provides a low level API for unified hardware access across various timer devices using the Prescaler-Counter-Compare-Capture timer structure. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Version:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid 01.11 \par
}}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/UTIL1.c File Reference\par \pard\plain 
{\tc\tcl2 \v C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/UTIL1.c}
{\xe \v C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/UTIL1.c}
{\bkmkstart AAAAAAAAPF}
{\bkmkend AAAAAAAAPF}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Contains various utility functions. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "UTIL1.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b UTIL1_strcpy} (uint8_t *dst, size_t dstSize, const unsigned char *src)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
copy the string src into dst. It performs the same task as strncpy, except }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b UTIL1_strcat} (uint8_t *dst, size_t dstSize, const unsigned char *src)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Concat the string src into dst. Always terminates the result string. Note: count is the size of dst INCLUDING zero byte. Precondition: src, dst != NULL. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

int16_t {\b UTIL1_strFind} (uint8_t *str, uint8_t *subStr){\bkmkstart AAAAAAAAPG}
{\bkmkend AAAAAAAAPG}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Contains various utility functions. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Version:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid 01.00 \par
}}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/UTIL1.h File Reference\par \pard\plain 
{\tc\tcl2 \v C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/UTIL1.h}
{\xe \v C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/UTIL1.h}
{\bkmkstart AAAAAAAAPH}
{\bkmkend AAAAAAAAPH}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Contains various utility functions. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "MCUC1.h"}\par
{\f2 #include "UTIL1config.h"}\par
{\f2 #include <string.h>}\par
{\f2 #include <stddef.h>}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macros\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b UTIL1_strcmp}(str1, str2)\~ strcmp(str1, str2){\bkmkstart AAAAAAAAPI}
{\bkmkend AAAAAAAAPI}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b UTIL1_strncmp}(str1, str2, size)\~ strncmp(str1, str2, size){\bkmkstart AAAAAAAAPJ}
{\bkmkend AAAAAAAAPJ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b UTIL1_strlen}(str)\~ strlen(str){\bkmkstart AAAAAAAAPK}
{\bkmkend AAAAAAAAPK}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Enumerations\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b UTIL1_SeparatedNumberType} \{ {\b UTIL1_SEP_NUM_TYPE_UINT8}, 
{\b UTIL1_SEP_NUM_TYPE_UINT8_HEX_NO_PREFIX}
 \}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b UTIL1_strcpy} (uint8_t *dst, size_t dstSize, const unsigned char *src)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
copy the string src into dst. It performs the same task as strncpy, except }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b UTIL1_strcat} (uint8_t *dst, size_t dstSize, const unsigned char *src)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Concat the string src into dst. Always terminates the result string. Note: count is the size of dst INCLUDING zero byte. Precondition: src, dst != NULL. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

int16_t {\b UTIL1_strFind} (uint8_t *str, uint8_t *subStr){\bkmkstart AAAAAAAAPG}
{\bkmkend AAAAAAAAPG}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Contains various utility functions. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Version:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid 01.00 \par
}}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/Vectors.c File Reference\par \pard\plain 
{\tc\tcl2 \v C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/Vectors.c}
{\xe \v C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/Vectors.c}
{\bkmkstart AAAAAAAAPL}
{\bkmkend AAAAAAAAPL}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "Cpu.h"}\par
{\f2 #include "PC.h"}\par
{\f2 #include "ASerialLdd1.h"}\par
{\f2 #include "Wifi.h"}\par
{\f2 #include "ASerialLdd2.h"}\par
{\f2 #include "MCUC1.h"}\par
{\f2 #include "UTIL1.h"}\par
{\f2 #include "TI1.h"}\par
{\f2 #include "TimerIntLdd1.h"}\par
{\f2 #include "TU1.h"}\par
{\f2 #include "RTC1.h"}\par
{\f2 #include "WAIT1.h"}\par
{\f2 #include "SM1.h"}\par
{\f2 #include "LT.h"}\par
{\f2 #include "BitIoLdd7.h"}\par
{\f2 #include "WAIT2.h"}\par
{\f2 #include "Timer.h"}\par
{\f2 #include "RealTimeLdd1.h"}\par
{\f2 #include "TU3.h"}\par
{\f2 #include "EE241.h"}\par
{\f2 #include "GI2C1.h"}\par
{\f2 #include "CI2C1.h"}\par
{\f2 #include "Timer_Buzzer.h"}\par
{\f2 #include "RealTimeLdd2.h"}\par
{\f2 #include "TU4.h"}\par
{\f2 #include "PIR.h"}\par
{\f2 #include "ExtIntLdd4.h"}\par
{\f2 #include "Buzzer.h"}\par
{\f2 #include "BitIoLdd8.h"}\par
{\f2 #include "CS1.h"}\par
{\f2 #include "TU6.h"}\par
{\f2 #include "PIR2.h"}\par
{\f2 #include "BitIoLdd9.h"}\par
{\f2 #include "Events.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b __thumb_startup} (void){\bkmkstart AAAAAAAAPM}
{\bkmkend AAAAAAAAPM}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b __attribute__} ((section(".vectortable"))) const{\bkmkstart AAAAAAAAPN}
{\bkmkend AAAAAAAAPN}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint32_t {\b __SP_INIT}{\bkmkstart AAAAAAAAPO}
{\bkmkend AAAAAAAAPO}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {\tc\tcl \v 4}\par}
THIS COMPONENT MODULE IS GENERATED BY THE TOOL. DO NOT MODIFY IT. Filename : {\b Vectors.c} Project : ProjetoFinal Processor : MKL25Z128VLK4 Version : Component 01.025, Driver 01.04, CPU db: 3.00.000 Compiler : GNU C Compiler Date/Time : 2019-11-27, 08:14, # CodeGen: 0 Abstract :\par
Settings :\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid Copyright : 1997 - 2014 Freescale Semiconductor, Inc. \par
All Rights Reserved.\par
\par
Redistribution and use in source and binary forms, with or without modification,\par
are permitted provided that the following conditions are met:\par
\par
o Redistributions of source code must retain the above copyright notice, this list\par
  of conditions and the following disclaimer.\par
\par
o Redistributions in binary form must reproduce the above copyright notice, this\par
  list of conditions and the following disclaimer in the documentation and/or\par
  other materials provided with the distribution.\par
\par
o Neither the name of Freescale Semiconductor, Inc. nor the names of its\par
  contributors may be used to endorse or promote products derived from this\par
  software without specific prior written permission.\par
\par
THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND\par
ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\par
WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\par
DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR\par
ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\par
(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\par
LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON\par
ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\par
(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\par
SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\par
\par
http: www.freescale.com\par
mail: support@freescale.com\par
}
 {\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {\tc\tcl \v 4}\par}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Version:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid 01.04 \par
}}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/WAIT1.c File Reference\par \pard\plain 
{\tc\tcl2 \v C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/WAIT1.c}
{\xe \v C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/WAIT1.c}
{\bkmkstart AAAAAAAAPP}
{\bkmkend AAAAAAAAPP}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Implements busy waiting routines. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "WAIT1.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b __attribute__} ((naked, no_instrument_function)){\bkmkstart AAAAAAAAPQ}
{\bkmkend AAAAAAAAPQ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b WAIT1_WaitCycles} (uint16_t cycles){\bkmkstart AAAAAAAAPR}
{\bkmkend AAAAAAAAPR}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b WAIT1_WaitLongCycles} (uint32_t cycles){\bkmkstart AAAAAAAAPS}
{\bkmkend AAAAAAAAPS}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b WAIT1_Waitms} (uint16_t ms){\bkmkstart AAAAAAAAPT}
{\bkmkend AAAAAAAAPT}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b WAIT1_Init} (void){\bkmkstart AAAAAAAAPU}
{\bkmkend AAAAAAAAPU}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b WAIT1_DeInit} (void){\bkmkstart AAAAAAAAPV}
{\bkmkend AAAAAAAAPV}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Implements busy waiting routines. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Version:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid 01.00 \par
}}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/WAIT1.h File Reference\par \pard\plain 
{\tc\tcl2 \v C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/WAIT1.h}
{\xe \v C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/WAIT1.h}
{\bkmkstart AAAAAAAAPW}
{\bkmkend AAAAAAAAPW}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Implements busy waiting routines. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "MCUC1.h"}\par
{\f2 #include "WAIT1config.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macros\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b WAIT1_INSTR_CLOCK_HZ}\~ CPU_CORE_CLK_HZ /* for Kinetis, use core clock as base for instruction execution */{\bkmkstart AAAAAAAAPX}
{\bkmkend AAAAAAAAPX}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b WAIT1_NofCyclesMs}(ms, hz)\~ ((ms)*((hz)/1000)) /* calculates the needed cycles based on bus clock frequency */{\bkmkstart AAAAAAAAPY}
{\bkmkend AAAAAAAAPY}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b WAIT1_NofCyclesUs}(us, hz)\~ ((us)*(((hz)/1000)/1000)) /* calculates the needed cycles based on bus clock frequency */{\bkmkstart AAAAAAAAPZ}
{\bkmkend AAAAAAAAPZ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b WAIT1_NofCyclesNs}(ns, hz)\~ (((ns)*(((hz)/1000)/1000))/1000) /* calculates the needed cycles based on bus clock frequency */{\bkmkstart AAAAAAAAQA}
{\bkmkend AAAAAAAAQA}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b WAIT1_WAIT_C}(cycles)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b WAIT1_Waitus}(us)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b WAIT1_Waitns}(ns)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b WAIT1_WaitOSms}(ms)\~ WAIT1_Waitms(ms) /* no RTOS used, so use normal wait */{\bkmkstart AAAAAAAAQB}
{\bkmkend AAAAAAAAQB}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b WAIT1_Wait10Cycles} (void){\bkmkstart AAAAAAAAQC}
{\bkmkend AAAAAAAAQC}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b WAIT1_Wait100Cycles} (void){\bkmkstart AAAAAAAAQD}
{\bkmkend AAAAAAAAQD}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b WAIT1_WaitCycles} (uint16_t cycles){\bkmkstart AAAAAAAAPR}
{\bkmkend AAAAAAAAPR}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b WAIT1_Waitms} (uint16_t ms){\bkmkstart AAAAAAAAPT}
{\bkmkend AAAAAAAAPT}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b WAIT1_WaitLongCycles} (uint32_t cycles){\bkmkstart AAAAAAAAPS}
{\bkmkend AAAAAAAAPS}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b WAIT1_Init} (void){\bkmkstart AAAAAAAAPU}
{\bkmkend AAAAAAAAPU}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b WAIT1_DeInit} (void){\bkmkstart AAAAAAAAPV}
{\bkmkend AAAAAAAAPV}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Implements busy waiting routines. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Version:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid 01.00 \par
}}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/WAIT1config.h File Reference\par \pard\plain 
{\tc\tcl2 \v C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/WAIT1config.h}
{\xe \v C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/WAIT1config.h}
{\bkmkstart AAAAAAAAQE}
{\bkmkend AAAAAAAAQE}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Configuration header file for Wait. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "MCUC1.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macros\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b WAIT1_CONFIG_USE_CYCLE_COUNTER}\~ (0 && ({\b MCUC1_CONFIG_CORTEX_M}>=3))\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Configuration header file for Wait. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This header file is used to configure settings of the busy waiting module. \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macro Definition Documentation\par
\pard\plain 
{\xe \v WAIT1_CONFIG_USE_CYCLE_COUNTER\:WAIT1config.h}
{\xe \v WAIT1config.h\:WAIT1_CONFIG_USE_CYCLE_COUNTER}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define WAIT1_CONFIG_USE_CYCLE_COUNTER\~ (0 && ({\b MCUC1_CONFIG_CORTEX_M}>=3))}}
\par
{\bkmkstart AAAAAAAAQF}
{\bkmkend AAAAAAAAQF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
1: Use hardware cycle counter (if present, only on Cortex-M3 or higher), 0: not using hardware cycle counter \par
}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/WAIT2.c File Reference\par \pard\plain 
{\tc\tcl2 \v C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/WAIT2.c}
{\xe \v C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/WAIT2.c}
{\bkmkstart AAAAAAAAQG}
{\bkmkend AAAAAAAAQG}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Implements busy waiting routines. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "WAIT2.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b __attribute__} ((naked, no_instrument_function)){\bkmkstart AAAAAAAAQH}
{\bkmkend AAAAAAAAQH}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b WAIT2_WaitCycles} (uint16_t cycles){\bkmkstart AAAAAAAAQI}
{\bkmkend AAAAAAAAQI}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b WAIT2_WaitLongCycles} (uint32_t cycles){\bkmkstart AAAAAAAAQJ}
{\bkmkend AAAAAAAAQJ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b WAIT2_Waitms} (uint16_t ms){\bkmkstart AAAAAAAAQK}
{\bkmkend AAAAAAAAQK}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b WAIT2_Init} (void){\bkmkstart AAAAAAAAQL}
{\bkmkend AAAAAAAAQL}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b WAIT2_DeInit} (void){\bkmkstart AAAAAAAAQM}
{\bkmkend AAAAAAAAQM}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Implements busy waiting routines. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Version:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid 01.00 \par
}}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/WAIT2.h File Reference\par \pard\plain 
{\tc\tcl2 \v C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/WAIT2.h}
{\xe \v C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/WAIT2.h}
{\bkmkstart AAAAAAAAQN}
{\bkmkend AAAAAAAAQN}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Implements busy waiting routines. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "MCUC1.h"}\par
{\f2 #include "WAIT2config.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macros\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b WAIT2_INSTR_CLOCK_HZ}\~ CPU_CORE_CLK_HZ /* for Kinetis, use core clock as base for instruction execution */{\bkmkstart AAAAAAAAQO}
{\bkmkend AAAAAAAAQO}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b WAIT2_NofCyclesMs}(ms, hz)\~ ((ms)*((hz)/1000)) /* calculates the needed cycles based on bus clock frequency */{\bkmkstart AAAAAAAAQP}
{\bkmkend AAAAAAAAQP}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b WAIT2_NofCyclesUs}(us, hz)\~ ((us)*(((hz)/1000)/1000)) /* calculates the needed cycles based on bus clock frequency */{\bkmkstart AAAAAAAAQQ}
{\bkmkend AAAAAAAAQQ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b WAIT2_NofCyclesNs}(ns, hz)\~ (((ns)*(((hz)/1000)/1000))/1000) /* calculates the needed cycles based on bus clock frequency */{\bkmkstart AAAAAAAAQR}
{\bkmkend AAAAAAAAQR}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b WAIT2_WAIT_C}(cycles)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b WAIT2_Waitus}(us)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b WAIT2_Waitns}(ns)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b WAIT2_WaitOSms}(ms)\~ WAIT2_Waitms(ms) /* no RTOS used, so use normal wait */{\bkmkstart AAAAAAAAQS}
{\bkmkend AAAAAAAAQS}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b WAIT2_Wait10Cycles} (void){\bkmkstart AAAAAAAAQT}
{\bkmkend AAAAAAAAQT}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b WAIT2_Wait100Cycles} (void){\bkmkstart AAAAAAAAQU}
{\bkmkend AAAAAAAAQU}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b WAIT2_WaitCycles} (uint16_t cycles){\bkmkstart AAAAAAAAQI}
{\bkmkend AAAAAAAAQI}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b WAIT2_Waitms} (uint16_t ms){\bkmkstart AAAAAAAAQK}
{\bkmkend AAAAAAAAQK}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b WAIT2_WaitLongCycles} (uint32_t cycles){\bkmkstart AAAAAAAAQJ}
{\bkmkend AAAAAAAAQJ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b WAIT2_Init} (void){\bkmkstart AAAAAAAAQL}
{\bkmkend AAAAAAAAQL}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b WAIT2_DeInit} (void){\bkmkstart AAAAAAAAQM}
{\bkmkend AAAAAAAAQM}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Implements busy waiting routines. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Version:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid 01.00 \par
}}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/WAIT2config.h File Reference\par \pard\plain 
{\tc\tcl2 \v C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/WAIT2config.h}
{\xe \v C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/WAIT2config.h}
{\bkmkstart AAAAAAAAQV}
{\bkmkend AAAAAAAAQV}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Configuration header file for Wait. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "MCUC1.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macros\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b WAIT2_CONFIG_USE_CYCLE_COUNTER}\~ (0 && ({\b MCUC1_CONFIG_CORTEX_M}>=3))\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Configuration header file for Wait. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This header file is used to configure settings of the busy waiting module. \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macro Definition Documentation\par
\pard\plain 
{\xe \v WAIT2_CONFIG_USE_CYCLE_COUNTER\:WAIT2config.h}
{\xe \v WAIT2config.h\:WAIT2_CONFIG_USE_CYCLE_COUNTER}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define WAIT2_CONFIG_USE_CYCLE_COUNTER\~ (0 && ({\b MCUC1_CONFIG_CORTEX_M}>=3))}}
\par
{\bkmkstart AAAAAAAAQW}
{\bkmkend AAAAAAAAQW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
1: Use hardware cycle counter (if present, only on Cortex-M3 or higher), 0: not using hardware cycle counter \par
}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/Wifi.c File Reference\par \pard\plain 
{\tc\tcl2 \v C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/Wifi.c}
{\xe \v C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/Wifi.c}
{\bkmkstart AAAAAAAAQX}
{\bkmkend AAAAAAAAQX}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This component "AsynchroSerial" implements an asynchronous serial communication. The component supports different settings of parity, word width, stop-bit and communication speed, user can select interrupt or polling handler. Communication speed can be changed also in runtime. The component requires one on-chip asynchronous serial channel. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "Wifi.h"}\par
{\f2 #include "Events.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macros\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b OVERRUN_ERR}\~ 0x01U         /* Overrun error flag bit    */{\bkmkstart AAAAAAAAQY}
{\bkmkend AAAAAAAAQY}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b FRAMING_ERR}\~ 0x02U         /* Framing error flag bit    */{\bkmkstart AAAAAAAAQZ}
{\bkmkend AAAAAAAAQZ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b PARITY_ERR}\~ 0x04U         /* Parity error flag bit     */{\bkmkstart AAAAAAAARA}
{\bkmkend AAAAAAAARA}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b CHAR_IN_RX}\~ 0x08U         /* Char is in RX buffer      */{\bkmkstart AAAAAAAARB}
{\bkmkend AAAAAAAARB}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b FULL_TX}\~ 0x10U         /* Full transmit buffer      */{\bkmkstart AAAAAAAARC}
{\bkmkend AAAAAAAARC}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b RUNINT_FROM_TX}\~ 0x20U         /* Interrupt is in progress  */{\bkmkstart AAAAAAAARD}
{\bkmkend AAAAAAAARD}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b FULL_RX}\~ 0x40U         /* Full receive buffer       */{\bkmkstart AAAAAAAARE}
{\bkmkend AAAAAAAARE}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b NOISE_ERR}\~ 0x80U         /* Noise error flag bit      */{\bkmkstart AAAAAAAARF}
{\bkmkend AAAAAAAARF}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b IDLE_ERR}\~ 0x0100U       /* Idle character flag bit   */{\bkmkstart AAAAAAAARG}
{\bkmkend AAAAAAAARG}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b BREAK_ERR}\~ 0x0200U       /* Break detect              */{\bkmkstart AAAAAAAARH}
{\bkmkend AAAAAAAARH}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b COMMON_ERR}\~ 0x0800U       /* Common error of RX       */{\bkmkstart AAAAAAAARI}
{\bkmkend AAAAAAAARI}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b ON_ERROR}\~ 0x01U{\bkmkstart AAAAAAAARJ}
{\bkmkend AAAAAAAARJ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b ON_FULL_RX}\~ 0x02U{\bkmkstart AAAAAAAARK}
{\bkmkend AAAAAAAARK}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b ON_RX_CHAR}\~ 0x04U{\bkmkstart AAAAAAAARL}
{\bkmkend AAAAAAAARL}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b ON_FREE_TX}\~ 0x01U{\bkmkstart AAAAAAAARM}
{\bkmkend AAAAAAAARM}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b ON_TX_CHAR}\~ 0x02U{\bkmkstart AAAAAAAARN}
{\bkmkend AAAAAAAARN}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

byte {\b Wifi_RecvChar} (Wifi_TComData *Chr){\bkmkstart AAAAAAAARO}
{\bkmkend AAAAAAAARO}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

byte {\b Wifi_SendChar} (Wifi_TComData Chr){\bkmkstart AAAAAAAARP}
{\bkmkend AAAAAAAARP}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

byte {\b Wifi_RecvBlock} (Wifi_TComData *Ptr, word Size, word *Rcv){\bkmkstart AAAAAAAARQ}
{\bkmkend AAAAAAAARQ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

byte {\b Wifi_SendBlock} (Wifi_TComData *Ptr, word Size, word *Snd){\bkmkstart AAAAAAAARR}
{\bkmkend AAAAAAAARR}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

byte {\b Wifi_ClearRxBuf} (void){\bkmkstart AAAAAAAARS}
{\bkmkend AAAAAAAARS}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

byte {\b Wifi_ClearTxBuf} (void){\bkmkstart AAAAAAAART}
{\bkmkend AAAAAAAART}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

word {\b Wifi_GetCharsInRxBuf} (void){\bkmkstart AAAAAAAARU}
{\bkmkend AAAAAAAARU}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

word {\b Wifi_GetCharsInTxBuf} (void){\bkmkstart AAAAAAAARV}
{\bkmkend AAAAAAAARV}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b Wifi_Init} (void){\bkmkstart AAAAAAAARW}
{\bkmkend AAAAAAAARW}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b ASerialLdd2_OnBlockReceived} ({\b LDD_TUserData} *UserDataPtr){\bkmkstart AAAAAAAARX}
{\bkmkend AAAAAAAARX}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b ASerialLdd2_OnBlockSent} ({\b LDD_TUserData} *UserDataPtr){\bkmkstart AAAAAAAARY}
{\bkmkend AAAAAAAARY}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b ASerialLdd2_OnError} ({\b LDD_TUserData} *UserDataPtr){\bkmkstart AAAAAAAARZ}
{\bkmkend AAAAAAAARZ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b ASerialLdd2_OnBreak} ({\b LDD_TUserData} *UserDataPtr){\bkmkstart AAAAAAAASA}
{\bkmkend AAAAAAAASA}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b LDD_TDeviceData} * {\b ASerialLdd2_DeviceDataPtr}{\bkmkstart AAAAAAAASB}
{\bkmkend AAAAAAAASB}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This component "AsynchroSerial" implements an asynchronous serial communication. The component supports different settings of parity, word width, stop-bit and communication speed, user can select interrupt or polling handler. Communication speed can be changed also in runtime. The component requires one on-chip asynchronous serial channel. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Version:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid 01.01 \par
}}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/Wifi.h File Reference\par \pard\plain 
{\tc\tcl2 \v C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/Wifi.h}
{\xe \v C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/Generated_Code/Wifi.h}
{\bkmkstart AAAAAAAASC}
{\bkmkend AAAAAAAASC}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This component "AsynchroSerial" implements an asynchronous serial communication. The component supports different settings of parity, word width, stop-bit and communication speed, user can select interrupt or polling handler. Communication speed can be changed also in runtime. The component requires one on-chip asynchronous serial channel. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "ASerialLdd2.h"}\par
{\f2 #include "Cpu.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Structures\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
union {\b Wifi_TError}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macros\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b __BWUserType_Wifi_TError}{\bkmkstart AAAAAAAASD}
{\bkmkend AAAAAAAASD}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b __BWUserType_Wifi_TComData}{\bkmkstart AAAAAAAASE}
{\bkmkend AAAAAAAASE}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b Wifi_INP_BUF_SIZE}\~ 0x0100U     /* Length of the RX buffer */{\bkmkstart AAAAAAAASF}
{\bkmkend AAAAAAAASF}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b Wifi_OUT_BUF_SIZE}\~ 0x0100U     /* Length of the TX buffer */{\bkmkstart AAAAAAAASG}
{\bkmkend AAAAAAAASG}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Typedefs\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

typedef byte {\b Wifi_TComData}{\bkmkstart AAAAAAAASH}
{\bkmkend AAAAAAAASH}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

byte {\b Wifi_RecvChar} (Wifi_TComData *Chr){\bkmkstart AAAAAAAARO}
{\bkmkend AAAAAAAARO}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

byte {\b Wifi_SendChar} (Wifi_TComData Chr){\bkmkstart AAAAAAAARP}
{\bkmkend AAAAAAAARP}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

byte {\b Wifi_RecvBlock} (Wifi_TComData *Ptr, word Size, word *Rcv){\bkmkstart AAAAAAAARQ}
{\bkmkend AAAAAAAARQ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

byte {\b Wifi_SendBlock} (Wifi_TComData *Ptr, word Size, word *Snd){\bkmkstart AAAAAAAARR}
{\bkmkend AAAAAAAARR}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

byte {\b Wifi_ClearRxBuf} (void){\bkmkstart AAAAAAAARS}
{\bkmkend AAAAAAAARS}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

byte {\b Wifi_ClearTxBuf} (void){\bkmkstart AAAAAAAART}
{\bkmkend AAAAAAAART}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

word {\b Wifi_GetCharsInRxBuf} (void){\bkmkstart AAAAAAAARU}
{\bkmkend AAAAAAAARU}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

word {\b Wifi_GetCharsInTxBuf} (void){\bkmkstart AAAAAAAARV}
{\bkmkend AAAAAAAARV}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b Wifi_Init} (void){\bkmkstart AAAAAAAARW}
{\bkmkend AAAAAAAARW}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b ASerialLdd2_OnBlockReceived} ({\b LDD_TUserData} *UserDataPtr){\bkmkstart AAAAAAAARX}
{\bkmkend AAAAAAAARX}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b ASerialLdd2_OnBlockSent} ({\b LDD_TUserData} *UserDataPtr){\bkmkstart AAAAAAAARY}
{\bkmkend AAAAAAAARY}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b ASerialLdd2_OnError} ({\b LDD_TUserData} *UserDataPtr){\bkmkstart AAAAAAAARZ}
{\bkmkend AAAAAAAARZ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b ASerialLdd2_OnBreak} ({\b LDD_TUserData} *UserDataPtr){\bkmkstart AAAAAAAASA}
{\bkmkend AAAAAAAASA}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This component "AsynchroSerial" implements an asynchronous serial communication. The component supports different settings of parity, word width, stop-bit and communication speed, user can select interrupt or polling handler. Communication speed can be changed also in runtime. The component requires one on-chip asynchronous serial channel. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Version:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid 01.01 \par
}}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/sources/Events.c File Reference\par \pard\plain 
{\tc\tcl2 \v C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/sources/Events.c}
{\xe \v C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/sources/Events.c}
{\bkmkstart AAAAAAAASI}
{\bkmkend AAAAAAAASI}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is user's event module. Put your event handler code here. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "Cpu.h"}\par
{\f2 #include "Events.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b Cpu_OnNMIINT} (void){\bkmkstart AAAAAAAASJ}
{\bkmkend AAAAAAAASJ}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This event is called when the Non maskable interrupt had occurred. This event is automatically enabled when the [NMI interrupt] property is set to 'Enabled'. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b Wifi_OnRcvChar} (void){\bkmkstart AAAAAAAASK}
{\bkmkend AAAAAAAASK}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b Wifi_OnSendChar} (void){\bkmkstart AAAAAAAASL}
{\bkmkend AAAAAAAASL}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b RTC1_OnSecond} ({\b LDD_TUserData} *UserDataPtr)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Called each second if OnSecond event is enabled (see [SetEventMask] and [GetEventMask] methods) and RTC device is enabled. This event is available only if [Interrupt service/event] is enabled. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b TI1_OnInterrupt} (void)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b SM1_OnBlockSent} ({\b LDD_TUserData} *UserDataPtr)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This event is called after the last character from the output buffer is moved to the transmitter. This event is available only if the SendBlock method is enabled. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b PC_OnRcvChar} (void){\bkmkstart AAAAAAAASM}
{\bkmkend AAAAAAAASM}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b PIR_OnInterrupt} (void)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b SM1_OnBlockReceived} ({\b LDD_TUserData} *UserDataPtr)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This event is called when the requested number of data is moved to the input buffer. This method is available only if the ReceiveBlock method is enabled. }{
}\par
}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

volatile uint8_t {\b time_counter}{\bkmkstart AAAAAAAASN}
{\bkmkend AAAAAAAASN}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Interrupcao de timer. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

volatile uint8_t {\b rtc_ready}{\bkmkstart AAAAAAAASO}
{\bkmkend AAAAAAAASO}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Interrupcao de RTC. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

volatile uint8_t {\b move}{\bkmkstart AAAAAAAASP}
{\bkmkend AAAAAAAASP}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Interrupcao de movimento. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is user's event module. Put your event handler code here. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Version:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid 01.00 \par
}}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/sources/Events.h File Reference\par \pard\plain 
{\tc\tcl2 \v C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/sources/Events.h}
{\xe \v C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/sources/Events.h}
{\bkmkstart AAAAAAAASQ}
{\bkmkend AAAAAAAASQ}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is user's event module. Put your event handler code here. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "PE_Types.h"}\par
{\f2 #include "PE_Error.h"}\par
{\f2 #include "PE_Const.h"}\par
{\f2 #include "IO_Map.h"}\par
{\f2 #include "PC.h"}\par
{\f2 #include "ASerialLdd1.h"}\par
{\f2 #include "Wifi.h"}\par
{\f2 #include "ASerialLdd2.h"}\par
{\f2 #include "MCUC1.h"}\par
{\f2 #include "UTIL1.h"}\par
{\f2 #include "LT.h"}\par
{\f2 #include "BitIoLdd7.h"}\par
{\f2 #include "WAIT2.h"}\par
{\f2 #include "Timer.h"}\par
{\f2 #include "RealTimeLdd1.h"}\par
{\f2 #include "TU3.h"}\par
{\f2 #include "EE241.h"}\par
{\f2 #include "GI2C1.h"}\par
{\f2 #include "CI2C1.h"}\par
{\f2 #include "Timer_Buzzer.h"}\par
{\f2 #include "RealTimeLdd2.h"}\par
{\f2 #include "TU4.h"}\par
{\f2 #include "PIR.h"}\par
{\f2 #include "ExtIntLdd4.h"}\par
{\f2 #include "Buzzer.h"}\par
{\f2 #include "BitIoLdd8.h"}\par
{\f2 #include "CS1.h"}\par
{\f2 #include "TU6.h"}\par
{\f2 #include "PIR2.h"}\par
{\f2 #include "BitIoLdd9.h"}\par
{\f2 #include "WAIT1.h"}\par
{\f2 #include "SM1.h"}\par
{\f2 #include "TI1.h"}\par
{\f2 #include "TimerIntLdd1.h"}\par
{\f2 #include "TU1.h"}\par
{\f2 #include "RTC1.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b Cpu_OnNMIINT} (void){\bkmkstart AAAAAAAASJ}
{\bkmkend AAAAAAAASJ}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This event is called when the Non maskable interrupt had occurred. This event is automatically enabled when the [NMI interrupt] property is set to 'Enabled'. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b Wifi_OnRcvChar} (void){\bkmkstart AAAAAAAASK}
{\bkmkend AAAAAAAASK}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b Wifi_OnSendChar} (void){\bkmkstart AAAAAAAASL}
{\bkmkend AAAAAAAASL}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b RTC1_OnSecond} ({\b LDD_TUserData} *UserDataPtr)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Called each second if OnSecond event is enabled (see [SetEventMask] and [GetEventMask] methods) and RTC device is enabled. This event is available only if [Interrupt service/event] is enabled. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b TI1_OnInterrupt} (void)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b C3_OnInterrupt} (void){\bkmkstart AAAAAAAASR}
{\bkmkend AAAAAAAASR}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b C2_OnInterrupt} (void){\bkmkstart AAAAAAAASS}
{\bkmkend AAAAAAAASS}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b C1_OnInterrupt} (void){\bkmkstart AAAAAAAAST}
{\bkmkend AAAAAAAAST}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b SM1_OnBlockSent} ({\b LDD_TUserData} *UserDataPtr)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This event is called after the last character from the output buffer is moved to the transmitter. This event is available only if the SendBlock method is enabled. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b PC_OnRcvChar} (void){\bkmkstart AAAAAAAASM}
{\bkmkend AAAAAAAASM}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b PIR_OnInterrupt} (void)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b SM1_OnBlockReceived} ({\b LDD_TUserData} *UserDataPtr)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This event is called when the requested number of data is moved to the input buffer. This method is available only if the ReceiveBlock method is enabled. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is user's event module. Put your event handler code here. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Version:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid 01.00 \par
}}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/sources/main.c File Reference\par \pard\plain 
{\tc\tcl2 \v C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/sources/main.c}
{\xe \v C:/Users/ea076/Desktop/194087/Workspace_LAB3/ProjetoFinal/sources/main.c}
{\bkmkstart AAAAAAAASU}
{\bkmkend AAAAAAAASU}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Main module. This module contains user's application code. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "Cpu.h"}\par
{\f2 #include "Events.h"}\par
{\f2 #include "PC.h"}\par
{\f2 #include "ASerialLdd1.h"}\par
{\f2 #include "Wifi.h"}\par
{\f2 #include "ASerialLdd2.h"}\par
{\f2 #include "MCUC1.h"}\par
{\f2 #include "UTIL1.h"}\par
{\f2 #include "LT.h"}\par
{\f2 #include "BitIoLdd7.h"}\par
{\f2 #include "WAIT2.h"}\par
{\f2 #include "Timer.h"}\par
{\f2 #include "RealTimeLdd1.h"}\par
{\f2 #include "TU3.h"}\par
{\f2 #include "EE241.h"}\par
{\f2 #include "GI2C1.h"}\par
{\f2 #include "CI2C1.h"}\par
{\f2 #include "Timer_Buzzer.h"}\par
{\f2 #include "RealTimeLdd2.h"}\par
{\f2 #include "TU4.h"}\par
{\f2 #include "PIR.h"}\par
{\f2 #include "ExtIntLdd4.h"}\par
{\f2 #include "Buzzer.h"}\par
{\f2 #include "BitIoLdd8.h"}\par
{\f2 #include "CS1.h"}\par
{\f2 #include "TU6.h"}\par
{\f2 #include "PIR2.h"}\par
{\f2 #include "BitIoLdd9.h"}\par
{\f2 #include "WAIT1.h"}\par
{\f2 #include "SM1.h"}\par
{\f2 #include "TI1.h"}\par
{\f2 #include "TimerIntLdd1.h"}\par
{\f2 #include "TU1.h"}\par
{\f2 #include "RTC1.h"}\par
{\f2 #include "PE_Types.h"}\par
{\f2 #include "PE_Error.h"}\par
{\f2 #include "PE_Const.h"}\par
{\f2 #include "IO_Map.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Time_2str} (uint8_t *s)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Date_2str} (uint8_t *s)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Hour_2str} (uint8_t *s)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b PC_SendStr} (uint8_t *s)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Wifi_SendStr} (uint8_t *s)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Sub_topic} (uint8_t *s)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

int {\b main} (void){\bkmkstart AAAAAAAASV}
{\bkmkend AAAAAAAASV}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

volatile uint8_t {\b br} [256]{\bkmkstart AAAAAAAASW}
{\bkmkend AAAAAAAASW}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Buffer que armazena caracteres recebidos pelo ESP. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

volatile uint8_t {\b ibr} = 0{\bkmkstart AAAAAAAASX}
{\bkmkend AAAAAAAASX}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Indice do buffer br. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

volatile uint8_t {\b mr} = 0{\bkmkstart AAAAAAAASY}
{\bkmkend AAAAAAAASY}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Variavel booleana que diz se uma mensagem foi recebida. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
volatile uint8_t {\b time_counter} = 2\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Define o intervalo de 2 segundos. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
volatile uint8_t {\b rtc_ready} = 0\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Define que se passaram 2 segundos. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint8_t {\b conectado}{\bkmkstart AAAAAAAASZ}
{\bkmkend AAAAAAAASZ}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Espera confirma\'E7\'E3o que houve conex\'E3o correta com o wi-fi. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint8_t {\b membuf} [16]{\bkmkstart AAAAAAAATA}
{\bkmkend AAAAAAAATA}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Buffer para transferencia para a memoria. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b LDD_RTC_TTime} {\b time}{\bkmkstart AAAAAAAATB}
{\bkmkend AAAAAAAATB}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Struct de armazenamento de data e hora. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
volatile uint8_t {\b move} = 0\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Variavel que indica movimento por interrupcao. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Main module. This module contains user's application code. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Version:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid 01.01 \par
}}}

\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid Index\par 
\pard\plain 
{\tc \v Index}
{\field\fldedit {\*\fldinst INDEX \\c2 \\*MERGEFORMAT}{\fldrslt INDEX}}
}